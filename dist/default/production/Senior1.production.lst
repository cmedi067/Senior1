

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jun 16 05:48:25 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F15345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.05
    58                           ; Generated 20/12/2018 GMT
    59                           ; 
    60                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F15345 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0119                     	;# 
   119  0119                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011A                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011B                     	;# 
   126  011B                     	;# 
   127  011B                     	;# 
   128  011B                     	;# 
   129  011C                     	;# 
   130  011C                     	;# 
   131  011C                     	;# 
   132  011D                     	;# 
   133  011D                     	;# 
   134  011D                     	;# 
   135  011E                     	;# 
   136  011E                     	;# 
   137  011E                     	;# 
   138  011F                     	;# 
   139  011F                     	;# 
   140  011F                     	;# 
   141  011F                     	;# 
   142  011F                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  018E                     	;# 
   146  018F                     	;# 
   147  0190                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  020C                     	;# 
   151  020C                     	;# 
   152  020D                     	;# 
   153  020E                     	;# 
   154  020F                     	;# 
   155  020F                     	;# 
   156  0210                     	;# 
   157  0210                     	;# 
   158  0211                     	;# 
   159  0211                     	;# 
   160  028C                     	;# 
   161  028C                     	;# 
   162  028D                     	;# 
   163  028D                     	;# 
   164  028E                     	;# 
   165  028F                     	;# 
   166  0290                     	;# 
   167  0291                     	;# 
   168  030C                     	;# 
   169  030C                     	;# 
   170  030D                     	;# 
   171  030E                     	;# 
   172  030F                     	;# 
   173  0310                     	;# 
   174  0310                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0314                     	;# 
   179  0314                     	;# 
   180  0315                     	;# 
   181  0316                     	;# 
   182  0318                     	;# 
   183  0318                     	;# 
   184  0319                     	;# 
   185  031A                     	;# 
   186  031C                     	;# 
   187  031C                     	;# 
   188  031D                     	;# 
   189  031E                     	;# 
   190  038C                     	;# 
   191  038C                     	;# 
   192  038D                     	;# 
   193  038E                     	;# 
   194  058C                     	;# 
   195  058C                     	;# 
   196  058D                     	;# 
   197  058E                     	;# 
   198  058F                     	;# 
   199  058F                     	;# 
   200  0590                     	;# 
   201  0591                     	;# 
   202  0592                     	;# 
   203  0593                     	;# 
   204  059C                     	;# 
   205  059C                     	;# 
   206  059D                     	;# 
   207  059D                     	;# 
   208  059E                     	;# 
   209  059F                     	;# 
   210  060C                     	;# 
   211  060D                     	;# 
   212  060E                     	;# 
   213  060F                     	;# 
   214  0610                     	;# 
   215  0611                     	;# 
   216  0612                     	;# 
   217  0613                     	;# 
   218  0614                     	;# 
   219  070C                     	;# 
   220  070D                     	;# 
   221  070E                     	;# 
   222  070F                     	;# 
   223  0710                     	;# 
   224  0711                     	;# 
   225  0712                     	;# 
   226  0713                     	;# 
   227  0716                     	;# 
   228  0717                     	;# 
   229  0718                     	;# 
   230  0719                     	;# 
   231  071A                     	;# 
   232  071B                     	;# 
   233  071C                     	;# 
   234  071D                     	;# 
   235  0796                     	;# 
   236  0797                     	;# 
   237  0798                     	;# 
   238  0799                     	;# 
   239  079A                     	;# 
   240  079B                     	;# 
   241  080C                     	;# 
   242  080D                     	;# 
   243  080E                     	;# 
   244  080F                     	;# 
   245  0810                     	;# 
   246  0811                     	;# 
   247  0812                     	;# 
   248  0813                     	;# 
   249  0814                     	;# 
   250  081A                     	;# 
   251  081A                     	;# 
   252  081B                     	;# 
   253  081C                     	;# 
   254  081C                     	;# 
   255  081D                     	;# 
   256  081E                     	;# 
   257  081F                     	;# 
   258  088C                     	;# 
   259  088D                     	;# 
   260  088E                     	;# 
   261  088F                     	;# 
   262  0890                     	;# 
   263  0891                     	;# 
   264  0892                     	;# 
   265  0893                     	;# 
   266  0895                     	;# 
   267  0896                     	;# 
   268  090C                     	;# 
   269  090E                     	;# 
   270  090F                     	;# 
   271  091F                     	;# 
   272  098F                     	;# 
   273  098F                     	;# 
   274  0990                     	;# 
   275  0991                     	;# 
   276  0992                     	;# 
   277  0993                     	;# 
   278  0994                     	;# 
   279  0995                     	;# 
   280  0996                     	;# 
   281  0997                     	;# 
   282  0A19                     	;# 
   283  0A19                     	;# 
   284  0A1A                     	;# 
   285  0A1A                     	;# 
   286  0A1B                     	;# 
   287  0A1B                     	;# 
   288  0A1B                     	;# 
   289  0A1C                     	;# 
   290  0A1C                     	;# 
   291  0A1D                     	;# 
   292  0A1D                     	;# 
   293  0A1E                     	;# 
   294  0A1E                     	;# 
   295  0A1F                     	;# 
   296  0A1F                     	;# 
   297  0A1F                     	;# 
   298  1E0F                     	;# 
   299  1E10                     	;# 
   300  1E11                     	;# 
   301  1E12                     	;# 
   302  1E13                     	;# 
   303  1E14                     	;# 
   304  1E15                     	;# 
   305  1E16                     	;# 
   306  1E17                     	;# 
   307  1E18                     	;# 
   308  1E19                     	;# 
   309  1E1A                     	;# 
   310  1E1B                     	;# 
   311  1E1C                     	;# 
   312  1E1D                     	;# 
   313  1E1E                     	;# 
   314  1E1F                     	;# 
   315  1E20                     	;# 
   316  1E21                     	;# 
   317  1E22                     	;# 
   318  1E23                     	;# 
   319  1E24                     	;# 
   320  1E25                     	;# 
   321  1E26                     	;# 
   322  1E27                     	;# 
   323  1E28                     	;# 
   324  1E29                     	;# 
   325  1E2A                     	;# 
   326  1E2B                     	;# 
   327  1E2C                     	;# 
   328  1E2D                     	;# 
   329  1E2E                     	;# 
   330  1E2F                     	;# 
   331  1E30                     	;# 
   332  1E31                     	;# 
   333  1E32                     	;# 
   334  1E33                     	;# 
   335  1E34                     	;# 
   336  1E35                     	;# 
   337  1E36                     	;# 
   338  1E37                     	;# 
   339  1E8F                     	;# 
   340  1E90                     	;# 
   341  1E91                     	;# 
   342  1E92                     	;# 
   343  1E93                     	;# 
   344  1E9C                     	;# 
   345  1EA1                     	;# 
   346  1EA2                     	;# 
   347  1EB1                     	;# 
   348  1EBB                     	;# 
   349  1EBC                     	;# 
   350  1EBD                     	;# 
   351  1EBE                     	;# 
   352  1EC3                     	;# 
   353  1EC5                     	;# 
   354  1EC6                     	;# 
   355  1EC7                     	;# 
   356  1ECB                     	;# 
   357  1ECC                     	;# 
   358  1ECD                     	;# 
   359  1ECE                     	;# 
   360  1F10                     	;# 
   361  1F11                     	;# 
   362  1F12                     	;# 
   363  1F13                     	;# 
   364  1F14                     	;# 
   365  1F15                     	;# 
   366  1F1C                     	;# 
   367  1F1D                     	;# 
   368  1F1E                     	;# 
   369  1F1F                     	;# 
   370  1F20                     	;# 
   371  1F21                     	;# 
   372  1F22                     	;# 
   373  1F23                     	;# 
   374  1F24                     	;# 
   375  1F25                     	;# 
   376  1F26                     	;# 
   377  1F27                     	;# 
   378  1F38                     	;# 
   379  1F39                     	;# 
   380  1F3A                     	;# 
   381  1F3B                     	;# 
   382  1F3C                     	;# 
   383  1F3D                     	;# 
   384  1F3E                     	;# 
   385  1F3F                     	;# 
   386  1F43                     	;# 
   387  1F44                     	;# 
   388  1F45                     	;# 
   389  1F46                     	;# 
   390  1F47                     	;# 
   391  1F48                     	;# 
   392  1F49                     	;# 
   393  1F4A                     	;# 
   394  1F4E                     	;# 
   395  1F4F                     	;# 
   396  1F50                     	;# 
   397  1F51                     	;# 
   398  1F52                     	;# 
   399  1F53                     	;# 
   400  1F54                     	;# 
   401  1F55                     	;# 
   402  1FE4                     	;# 
   403  1FE5                     	;# 
   404  1FE6                     	;# 
   405  1FE7                     	;# 
   406  1FE8                     	;# 
   407  1FE8                     	;# 
   408  1FE9                     	;# 
   409  1FEA                     	;# 
   410  1FEA                     	;# 
   411  1FEB                     	;# 
   412  1FED                     	;# 
   413  1FEE                     	;# 
   414  1FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  000D                     	;# 
   429  000E                     	;# 
   430  0012                     	;# 
   431  0013                     	;# 
   432  0014                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  009B                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0119                     	;# 
   443  0119                     	;# 
   444  0119                     	;# 
   445  011A                     	;# 
   446  011A                     	;# 
   447  011A                     	;# 
   448  011B                     	;# 
   449  011B                     	;# 
   450  011B                     	;# 
   451  011B                     	;# 
   452  011B                     	;# 
   453  011C                     	;# 
   454  011C                     	;# 
   455  011C                     	;# 
   456  011D                     	;# 
   457  011D                     	;# 
   458  011D                     	;# 
   459  011E                     	;# 
   460  011E                     	;# 
   461  011E                     	;# 
   462  011F                     	;# 
   463  011F                     	;# 
   464  011F                     	;# 
   465  011F                     	;# 
   466  011F                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  018E                     	;# 
   470  018F                     	;# 
   471  0190                     	;# 
   472  0191                     	;# 
   473  0192                     	;# 
   474  020C                     	;# 
   475  020C                     	;# 
   476  020D                     	;# 
   477  020E                     	;# 
   478  020F                     	;# 
   479  020F                     	;# 
   480  0210                     	;# 
   481  0210                     	;# 
   482  0211                     	;# 
   483  0211                     	;# 
   484  028C                     	;# 
   485  028C                     	;# 
   486  028D                     	;# 
   487  028D                     	;# 
   488  028E                     	;# 
   489  028F                     	;# 
   490  0290                     	;# 
   491  0291                     	;# 
   492  030C                     	;# 
   493  030C                     	;# 
   494  030D                     	;# 
   495  030E                     	;# 
   496  030F                     	;# 
   497  0310                     	;# 
   498  0310                     	;# 
   499  0311                     	;# 
   500  0312                     	;# 
   501  0313                     	;# 
   502  0314                     	;# 
   503  0314                     	;# 
   504  0315                     	;# 
   505  0316                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  031C                     	;# 
   511  031C                     	;# 
   512  031D                     	;# 
   513  031E                     	;# 
   514  038C                     	;# 
   515  038C                     	;# 
   516  038D                     	;# 
   517  038E                     	;# 
   518  058C                     	;# 
   519  058C                     	;# 
   520  058D                     	;# 
   521  058E                     	;# 
   522  058F                     	;# 
   523  058F                     	;# 
   524  0590                     	;# 
   525  0591                     	;# 
   526  0592                     	;# 
   527  0593                     	;# 
   528  059C                     	;# 
   529  059C                     	;# 
   530  059D                     	;# 
   531  059D                     	;# 
   532  059E                     	;# 
   533  059F                     	;# 
   534  060C                     	;# 
   535  060D                     	;# 
   536  060E                     	;# 
   537  060F                     	;# 
   538  0610                     	;# 
   539  0611                     	;# 
   540  0612                     	;# 
   541  0613                     	;# 
   542  0614                     	;# 
   543  070C                     	;# 
   544  070D                     	;# 
   545  070E                     	;# 
   546  070F                     	;# 
   547  0710                     	;# 
   548  0711                     	;# 
   549  0712                     	;# 
   550  0713                     	;# 
   551  0716                     	;# 
   552  0717                     	;# 
   553  0718                     	;# 
   554  0719                     	;# 
   555  071A                     	;# 
   556  071B                     	;# 
   557  071C                     	;# 
   558  071D                     	;# 
   559  0796                     	;# 
   560  0797                     	;# 
   561  0798                     	;# 
   562  0799                     	;# 
   563  079A                     	;# 
   564  079B                     	;# 
   565  080C                     	;# 
   566  080D                     	;# 
   567  080E                     	;# 
   568  080F                     	;# 
   569  0810                     	;# 
   570  0811                     	;# 
   571  0812                     	;# 
   572  0813                     	;# 
   573  0814                     	;# 
   574  081A                     	;# 
   575  081A                     	;# 
   576  081B                     	;# 
   577  081C                     	;# 
   578  081C                     	;# 
   579  081D                     	;# 
   580  081E                     	;# 
   581  081F                     	;# 
   582  088C                     	;# 
   583  088D                     	;# 
   584  088E                     	;# 
   585  088F                     	;# 
   586  0890                     	;# 
   587  0891                     	;# 
   588  0892                     	;# 
   589  0893                     	;# 
   590  0895                     	;# 
   591  0896                     	;# 
   592  090C                     	;# 
   593  090E                     	;# 
   594  090F                     	;# 
   595  091F                     	;# 
   596  098F                     	;# 
   597  098F                     	;# 
   598  0990                     	;# 
   599  0991                     	;# 
   600  0992                     	;# 
   601  0993                     	;# 
   602  0994                     	;# 
   603  0995                     	;# 
   604  0996                     	;# 
   605  0997                     	;# 
   606  0A19                     	;# 
   607  0A19                     	;# 
   608  0A1A                     	;# 
   609  0A1A                     	;# 
   610  0A1B                     	;# 
   611  0A1B                     	;# 
   612  0A1B                     	;# 
   613  0A1C                     	;# 
   614  0A1C                     	;# 
   615  0A1D                     	;# 
   616  0A1D                     	;# 
   617  0A1E                     	;# 
   618  0A1E                     	;# 
   619  0A1F                     	;# 
   620  0A1F                     	;# 
   621  0A1F                     	;# 
   622  1E0F                     	;# 
   623  1E10                     	;# 
   624  1E11                     	;# 
   625  1E12                     	;# 
   626  1E13                     	;# 
   627  1E14                     	;# 
   628  1E15                     	;# 
   629  1E16                     	;# 
   630  1E17                     	;# 
   631  1E18                     	;# 
   632  1E19                     	;# 
   633  1E1A                     	;# 
   634  1E1B                     	;# 
   635  1E1C                     	;# 
   636  1E1D                     	;# 
   637  1E1E                     	;# 
   638  1E1F                     	;# 
   639  1E20                     	;# 
   640  1E21                     	;# 
   641  1E22                     	;# 
   642  1E23                     	;# 
   643  1E24                     	;# 
   644  1E25                     	;# 
   645  1E26                     	;# 
   646  1E27                     	;# 
   647  1E28                     	;# 
   648  1E29                     	;# 
   649  1E2A                     	;# 
   650  1E2B                     	;# 
   651  1E2C                     	;# 
   652  1E2D                     	;# 
   653  1E2E                     	;# 
   654  1E2F                     	;# 
   655  1E30                     	;# 
   656  1E31                     	;# 
   657  1E32                     	;# 
   658  1E33                     	;# 
   659  1E34                     	;# 
   660  1E35                     	;# 
   661  1E36                     	;# 
   662  1E37                     	;# 
   663  1E8F                     	;# 
   664  1E90                     	;# 
   665  1E91                     	;# 
   666  1E92                     	;# 
   667  1E93                     	;# 
   668  1E9C                     	;# 
   669  1EA1                     	;# 
   670  1EA2                     	;# 
   671  1EB1                     	;# 
   672  1EBB                     	;# 
   673  1EBC                     	;# 
   674  1EBD                     	;# 
   675  1EBE                     	;# 
   676  1EC3                     	;# 
   677  1EC5                     	;# 
   678  1EC6                     	;# 
   679  1EC7                     	;# 
   680  1ECB                     	;# 
   681  1ECC                     	;# 
   682  1ECD                     	;# 
   683  1ECE                     	;# 
   684  1F10                     	;# 
   685  1F11                     	;# 
   686  1F12                     	;# 
   687  1F13                     	;# 
   688  1F14                     	;# 
   689  1F15                     	;# 
   690  1F1C                     	;# 
   691  1F1D                     	;# 
   692  1F1E                     	;# 
   693  1F1F                     	;# 
   694  1F20                     	;# 
   695  1F21                     	;# 
   696  1F22                     	;# 
   697  1F23                     	;# 
   698  1F24                     	;# 
   699  1F25                     	;# 
   700  1F26                     	;# 
   701  1F27                     	;# 
   702  1F38                     	;# 
   703  1F39                     	;# 
   704  1F3A                     	;# 
   705  1F3B                     	;# 
   706  1F3C                     	;# 
   707  1F3D                     	;# 
   708  1F3E                     	;# 
   709  1F3F                     	;# 
   710  1F43                     	;# 
   711  1F44                     	;# 
   712  1F45                     	;# 
   713  1F46                     	;# 
   714  1F47                     	;# 
   715  1F48                     	;# 
   716  1F49                     	;# 
   717  1F4A                     	;# 
   718  1F4E                     	;# 
   719  1F4F                     	;# 
   720  1F50                     	;# 
   721  1F51                     	;# 
   722  1F52                     	;# 
   723  1F53                     	;# 
   724  1F54                     	;# 
   725  1F55                     	;# 
   726  1FE4                     	;# 
   727  1FE5                     	;# 
   728  1FE6                     	;# 
   729  1FE7                     	;# 
   730  1FE8                     	;# 
   731  1FE8                     	;# 
   732  1FE9                     	;# 
   733  1FEA                     	;# 
   734  1FEA                     	;# 
   735  1FEB                     	;# 
   736  1FED                     	;# 
   737  1FEE                     	;# 
   738  1FEF                     	;# 
   739  0000                     	;# 
   740  0001                     	;# 
   741  0002                     	;# 
   742  0003                     	;# 
   743  0004                     	;# 
   744  0005                     	;# 
   745  0006                     	;# 
   746  0007                     	;# 
   747  0008                     	;# 
   748  0009                     	;# 
   749  000A                     	;# 
   750  000B                     	;# 
   751  000C                     	;# 
   752  000D                     	;# 
   753  000E                     	;# 
   754  0012                     	;# 
   755  0013                     	;# 
   756  0014                     	;# 
   757  0018                     	;# 
   758  0019                     	;# 
   759  001A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  009F                     	;# 
   766  0119                     	;# 
   767  0119                     	;# 
   768  0119                     	;# 
   769  011A                     	;# 
   770  011A                     	;# 
   771  011A                     	;# 
   772  011B                     	;# 
   773  011B                     	;# 
   774  011B                     	;# 
   775  011B                     	;# 
   776  011B                     	;# 
   777  011C                     	;# 
   778  011C                     	;# 
   779  011C                     	;# 
   780  011D                     	;# 
   781  011D                     	;# 
   782  011D                     	;# 
   783  011E                     	;# 
   784  011E                     	;# 
   785  011E                     	;# 
   786  011F                     	;# 
   787  011F                     	;# 
   788  011F                     	;# 
   789  011F                     	;# 
   790  011F                     	;# 
   791  018C                     	;# 
   792  018D                     	;# 
   793  018E                     	;# 
   794  018F                     	;# 
   795  0190                     	;# 
   796  0191                     	;# 
   797  0192                     	;# 
   798  020C                     	;# 
   799  020C                     	;# 
   800  020D                     	;# 
   801  020E                     	;# 
   802  020F                     	;# 
   803  020F                     	;# 
   804  0210                     	;# 
   805  0210                     	;# 
   806  0211                     	;# 
   807  0211                     	;# 
   808  028C                     	;# 
   809  028C                     	;# 
   810  028D                     	;# 
   811  028D                     	;# 
   812  028E                     	;# 
   813  028F                     	;# 
   814  0290                     	;# 
   815  0291                     	;# 
   816  030C                     	;# 
   817  030C                     	;# 
   818  030D                     	;# 
   819  030E                     	;# 
   820  030F                     	;# 
   821  0310                     	;# 
   822  0310                     	;# 
   823  0311                     	;# 
   824  0312                     	;# 
   825  0313                     	;# 
   826  0314                     	;# 
   827  0314                     	;# 
   828  0315                     	;# 
   829  0316                     	;# 
   830  0318                     	;# 
   831  0318                     	;# 
   832  0319                     	;# 
   833  031A                     	;# 
   834  031C                     	;# 
   835  031C                     	;# 
   836  031D                     	;# 
   837  031E                     	;# 
   838  038C                     	;# 
   839  038C                     	;# 
   840  038D                     	;# 
   841  038E                     	;# 
   842  058C                     	;# 
   843  058C                     	;# 
   844  058D                     	;# 
   845  058E                     	;# 
   846  058F                     	;# 
   847  058F                     	;# 
   848  0590                     	;# 
   849  0591                     	;# 
   850  0592                     	;# 
   851  0593                     	;# 
   852  059C                     	;# 
   853  059C                     	;# 
   854  059D                     	;# 
   855  059D                     	;# 
   856  059E                     	;# 
   857  059F                     	;# 
   858  060C                     	;# 
   859  060D                     	;# 
   860  060E                     	;# 
   861  060F                     	;# 
   862  0610                     	;# 
   863  0611                     	;# 
   864  0612                     	;# 
   865  0613                     	;# 
   866  0614                     	;# 
   867  070C                     	;# 
   868  070D                     	;# 
   869  070E                     	;# 
   870  070F                     	;# 
   871  0710                     	;# 
   872  0711                     	;# 
   873  0712                     	;# 
   874  0713                     	;# 
   875  0716                     	;# 
   876  0717                     	;# 
   877  0718                     	;# 
   878  0719                     	;# 
   879  071A                     	;# 
   880  071B                     	;# 
   881  071C                     	;# 
   882  071D                     	;# 
   883  0796                     	;# 
   884  0797                     	;# 
   885  0798                     	;# 
   886  0799                     	;# 
   887  079A                     	;# 
   888  079B                     	;# 
   889  080C                     	;# 
   890  080D                     	;# 
   891  080E                     	;# 
   892  080F                     	;# 
   893  0810                     	;# 
   894  0811                     	;# 
   895  0812                     	;# 
   896  0813                     	;# 
   897  0814                     	;# 
   898  081A                     	;# 
   899  081A                     	;# 
   900  081B                     	;# 
   901  081C                     	;# 
   902  081C                     	;# 
   903  081D                     	;# 
   904  081E                     	;# 
   905  081F                     	;# 
   906  088C                     	;# 
   907  088D                     	;# 
   908  088E                     	;# 
   909  088F                     	;# 
   910  0890                     	;# 
   911  0891                     	;# 
   912  0892                     	;# 
   913  0893                     	;# 
   914  0895                     	;# 
   915  0896                     	;# 
   916  090C                     	;# 
   917  090E                     	;# 
   918  090F                     	;# 
   919  091F                     	;# 
   920  098F                     	;# 
   921  098F                     	;# 
   922  0990                     	;# 
   923  0991                     	;# 
   924  0992                     	;# 
   925  0993                     	;# 
   926  0994                     	;# 
   927  0995                     	;# 
   928  0996                     	;# 
   929  0997                     	;# 
   930  0A19                     	;# 
   931  0A19                     	;# 
   932  0A1A                     	;# 
   933  0A1A                     	;# 
   934  0A1B                     	;# 
   935  0A1B                     	;# 
   936  0A1B                     	;# 
   937  0A1C                     	;# 
   938  0A1C                     	;# 
   939  0A1D                     	;# 
   940  0A1D                     	;# 
   941  0A1E                     	;# 
   942  0A1E                     	;# 
   943  0A1F                     	;# 
   944  0A1F                     	;# 
   945  0A1F                     	;# 
   946  1E0F                     	;# 
   947  1E10                     	;# 
   948  1E11                     	;# 
   949  1E12                     	;# 
   950  1E13                     	;# 
   951  1E14                     	;# 
   952  1E15                     	;# 
   953  1E16                     	;# 
   954  1E17                     	;# 
   955  1E18                     	;# 
   956  1E19                     	;# 
   957  1E1A                     	;# 
   958  1E1B                     	;# 
   959  1E1C                     	;# 
   960  1E1D                     	;# 
   961  1E1E                     	;# 
   962  1E1F                     	;# 
   963  1E20                     	;# 
   964  1E21                     	;# 
   965  1E22                     	;# 
   966  1E23                     	;# 
   967  1E24                     	;# 
   968  1E25                     	;# 
   969  1E26                     	;# 
   970  1E27                     	;# 
   971  1E28                     	;# 
   972  1E29                     	;# 
   973  1E2A                     	;# 
   974  1E2B                     	;# 
   975  1E2C                     	;# 
   976  1E2D                     	;# 
   977  1E2E                     	;# 
   978  1E2F                     	;# 
   979  1E30                     	;# 
   980  1E31                     	;# 
   981  1E32                     	;# 
   982  1E33                     	;# 
   983  1E34                     	;# 
   984  1E35                     	;# 
   985  1E36                     	;# 
   986  1E37                     	;# 
   987  1E8F                     	;# 
   988  1E90                     	;# 
   989  1E91                     	;# 
   990  1E92                     	;# 
   991  1E93                     	;# 
   992  1E9C                     	;# 
   993  1EA1                     	;# 
   994  1EA2                     	;# 
   995  1EB1                     	;# 
   996  1EBB                     	;# 
   997  1EBC                     	;# 
   998  1EBD                     	;# 
   999  1EBE                     	;# 
  1000  1EC3                     	;# 
  1001  1EC5                     	;# 
  1002  1EC6                     	;# 
  1003  1EC7                     	;# 
  1004  1ECB                     	;# 
  1005  1ECC                     	;# 
  1006  1ECD                     	;# 
  1007  1ECE                     	;# 
  1008  1F10                     	;# 
  1009  1F11                     	;# 
  1010  1F12                     	;# 
  1011  1F13                     	;# 
  1012  1F14                     	;# 
  1013  1F15                     	;# 
  1014  1F1C                     	;# 
  1015  1F1D                     	;# 
  1016  1F1E                     	;# 
  1017  1F1F                     	;# 
  1018  1F20                     	;# 
  1019  1F21                     	;# 
  1020  1F22                     	;# 
  1021  1F23                     	;# 
  1022  1F24                     	;# 
  1023  1F25                     	;# 
  1024  1F26                     	;# 
  1025  1F27                     	;# 
  1026  1F38                     	;# 
  1027  1F39                     	;# 
  1028  1F3A                     	;# 
  1029  1F3B                     	;# 
  1030  1F3C                     	;# 
  1031  1F3D                     	;# 
  1032  1F3E                     	;# 
  1033  1F3F                     	;# 
  1034  1F43                     	;# 
  1035  1F44                     	;# 
  1036  1F45                     	;# 
  1037  1F46                     	;# 
  1038  1F47                     	;# 
  1039  1F48                     	;# 
  1040  1F49                     	;# 
  1041  1F4A                     	;# 
  1042  1F4E                     	;# 
  1043  1F4F                     	;# 
  1044  1F50                     	;# 
  1045  1F51                     	;# 
  1046  1F52                     	;# 
  1047  1F53                     	;# 
  1048  1F54                     	;# 
  1049  1F55                     	;# 
  1050  1FE4                     	;# 
  1051  1FE5                     	;# 
  1052  1FE6                     	;# 
  1053  1FE7                     	;# 
  1054  1FE8                     	;# 
  1055  1FE8                     	;# 
  1056  1FE9                     	;# 
  1057  1FEA                     	;# 
  1058  1FEA                     	;# 
  1059  1FEB                     	;# 
  1060  1FED                     	;# 
  1061  1FEE                     	;# 
  1062  1FEF                     	;# 
  1063  000B                     _INTCONbits	set	11
  1064  0013                     _TRISB	set	19
  1065  0012                     _TRISA	set	18
  1066  0014                     _TRISC	set	20
  1067  005E                     _PEIE	set	94
  1068  009B                     _ADRESL	set	155
  1069  009C                     _ADRESH	set	156
  1070  009D                     _ADCON0bits	set	157
  1071  009E                     _ADCON1	set	158
  1072  009D                     _ADCON0	set	157
  1073  0119                     _RC1REG	set	281
  1074  011E                     _TX1STAbits	set	286
  1075  011A                     _TXREG	set	282
  1076  011D                     _RCSTAbits	set	285
  1077  011E                     _TXSTA	set	286
  1078  011F                     _BAUD1CON	set	287
  1079  011D                     _RC1STA	set	285
  1080  011E                     _TX1STA	set	286
  1081  011B                     _SPBRG	set	283
  1082  387D                     _RC1IF	set	14461
  1083  38CD                     _RC1IE	set	14541
  1084  1ECB                     _RX1DTPPS	set	7883
  1085  1F25                     _RC5PPS	set	7973
  1086  1F4E                     _ANSELC	set	8014
  1087  1F43                     _ANSELB	set	8003
  1088  1F38                     _ANSELA	set	7992
  1089                           
  1090                           	psect	stringtext1
  1091  1800                     __pstringtext1:	
  1092  1800                     STR_2:	
  1093  1800  3425               	retlw	37	;'%'
  1094  1801  3466               	retlw	102	;'f'
  1095  1802  3420               	retlw	32	;' '
  1096  1803  340A               	retlw	10
  1097  1804  340D               	retlw	13
  1098  1805  3420               	retlw	32	;' '
  1099  1806  3400               	retlw	0
  1100                           
  1101                           	psect	stringtext2
  1102  1807                     __pstringtext2:	
  1103  1807                     STR_3:	
  1104  1807  3449               	retlw	73	;'I'
  1105  1808  344E               	retlw	78	;'N'
  1106  1809  3446               	retlw	70	;'F'
  1107  180A  3400               	retlw	0
  1108                           
  1109                           	psect	stringtext3
  1110  180B                     __pstringtext3:	
  1111  180B                     STR_7:	
  1112  180B  344E               	retlw	78	;'N'
  1113  180C  3441               	retlw	65	;'A'
  1114  180D  344E               	retlw	78	;'N'
  1115  180E  3400               	retlw	0
  1116                           
  1117                           	psect	stringtext4
  1118  180F                     __pstringtext4:	
  1119  180F                     STR_4:	
  1120  180F  3469               	retlw	105	;'i'
  1121  1810  346E               	retlw	110	;'n'
  1122  1811  3466               	retlw	102	;'f'
  1123  1812  3400               	retlw	0
  1124                           
  1125                           	psect	stringtext5
  1126  1813                     __pstringtext5:	
  1127  1813                     STR_8:	
  1128  1813  346E               	retlw	110	;'n'
  1129  1814  3461               	retlw	97	;'a'
  1130  1815  346E               	retlw	110	;'n'
  1131  1816  3400               	retlw	0
  1132                           
  1133                           	psect	stringtext6
  1134  1817                     __pstringtext6:	
  1135  1817                     STR_11:	
  1136  1817  346C               	retlw	108	;'l'
  1137  1818  3466               	retlw	102	;'f'
  1138  1819  3400               	retlw	0
  1139                           
  1140                           	psect	stringtext7
  1141  181A                     __pstringtext7:	
  1142  181A                     STR_1:	
  1143  181A  3443               	retlw	67	;'C'
  1144  181B  3431               	retlw	49	;'1'
  1145  181C  3400               	retlw	0
  1146                           
  1147                           	psect	stringtext8
  1148  0000                     __pstringtext8:	
  1149  1817                     
  1150                           ; #config settings
  1151  0000                     
  1152                           	psect	cinit
  1153  0016                     start_initialization:	
  1154  0016                     __initialization:	
  1155                           
  1156                           ; Clear objects allocated to COMMON
  1157  0016  01F5               	clrf	__pbssCOMMON& (0+127)
  1158  0017  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  1159  0018  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  1160  0019  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
  1161                           
  1162                           ; Clear objects allocated to BANK2
  1163  001A  3020               	movlw	low __pbssBANK2
  1164  001B  0084               	movwf	4
  1165  001C  3001               	movlw	high __pbssBANK2
  1166  001D  0085               	movwf	5
  1167  001E  300C               	movlw	12
  1168  001F  3187  27F9  3180   	fcall	clear_ram0
  1169                           
  1170                           ; Clear objects allocated to BANK3
  1171  0022  30A0               	movlw	low __pbssBANK3
  1172  0023  0084               	movwf	4
  1173  0024  3001               	movlw	high __pbssBANK3
  1174  0025  0085               	movwf	5
  1175  0026  3050               	movlw	80
  1176  0027  3187  27F9         	fcall	clear_ram0
  1177  0029                     end_of_initialization:	
  1178                           ;End of C runtime variable initialization code
  1179                           
  1180  0029                     __end_of__initialization:	
  1181  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1182  002A  0140               	movlb	0
  1183  002B  3195  2DFA         	ljmp	_main	;jump to C main() function
  1184                           
  1185                           	psect	bssCOMMON
  1186  0075                     __pbssCOMMON:	
  1187  0075                     _prec:	
  1188  0075                     	ds	2
  1189  0077                     _flags:	
  1190  0077                     	ds	2
  1191                           
  1192                           	psect	bssBANK2
  1193  0120                     __pbssBANK2:	
  1194  0120                     floorf@F524:	
  1195  0120                     	ds	4
  1196  0124                     ___fpclassifyf@F463:	
  1197  0124                     	ds	4
  1198  0128                     _nout:	
  1199  0128                     	ds	2
  1200  012A                     _width:	
  1201  012A                     	ds	2
  1202                           
  1203                           	psect	bssBANK3
  1204  01A0                     __pbssBANK3:	
  1205  01A0                     _dbuf:	
  1206  01A0                     	ds	80
  1207                           
  1208                           	psect	clrtext
  1209  07F9                     clear_ram0:	
  1210                           ;	Called with FSR0 containing the base address, and
  1211                           ;	WREG with the size to clear
  1212                           
  1213  07F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1214  07FA                     clrloop0:	
  1215  07FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1216  07FB  3101               	addfsr 0,1
  1217  07FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1218  07FD  2FFA               	goto	clrloop0	;have we reached the end yet?
  1219  07FE  3400               	retlw	0	;all done for this memory range, return
  1220                           
  1221                           	psect	cstackBANK2
  1222  012C                     __pcstackBANK2:	
  1223  012C                     main@decimalADC:	
  1224                           
  1225                           ; 4 bytes @ 0x0
  1226  012C                     	ds	4
  1227  0130                     main@adc_out:	
  1228                           
  1229                           ; 2 bytes @ 0x4
  1230  0130                     	ds	2
  1231                           
  1232                           	psect	cstackBANK1
  1233  00A0                     __pcstackBANK1:	
  1234  00A0                     efgtoa@ou:	
  1235                           
  1236                           ; 4 bytes @ 0x0
  1237  00A0                     	ds	4
  1238  00A4                     _efgtoa$340:	
  1239                           
  1240                           ; 2 bytes @ 0x4
  1241  00A4                     	ds	2
  1242  00A6                     _efgtoa$341:	
  1243                           
  1244                           ; 2 bytes @ 0x6
  1245  00A6                     	ds	2
  1246  00A8                     _efgtoa$346:	
  1247                           
  1248                           ; 2 bytes @ 0x8
  1249  00A8                     	ds	2
  1250  00AA                     _efgtoa$350:	
  1251                           
  1252                           ; 2 bytes @ 0xA
  1253  00AA                     	ds	2
  1254  00AC                     _efgtoa$351:	
  1255                           
  1256                           ; 2 bytes @ 0xC
  1257  00AC                     	ds	2
  1258  00AE                     _efgtoa$352:	
  1259                           
  1260                           ; 2 bytes @ 0xE
  1261  00AE                     	ds	2
  1262  00B0                     efgtoa@t:	
  1263                           
  1264                           ; 2 bytes @ 0x10
  1265  00B0                     	ds	2
  1266  00B2                     efgtoa@pp:	
  1267                           
  1268                           ; 2 bytes @ 0x12
  1269  00B2                     	ds	2
  1270  00B4                     efgtoa@m:	
  1271                           
  1272                           ; 2 bytes @ 0x14
  1273  00B4                     	ds	2
  1274  00B6                     efgtoa@ne:	
  1275                           
  1276                           ; 2 bytes @ 0x16
  1277  00B6                     	ds	2
  1278  00B8                     efgtoa@d:	
  1279                           
  1280                           ; 2 bytes @ 0x18
  1281  00B8                     	ds	2
  1282  00BA                     efgtoa@sign:	
  1283                           
  1284                           ; 2 bytes @ 0x1A
  1285  00BA                     	ds	2
  1286  00BC                     efgtoa@fp:	
  1287                           
  1288                           ; 1 bytes @ 0x1C
  1289  00BC                     	ds	1
  1290  00BD                     efgtoa@p:	
  1291                           
  1292                           ; 2 bytes @ 0x1D
  1293  00BD                     	ds	2
  1294  00BF                     efgtoa@nmode:	
  1295                           
  1296                           ; 1 bytes @ 0x1F
  1297  00BF                     	ds	1
  1298  00C0                     efgtoa@w:	
  1299                           
  1300                           ; 2 bytes @ 0x20
  1301  00C0                     	ds	2
  1302  00C2                     efgtoa@mode:	
  1303                           
  1304                           ; 1 bytes @ 0x22
  1305  00C2                     	ds	1
  1306  00C3                     efgtoa@h:	
  1307                           
  1308                           ; 4 bytes @ 0x23
  1309  00C3                     	ds	4
  1310  00C7                     efgtoa@l:	
  1311                           
  1312                           ; 4 bytes @ 0x27
  1313  00C7                     	ds	4
  1314  00CB                     efgtoa@i:	
  1315                           
  1316                           ; 2 bytes @ 0x2B
  1317  00CB                     	ds	2
  1318  00CD                     efgtoa@g:	
  1319                           
  1320                           ; 4 bytes @ 0x2D
  1321  00CD                     	ds	4
  1322  00D1                     efgtoa@e:	
  1323                           
  1324                           ; 2 bytes @ 0x31
  1325  00D1                     	ds	2
  1326  00D3                     efgtoa@n:	
  1327                           
  1328                           ; 2 bytes @ 0x33
  1329  00D3                     	ds	2
  1330  00D5                     efgtoa@u:	
  1331                           
  1332                           ; 4 bytes @ 0x35
  1333  00D5                     	ds	4
  1334  00D9                     ?_vfprintf:	
  1335  00D9                     vfprintf@fmt:	
  1336                           ; 2 bytes @ 0x39
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0x39
  1340  00D9                     	ds	2
  1341  00DB                     vfprintf@ap:	
  1342                           
  1343                           ; 1 bytes @ 0x3B
  1344  00DB                     	ds	1
  1345  00DC                     ??_vfprintf:	
  1346                           
  1347                           ; 1 bytes @ 0x3C
  1348  00DC                     	ds	2
  1349  00DE                     vfprintf@fp:	
  1350                           
  1351                           ; 1 bytes @ 0x3E
  1352  00DE                     	ds	1
  1353  00DF                     vfprintf@cfmt:	
  1354                           
  1355                           ; 2 bytes @ 0x3F
  1356  00DF                     	ds	2
  1357  00E1                     ?_printf:	
  1358  00E1                     printf@fmt:	
  1359                           ; 2 bytes @ 0x41
  1360                           
  1361                           
  1362                           ; 2 bytes @ 0x41
  1363  00E1                     	ds	6
  1364  00E7                     ??_printf:	
  1365                           
  1366                           ; 1 bytes @ 0x47
  1367  00E7                     	ds	3
  1368  00EA                     printf@ap:	
  1369                           
  1370                           ; 1 bytes @ 0x4A
  1371  00EA                     	ds	1
  1372  00EB                     ??_main:	
  1373                           
  1374                           ; 1 bytes @ 0x4B
  1375  00EB                     	ds	2
  1376                           
  1377                           	psect	cstackCOMMON
  1378  0070                     __pcstackCOMMON:	
  1379  0070                     ?_readSerial:	
  1380  0070                     ??_readSerial:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     ?_UART_Recieve:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     ??_UART_Recieve:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0070                     ?_main:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0070                     ?_putch:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395                           
  1396                           ; 1 bytes @ 0x0
  1397  0070                     	ds	3
  1398  0073                     UART_Recieve@received_char:	
  1399                           
  1400                           ; 1 bytes @ 0x3
  1401  0073                     	ds	1
  1402  0074                     UART_Recieve@b:	
  1403                           
  1404                           ; 1 bytes @ 0x4
  1405  0074                     	ds	1
  1406  0075                     ??_putch:	
  1407  0075                     ??___flneg:	
  1408                           ; 1 bytes @ 0x5
  1409                           
  1410  0075                     ??___flsub:	
  1411                           ; 1 bytes @ 0x5
  1412                           
  1413                           
  1414                           	psect	cstackBANK0
  1415  0020                     __pcstackBANK0:	
  1416                           ; 1 bytes @ 0x5
  1417                           
  1418  0020                     ?___fleq:	
  1419  0020                     ?_ADC_init:	
  1420                           ; 1 bit 
  1421                           
  1422  0020                     ?_strcpy:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0020                     ?_ADC_read:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0020                     ?_strlen:	
  1429                           ; 2 bytes @ 0x0
  1430                           
  1431  0020                     ?___fpclassifyf:	
  1432                           ; 2 bytes @ 0x0
  1433                           
  1434  0020                     ?_isupper:	
  1435                           ; 2 bytes @ 0x0
  1436                           
  1437  0020                     ?_strncmp:	
  1438                           ; 2 bytes @ 0x0
  1439                           
  1440  0020                     ?__Umul8_16:	
  1441                           ; 2 bytes @ 0x0
  1442                           
  1443  0020                     ?___awdiv:	
  1444                           ; 2 bytes @ 0x0
  1445                           
  1446  0020                     ?___awmod:	
  1447                           ; 2 bytes @ 0x0
  1448                           
  1449  0020                     ?___aldiv:	
  1450                           ; 2 bytes @ 0x0
  1451                           
  1452  0020                     ?___flneg:	
  1453                           ; 4 bytes @ 0x0
  1454                           
  1455  0020                     ?___fltol:	
  1456                           ; 4 bytes @ 0x0
  1457                           
  1458  0020                     ?___fladd:	
  1459                           ; 4 bytes @ 0x0
  1460                           
  1461  0020                     ?___fldiv:	
  1462                           ; 4 bytes @ 0x0
  1463                           
  1464  0020                     ?___xxtofl:	
  1465                           ; 4 bytes @ 0x0
  1466                           
  1467  0020                     putch@byte:	
  1468                           ; 4 bytes @ 0x0
  1469                           
  1470  0020                     __Umul8_16@multiplicand:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0020                     ADC_init@pin:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0020                     ___awdiv@divisor:	
  1477                           ; 2 bytes @ 0x0
  1478                           
  1479  0020                     ___awmod@divisor:	
  1480                           ; 2 bytes @ 0x0
  1481                           
  1482  0020                     isupper@c:	
  1483                           ; 2 bytes @ 0x0
  1484                           
  1485  0020                     strcpy@src:	
  1486                           ; 2 bytes @ 0x0
  1487                           
  1488  0020                     strncmp@_r:	
  1489                           ; 2 bytes @ 0x0
  1490                           
  1491  0020                     ___aldiv@divisor:	
  1492                           ; 2 bytes @ 0x0
  1493                           
  1494  0020                     ___fleq@ff1:	
  1495                           ; 4 bytes @ 0x0
  1496                           
  1497  0020                     ___flneg@f1:	
  1498                           ; 4 bytes @ 0x0
  1499                           
  1500  0020                     ___fltol@f1:	
  1501                           ; 4 bytes @ 0x0
  1502                           
  1503  0020                     ___fladd@b:	
  1504                           ; 4 bytes @ 0x0
  1505                           
  1506  0020                     ___fldiv@a:	
  1507                           ; 4 bytes @ 0x0
  1508                           
  1509  0020                     ___xxtofl@val:	
  1510                           ; 4 bytes @ 0x0
  1511                           
  1512  0020                     ___fpclassifyf@x:	
  1513                           ; 4 bytes @ 0x0
  1514                           
  1515                           
  1516                           ; 4 bytes @ 0x0
  1517  0020                     	ds	1
  1518  0021                     ?_fputc:	
  1519  0021                     fputc@c:	
  1520                           ; 2 bytes @ 0x1
  1521                           
  1522                           
  1523                           ; 2 bytes @ 0x1
  1524  0021                     	ds	1
  1525  0022                     ??_ADC_init:	
  1526  0022                     ??_ADC_read:	
  1527                           ; 1 bytes @ 0x2
  1528                           
  1529  0022                     ??_strlen:	
  1530                           ; 1 bytes @ 0x2
  1531                           
  1532  0022                     ??_isupper:	
  1533                           ; 1 bytes @ 0x2
  1534                           
  1535  0022                     ??_strcpy:	
  1536                           ; 1 bytes @ 0x2
  1537                           
  1538  0022                     ??__Umul8_16:	
  1539                           ; 1 bytes @ 0x2
  1540                           
  1541  0022                     ___awdiv@dividend:	
  1542                           ; 1 bytes @ 0x2
  1543                           
  1544  0022                     ___awmod@dividend:	
  1545                           ; 2 bytes @ 0x2
  1546                           
  1547  0022                     strncmp@n:	
  1548                           ; 2 bytes @ 0x2
  1549                           
  1550                           
  1551                           ; 2 bytes @ 0x2
  1552  0022                     	ds	1
  1553  0023                     fputc@fp:	
  1554  0023                     strlen@a:	
  1555                           ; 1 bytes @ 0x3
  1556                           
  1557                           
  1558                           ; 1 bytes @ 0x3
  1559  0023                     	ds	1
  1560  0024                     ??_fputc:	
  1561  0024                     ??___fpclassifyf:	
  1562                           ; 1 bytes @ 0x4
  1563                           
  1564  0024                     ??_strncmp:	
  1565                           ; 1 bytes @ 0x4
  1566                           
  1567  0024                     ??___awdiv:	
  1568                           ; 1 bytes @ 0x4
  1569                           
  1570  0024                     ??___awmod:	
  1571                           ; 1 bytes @ 0x4
  1572                           
  1573  0024                     ??___fltol:	
  1574                           ; 1 bytes @ 0x4
  1575                           
  1576  0024                     ??___xxtofl:	
  1577                           ; 1 bytes @ 0x4
  1578                           
  1579  0024                     ADC_init@block:	
  1580                           ; 1 bytes @ 0x4
  1581                           
  1582  0024                     strlen@s:	
  1583                           ; 1 bytes @ 0x4
  1584                           
  1585  0024                     strcpy@s:	
  1586                           ; 1 bytes @ 0x4
  1587                           
  1588  0024                     __Umul8_16@product:	
  1589                           ; 2 bytes @ 0x4
  1590                           
  1591  0024                     ___aldiv@dividend:	
  1592                           ; 2 bytes @ 0x4
  1593                           
  1594  0024                     ___fleq@ff2:	
  1595                           ; 4 bytes @ 0x4
  1596                           
  1597  0024                     ___fladd@a:	
  1598                           ; 4 bytes @ 0x4
  1599                           
  1600  0024                     ___fldiv@b:	
  1601                           ; 4 bytes @ 0x4
  1602                           
  1603                           
  1604                           ; 4 bytes @ 0x4
  1605  0024                     	ds	1
  1606  0025                     ADC_init@chan:	
  1607  0025                     ___awdiv@counter:	
  1608                           ; 1 bytes @ 0x5
  1609                           
  1610  0025                     ___awmod@counter:	
  1611                           ; 1 bytes @ 0x5
  1612                           
  1613  0025                     strncmp@_l:	
  1614                           ; 1 bytes @ 0x5
  1615                           
  1616                           
  1617                           ; 1 bytes @ 0x5
  1618  0025                     	ds	1
  1619  0026                     ?_tolower:	
  1620  0026                     ___awdiv@sign:	
  1621                           ; 2 bytes @ 0x6
  1622                           
  1623  0026                     ___awmod@sign:	
  1624                           ; 1 bytes @ 0x6
  1625                           
  1626  0026                     strcpy@d:	
  1627                           ; 1 bytes @ 0x6
  1628                           
  1629  0026                     ADC_init@pinNum:	
  1630                           ; 1 bytes @ 0x6
  1631                           
  1632  0026                     strncmp@r:	
  1633                           ; 2 bytes @ 0x6
  1634                           
  1635  0026                     tolower@c:	
  1636                           ; 2 bytes @ 0x6
  1637                           
  1638  0026                     __Umul8_16@word_mpld:	
  1639                           ; 2 bytes @ 0x6
  1640                           
  1641                           
  1642                           ; 2 bytes @ 0x6
  1643  0026                     	ds	1
  1644  0027                     strcpy@dest:	
  1645  0027                     ___awdiv@quotient:	
  1646                           ; 1 bytes @ 0x7
  1647                           
  1648                           
  1649                           ; 2 bytes @ 0x7
  1650  0027                     	ds	1
  1651  0028                     ??_tolower:	
  1652  0028                     ??___aldiv:	
  1653                           ; 1 bytes @ 0x8
  1654                           
  1655  0028                     ??___fleq:	
  1656                           ; 1 bytes @ 0x8
  1657                           
  1658  0028                     ??___fladd:	
  1659                           ; 1 bytes @ 0x8
  1660                           
  1661  0028                     ??___fldiv:	
  1662                           ; 1 bytes @ 0x8
  1663                           
  1664  0028                     ___xxtofl@sign:	
  1665                           ; 1 bytes @ 0x8
  1666                           
  1667  0028                     strncmp@l:	
  1668                           ; 1 bytes @ 0x8
  1669                           
  1670  0028                     __Umul8_16@multiplier:	
  1671                           ; 1 bytes @ 0x8
  1672                           
  1673                           
  1674                           ; 1 bytes @ 0x8
  1675  0028                     	ds	1
  1676  0029                     ?_fputs:	
  1677  0029                     ___aldiv@counter:	
  1678                           ; 2 bytes @ 0x9
  1679                           
  1680  0029                     ___fltol@sign1:	
  1681                           ; 1 bytes @ 0x9
  1682                           
  1683  0029                     ___xxtofl@exp:	
  1684                           ; 1 bytes @ 0x9
  1685                           
  1686  0029                     fputs@fp:	
  1687                           ; 1 bytes @ 0x9
  1688                           
  1689                           
  1690                           ; 1 bytes @ 0x9
  1691  0029                     	ds	1
  1692  002A                     ??_fputs:	
  1693  002A                     ___aldiv@sign:	
  1694                           ; 1 bytes @ 0xA
  1695                           
  1696  002A                     ___fltol@exp1:	
  1697                           ; 1 bytes @ 0xA
  1698                           
  1699  002A                     ___fpclassifyf@e:	
  1700                           ; 1 bytes @ 0xA
  1701                           
  1702  002A                     ___xxtofl@arg:	
  1703                           ; 2 bytes @ 0xA
  1704                           
  1705                           
  1706                           ; 4 bytes @ 0xA
  1707  002A                     	ds	1
  1708  002B                     ___aldiv@quotient:	
  1709                           
  1710                           ; 4 bytes @ 0xB
  1711  002B                     	ds	1
  1712  002C                     _tolower$751:	
  1713  002C                     ___fpclassifyf@u:	
  1714                           ; 2 bytes @ 0xC
  1715                           
  1716                           
  1717                           ; 4 bytes @ 0xC
  1718  002C                     	ds	1
  1719  002D                     fputs@c:	
  1720  002D                     ___fldiv@rem:	
  1721                           ; 1 bytes @ 0xD
  1722                           
  1723                           
  1724                           ; 4 bytes @ 0xD
  1725  002D                     	ds	1
  1726  002E                     ?___flmul:	
  1727  002E                     fputs@i:	
  1728                           ; 4 bytes @ 0xE
  1729                           
  1730  002E                     ___flmul@b:	
  1731                           ; 2 bytes @ 0xE
  1732                           
  1733                           
  1734                           ; 4 bytes @ 0xE
  1735  002E                     	ds	1
  1736  002F                     ?_init_UART:	
  1737  002F                     init_UART@baud_rate:	
  1738                           ; 1 bytes @ 0xF
  1739                           
  1740                           
  1741                           ; 4 bytes @ 0xF
  1742  002F                     	ds	1
  1743  0030                     ___fladd@signs:	
  1744  0030                     fputs@s:	
  1745                           ; 1 bytes @ 0x10
  1746                           
  1747                           
  1748                           ; 1 bytes @ 0x10
  1749  0030                     	ds	1
  1750  0031                     ?_pad:	
  1751  0031                     pad@buf:	
  1752                           ; 2 bytes @ 0x11
  1753                           
  1754  0031                     ___fladd@aexp:	
  1755                           ; 1 bytes @ 0x11
  1756                           
  1757  0031                     ___fldiv@sign:	
  1758                           ; 1 bytes @ 0x11
  1759                           
  1760                           
  1761                           ; 1 bytes @ 0x11
  1762  0031                     	ds	1
  1763  0032                     ___fladd@bexp:	
  1764  0032                     pad@p:	
  1765                           ; 1 bytes @ 0x12
  1766                           
  1767  0032                     ___fldiv@new_exp:	
  1768                           ; 2 bytes @ 0x12
  1769                           
  1770  0032                     ___flmul@a:	
  1771                           ; 2 bytes @ 0x12
  1772                           
  1773                           
  1774                           ; 4 bytes @ 0x12
  1775  0032                     	ds	1
  1776  0033                     ??_init_UART:	
  1777  0033                     ___fladd@grs:	
  1778                           ; 1 bytes @ 0x13
  1779                           
  1780                           
  1781                           ; 1 bytes @ 0x13
  1782  0033                     	ds	1
  1783  0034                     ??_pad:	
  1784  0034                     ___fldiv@grs:	
  1785                           ; 1 bytes @ 0x14
  1786                           
  1787                           
  1788                           ; 4 bytes @ 0x14
  1789  0034                     	ds	1
  1790  0035                     pad@i:	
  1791                           
  1792                           ; 2 bytes @ 0x15
  1793  0035                     	ds	1
  1794  0036                     ??___flmul:	
  1795                           
  1796                           ; 1 bytes @ 0x16
  1797  0036                     	ds	1
  1798  0037                     pad@w:	
  1799                           
  1800                           ; 2 bytes @ 0x17
  1801  0037                     	ds	1
  1802  0038                     ___fldiv@bexp:	
  1803                           
  1804                           ; 1 bytes @ 0x18
  1805  0038                     	ds	1
  1806  0039                     pad@fp:	
  1807  0039                     ___fldiv@aexp:	
  1808                           ; 1 bytes @ 0x19
  1809                           
  1810                           
  1811                           ; 1 bytes @ 0x19
  1812  0039                     	ds	1
  1813  003A                     ?_floorf:	
  1814  003A                     floorf@x:	
  1815                           ; 4 bytes @ 0x1A
  1816                           
  1817                           
  1818                           ; 4 bytes @ 0x1A
  1819  003A                     	ds	1
  1820  003B                     ___flmul@sign:	
  1821                           
  1822                           ; 1 bytes @ 0x1B
  1823  003B                     	ds	1
  1824  003C                     ___flmul@aexp:	
  1825                           
  1826                           ; 1 bytes @ 0x1C
  1827  003C                     	ds	1
  1828  003D                     ___flmul@grs:	
  1829                           
  1830                           ; 4 bytes @ 0x1D
  1831  003D                     	ds	1
  1832  003E                     ??_floorf:	
  1833                           
  1834                           ; 1 bytes @ 0x1E
  1835  003E                     	ds	3
  1836  0041                     ___flmul@bexp:	
  1837                           
  1838                           ; 1 bytes @ 0x21
  1839  0041                     	ds	1
  1840  0042                     ___flmul@prod:	
  1841                           
  1842                           ; 4 bytes @ 0x22
  1843  0042                     	ds	1
  1844  0043                     init_UART@spbrgVal:	
  1845                           
  1846                           ; 2 bytes @ 0x23
  1847  0043                     	ds	1
  1848  0044                     floorf@m:	
  1849                           
  1850                           ; 4 bytes @ 0x24
  1851  0044                     	ds	2
  1852  0046                     ___flmul@temp:	
  1853                           
  1854                           ; 2 bytes @ 0x26
  1855  0046                     	ds	2
  1856  0048                     ?___flge:	
  1857  0048                     ?___flsub:	
  1858                           ; 1 bit 
  1859                           
  1860  0048                     floorf@e:	
  1861                           ; 4 bytes @ 0x28
  1862                           
  1863  0048                     ___flge@ff1:	
  1864                           ; 2 bytes @ 0x28
  1865                           
  1866  0048                     ___flsub@a:	
  1867                           ; 4 bytes @ 0x28
  1868                           
  1869                           
  1870                           ; 4 bytes @ 0x28
  1871  0048                     	ds	2
  1872  004A                     floorf@u:	
  1873                           
  1874                           ; 4 bytes @ 0x2A
  1875  004A                     	ds	2
  1876  004C                     ___flge@ff2:	
  1877  004C                     ___flsub@b:	
  1878                           ; 4 bytes @ 0x2C
  1879                           
  1880                           
  1881                           ; 4 bytes @ 0x2C
  1882  004C                     	ds	4
  1883  0050                     ??___flge:	
  1884                           
  1885                           ; 1 bytes @ 0x30
  1886  0050                     	ds	4
  1887  0054                     ?_efgtoa:	
  1888  0054                     efgtoa@f:	
  1889                           ; 2 bytes @ 0x34
  1890                           
  1891                           
  1892                           ; 4 bytes @ 0x34
  1893  0054                     	ds	4
  1894  0058                     efgtoa@c:	
  1895                           
  1896                           ; 1 bytes @ 0x38
  1897  0058                     	ds	1
  1898  0059                     ??_efgtoa:	
  1899                           
  1900                           ; 1 bytes @ 0x39
  1901  0059                     	ds	4
  1902  005D                     ?_vfpfcnvrt:	
  1903  005D                     vfpfcnvrt@fmt:	
  1904                           ; 2 bytes @ 0x3D
  1905                           
  1906                           
  1907                           ; 1 bytes @ 0x3D
  1908  005D                     	ds	1
  1909  005E                     vfpfcnvrt@ap:	
  1910                           
  1911                           ; 1 bytes @ 0x3E
  1912  005E                     	ds	1
  1913  005F                     ??_vfpfcnvrt:	
  1914                           
  1915                           ; 1 bytes @ 0x3F
  1916  005F                     	ds	6
  1917  0065                     _vfpfcnvrt$369:	
  1918                           
  1919                           ; 2 bytes @ 0x45
  1920  0065                     	ds	2
  1921  0067                     vfpfcnvrt@f:	
  1922                           
  1923                           ; 4 bytes @ 0x47
  1924  0067                     	ds	4
  1925  006B                     vfpfcnvrt@ct:	
  1926                           
  1927                           ; 3 bytes @ 0x4B
  1928  006B                     	ds	3
  1929  006E                     vfpfcnvrt@c:	
  1930                           
  1931                           ; 1 bytes @ 0x4E
  1932  006E                     	ds	1
  1933  006F                     vfpfcnvrt@fp:	
  1934                           
  1935                           ; 1 bytes @ 0x4F
  1936  006F                     	ds	1
  1937                           
  1938                           	psect	maintext
  1939  15FA                     __pmaintext:	
  1940 ;;
  1941 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1942 ;;
  1943 ;; *************** function _main *****************
  1944 ;; Defined at:
  1945 ;;		line 65 in file "main.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  decimalADC      4    0[BANK2 ] float 
  1950 ;;  adc_out         2    4[BANK2 ] unsigned int 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : B3F/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1961 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  1962 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1963 ;;      Totals:         0       0       2       6       0       0       0       0       0       0       0       0       
      +0       0
  1964 ;;Total ram usage:        8 bytes
  1965 ;; Hardware stack levels required when called:   10
  1966 ;; This function calls:
  1967 ;;		_ADC_init
  1968 ;;		_ADC_read
  1969 ;;		___flmul
  1970 ;;		___xxtofl
  1971 ;;		_init_UART
  1972 ;;		_printf
  1973 ;; This function is called by:
  1974 ;;		Startup code after reset
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function _main
  1980  15FA                     _main:	
  1981                           
  1982                           ;main.c: 67:     TRISC = 0b00010000;
  1983                           
  1984                           ;incstack = 0
  1985                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1986  15FA  3010               	movlw	16
  1987  15FB  0140               	movlb	0	; select bank0
  1988  15FC  0094               	movwf	20	;volatile
  1989                           
  1990                           ;main.c: 68:     TRISA = 0x00;
  1991  15FD  0192               	clrf	18	;volatile
  1992                           
  1993                           ;main.c: 70:     init_UART(115200);
  1994  15FE  3000               	movlw	0
  1995  15FF  00B2               	movwf	init_UART@baud_rate+3
  1996  1600  3001               	movlw	1
  1997  1601  00B1               	movwf	init_UART@baud_rate+2
  1998  1602  30C2               	movlw	194
  1999  1603  00B0               	movwf	init_UART@baud_rate+1
  2000  1604  3000               	movlw	0
  2001  1605  00AF               	movwf	init_UART@baud_rate
  2002  1606  3194  24C1  3195   	fcall	_init_UART
  2003                           
  2004                           ;main.c: 72:     ADC_init("C1");
  2005  1609  301A               	movlw	low (STR_1| (0+32768))
  2006  160A  0140               	movlb	0	; select bank0
  2007  160B  00A0               	movwf	ADC_init@pin
  2008  160C  3098               	movlw	high (STR_1| (0+32768))
  2009  160D  00A1               	movwf	ADC_init@pin+1
  2010  160E  3197  2773  3195   	fcall	_ADC_init
  2011  1611                     l4977:	
  2012                           
  2013                           ;main.c: 76:     unsigned int adc_out = ADC_read();
  2014  1611  3192  2236  3195   	fcall	_ADC_read
  2015  1614  0140               	movlb	0	; select bank0
  2016  1615  0821               	movf	?_ADC_read+1,w
  2017  1616  0142               	movlb	2	; select bank2
  2018  1617  00B1               	movwf	(main@adc_out+1)^(0+256)
  2019  1618  0140               	movlb	0	; select bank0
  2020  1619  0820               	movf	?_ADC_read,w
  2021  161A  0142               	movlb	2	; select bank2
  2022  161B  00B0               	movwf	main@adc_out^(0+256)
  2023                           
  2024                           ;main.c: 77:     float decimalADC = 0.004887586 * adc_out;
  2025  161C  303B               	movlw	59
  2026  161D  0140               	movlb	0	; select bank0
  2027  161E  00B1               	movwf	___flmul@b+3
  2028  161F  30A0               	movlw	160
  2029  1620  00B0               	movwf	___flmul@b+2
  2030  1621  3028               	movlw	40
  2031  1622  00AF               	movwf	___flmul@b+1
  2032  1623  300B               	movlw	11
  2033  1624  00AE               	movwf	___flmul@b
  2034  1625  0142               	movlb	2	; select bank2
  2035  1626  0830               	movf	main@adc_out^(0+256),w
  2036  1627  0140               	movlb	0	; select bank0
  2037  1628  00A0               	movwf	___xxtofl@val
  2038  1629  0142               	movlb	2	; select bank2
  2039  162A  0831               	movf	(main@adc_out+1)^(0+256),w
  2040  162B  0140               	movlb	0	; select bank0
  2041  162C  00A1               	movwf	___xxtofl@val+1
  2042  162D  01A2               	clrf	___xxtofl@val+2
  2043  162E  01A3               	clrf	___xxtofl@val+3
  2044  162F  3000               	movlw	0
  2045  1630  3188  204A  3195   	fcall	___xxtofl
  2046  1633  0140               	movlb	0	; select bank0
  2047  1634  0823               	movf	?___xxtofl+3,w
  2048  1635  00B5               	movwf	___flmul@a+3
  2049  1636  0822               	movf	?___xxtofl+2,w
  2050  1637  00B4               	movwf	___flmul@a+2
  2051  1638  0821               	movf	?___xxtofl+1,w
  2052  1639  00B3               	movwf	___flmul@a+1
  2053  163A  0820               	movf	?___xxtofl,w
  2054  163B  00B2               	movwf	___flmul@a
  2055  163C  318D  25D4  3195   	fcall	___flmul
  2056  163F  0140               	movlb	0	; select bank0
  2057  1640  0831               	movf	?___flmul+3,w
  2058  1641  0142               	movlb	2	; select bank2
  2059  1642  00AF               	movwf	(main@decimalADC+3)^(0+256)
  2060  1643  0140               	movlb	0	; select bank0
  2061  1644  0830               	movf	?___flmul+2,w
  2062  1645  0142               	movlb	2	; select bank2
  2063  1646  00AE               	movwf	(main@decimalADC+2)^(0+256)
  2064  1647  0140               	movlb	0	; select bank0
  2065  1648  082F               	movf	?___flmul+1,w
  2066  1649  0142               	movlb	2	; select bank2
  2067  164A  00AD               	movwf	(main@decimalADC+1)^(0+256)
  2068  164B  0140               	movlb	0	; select bank0
  2069  164C  082E               	movf	?___flmul,w
  2070  164D  0142               	movlb	2	; select bank2
  2071  164E  00AC               	movwf	main@decimalADC^(0+256)
  2072                           
  2073                           ;main.c: 80:     printf("%f \n\r ", decimalADC);
  2074  164F  3000               	movlw	low (STR_2| (0+32768))
  2075  1650  0141               	movlb	1	; select bank1
  2076  1651  00E1               	movwf	printf@fmt^(0+128)
  2077  1652  3098               	movlw	high (STR_2| (0+32768))
  2078  1653  00E2               	movwf	(printf@fmt^(0+128)+1)
  2079  1654  0142               	movlb	2	; select bank2
  2080  1655  082F               	movf	(main@decimalADC+3)^(0+256),w
  2081  1656  0141               	movlb	1	; select bank1
  2082  1657  00E6               	movwf	((?_printf+3)^(0+128)+2)
  2083  1658  0142               	movlb	2	; select bank2
  2084  1659  082E               	movf	(main@decimalADC+2)^(0+256),w
  2085  165A  0141               	movlb	1	; select bank1
  2086  165B  00E5               	movwf	((?_printf+2)^(0+128)+2)
  2087  165C  0142               	movlb	2	; select bank2
  2088  165D  082D               	movf	(main@decimalADC+1)^(0+256),w
  2089  165E  0141               	movlb	1	; select bank1
  2090  165F  00E4               	movwf	((?_printf+1)^(0+128)+2)
  2091  1660  0142               	movlb	2	; select bank2
  2092  1661  082C               	movf	main@decimalADC^(0+256),w
  2093  1662  0141               	movlb	1	; select bank1
  2094  1663  00E3               	movwf	(?_printf^(0+128)+2)
  2095  1664  3192  2225  3195   	fcall	_printf
  2096                           
  2097                           ;main.c: 81:     _delay((unsigned long)((500)*(32000000/4000.0)));
  2098  1667  3015               	movlw	21
  2099  1668  0141               	movlb	1	; select bank1
  2100  1669  00EC               	movwf	(??_main^(0+128)+1)
  2101  166A  304B               	movlw	75
  2102  166B  00EB               	movwf	??_main^(0+128)
  2103  166C  30BE               	movlw	190
  2104  166D                     u8307:	
  2105  166D  0B89               	decfsz	9,f
  2106  166E  2E6D               	goto	u8307
  2107  166F  0BEB               	decfsz	??_main^(0+128),f
  2108  1670  2E6D               	goto	u8307
  2109  1671  0BEC               	decfsz	(??_main^(0+128)+1),f
  2110  1672  2E6D               	goto	u8307
  2111  1673  0000               	nop
  2112  1674  2E11               	goto	l4977
  2113  1675                     __end_of_main:	
  2114                           
  2115                           	psect	text1
  2116  1225                     __ptext1:	
  2117 ;; *************** function _printf *****************
  2118 ;; Defined at:
  2119 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
  2122 ;;		 -> STR_2(7), 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  ret             2    0        int 
  2125 ;;  ap              1   74[BANK1 ] PTR void [1]
  2126 ;;		 -> ?_printf(2), 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  2   65[BANK1 ] int 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2136 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;Total ram usage:       10 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    9
  2143 ;; This function calls:
  2144 ;;		_vfprintf
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function _printf
  2152  1225                     _printf:	
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2156  1225  30E3               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2157  1226  0141               	movlb	1	; select bank1
  2158  1227  00E7               	movwf	??_printf^(0+128)
  2159  1228  0867               	movf	??_printf^(0+128),w
  2160  1229  00EA               	movwf	printf@ap^(0+128)
  2161  122A  0862               	movf	(printf@fmt+1)^(0+128),w
  2162  122B  00DA               	movwf	(vfprintf@fmt+1)^(0+128)
  2163  122C  0861               	movf	printf@fmt^(0+128),w
  2164  122D  00D9               	movwf	vfprintf@fmt^(0+128)
  2165  122E  30EA               	movlw	(low (printf@ap| 0))& (0+255)
  2166  122F  00E7               	movwf	??_printf^(0+128)
  2167  1230  0867               	movf	??_printf^(0+128),w
  2168  1231  00DB               	movwf	vfprintf@ap^(0+128)
  2169  1232  3000               	movlw	0
  2170  1233  3193  2323         	fcall	_vfprintf
  2171  1235  0008               	return
  2172  1236                     __end_of_printf:	
  2173                           
  2174                           	psect	text2
  2175  1323                     __ptext2:	
  2176 ;; *************** function _vfprintf *****************
  2177 ;; Defined at:
  2178 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  fp              1    wreg     PTR struct _IO_FILE
  2181 ;;		 -> NULL(0), 
  2182 ;;  fmt             2   57[BANK1 ] PTR const unsigned char 
  2183 ;;		 -> STR_2(7), 
  2184 ;;  ap              1   59[BANK1 ] PTR PTR void 
  2185 ;;		 -> printf@ap(1), 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  fp              1   62[BANK1 ] PTR struct _IO_FILE
  2188 ;;		 -> NULL(0), 
  2189 ;;  cfmt            2   63[BANK1 ] PTR unsigned char 
  2190 ;;		 -> STR_2(7), 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  2   57[BANK1 ] int 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2200 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2203 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2204 ;;Total ram usage:        8 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    8
  2207 ;; This function calls:
  2208 ;;		_vfpfcnvrt
  2209 ;; This function is called by:
  2210 ;;		_printf
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function _vfprintf
  2216  1323                     _vfprintf:	
  2217                           
  2218                           ;incstack = 0
  2219                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2220                           ;vfprintf@fp stored from wreg
  2221  1323  0141               	movlb	1	; select bank1
  2222  1324  00DE               	movwf	vfprintf@fp^(0+128)
  2223                           
  2224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2225  1325  085A               	movf	(vfprintf@fmt+1)^(0+128),w
  2226  1326  00E0               	movwf	(vfprintf@cfmt+1)^(0+128)
  2227  1327  0859               	movf	vfprintf@fmt^(0+128),w
  2228  1328  00DF               	movwf	vfprintf@cfmt^(0+128)
  2229                           
  2230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2231  1329  0142               	movlb	2	; select bank2
  2232  132A  01A8               	clrf	_nout^(0+256)
  2233  132B  01A9               	clrf	(_nout+1)^(0+256)
  2234  132C                     l4811:	
  2235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2236                           
  2237                           
  2238                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2239  132C  0141               	movlb	1	; select bank1
  2240  132D  085F               	movf	vfprintf@cfmt^(0+128),w
  2241  132E  0084               	movwf	4
  2242  132F  0860               	movf	(vfprintf@cfmt+1)^(0+128),w
  2243  1330  0085               	movwf	5
  2244  1331  0012               	moviw fsr0++
  2245  1332  1903               	btfsc	3,2
  2246  1333  2B4D               	goto	l4813
  2247                           
  2248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2249  1334  30DF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2250  1335  00DC               	movwf	??_vfprintf^(0+128)
  2251  1336  085C               	movf	??_vfprintf^(0+128),w
  2252  1337  0140               	movlb	0	; select bank0
  2253  1338  00DD               	movwf	vfpfcnvrt@fmt
  2254  1339  0141               	movlb	1	; select bank1
  2255  133A  085B               	movf	vfprintf@ap^(0+128),w
  2256  133B  00DD               	movwf	(??_vfprintf+1)^(0+128)
  2257  133C  085D               	movf	(??_vfprintf+1)^(0+128),w
  2258  133D  0140               	movlb	0	; select bank0
  2259  133E  00DE               	movwf	vfpfcnvrt@ap
  2260  133F  0141               	movlb	1	; select bank1
  2261  1340  085E               	movf	vfprintf@fp^(0+128),w
  2262  1341  318A  225A  3193   	fcall	_vfpfcnvrt
  2263  1344  0140               	movlb	0	; select bank0
  2264  1345  085D               	movf	?_vfpfcnvrt,w
  2265  1346  0142               	movlb	2	; select bank2
  2266  1347  07A8               	addwf	_nout^(0+256),f
  2267  1348  0140               	movlb	0	; select bank0
  2268  1349  085E               	movf	?_vfpfcnvrt+1,w
  2269  134A  0142               	movlb	2	; select bank2
  2270  134B  3DA9               	addwfc	(_nout+1)^(0+256),f
  2271  134C  2B2C               	goto	l4811
  2272  134D                     l4813:	
  2273                           
  2274                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2275  134D  0142               	movlb	2	; select bank2
  2276  134E  0829               	movf	(_nout+1)^(0+256),w
  2277  134F  0141               	movlb	1	; select bank1
  2278  1350  00DA               	movwf	(?_vfprintf+1)^(0+128)
  2279  1351  0142               	movlb	2	; select bank2
  2280  1352  0828               	movf	_nout^(0+256),w
  2281  1353  0141               	movlb	1	; select bank1
  2282  1354  00D9               	movwf	?_vfprintf^(0+128)
  2283  1355  0008               	return
  2284  1356                     __end_of_vfprintf:	
  2285                           
  2286                           	psect	text3
  2287  0A5A                     __ptext3:	
  2288 ;; *************** function _vfpfcnvrt *****************
  2289 ;; Defined at:
  2290 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  fp              1    wreg     PTR struct _IO_FILE
  2293 ;;		 -> NULL(0), 
  2294 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  2295 ;;		 -> vfprintf@cfmt(2), 
  2296 ;;  ap              1   62[BANK0 ] PTR PTR void 
  2297 ;;		 -> printf@ap(1), 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  fp              1   79[BANK0 ] PTR struct _IO_FILE
  2300 ;;		 -> NULL(0), 
  2301 ;;  llu             8    0        unsigned long long 
  2302 ;;  ll              8    0        long long 
  2303 ;;  f               4   71[BANK0 ] long long 
  2304 ;;  ct              3   75[BANK0 ] unsigned char [3]
  2305 ;;  vp              2    0        PTR void 
  2306 ;;  i               2    0        int 
  2307 ;;  done            2    0        int 
  2308 ;;  cp              2    0        PTR unsigned char 
  2309 ;;  c               1   78[BANK0 ] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  2   61[BANK0 ] int 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2319 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2320 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2321 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2322 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2323 ;;Total ram usage:       19 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    7
  2326 ;; This function calls:
  2327 ;;		_efgtoa
  2328 ;;		_fputc
  2329 ;;		_isupper
  2330 ;;		_strncmp
  2331 ;;		_tolower
  2332 ;; This function is called by:
  2333 ;;		_vfprintf
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function _vfpfcnvrt
  2339  0A5A                     _vfpfcnvrt:	
  2340                           
  2341                           ;incstack = 0
  2342                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2343                           ;vfpfcnvrt@fp stored from wreg
  2344  0A5A  0140               	movlb	0	; select bank0
  2345  0A5B  00EF               	movwf	vfpfcnvrt@fp
  2346                           
  2347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2348  0A5C  085D               	movf	vfpfcnvrt@fmt,w
  2349  0A5D  0086               	movwf	6
  2350  0A5E  0187               	clrf	7
  2351  0A5F  3F40               	moviw [0]fsr1
  2352  0A60  00DF               	movwf	??_vfpfcnvrt
  2353  0A61  3F41               	moviw [1]fsr1
  2354  0A62  00E0               	movwf	??_vfpfcnvrt+1
  2355  0A63  085F               	movf	??_vfpfcnvrt,w
  2356  0A64  0084               	movwf	4
  2357  0A65  0860               	movf	??_vfpfcnvrt+1,w
  2358  0A66  0085               	movwf	5
  2359  0A67  0012               	moviw fsr0++
  2360  0A68  3A25               	xorlw	37
  2361  0A69  1D03               	btfss	3,2
  2362  0A6A  2BCF               	goto	l4797
  2363                           
  2364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2365  0A6B  085D               	movf	vfpfcnvrt@fmt,w
  2366  0A6C  0086               	movwf	6
  2367  0A6D  0187               	clrf	7
  2368  0A6E  3001               	movlw	1
  2369  0A6F  0781               	addwf	1,f
  2370  0A70  3141               	addfsr 1,1
  2371  0A71  1803               	skipnc
  2372  0A72  0A81               	incf	1,f
  2373                           
  2374                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2375  0A73  0142               	movlb	2	; select bank2
  2376  0A74  01AA               	clrf	_width^(0+256)
  2377  0A75  01AB               	clrf	(_width+1)^(0+256)
  2378  0A76  01F7               	clrf	_flags
  2379  0A77  01F8               	clrf	_flags+1
  2380                           
  2381                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2382  0A78  30FF               	movlw	255
  2383  0A79  00F5               	movwf	_prec
  2384  0A7A  30FF               	movlw	255
  2385  0A7B  00F6               	movwf	_prec+1
  2386                           
  2387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  2388  0A7C  0140               	movlb	0	; select bank0
  2389  0A7D  085D               	movf	vfpfcnvrt@fmt,w
  2390  0A7E  0086               	movwf	6
  2391  0A7F  0187               	clrf	7
  2392  0A80  3F40               	moviw [0]fsr1
  2393  0A81  00DF               	movwf	??_vfpfcnvrt
  2394  0A82  3F41               	moviw [1]fsr1
  2395  0A83  00E0               	movwf	??_vfpfcnvrt+1
  2396  0A84  085F               	movf	??_vfpfcnvrt,w
  2397  0A85  0084               	movwf	4
  2398  0A86  0860               	movf	??_vfpfcnvrt+1,w
  2399  0A87  0085               	movwf	5
  2400  0A88  0800               	movf	0,w	;code access
  2401  0A89  00E1               	movwf	??_vfpfcnvrt+2
  2402  0A8A  01E2               	clrf	??_vfpfcnvrt+3
  2403  0A8B  0861               	movf	??_vfpfcnvrt+2,w
  2404  0A8C  00A6               	movwf	tolower@c
  2405  0A8D  0862               	movf	??_vfpfcnvrt+3,w
  2406  0A8E  00A7               	movwf	tolower@c+1
  2407  0A8F  3192  22DB  318A   	fcall	_tolower
  2408  0A92  0140               	movlb	0	; select bank0
  2409  0A93  0826               	movf	?_tolower,w
  2410  0A94  00E3               	movwf	??_vfpfcnvrt+4
  2411  0A95  0863               	movf	??_vfpfcnvrt+4,w
  2412  0A96  00EB               	movwf	vfpfcnvrt@ct
  2413                           
  2414                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  2415  0A97  086B               	movf	vfpfcnvrt@ct,w
  2416  0A98  1903               	btfsc	3,2
  2417  0A99  2AD7               	goto	l4751
  2418                           
  2419                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  2420  0A9A  085D               	movf	vfpfcnvrt@fmt,w
  2421  0A9B  0086               	movwf	6
  2422  0A9C  0187               	clrf	7
  2423  0A9D  3F40               	moviw [0]fsr1
  2424  0A9E  00DF               	movwf	??_vfpfcnvrt
  2425  0A9F  3F41               	moviw [1]fsr1
  2426  0AA0  00E0               	movwf	??_vfpfcnvrt+1
  2427  0AA1  3001               	movlw	1
  2428  0AA2  075F               	addwf	??_vfpfcnvrt,w
  2429  0AA3  0084               	movwf	4
  2430  0AA4  0860               	movf	??_vfpfcnvrt+1,w
  2431  0AA5  1803               	skipnc
  2432  0AA6  0A60               	incf	??_vfpfcnvrt+1,w
  2433  0AA7  0085               	movwf	5
  2434  0AA8  0800               	movf	0,w	;code access
  2435  0AA9  00E1               	movwf	??_vfpfcnvrt+2
  2436  0AAA  01E2               	clrf	??_vfpfcnvrt+3
  2437  0AAB  0861               	movf	??_vfpfcnvrt+2,w
  2438  0AAC  00A6               	movwf	tolower@c
  2439  0AAD  0862               	movf	??_vfpfcnvrt+3,w
  2440  0AAE  00A7               	movwf	tolower@c+1
  2441  0AAF  3192  22DB  318A   	fcall	_tolower
  2442  0AB2  0140               	movlb	0	; select bank0
  2443  0AB3  0826               	movf	?_tolower,w
  2444  0AB4  00E3               	movwf	??_vfpfcnvrt+4
  2445  0AB5  0863               	movf	??_vfpfcnvrt+4,w
  2446  0AB6  00EC               	movwf	vfpfcnvrt@ct+1
  2447                           
  2448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  2449  0AB7  086C               	movf	vfpfcnvrt@ct+1,w
  2450  0AB8  1903               	btfsc	3,2
  2451  0AB9  2AD7               	goto	l4751
  2452                           
  2453                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  2454  0ABA  085D               	movf	vfpfcnvrt@fmt,w
  2455  0ABB  0086               	movwf	6
  2456  0ABC  0187               	clrf	7
  2457  0ABD  3F40               	moviw [0]fsr1
  2458  0ABE  00DF               	movwf	??_vfpfcnvrt
  2459  0ABF  3F41               	moviw [1]fsr1
  2460  0AC0  00E0               	movwf	??_vfpfcnvrt+1
  2461  0AC1  3002               	movlw	2
  2462  0AC2  075F               	addwf	??_vfpfcnvrt,w
  2463  0AC3  0084               	movwf	4
  2464  0AC4  0860               	movf	??_vfpfcnvrt+1,w
  2465  0AC5  1803               	skipnc
  2466  0AC6  0A60               	incf	??_vfpfcnvrt+1,w
  2467  0AC7  0085               	movwf	5
  2468  0AC8  0800               	movf	0,w	;code access
  2469  0AC9  00E1               	movwf	??_vfpfcnvrt+2
  2470  0ACA  01E2               	clrf	??_vfpfcnvrt+3
  2471  0ACB  0861               	movf	??_vfpfcnvrt+2,w
  2472  0ACC  00A6               	movwf	tolower@c
  2473  0ACD  0862               	movf	??_vfpfcnvrt+3,w
  2474  0ACE  00A7               	movwf	tolower@c+1
  2475  0ACF  3192  22DB  318A   	fcall	_tolower
  2476  0AD2  0140               	movlb	0	; select bank0
  2477  0AD3  0826               	movf	?_tolower,w
  2478  0AD4  00E3               	movwf	??_vfpfcnvrt+4
  2479  0AD5  0863               	movf	??_vfpfcnvrt+4,w
  2480  0AD6  00ED               	movwf	vfpfcnvrt@ct+2
  2481  0AD7                     l4751:	
  2482                           
  2483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  2484  0AD7  3066               	movlw	102
  2485  0AD8  066B               	xorwf	vfpfcnvrt@ct,w
  2486  0AD9  1D03               	btfss	3,2
  2487  0ADA  2B17               	goto	l4763
  2488                           
  2489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  2490  0ADB  085D               	movf	vfpfcnvrt@fmt,w
  2491  0ADC  0086               	movwf	6
  2492  0ADD  0187               	clrf	7
  2493  0ADE  3F40               	moviw [0]fsr1
  2494  0ADF  00DF               	movwf	??_vfpfcnvrt
  2495  0AE0  3F41               	moviw [1]fsr1
  2496  0AE1  00E0               	movwf	??_vfpfcnvrt+1
  2497  0AE2  085F               	movf	??_vfpfcnvrt,w
  2498  0AE3  0084               	movwf	4
  2499  0AE4  0860               	movf	??_vfpfcnvrt+1,w
  2500  0AE5  0085               	movwf	5
  2501  0AE6  0800               	movf	0,w	;code access
  2502  0AE7  00E1               	movwf	??_vfpfcnvrt+2
  2503  0AE8  0861               	movf	??_vfpfcnvrt+2,w
  2504  0AE9  00EE               	movwf	vfpfcnvrt@c
  2505                           
  2506                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  2507  0AEA  085D               	movf	vfpfcnvrt@fmt,w
  2508  0AEB  0086               	movwf	6
  2509  0AEC  0187               	clrf	7
  2510  0AED  3001               	movlw	1
  2511  0AEE  0781               	addwf	1,f
  2512  0AEF  3141               	addfsr 1,1
  2513  0AF0  1803               	skipnc
  2514  0AF1  0A81               	incf	1,f
  2515                           
  2516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  2517  0AF2  085E               	movf	vfpfcnvrt@ap,w
  2518  0AF3  0086               	movwf	6
  2519  0AF4  0187               	clrf	7
  2520  0AF5  0801               	movf	1,w
  2521  0AF6  0084               	movwf	4
  2522  0AF7  0185               	clrf	5
  2523  0AF8  3004               	movlw	4
  2524  0AF9  0781               	addwf	1,f
  2525  0AFA  3F00               	moviw [0]fsr0
  2526  0AFB  00E7               	movwf	vfpfcnvrt@f
  2527  0AFC  3F01               	moviw [1]fsr0
  2528  0AFD  00E8               	movwf	vfpfcnvrt@f+1
  2529  0AFE  3F02               	moviw [2]fsr0
  2530  0AFF  00E9               	movwf	vfpfcnvrt@f+2
  2531  0B00  3F03               	moviw [3]fsr0
  2532  0B01  00EA               	movwf	vfpfcnvrt@f+3
  2533                           
  2534                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  2535  0B02  086A               	movf	vfpfcnvrt@f+3,w
  2536  0B03  00D7               	movwf	efgtoa@f+3
  2537  0B04  0869               	movf	vfpfcnvrt@f+2,w
  2538  0B05  00D6               	movwf	efgtoa@f+2
  2539  0B06  0868               	movf	vfpfcnvrt@f+1,w
  2540  0B07  00D5               	movwf	efgtoa@f+1
  2541  0B08  0867               	movf	vfpfcnvrt@f,w
  2542  0B09  00D4               	movwf	efgtoa@f
  2543  0B0A  086E               	movf	vfpfcnvrt@c,w
  2544  0B0B  00DF               	movwf	??_vfpfcnvrt
  2545  0B0C  085F               	movf	??_vfpfcnvrt,w
  2546  0B0D  00D8               	movwf	efgtoa@c
  2547  0B0E  086F               	movf	vfpfcnvrt@fp,w
  2548  0B0F  3180  202D         	fcall	_efgtoa
  2549  0B11  0140               	movlb	0	; select bank0
  2550  0B12  0855               	movf	?_efgtoa+1,w
  2551  0B13  00DE               	movwf	?_vfpfcnvrt+1
  2552  0B14  0854               	movf	?_efgtoa,w
  2553  0B15  00DD               	movwf	?_vfpfcnvrt
  2554  0B16  0008               	return
  2555  0B17                     l4763:	
  2556                           
  2557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2558  0B17  3017               	movlw	low (STR_11| (0+32768))
  2559  0B18  00A0               	movwf	strncmp@_r
  2560  0B19  3098               	movlw	high (STR_11| (0+32768))
  2561  0B1A  00A1               	movwf	strncmp@_r+1
  2562  0B1B  3002               	movlw	2
  2563  0B1C  00A2               	movwf	strncmp@n
  2564  0B1D  3000               	movlw	0
  2565  0B1E  00A3               	movwf	strncmp@n+1
  2566  0B1F  306B               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  2567  0B20  3194  2420  318A   	fcall	_strncmp
  2568  0B23  0140               	movlb	0	; select bank0
  2569  0B24  0820               	movf	?_strncmp,w
  2570  0B25  0421               	iorwf	?_strncmp+1,w
  2571  0B26  1D03               	btfss	3,2
  2572  0B27  2B9D               	goto	l4781
  2573                           
  2574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2575  0B28  085D               	movf	vfpfcnvrt@fmt,w
  2576  0B29  0086               	movwf	6
  2577  0B2A  0187               	clrf	7
  2578  0B2B  3F40               	moviw [0]fsr1
  2579  0B2C  00DF               	movwf	??_vfpfcnvrt
  2580  0B2D  3F41               	moviw [1]fsr1
  2581  0B2E  00E0               	movwf	??_vfpfcnvrt+1
  2582  0B2F  3001               	movlw	1
  2583  0B30  075F               	addwf	??_vfpfcnvrt,w
  2584  0B31  0084               	movwf	4
  2585  0B32  0860               	movf	??_vfpfcnvrt+1,w
  2586  0B33  1803               	skipnc
  2587  0B34  0A60               	incf	??_vfpfcnvrt+1,w
  2588  0B35  0085               	movwf	5
  2589  0B36  0800               	movf	0,w	;code access
  2590  0B37  00E1               	movwf	??_vfpfcnvrt+2
  2591  0B38  0861               	movf	??_vfpfcnvrt+2,w
  2592  0B39  00EE               	movwf	vfpfcnvrt@c
  2593  0B3A  085D               	movf	vfpfcnvrt@fmt,w
  2594  0B3B  0086               	movwf	6
  2595  0B3C  0187               	clrf	7
  2596  0B3D  3F40               	moviw [0]fsr1
  2597  0B3E  00DF               	movwf	??_vfpfcnvrt
  2598  0B3F  3F41               	moviw [1]fsr1
  2599  0B40  00E0               	movwf	??_vfpfcnvrt+1
  2600  0B41  085F               	movf	??_vfpfcnvrt,w
  2601  0B42  0084               	movwf	4
  2602  0B43  0860               	movf	??_vfpfcnvrt+1,w
  2603  0B44  0085               	movwf	5
  2604  0B45  0800               	movf	0,w	;code access
  2605  0B46  3EBF               	addlw	191
  2606  0B47  00E1               	movwf	??_vfpfcnvrt+2
  2607  0B48  30FF               	movlw	255
  2608  0B49  1803               	skipnc
  2609  0B4A  3000               	movlw	0
  2610  0B4B  00E2               	movwf	??_vfpfcnvrt+3
  2611  0B4C  3000               	movlw	0
  2612  0B4D  0262               	subwf	??_vfpfcnvrt+3,w
  2613  0B4E  301A               	movlw	26
  2614  0B4F  1903               	skipnz
  2615  0B50  0261               	subwf	??_vfpfcnvrt+2,w
  2616  0B51  1803               	btfsc	3,0
  2617  0B52  2B55               	goto	u7910
  2618  0B53  3001               	movlw	1
  2619  0B54  2B56               	goto	u7920
  2620  0B55                     u7910:	
  2621  0B55  3000               	movlw	0
  2622  0B56                     u7920:	
  2623  0B56  00E3               	movwf	??_vfpfcnvrt+4
  2624  0B57  01E4               	clrf	??_vfpfcnvrt+5
  2625  0B58  0863               	movf	??_vfpfcnvrt+4,w
  2626  0B59  00E5               	movwf	_vfpfcnvrt$369
  2627  0B5A  0864               	movf	??_vfpfcnvrt+5,w
  2628  0B5B  00E6               	movwf	_vfpfcnvrt$369+1
  2629  0B5C  0865               	movf	_vfpfcnvrt$369,w
  2630  0B5D  0466               	iorwf	_vfpfcnvrt$369+1,w
  2631  0B5E  1903               	btfsc	3,2
  2632  0B5F  2B70               	goto	l4773
  2633                           
  2634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  2635  0B60  085E               	movf	vfpfcnvrt@ap,w
  2636  0B61  0086               	movwf	6
  2637  0B62  0187               	clrf	7
  2638  0B63  0801               	movf	1,w
  2639  0B64  0084               	movwf	4
  2640  0B65  0185               	clrf	5
  2641  0B66  3004               	movlw	4
  2642  0B67  0781               	addwf	1,f
  2643  0B68  3F00               	moviw [0]fsr0
  2644  0B69  00E7               	movwf	vfpfcnvrt@f
  2645  0B6A  3F01               	moviw [1]fsr0
  2646  0B6B  00E8               	movwf	vfpfcnvrt@f+1
  2647  0B6C  3F02               	moviw [2]fsr0
  2648  0B6D  00E9               	movwf	vfpfcnvrt@f+2
  2649  0B6E  3F03               	moviw [3]fsr0
  2650  0B6F  2B7F               	goto	L1
  2651  0B70                     l4773:	
  2652                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  2653                           
  2654                           
  2655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2656  0B70  085E               	movf	vfpfcnvrt@ap,w
  2657  0B71  0086               	movwf	6
  2658  0B72  0187               	clrf	7
  2659  0B73  0801               	movf	1,w
  2660  0B74  0084               	movwf	4
  2661  0B75  0185               	clrf	5
  2662  0B76  3004               	movlw	4
  2663  0B77  0781               	addwf	1,f
  2664  0B78  3F00               	moviw [0]fsr0
  2665  0B79  00E7               	movwf	vfpfcnvrt@f
  2666  0B7A  3F01               	moviw [1]fsr0
  2667  0B7B  00E8               	movwf	vfpfcnvrt@f+1
  2668  0B7C  3F02               	moviw [2]fsr0
  2669  0B7D  00E9               	movwf	vfpfcnvrt@f+2
  2670  0B7E  3F03               	moviw [3]fsr0
  2671  0B7F                     L1:	
  2672  0B7F  00EA               	movwf	vfpfcnvrt@f+3
  2673                           
  2674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  2675  0B80  085D               	movf	vfpfcnvrt@fmt,w
  2676  0B81  0086               	movwf	6
  2677  0B82  0187               	clrf	7
  2678  0B83  3002               	movlw	2
  2679  0B84  0781               	addwf	1,f
  2680  0B85  3141               	addfsr 1,1
  2681  0B86  1803               	skipnc
  2682  0B87  0A81               	incf	1,f
  2683                           
  2684                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 938:             return efgto
      +                          a(fp, f, c);
  2685  0B88  086A               	movf	vfpfcnvrt@f+3,w
  2686  0B89  00D7               	movwf	efgtoa@f+3
  2687  0B8A  0869               	movf	vfpfcnvrt@f+2,w
  2688  0B8B  00D6               	movwf	efgtoa@f+2
  2689  0B8C  0868               	movf	vfpfcnvrt@f+1,w
  2690  0B8D  00D5               	movwf	efgtoa@f+1
  2691  0B8E  0867               	movf	vfpfcnvrt@f,w
  2692  0B8F  00D4               	movwf	efgtoa@f
  2693  0B90  086E               	movf	vfpfcnvrt@c,w
  2694  0B91  00DF               	movwf	??_vfpfcnvrt
  2695  0B92  085F               	movf	??_vfpfcnvrt,w
  2696  0B93  00D8               	movwf	efgtoa@c
  2697  0B94  086F               	movf	vfpfcnvrt@fp,w
  2698  0B95  3180  202D         	fcall	_efgtoa
  2699  0B97  0140               	movlb	0	; select bank0
  2700  0B98  0855               	movf	?_efgtoa+1,w
  2701  0B99  00DE               	movwf	?_vfpfcnvrt+1
  2702  0B9A  0854               	movf	?_efgtoa,w
  2703  0B9B  00DD               	movwf	?_vfpfcnvrt
  2704  0B9C  0008               	return
  2705  0B9D                     l4781:	
  2706                           
  2707                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2708  0B9D  085D               	movf	vfpfcnvrt@fmt,w
  2709  0B9E  0086               	movwf	6
  2710  0B9F  0187               	clrf	7
  2711  0BA0  3F40               	moviw [0]fsr1
  2712  0BA1  00DF               	movwf	??_vfpfcnvrt
  2713  0BA2  3F41               	moviw [1]fsr1
  2714  0BA3  00E0               	movwf	??_vfpfcnvrt+1
  2715  0BA4  085F               	movf	??_vfpfcnvrt,w
  2716  0BA5  0084               	movwf	4
  2717  0BA6  0860               	movf	??_vfpfcnvrt+1,w
  2718  0BA7  0085               	movwf	5
  2719  0BA8  0012               	moviw fsr0++
  2720  0BA9  3A25               	xorlw	37
  2721  0BAA  1D03               	btfss	3,2
  2722  0BAB  2BC4               	goto	l4791
  2723                           
  2724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2725  0BAC  085D               	movf	vfpfcnvrt@fmt,w
  2726  0BAD  0086               	movwf	6
  2727  0BAE  0187               	clrf	7
  2728  0BAF  3001               	movlw	1
  2729  0BB0  0781               	addwf	1,f
  2730  0BB1  3141               	addfsr 1,1
  2731  0BB2  1803               	skipnc
  2732  0BB3  0A81               	incf	1,f
  2733                           
  2734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2735  0BB4  3025               	movlw	37
  2736  0BB5  00A1               	movwf	fputc@c
  2737  0BB6  3000               	movlw	0
  2738  0BB7  00A2               	movwf	fputc@c+1
  2739  0BB8  086F               	movf	vfpfcnvrt@fp,w
  2740  0BB9  00DF               	movwf	??_vfpfcnvrt
  2741  0BBA  085F               	movf	??_vfpfcnvrt,w
  2742  0BBB  00A3               	movwf	fputc@fp
  2743  0BBC  3193  2356         	fcall	_fputc
  2744  0BBE                     l4787:	
  2745                           
  2746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2747  0BBE  3001               	movlw	1
  2748  0BBF  0140               	movlb	0	; select bank0
  2749  0BC0  00DD               	movwf	?_vfpfcnvrt
  2750  0BC1  3000               	movlw	0
  2751  0BC2  00DE               	movwf	?_vfpfcnvrt+1
  2752  0BC3  0008               	return
  2753  0BC4                     l4791:	
  2754                           
  2755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2756  0BC4  085D               	movf	vfpfcnvrt@fmt,w
  2757  0BC5  0086               	movwf	6
  2758  0BC6  0187               	clrf	7
  2759  0BC7  3001               	movlw	1
  2760  0BC8  0781               	addwf	1,f
  2761  0BC9  3141               	addfsr 1,1
  2762  0BCA  1803               	skipnc
  2763  0BCB  0A81               	incf	1,f
  2764                           
  2765                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2766  0BCC  01DD               	clrf	?_vfpfcnvrt
  2767  0BCD  01DE               	clrf	?_vfpfcnvrt+1
  2768  0BCE  0008               	return
  2769  0BCF                     l4797:	
  2770                           
  2771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  2772  0BCF  085D               	movf	vfpfcnvrt@fmt,w
  2773  0BD0  0086               	movwf	6
  2774  0BD1  0187               	clrf	7
  2775  0BD2  3F40               	moviw [0]fsr1
  2776  0BD3  00DF               	movwf	??_vfpfcnvrt
  2777  0BD4  3F41               	moviw [1]fsr1
  2778  0BD5  00E0               	movwf	??_vfpfcnvrt+1
  2779  0BD6  085F               	movf	??_vfpfcnvrt,w
  2780  0BD7  0084               	movwf	4
  2781  0BD8  0860               	movf	??_vfpfcnvrt+1,w
  2782  0BD9  0085               	movwf	5
  2783  0BDA  0800               	movf	0,w	;code access
  2784  0BDB  00E1               	movwf	??_vfpfcnvrt+2
  2785  0BDC  01E2               	clrf	??_vfpfcnvrt+3
  2786  0BDD  0861               	movf	??_vfpfcnvrt+2,w
  2787  0BDE  00A1               	movwf	fputc@c
  2788  0BDF  0862               	movf	??_vfpfcnvrt+3,w
  2789  0BE0  00A2               	movwf	fputc@c+1
  2790  0BE1  086F               	movf	vfpfcnvrt@fp,w
  2791  0BE2  00E3               	movwf	??_vfpfcnvrt+4
  2792  0BE3  0863               	movf	??_vfpfcnvrt+4,w
  2793  0BE4  00A3               	movwf	fputc@fp
  2794  0BE5  3193  2356  318A   	fcall	_fputc
  2795                           
  2796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2797  0BE8  0140               	movlb	0	; select bank0
  2798  0BE9  085D               	movf	vfpfcnvrt@fmt,w
  2799  0BEA  0086               	movwf	6
  2800  0BEB  0187               	clrf	7
  2801  0BEC  3001               	movlw	1
  2802  0BED  0781               	addwf	1,f
  2803  0BEE  3141               	addfsr 1,1
  2804  0BEF  1803               	skipnc
  2805  0BF0  0A81               	incf	1,f
  2806  0BF1  2BBE               	goto	l4787
  2807  0BF2                     __end_of_vfpfcnvrt:	
  2808                           
  2809                           	psect	text4
  2810  1420                     __ptext4:	
  2811 ;; *************** function _strncmp *****************
  2812 ;; Defined at:
  2813 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  _l              1    wreg     PTR const unsigned char 
  2816 ;;		 -> vfpfcnvrt@ct(3), 
  2817 ;;  _r              2    0[BANK0 ] PTR const unsigned char 
  2818 ;;		 -> STR_13(3), 
  2819 ;;  n               2    2[BANK0 ] unsigned int 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  _l              1    5[BANK0 ] PTR const unsigned char 
  2822 ;;		 -> vfpfcnvrt@ct(3), 
  2823 ;;  r               2    6[BANK0 ] PTR const unsigned char 
  2824 ;;		 -> STR_13(3), 
  2825 ;;  l               1    8[BANK0 ] PTR const unsigned char 
  2826 ;;		 -> vfpfcnvrt@ct(3), 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  2    0[BANK0 ] int 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2836 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2840 ;;Total ram usage:        9 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    2
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_vfpfcnvrt
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function _strncmp
  2852  1420                     _strncmp:	
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  2856                           ;strncmp@_l stored from wreg
  2857  1420  0140               	movlb	0	; select bank0
  2858  1421  00A5               	movwf	strncmp@_l
  2859  1422  0825               	movf	strncmp@_l,w
  2860  1423  00A4               	movwf	??_strncmp
  2861  1424  0824               	movf	??_strncmp,w
  2862  1425  00A8               	movwf	strncmp@l
  2863  1426  0821               	movf	strncmp@_r+1,w
  2864  1427  00A7               	movwf	strncmp@r+1
  2865  1428  0820               	movf	strncmp@_r,w
  2866  1429  00A6               	movwf	strncmp@r
  2867  142A  3001               	movlw	1
  2868  142B  02A2               	subwf	strncmp@n,f
  2869  142C  3000               	movlw	0
  2870  142D  3BA3               	subwfb	strncmp@n+1,f
  2871  142E  0A22               	incf	strncmp@n,w
  2872  142F  1D03               	skipz
  2873  1430  2C5B               	goto	l4721
  2874  1431  0A23               	incf	strncmp@n+1,w
  2875  1432  1D03               	btfss	3,2
  2876  1433  2C5B               	goto	l4721
  2877  1434  01A0               	clrf	?_strncmp
  2878  1435  01A1               	clrf	?_strncmp+1
  2879  1436  0008               	return
  2880  1437                     l4723:	
  2881  1437  0826               	movf	strncmp@r,w
  2882  1438  0084               	movwf	4
  2883  1439  0827               	movf	strncmp@r+1,w
  2884  143A  0085               	movwf	5
  2885  143B  0012               	moviw fsr0++
  2886  143C  1903               	btfsc	3,2
  2887  143D  2C61               	goto	l4729
  2888  143E  0822               	movf	strncmp@n,w
  2889  143F  0423               	iorwf	strncmp@n+1,w
  2890  1440  1903               	btfsc	3,2
  2891  1441  2C61               	goto	l4729
  2892  1442  0826               	movf	strncmp@r,w
  2893  1443  0084               	movwf	4
  2894  1444  0827               	movf	strncmp@r+1,w
  2895  1445  0085               	movwf	5
  2896  1446  0800               	movf	0,w	;code access
  2897  1447  00A4               	movwf	??_strncmp
  2898  1448  0828               	movf	strncmp@l,w
  2899  1449  0086               	movwf	6
  2900  144A  0187               	clrf	7
  2901  144B  0801               	movf	1,w
  2902  144C  0624               	xorwf	??_strncmp,w
  2903  144D  1D03               	btfss	3,2
  2904  144E  2C61               	goto	l4729
  2905  144F  3001               	movlw	1
  2906  1450  00A4               	movwf	??_strncmp
  2907  1451  0824               	movf	??_strncmp,w
  2908  1452  07A8               	addwf	strncmp@l,f
  2909  1453  3001               	movlw	1
  2910  1454  07A6               	addwf	strncmp@r,f
  2911  1455  3000               	movlw	0
  2912  1456  3DA7               	addwfc	strncmp@r+1,f
  2913  1457  3001               	movlw	1
  2914  1458  02A2               	subwf	strncmp@n,f
  2915  1459  3000               	movlw	0
  2916  145A  3BA3               	subwfb	strncmp@n+1,f
  2917  145B                     l4721:	
  2918  145B  0828               	movf	strncmp@l,w
  2919  145C  0086               	movwf	6
  2920  145D  0187               	clrf	7
  2921  145E  0801               	movf	1,w
  2922  145F  1D03               	btfss	3,2
  2923  1460  2C37               	goto	l4723
  2924  1461                     l4729:	
  2925  1461  0828               	movf	strncmp@l,w
  2926  1462  0086               	movwf	6
  2927  1463  0187               	clrf	7
  2928  1464  0826               	movf	strncmp@r,w
  2929  1465  0084               	movwf	4
  2930  1466  0827               	movf	strncmp@r+1,w
  2931  1467  0085               	movwf	5
  2932  1468  0800               	movf	0,w	;code access
  2933  1469  0201               	subwf	1,w
  2934  146A  00A0               	movwf	?_strncmp
  2935  146B  01A1               	clrf	?_strncmp+1
  2936  146C  1C03               	skipc
  2937  146D  03A1               	decf	?_strncmp+1,f
  2938  146E  0008               	return
  2939  146F                     __end_of_strncmp:	
  2940                           
  2941                           	psect	text5
  2942  002D                     __ptext5:	
  2943 ;; *************** function _efgtoa *****************
  2944 ;; Defined at:
  2945 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  fp              1    wreg     PTR struct _IO_FILE
  2948 ;;		 -> NULL(0), 
  2949 ;;  f               4   52[BANK0 ] PTR struct _IO_FILE
  2950 ;;  c               1   56[BANK0 ] unsigned char 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  fp              1   28[BANK1 ] PTR struct _IO_FILE
  2953 ;;		 -> NULL(0), 
  2954 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  2955 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  2956 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  2957 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  2958 ;;  ou              4    0[BANK1 ] PTR struct _IO_FILE
  2959 ;;  n               2   51[BANK1 ] int 
  2960 ;;  e               2   49[BANK1 ] int 
  2961 ;;  i               2   43[BANK1 ] int 
  2962 ;;  w               2   32[BANK1 ] int 
  2963 ;;  p               2   29[BANK1 ] int 
  2964 ;;  sign            2   26[BANK1 ] int 
  2965 ;;  d               2   24[BANK1 ] int 
  2966 ;;  ne              2   22[BANK1 ] int 
  2967 ;;  m               2   20[BANK1 ] int 
  2968 ;;  pp              2   18[BANK1 ] int 
  2969 ;;  t               2   16[BANK1 ] int 
  2970 ;;  mode            1   34[BANK1 ] unsigned char 
  2971 ;;  nmode           1   31[BANK1 ] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  2   52[BANK0 ] int 
  2974 ;; Registers used:
  2975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2981 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2982 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  2983 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2984 ;;      Totals:         0       9      57       0       0       0       0       0       0       0       0       0       
      +0       0
  2985 ;;Total ram usage:       66 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    6
  2988 ;; This function calls:
  2989 ;;		___awdiv
  2990 ;;		___awmod
  2991 ;;		___fladd
  2992 ;;		___fldiv
  2993 ;;		___fleq
  2994 ;;		___flge
  2995 ;;		___flmul
  2996 ;;		___flneg
  2997 ;;		___flsub
  2998 ;;		___fltol
  2999 ;;		___fpclassifyf
  3000 ;;		_floorf
  3001 ;;		_isupper
  3002 ;;		_pad
  3003 ;;		_strcpy
  3004 ;;		_tolower
  3005 ;; This function is called by:
  3006 ;;		_vfpfcnvrt
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           
  3011                           ;psect for function _efgtoa
  3012  002D                     _efgtoa:	
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3016                           ;efgtoa@fp stored from wreg
  3017  002D  0141               	movlb	1	; select bank1
  3018  002E  00BC               	movwf	efgtoa@fp^(0+128)
  3019                           
  3020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  3021  002F  01BA               	clrf	efgtoa@sign^(0+128)
  3022  0030  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  3023                           
  3024                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  3025  0031  0140               	movlb	0	; select bank0
  3026  0032  0857               	movf	efgtoa@f+3,w
  3027  0033  0141               	movlb	1	; select bank1
  3028  0034  00D0               	movwf	(efgtoa@g+3)^(0+128)
  3029  0035  0140               	movlb	0	; select bank0
  3030  0036  0856               	movf	efgtoa@f+2,w
  3031  0037  0141               	movlb	1	; select bank1
  3032  0038  00CF               	movwf	(efgtoa@g+2)^(0+128)
  3033  0039  0140               	movlb	0	; select bank0
  3034  003A  0855               	movf	efgtoa@f+1,w
  3035  003B  0141               	movlb	1	; select bank1
  3036  003C  00CE               	movwf	(efgtoa@g+1)^(0+128)
  3037  003D  0140               	movlb	0	; select bank0
  3038  003E  0854               	movf	efgtoa@f,w
  3039  003F  0141               	movlb	1	; select bank1
  3040  0040  00CD               	movwf	efgtoa@g^(0+128)
  3041                           
  3042                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  3043  0041  0850               	movf	(efgtoa@g+3)^(0+128),w
  3044  0042  0140               	movlb	0	; select bank0
  3045  0043  00CB               	movwf	___flge@ff1+3
  3046  0044  0141               	movlb	1	; select bank1
  3047  0045  084F               	movf	(efgtoa@g+2)^(0+128),w
  3048  0046  0140               	movlb	0	; select bank0
  3049  0047  00CA               	movwf	___flge@ff1+2
  3050  0048  0141               	movlb	1	; select bank1
  3051  0049  084E               	movf	(efgtoa@g+1)^(0+128),w
  3052  004A  0140               	movlb	0	; select bank0
  3053  004B  00C9               	movwf	___flge@ff1+1
  3054  004C  0141               	movlb	1	; select bank1
  3055  004D  084D               	movf	efgtoa@g^(0+128),w
  3056  004E  0140               	movlb	0	; select bank0
  3057  004F  00C8               	movwf	___flge@ff1
  3058  0050  3000               	movlw	0
  3059  0051  00CF               	movwf	___flge@ff2+3
  3060  0052  3000               	movlw	0
  3061  0053  00CE               	movwf	___flge@ff2+2
  3062  0054  3000               	movlw	0
  3063  0055  00CD               	movwf	___flge@ff2+1
  3064  0056  3000               	movlw	0
  3065  0057  00CC               	movwf	___flge@ff2
  3066  0058  3196  2675  3180   	fcall	___flge
  3067  005B  1803               	btfsc	3,0
  3068  005C  2884               	goto	l4425
  3069                           
  3070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  3071  005D  3001               	movlw	1
  3072  005E  0141               	movlb	1	; select bank1
  3073  005F  00BA               	movwf	efgtoa@sign^(0+128)
  3074  0060  3000               	movlw	0
  3075  0061  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  3076                           
  3077                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  3078  0062  0850               	movf	(efgtoa@g+3)^(0+128),w
  3079  0063  0140               	movlb	0	; select bank0
  3080  0064  00A3               	movwf	___flneg@f1+3
  3081  0065  0141               	movlb	1	; select bank1
  3082  0066  084F               	movf	(efgtoa@g+2)^(0+128),w
  3083  0067  0140               	movlb	0	; select bank0
  3084  0068  00A2               	movwf	___flneg@f1+2
  3085  0069  0141               	movlb	1	; select bank1
  3086  006A  084E               	movf	(efgtoa@g+1)^(0+128),w
  3087  006B  0140               	movlb	0	; select bank0
  3088  006C  00A1               	movwf	___flneg@f1+1
  3089  006D  0141               	movlb	1	; select bank1
  3090  006E  084D               	movf	efgtoa@g^(0+128),w
  3091  006F  0140               	movlb	0	; select bank0
  3092  0070  00A0               	movwf	___flneg@f1
  3093  0071  3192  220D  3180   	fcall	___flneg
  3094  0074  0140               	movlb	0	; select bank0
  3095  0075  0823               	movf	?___flneg+3,w
  3096  0076  0141               	movlb	1	; select bank1
  3097  0077  00D0               	movwf	(efgtoa@g+3)^(0+128)
  3098  0078  0140               	movlb	0	; select bank0
  3099  0079  0822               	movf	?___flneg+2,w
  3100  007A  0141               	movlb	1	; select bank1
  3101  007B  00CF               	movwf	(efgtoa@g+2)^(0+128)
  3102  007C  0140               	movlb	0	; select bank0
  3103  007D  0821               	movf	?___flneg+1,w
  3104  007E  0141               	movlb	1	; select bank1
  3105  007F  00CE               	movwf	(efgtoa@g+1)^(0+128)
  3106  0080  0140               	movlb	0	; select bank0
  3107  0081  0820               	movf	?___flneg,w
  3108  0082  0141               	movlb	1	; select bank1
  3109  0083  00CD               	movwf	efgtoa@g^(0+128)
  3110  0084                     l4425:	
  3111                           
  3112                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  3113  0084  0141               	movlb	1	; select bank1
  3114  0085  01D3               	clrf	efgtoa@n^(0+128)
  3115  0086  01D4               	clrf	(efgtoa@n+1)^(0+128)
  3116                           
  3117                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  3118  0087  0142               	movlb	2	; select bank2
  3119  0088  082B               	movf	(_width+1)^(0+256),w
  3120  0089  0141               	movlb	1	; select bank1
  3121  008A  00C1               	movwf	(efgtoa@w+1)^(0+128)
  3122  008B  0142               	movlb	2	; select bank2
  3123  008C  082A               	movf	_width^(0+256),w
  3124  008D  0141               	movlb	1	; select bank1
  3125  008E  00C0               	movwf	efgtoa@w^(0+128)
  3126                           
  3127                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  3128  008F  083A               	movf	efgtoa@sign^(0+128),w
  3129  0090  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  3130  0091  1D03               	btfss	3,2
  3131  0092  2895               	goto	l4433
  3132  0093  1D77               	btfss	_flags,2
  3133  0094  28AE               	goto	l4445
  3134  0095                     l4433:	
  3135                           
  3136                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  3137  0095  083A               	movf	efgtoa@sign^(0+128),w
  3138  0096  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  3139  0097  1D03               	btfss	3,2
  3140  0098  289B               	goto	l4437
  3141  0099  302B               	movlw	43
  3142  009A  289C               	goto	L2
  3143  009B                     l4437:	
  3144  009B  302D               	movlw	45
  3145  009C                     L2:	
  3146  009C  00A4               	movwf	_efgtoa$340^(0+128)
  3147  009D  3000               	movlw	0
  3148  009E  00A5               	movwf	(_efgtoa$340^(0+128)+1)
  3149  009F  0824               	movf	_efgtoa$340^(0+128),w
  3150  00A0  0140               	movlb	0	; select bank0
  3151  00A1  00D9               	movwf	??_efgtoa
  3152  00A2  0859               	movf	??_efgtoa,w
  3153  00A3  0143               	movlb	3	; select bank3
  3154  00A4  00A0               	movwf	_dbuf^(0+384)
  3155                           
  3156                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  3157  00A5  3001               	movlw	1
  3158  00A6  0141               	movlb	1	; select bank1
  3159  00A7  07D3               	addwf	efgtoa@n^(0+128),f
  3160  00A8  3000               	movlw	0
  3161  00A9  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  3162                           
  3163                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  3164  00AA  30FF               	movlw	255
  3165  00AB  07C0               	addwf	efgtoa@w^(0+128),f
  3166  00AC  30FF               	movlw	255
  3167  00AD  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  3168  00AE                     l4445:	
  3169                           
  3170                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3171  00AE  0850               	movf	(efgtoa@g+3)^(0+128),w
  3172  00AF  0140               	movlb	0	; select bank0
  3173  00B0  00A3               	movwf	___fpclassifyf@x+3
  3174  00B1  0141               	movlb	1	; select bank1
  3175  00B2  084F               	movf	(efgtoa@g+2)^(0+128),w
  3176  00B3  0140               	movlb	0	; select bank0
  3177  00B4  00A2               	movwf	___fpclassifyf@x+2
  3178  00B5  0141               	movlb	1	; select bank1
  3179  00B6  084E               	movf	(efgtoa@g+1)^(0+128),w
  3180  00B7  0140               	movlb	0	; select bank0
  3181  00B8  00A1               	movwf	___fpclassifyf@x+1
  3182  00B9  0141               	movlb	1	; select bank1
  3183  00BA  084D               	movf	efgtoa@g^(0+128),w
  3184  00BB  0140               	movlb	0	; select bank0
  3185  00BC  00A0               	movwf	___fpclassifyf@x
  3186  00BD  3195  2582  3180   	fcall	___fpclassifyf
  3187  00C0  0140               	movlb	0	; select bank0
  3188  00C1  0320               	decf	?___fpclassifyf,w
  3189  00C2  0421               	iorwf	?___fpclassifyf+1,w
  3190  00C3  1D03               	btfss	3,2
  3191  00C4  290F               	goto	l4463
  3192  00C5  0858               	movf	efgtoa@c,w
  3193  00C6  3EBF               	addlw	191
  3194  00C7  00D9               	movwf	??_efgtoa
  3195  00C8  30FF               	movlw	255
  3196  00C9  1803               	skipnc
  3197  00CA  3000               	movlw	0
  3198  00CB  00DA               	movwf	??_efgtoa+1
  3199  00CC  3000               	movlw	0
  3200  00CD  025A               	subwf	??_efgtoa+1,w
  3201  00CE  301A               	movlw	26
  3202  00CF  1903               	skipnz
  3203  00D0  0259               	subwf	??_efgtoa,w
  3204  00D1  1803               	btfsc	3,0
  3205  00D2  28D5               	goto	u7340
  3206  00D3  3001               	movlw	1
  3207  00D4  28D6               	goto	u7350
  3208  00D5                     u7340:	
  3209  00D5  3000               	movlw	0
  3210  00D6                     u7350:	
  3211  00D6  00DB               	movwf	??_efgtoa+2
  3212  00D7  01DC               	clrf	??_efgtoa+3
  3213  00D8  085B               	movf	??_efgtoa+2,w
  3214  00D9  0141               	movlb	1	; select bank1
  3215  00DA  00A6               	movwf	_efgtoa$341^(0+128)
  3216  00DB  0140               	movlb	0	; select bank0
  3217  00DC  085C               	movf	??_efgtoa+3,w
  3218  00DD  0141               	movlb	1	; select bank1
  3219  00DE  00A7               	movwf	(_efgtoa$341+1)^(0+128)
  3220  00DF  0826               	movf	_efgtoa$341^(0+128),w
  3221  00E0  0427               	iorwf	(_efgtoa$341+1)^(0+128),w
  3222  00E1  1903               	btfsc	3,2
  3223  00E2  28E8               	goto	l4455
  3224                           
  3225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  3226  00E3  3007               	movlw	low (STR_3| (0+32768))
  3227  00E4  0140               	movlb	0	; select bank0
  3228  00E5  00A0               	movwf	strcpy@src
  3229  00E6  3098               	movlw	high (STR_3| (0+32768))
  3230  00E7  28EC               	goto	L3
  3231  00E8                     l4455:	
  3232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  3233                           
  3234                           
  3235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  3236  00E8  300F               	movlw	low (STR_4| (0+32768))
  3237  00E9  0140               	movlb	0	; select bank0
  3238  00EA  00A0               	movwf	strcpy@src
  3239  00EB  3098               	movlw	high (STR_4| (0+32768))
  3240  00EC                     L3:	
  3241  00EC  00A1               	movwf	strcpy@src+1
  3242  00ED  0141               	movlb	1	; select bank1
  3243  00EE  0853               	movf	efgtoa@n^(0+128),w
  3244  00EF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3245  00F0  3192  22BB  3180   	fcall	_strcpy
  3246                           
  3247                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  3248  00F3  30FD               	movlw	253
  3249  00F4  0141               	movlb	1	; select bank1
  3250  00F5  07C0               	addwf	efgtoa@w^(0+128),f
  3251  00F6  30FF               	movlw	255
  3252  00F7  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  3253                           
  3254                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  3255  00F8  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3256  00F9  0140               	movlb	0	; select bank0
  3257  00FA  00D9               	movwf	??_efgtoa
  3258  00FB  0859               	movf	??_efgtoa,w
  3259  00FC  00B1               	movwf	pad@buf
  3260  00FD  0141               	movlb	1	; select bank1
  3261  00FE  0841               	movf	(efgtoa@w+1)^(0+128),w
  3262  00FF  0140               	movlb	0	; select bank0
  3263  0100  00B3               	movwf	pad@p+1
  3264  0101  0141               	movlb	1	; select bank1
  3265  0102  0840               	movf	efgtoa@w^(0+128),w
  3266  0103  0140               	movlb	0	; select bank0
  3267  0104  00B2               	movwf	pad@p
  3268  0105  0141               	movlb	1	; select bank1
  3269  0106  083C               	movf	efgtoa@fp^(0+128),w
  3270  0107  3193  23D3         	fcall	_pad
  3271  0109  0140               	movlb	0	; select bank0
  3272  010A  0832               	movf	?_pad+1,w
  3273  010B  00D5               	movwf	?_efgtoa+1
  3274  010C  0831               	movf	?_pad,w
  3275  010D  00D4               	movwf	?_efgtoa
  3276  010E  0008               	return
  3277  010F                     l4463:	
  3278                           
  3279                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3280  010F  0141               	movlb	1	; select bank1
  3281  0110  0850               	movf	(efgtoa@g+3)^(0+128),w
  3282  0111  0140               	movlb	0	; select bank0
  3283  0112  00A3               	movwf	___fpclassifyf@x+3
  3284  0113  0141               	movlb	1	; select bank1
  3285  0114  084F               	movf	(efgtoa@g+2)^(0+128),w
  3286  0115  0140               	movlb	0	; select bank0
  3287  0116  00A2               	movwf	___fpclassifyf@x+2
  3288  0117  0141               	movlb	1	; select bank1
  3289  0118  084E               	movf	(efgtoa@g+1)^(0+128),w
  3290  0119  0140               	movlb	0	; select bank0
  3291  011A  00A1               	movwf	___fpclassifyf@x+1
  3292  011B  0141               	movlb	1	; select bank1
  3293  011C  084D               	movf	efgtoa@g^(0+128),w
  3294  011D  0140               	movlb	0	; select bank0
  3295  011E  00A0               	movwf	___fpclassifyf@x
  3296  011F  3195  2582  3180   	fcall	___fpclassifyf
  3297  0122  0140               	movlb	0	; select bank0
  3298  0123  0820               	movf	?___fpclassifyf,w
  3299  0124  0421               	iorwf	?___fpclassifyf+1,w
  3300  0125  1D03               	btfss	3,2
  3301  0126  2971               	goto	l4481
  3302  0127  0858               	movf	efgtoa@c,w
  3303  0128  3EBF               	addlw	191
  3304  0129  00D9               	movwf	??_efgtoa
  3305  012A  30FF               	movlw	255
  3306  012B  1803               	skipnc
  3307  012C  3000               	movlw	0
  3308  012D  00DA               	movwf	??_efgtoa+1
  3309  012E  3000               	movlw	0
  3310  012F  025A               	subwf	??_efgtoa+1,w
  3311  0130  301A               	movlw	26
  3312  0131  1903               	skipnz
  3313  0132  0259               	subwf	??_efgtoa,w
  3314  0133  1803               	btfsc	3,0
  3315  0134  2937               	goto	u7380
  3316  0135  3001               	movlw	1
  3317  0136  2938               	goto	u7390
  3318  0137                     u7380:	
  3319  0137  3000               	movlw	0
  3320  0138                     u7390:	
  3321  0138  00DB               	movwf	??_efgtoa+2
  3322  0139  01DC               	clrf	??_efgtoa+3
  3323  013A  085B               	movf	??_efgtoa+2,w
  3324  013B  0141               	movlb	1	; select bank1
  3325  013C  00A8               	movwf	_efgtoa$346^(0+128)
  3326  013D  0140               	movlb	0	; select bank0
  3327  013E  085C               	movf	??_efgtoa+3,w
  3328  013F  0141               	movlb	1	; select bank1
  3329  0140  00A9               	movwf	(_efgtoa$346+1)^(0+128)
  3330  0141  0828               	movf	_efgtoa$346^(0+128),w
  3331  0142  0429               	iorwf	(_efgtoa$346+1)^(0+128),w
  3332  0143  1903               	btfsc	3,2
  3333  0144  294A               	goto	l4473
  3334                           
  3335                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  3336  0145  300B               	movlw	low (STR_7| (0+32768))
  3337  0146  0140               	movlb	0	; select bank0
  3338  0147  00A0               	movwf	strcpy@src
  3339  0148  3098               	movlw	high (STR_7| (0+32768))
  3340  0149  294E               	goto	L4
  3341  014A                     l4473:	
  3342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  3343                           
  3344                           
  3345                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  3346  014A  3013               	movlw	low (STR_8| (0+32768))
  3347  014B  0140               	movlb	0	; select bank0
  3348  014C  00A0               	movwf	strcpy@src
  3349  014D  3098               	movlw	high (STR_8| (0+32768))
  3350  014E                     L4:	
  3351  014E  00A1               	movwf	strcpy@src+1
  3352  014F  0141               	movlb	1	; select bank1
  3353  0150  0853               	movf	efgtoa@n^(0+128),w
  3354  0151  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3355  0152  3192  22BB  3180   	fcall	_strcpy
  3356                           
  3357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 358:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  3358  0155  30FD               	movlw	253
  3359  0156  0141               	movlb	1	; select bank1
  3360  0157  07C0               	addwf	efgtoa@w^(0+128),f
  3361  0158  30FF               	movlw	255
  3362  0159  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  3363                           
  3364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 359:         return pad(fp, &
      +                          dbuf[0], w);
  3365  015A  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3366  015B  0140               	movlb	0	; select bank0
  3367  015C  00D9               	movwf	??_efgtoa
  3368  015D  0859               	movf	??_efgtoa,w
  3369  015E  00B1               	movwf	pad@buf
  3370  015F  0141               	movlb	1	; select bank1
  3371  0160  0841               	movf	(efgtoa@w+1)^(0+128),w
  3372  0161  0140               	movlb	0	; select bank0
  3373  0162  00B3               	movwf	pad@p+1
  3374  0163  0141               	movlb	1	; select bank1
  3375  0164  0840               	movf	efgtoa@w^(0+128),w
  3376  0165  0140               	movlb	0	; select bank0
  3377  0166  00B2               	movwf	pad@p
  3378  0167  0141               	movlb	1	; select bank1
  3379  0168  083C               	movf	efgtoa@fp^(0+128),w
  3380  0169  3193  23D3         	fcall	_pad
  3381  016B  0140               	movlb	0	; select bank0
  3382  016C  0832               	movf	?_pad+1,w
  3383  016D  00D5               	movwf	?_efgtoa+1
  3384  016E  0831               	movf	?_pad,w
  3385  016F  00D4               	movwf	?_efgtoa
  3386  0170  0008               	return
  3387  0171                     l4481:	
  3388                           
  3389                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  3390  0171  303F               	movlw	63
  3391  0172  0141               	movlb	1	; select bank1
  3392  0173  00D8               	movwf	(efgtoa@u+3)^(0+128)
  3393  0174  3080               	movlw	128
  3394  0175  00D7               	movwf	(efgtoa@u+2)^(0+128)
  3395  0176  3000               	movlw	0
  3396  0177  00D6               	movwf	(efgtoa@u+1)^(0+128)
  3397  0178  3000               	movlw	0
  3398  0179  00D5               	movwf	efgtoa@u^(0+128)
  3399                           
  3400                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  3401  017A  01D1               	clrf	efgtoa@e^(0+128)
  3402  017B  01D2               	clrf	(efgtoa@e+1)^(0+128)
  3403                           
  3404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  3405  017C  0850               	movf	(efgtoa@g+3)^(0+128),w
  3406  017D  0140               	movlb	0	; select bank0
  3407  017E  00A3               	movwf	___fleq@ff1+3
  3408  017F  0141               	movlb	1	; select bank1
  3409  0180  084F               	movf	(efgtoa@g+2)^(0+128),w
  3410  0181  0140               	movlb	0	; select bank0
  3411  0182  00A2               	movwf	___fleq@ff1+2
  3412  0183  0141               	movlb	1	; select bank1
  3413  0184  084E               	movf	(efgtoa@g+1)^(0+128),w
  3414  0185  0140               	movlb	0	; select bank0
  3415  0186  00A1               	movwf	___fleq@ff1+1
  3416  0187  0141               	movlb	1	; select bank1
  3417  0188  084D               	movf	efgtoa@g^(0+128),w
  3418  0189  0140               	movlb	0	; select bank0
  3419  018A  00A0               	movwf	___fleq@ff1
  3420  018B  3000               	movlw	0
  3421  018C  00A7               	movwf	___fleq@ff2+3
  3422  018D  3000               	movlw	0
  3423  018E  00A6               	movwf	___fleq@ff2+2
  3424  018F  3000               	movlw	0
  3425  0190  00A5               	movwf	___fleq@ff2+1
  3426  0191  3000               	movlw	0
  3427  0192  00A4               	movwf	___fleq@ff2
  3428  0193  3188  2001  3180   	fcall	___fleq
  3429  0196  1C03               	btfss	3,0
  3430  0197  29C9               	goto	l4493
  3431  0198  2A58               	goto	l4501
  3432  0199                     l4489:	
  3433                           
  3434                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  3435  0199  3041               	movlw	65
  3436  019A  0140               	movlb	0	; select bank0
  3437  019B  00B1               	movwf	___flmul@b+3
  3438  019C  3020               	movlw	32
  3439  019D  00B0               	movwf	___flmul@b+2
  3440  019E  3000               	movlw	0
  3441  019F  00AF               	movwf	___flmul@b+1
  3442  01A0  3000               	movlw	0
  3443  01A1  00AE               	movwf	___flmul@b
  3444  01A2  0141               	movlb	1	; select bank1
  3445  01A3  0858               	movf	(efgtoa@u+3)^(0+128),w
  3446  01A4  0140               	movlb	0	; select bank0
  3447  01A5  00B5               	movwf	___flmul@a+3
  3448  01A6  0141               	movlb	1	; select bank1
  3449  01A7  0857               	movf	(efgtoa@u+2)^(0+128),w
  3450  01A8  0140               	movlb	0	; select bank0
  3451  01A9  00B4               	movwf	___flmul@a+2
  3452  01AA  0141               	movlb	1	; select bank1
  3453  01AB  0856               	movf	(efgtoa@u+1)^(0+128),w
  3454  01AC  0140               	movlb	0	; select bank0
  3455  01AD  00B3               	movwf	___flmul@a+1
  3456  01AE  0141               	movlb	1	; select bank1
  3457  01AF  0855               	movf	efgtoa@u^(0+128),w
  3458  01B0  0140               	movlb	0	; select bank0
  3459  01B1  00B2               	movwf	___flmul@a
  3460  01B2  318D  25D4  3180   	fcall	___flmul
  3461  01B5  0140               	movlb	0	; select bank0
  3462  01B6  0831               	movf	?___flmul+3,w
  3463  01B7  0141               	movlb	1	; select bank1
  3464  01B8  00D8               	movwf	(efgtoa@u+3)^(0+128)
  3465  01B9  0140               	movlb	0	; select bank0
  3466  01BA  0830               	movf	?___flmul+2,w
  3467  01BB  0141               	movlb	1	; select bank1
  3468  01BC  00D7               	movwf	(efgtoa@u+2)^(0+128)
  3469  01BD  0140               	movlb	0	; select bank0
  3470  01BE  082F               	movf	?___flmul+1,w
  3471  01BF  0141               	movlb	1	; select bank1
  3472  01C0  00D6               	movwf	(efgtoa@u+1)^(0+128)
  3473  01C1  0140               	movlb	0	; select bank0
  3474  01C2  082E               	movf	?___flmul,w
  3475  01C3  0141               	movlb	1	; select bank1
  3476  01C4  00D5               	movwf	efgtoa@u^(0+128)
  3477                           
  3478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  3479  01C5  3001               	movlw	1
  3480  01C6  07D1               	addwf	efgtoa@e^(0+128),f
  3481  01C7  3000               	movlw	0
  3482  01C8  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  3483  01C9                     l4493:	
  3484                           
  3485                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  3486  01C9  0141               	movlb	1	; select bank1
  3487  01CA  0850               	movf	(efgtoa@g+3)^(0+128),w
  3488  01CB  0140               	movlb	0	; select bank0
  3489  01CC  00CB               	movwf	___flge@ff1+3
  3490  01CD  0141               	movlb	1	; select bank1
  3491  01CE  084F               	movf	(efgtoa@g+2)^(0+128),w
  3492  01CF  0140               	movlb	0	; select bank0
  3493  01D0  00CA               	movwf	___flge@ff1+2
  3494  01D1  0141               	movlb	1	; select bank1
  3495  01D2  084E               	movf	(efgtoa@g+1)^(0+128),w
  3496  01D3  0140               	movlb	0	; select bank0
  3497  01D4  00C9               	movwf	___flge@ff1+1
  3498  01D5  0141               	movlb	1	; select bank1
  3499  01D6  084D               	movf	efgtoa@g^(0+128),w
  3500  01D7  0140               	movlb	0	; select bank0
  3501  01D8  00C8               	movwf	___flge@ff1
  3502  01D9  3041               	movlw	65
  3503  01DA  00B1               	movwf	___flmul@b+3
  3504  01DB  3020               	movlw	32
  3505  01DC  00B0               	movwf	___flmul@b+2
  3506  01DD  3000               	movlw	0
  3507  01DE  00AF               	movwf	___flmul@b+1
  3508  01DF  3000               	movlw	0
  3509  01E0  00AE               	movwf	___flmul@b
  3510  01E1  0141               	movlb	1	; select bank1
  3511  01E2  0858               	movf	(efgtoa@u+3)^(0+128),w
  3512  01E3  0140               	movlb	0	; select bank0
  3513  01E4  00B5               	movwf	___flmul@a+3
  3514  01E5  0141               	movlb	1	; select bank1
  3515  01E6  0857               	movf	(efgtoa@u+2)^(0+128),w
  3516  01E7  0140               	movlb	0	; select bank0
  3517  01E8  00B4               	movwf	___flmul@a+2
  3518  01E9  0141               	movlb	1	; select bank1
  3519  01EA  0856               	movf	(efgtoa@u+1)^(0+128),w
  3520  01EB  0140               	movlb	0	; select bank0
  3521  01EC  00B3               	movwf	___flmul@a+1
  3522  01ED  0141               	movlb	1	; select bank1
  3523  01EE  0855               	movf	efgtoa@u^(0+128),w
  3524  01EF  0140               	movlb	0	; select bank0
  3525  01F0  00B2               	movwf	___flmul@a
  3526  01F1  318D  25D4  3180   	fcall	___flmul
  3527  01F4  0140               	movlb	0	; select bank0
  3528  01F5  0831               	movf	?___flmul+3,w
  3529  01F6  00CF               	movwf	___flge@ff2+3
  3530  01F7  0830               	movf	?___flmul+2,w
  3531  01F8  00CE               	movwf	___flge@ff2+2
  3532  01F9  082F               	movf	?___flmul+1,w
  3533  01FA  00CD               	movwf	___flge@ff2+1
  3534  01FB  082E               	movf	?___flmul,w
  3535  01FC  00CC               	movwf	___flge@ff2
  3536  01FD  3196  2675  3180   	fcall	___flge
  3537  0200  1C03               	btfss	3,0
  3538  0201  2A33               	goto	l4499
  3539  0202  2999               	goto	l4489
  3540  0203                     l4495:	
  3541                           
  3542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  3543  0203  3041               	movlw	65
  3544  0204  0140               	movlb	0	; select bank0
  3545  0205  00A3               	movwf	___fldiv@a+3
  3546  0206  3020               	movlw	32
  3547  0207  00A2               	movwf	___fldiv@a+2
  3548  0208  3000               	movlw	0
  3549  0209  00A1               	movwf	___fldiv@a+1
  3550  020A  3000               	movlw	0
  3551  020B  00A0               	movwf	___fldiv@a
  3552  020C  0141               	movlb	1	; select bank1
  3553  020D  0858               	movf	(efgtoa@u+3)^(0+128),w
  3554  020E  0140               	movlb	0	; select bank0
  3555  020F  00A7               	movwf	___fldiv@b+3
  3556  0210  0141               	movlb	1	; select bank1
  3557  0211  0857               	movf	(efgtoa@u+2)^(0+128),w
  3558  0212  0140               	movlb	0	; select bank0
  3559  0213  00A6               	movwf	___fldiv@b+2
  3560  0214  0141               	movlb	1	; select bank1
  3561  0215  0856               	movf	(efgtoa@u+1)^(0+128),w
  3562  0216  0140               	movlb	0	; select bank0
  3563  0217  00A5               	movwf	___fldiv@b+1
  3564  0218  0141               	movlb	1	; select bank1
  3565  0219  0855               	movf	efgtoa@u^(0+128),w
  3566  021A  0140               	movlb	0	; select bank0
  3567  021B  00A4               	movwf	___fldiv@b
  3568  021C  3188  20E0  3180   	fcall	___fldiv
  3569  021F  0140               	movlb	0	; select bank0
  3570  0220  0823               	movf	?___fldiv+3,w
  3571  0221  0141               	movlb	1	; select bank1
  3572  0222  00D8               	movwf	(efgtoa@u+3)^(0+128)
  3573  0223  0140               	movlb	0	; select bank0
  3574  0224  0822               	movf	?___fldiv+2,w
  3575  0225  0141               	movlb	1	; select bank1
  3576  0226  00D7               	movwf	(efgtoa@u+2)^(0+128)
  3577  0227  0140               	movlb	0	; select bank0
  3578  0228  0821               	movf	?___fldiv+1,w
  3579  0229  0141               	movlb	1	; select bank1
  3580  022A  00D6               	movwf	(efgtoa@u+1)^(0+128)
  3581  022B  0140               	movlb	0	; select bank0
  3582  022C  0820               	movf	?___fldiv,w
  3583  022D  0141               	movlb	1	; select bank1
  3584  022E  00D5               	movwf	efgtoa@u^(0+128)
  3585                           
  3586                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  3587  022F  30FF               	movlw	255
  3588  0230  07D1               	addwf	efgtoa@e^(0+128),f
  3589  0231  30FF               	movlw	255
  3590  0232  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  3591  0233                     l4499:	
  3592                           
  3593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  3594  0233  0141               	movlb	1	; select bank1
  3595  0234  0850               	movf	(efgtoa@g+3)^(0+128),w
  3596  0235  0140               	movlb	0	; select bank0
  3597  0236  00CB               	movwf	___flge@ff1+3
  3598  0237  0141               	movlb	1	; select bank1
  3599  0238  084F               	movf	(efgtoa@g+2)^(0+128),w
  3600  0239  0140               	movlb	0	; select bank0
  3601  023A  00CA               	movwf	___flge@ff1+2
  3602  023B  0141               	movlb	1	; select bank1
  3603  023C  084E               	movf	(efgtoa@g+1)^(0+128),w
  3604  023D  0140               	movlb	0	; select bank0
  3605  023E  00C9               	movwf	___flge@ff1+1
  3606  023F  0141               	movlb	1	; select bank1
  3607  0240  084D               	movf	efgtoa@g^(0+128),w
  3608  0241  0140               	movlb	0	; select bank0
  3609  0242  00C8               	movwf	___flge@ff1
  3610  0243  0141               	movlb	1	; select bank1
  3611  0244  0858               	movf	(efgtoa@u+3)^(0+128),w
  3612  0245  0140               	movlb	0	; select bank0
  3613  0246  00CF               	movwf	___flge@ff2+3
  3614  0247  0141               	movlb	1	; select bank1
  3615  0248  0857               	movf	(efgtoa@u+2)^(0+128),w
  3616  0249  0140               	movlb	0	; select bank0
  3617  024A  00CE               	movwf	___flge@ff2+2
  3618  024B  0141               	movlb	1	; select bank1
  3619  024C  0856               	movf	(efgtoa@u+1)^(0+128),w
  3620  024D  0140               	movlb	0	; select bank0
  3621  024E  00CD               	movwf	___flge@ff2+1
  3622  024F  0141               	movlb	1	; select bank1
  3623  0250  0855               	movf	efgtoa@u^(0+128),w
  3624  0251  0140               	movlb	0	; select bank0
  3625  0252  00CC               	movwf	___flge@ff2
  3626  0253  3196  2675  3180   	fcall	___flge
  3627  0256  1C03               	btfss	3,0
  3628  0257  2A03               	goto	l4495
  3629  0258                     l4501:	
  3630                           
  3631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  3632  0258  0140               	movlb	0	; select bank0
  3633  0259  0858               	movf	efgtoa@c,w
  3634  025A  00D9               	movwf	??_efgtoa
  3635  025B  01DA               	clrf	??_efgtoa+1
  3636  025C  0859               	movf	??_efgtoa,w
  3637  025D  00A6               	movwf	tolower@c
  3638  025E  085A               	movf	??_efgtoa+1,w
  3639  025F  00A7               	movwf	tolower@c+1
  3640  0260  3192  22DB  3180   	fcall	_tolower
  3641  0263  0140               	movlb	0	; select bank0
  3642  0264  0826               	movf	?_tolower,w
  3643  0265  00DB               	movwf	??_efgtoa+2
  3644  0266  085B               	movf	??_efgtoa+2,w
  3645  0267  0141               	movlb	1	; select bank1
  3646  0268  00C2               	movwf	efgtoa@mode^(0+128)
  3647                           
  3648                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  3649  0269  0842               	movf	efgtoa@mode^(0+128),w
  3650  026A  0140               	movlb	0	; select bank0
  3651  026B  00D9               	movwf	??_efgtoa
  3652  026C  0859               	movf	??_efgtoa,w
  3653  026D  0141               	movlb	1	; select bank1
  3654  026E  00BF               	movwf	efgtoa@nmode^(0+128)
  3655                           
  3656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  3657  026F  3067               	movlw	103
  3658  0270  0642               	xorwf	efgtoa@mode^(0+128),w
  3659  0271  1D03               	btfss	3,2
  3660  0272  2A8D               	goto	l253
  3661                           
  3662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  3663  0273  0875               	movf	_prec,w
  3664  0274  0476               	iorwf	_prec+1,w
  3665  0275  1D03               	btfss	3,2
  3666  0276  2A7B               	goto	l254
  3667                           
  3668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  3669  0277  3001               	movlw	1
  3670  0278  00F5               	movwf	_prec
  3671  0279  3000               	movlw	0
  3672  027A  00F6               	movwf	_prec+1
  3673  027B                     l254:	
  3674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 382:   }
  3675                           
  3676                           
  3677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  3678  027B  0876               	movf	_prec+1,w
  3679  027C  3A80               	xorlw	128
  3680  027D  0140               	movlb	0	; select bank0
  3681  027E  00D9               	movwf	??_efgtoa
  3682  027F  3080               	movlw	128
  3683  0280  0259               	subwf	??_efgtoa,w
  3684  0281  1D03               	skipz
  3685  0282  2A85               	goto	u7465
  3686  0283  3001               	movlw	1
  3687  0284  0275               	subwf	_prec,w
  3688  0285                     u7465:	
  3689  0285  1803               	skipnc
  3690  0286  2A8F               	goto	l4513
  3691  0287                     l4511:	
  3692  0287  3006               	movlw	6
  3693  0288  0141               	movlb	1	; select bank1
  3694  0289  00BD               	movwf	efgtoa@p^(0+128)
  3695  028A  3000               	movlw	0
  3696  028B  00BE               	movwf	(efgtoa@p^(0+128)+1)
  3697  028C  2A94               	goto	l4519
  3698  028D                     l253:	
  3699                           
  3700                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  3701  028D  1BF6               	btfsc	_prec+1,7
  3702  028E  2A87               	goto	l4511
  3703  028F                     l4513:	
  3704  028F  0876               	movf	_prec+1,w
  3705  0290  0141               	movlb	1	; select bank1
  3706  0291  00BE               	movwf	(efgtoa@p+1)^(0+128)
  3707  0292  0875               	movf	_prec,w
  3708  0293  00BD               	movwf	efgtoa@p^(0+128)
  3709  0294                     l4519:	
  3710                           
  3711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  3712  0294  3067               	movlw	103
  3713  0295  0642               	xorwf	efgtoa@mode^(0+128),w
  3714  0296  1D03               	btfss	3,2
  3715  0297  2AC7               	goto	l264
  3716                           
  3717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  3718  0298  0852               	movf	(efgtoa@e+1)^(0+128),w
  3719  0299  3A80               	xorlw	128
  3720  029A  0140               	movlb	0	; select bank0
  3721  029B  00D9               	movwf	??_efgtoa
  3722  029C  307F               	movlw	127
  3723  029D  0259               	subwf	??_efgtoa,w
  3724  029E  1D03               	skipz
  3725  029F  2AA3               	goto	u7495
  3726  02A0  30FC               	movlw	252
  3727  02A1  0141               	movlb	1	; select bank1
  3728  02A2  0251               	subwf	efgtoa@e^(0+128),w
  3729  02A3                     u7495:	
  3730  02A3  1C03               	skipc
  3731  02A4  2AC1               	goto	l4527
  3732  02A5  0141               	movlb	1	; select bank1
  3733  02A6  083D               	movf	efgtoa@p^(0+128),w
  3734  02A7  3EFF               	addlw	255
  3735  02A8  0140               	movlb	0	; select bank0
  3736  02A9  00D9               	movwf	??_efgtoa
  3737  02AA  30FF               	movlw	255
  3738  02AB  0141               	movlb	1	; select bank1
  3739  02AC  3D3E               	addwfc	(efgtoa@p+1)^(0+128),w
  3740  02AD  0140               	movlb	0	; select bank0
  3741  02AE  00DA               	movwf	??_efgtoa+1
  3742  02AF  085A               	movf	??_efgtoa+1,w
  3743  02B0  3A80               	xorlw	128
  3744  02B1  00DB               	movwf	??_efgtoa+2
  3745  02B2  0141               	movlb	1	; select bank1
  3746  02B3  0852               	movf	(efgtoa@e+1)^(0+128),w
  3747  02B4  3A80               	xorlw	128
  3748  02B5  0140               	movlb	0	; select bank0
  3749  02B6  025B               	subwf	??_efgtoa+2,w
  3750  02B7  1D03               	skipz
  3751  02B8  2ABD               	goto	u7505
  3752  02B9  0141               	movlb	1	; select bank1
  3753  02BA  0851               	movf	efgtoa@e^(0+128),w
  3754  02BB  0140               	movlb	0	; select bank0
  3755  02BC  0259               	subwf	??_efgtoa,w
  3756  02BD                     u7505:	
  3757  02BD  1C03               	skipc
  3758  02BE  2AC1               	goto	l4527
  3759                           
  3760                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  3761  02BF  3066               	movlw	102
  3762  02C0  2AC2               	goto	L5
  3763  02C1                     l4527:	
  3764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 392:         } else {
  3765                           
  3766                           
  3767                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  3768  02C1  3065               	movlw	101
  3769  02C2                     L5:	
  3770  02C2  0140               	movlb	0	; select bank0
  3771  02C3  00D9               	movwf	??_efgtoa
  3772  02C4  0859               	movf	??_efgtoa,w
  3773  02C5  0141               	movlb	1	; select bank1
  3774  02C6  00BF               	movwf	efgtoa@nmode^(0+128)
  3775  02C7                     l264:	
  3776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 395:     }
  3777                           
  3778                           
  3779                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  3780  02C7  083E               	movf	(efgtoa@p+1)^(0+128),w
  3781  02C8  00B5               	movwf	(efgtoa@m+1)^(0+128)
  3782  02C9  083D               	movf	efgtoa@p^(0+128),w
  3783  02CA  00B4               	movwf	efgtoa@m^(0+128)
  3784                           
  3785                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  3786  02CB  3067               	movlw	103
  3787  02CC  0642               	xorwf	efgtoa@mode^(0+128),w
  3788  02CD  1D03               	btfss	3,2
  3789  02CE  2AD4               	goto	l4535
  3790  02CF  3066               	movlw	102
  3791  02D0  063F               	xorwf	efgtoa@nmode^(0+128),w
  3792  02D1  1903               	btfsc	3,2
  3793  02D2  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  3794  02D3  2AD8               	goto	l4537
  3795  02D4                     l4535:	
  3796                           
  3797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  3798  02D4  3001               	movlw	1
  3799  02D5  07B4               	addwf	efgtoa@m^(0+128),f
  3800  02D6  3000               	movlw	0
  3801  02D7  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  3802  02D8                     l4537:	
  3803                           
  3804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  3805  02D8  3066               	movlw	102
  3806  02D9  063F               	xorwf	efgtoa@nmode^(0+128),w
  3807  02DA  1D03               	btfss	3,2
  3808  02DB  2AF0               	goto	l4549
  3809                           
  3810                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  3811  02DC  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  3812  02DD  2AE8               	goto	l4545
  3813                           
  3814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  3815  02DE  303F               	movlw	63
  3816  02DF  00D8               	movwf	(efgtoa@u+3)^(0+128)
  3817  02E0  3080               	movlw	128
  3818  02E1  00D7               	movwf	(efgtoa@u+2)^(0+128)
  3819  02E2  3000               	movlw	0
  3820  02E3  00D6               	movwf	(efgtoa@u+1)^(0+128)
  3821  02E4  3000               	movlw	0
  3822  02E5  00D5               	movwf	efgtoa@u^(0+128)
  3823                           
  3824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  3825  02E6  01D1               	clrf	efgtoa@e^(0+128)
  3826  02E7  01D2               	clrf	(efgtoa@e+1)^(0+128)
  3827  02E8                     l4545:	
  3828                           
  3829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  3830  02E8  3067               	movlw	103
  3831  02E9  0642               	xorwf	efgtoa@mode^(0+128),w
  3832  02EA  1903               	btfsc	3,2
  3833  02EB  2AF0               	goto	l4549
  3834                           
  3835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  3836  02EC  0851               	movf	efgtoa@e^(0+128),w
  3837  02ED  07B4               	addwf	efgtoa@m^(0+128),f
  3838  02EE  0852               	movf	(efgtoa@e+1)^(0+128),w
  3839  02EF  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  3840  02F0                     l4549:	
  3841                           
  3842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  3843  02F0  01CB               	clrf	efgtoa@i^(0+128)
  3844  02F1  01CC               	clrf	(efgtoa@i+1)^(0+128)
  3845                           
  3846                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  3847  02F2  0850               	movf	(efgtoa@g+3)^(0+128),w
  3848  02F3  00C6               	movwf	(efgtoa@h+3)^(0+128)
  3849  02F4  084F               	movf	(efgtoa@g+2)^(0+128),w
  3850  02F5  00C5               	movwf	(efgtoa@h+2)^(0+128)
  3851  02F6  084E               	movf	(efgtoa@g+1)^(0+128),w
  3852  02F7  00C4               	movwf	(efgtoa@h+1)^(0+128)
  3853  02F8  084D               	movf	efgtoa@g^(0+128),w
  3854  02F9  00C3               	movwf	efgtoa@h^(0+128)
  3855                           
  3856                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  3857  02FA  0858               	movf	(efgtoa@u+3)^(0+128),w
  3858  02FB  00A3               	movwf	(efgtoa@ou+3)^(0+128)
  3859  02FC  0857               	movf	(efgtoa@u+2)^(0+128),w
  3860  02FD  00A2               	movwf	(efgtoa@ou+2)^(0+128)
  3861  02FE  0856               	movf	(efgtoa@u+1)^(0+128),w
  3862  02FF  00A1               	movwf	(efgtoa@ou+1)^(0+128)
  3863  0300  0855               	movf	efgtoa@u^(0+128),w
  3864  0301  00A0               	movwf	efgtoa@ou^(0+128)
  3865  0302                     l4559:	
  3866                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3867                           
  3868                           
  3869                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3870  0302  084C               	movf	(efgtoa@i+1)^(0+128),w
  3871  0303  3A80               	xorlw	128
  3872  0304  0140               	movlb	0	; select bank0
  3873  0305  00D9               	movwf	??_efgtoa
  3874  0306  0141               	movlb	1	; select bank1
  3875  0307  0835               	movf	(efgtoa@m+1)^(0+128),w
  3876  0308  3A80               	xorlw	128
  3877  0309  0140               	movlb	0	; select bank0
  3878  030A  0259               	subwf	??_efgtoa,w
  3879  030B  1D03               	skipz
  3880  030C  2B10               	goto	u7575
  3881  030D  0141               	movlb	1	; select bank1
  3882  030E  0834               	movf	efgtoa@m^(0+128),w
  3883  030F  024B               	subwf	efgtoa@i^(0+128),w
  3884  0310                     u7575:	
  3885  0310  1803               	btfsc	3,0
  3886  0311  2BEA               	goto	l4561
  3887                           
  3888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  3889  0312  0141               	movlb	1	; select bank1
  3890  0313  0858               	movf	(efgtoa@u+3)^(0+128),w
  3891  0314  0140               	movlb	0	; select bank0
  3892  0315  00A3               	movwf	___fldiv@a+3
  3893  0316  0141               	movlb	1	; select bank1
  3894  0317  0857               	movf	(efgtoa@u+2)^(0+128),w
  3895  0318  0140               	movlb	0	; select bank0
  3896  0319  00A2               	movwf	___fldiv@a+2
  3897  031A  0141               	movlb	1	; select bank1
  3898  031B  0856               	movf	(efgtoa@u+1)^(0+128),w
  3899  031C  0140               	movlb	0	; select bank0
  3900  031D  00A1               	movwf	___fldiv@a+1
  3901  031E  0141               	movlb	1	; select bank1
  3902  031F  0855               	movf	efgtoa@u^(0+128),w
  3903  0320  0140               	movlb	0	; select bank0
  3904  0321  00A0               	movwf	___fldiv@a
  3905  0322  0141               	movlb	1	; select bank1
  3906  0323  0846               	movf	(efgtoa@h+3)^(0+128),w
  3907  0324  0140               	movlb	0	; select bank0
  3908  0325  00A7               	movwf	___fldiv@b+3
  3909  0326  0141               	movlb	1	; select bank1
  3910  0327  0845               	movf	(efgtoa@h+2)^(0+128),w
  3911  0328  0140               	movlb	0	; select bank0
  3912  0329  00A6               	movwf	___fldiv@b+2
  3913  032A  0141               	movlb	1	; select bank1
  3914  032B  0844               	movf	(efgtoa@h+1)^(0+128),w
  3915  032C  0140               	movlb	0	; select bank0
  3916  032D  00A5               	movwf	___fldiv@b+1
  3917  032E  0141               	movlb	1	; select bank1
  3918  032F  0843               	movf	efgtoa@h^(0+128),w
  3919  0330  0140               	movlb	0	; select bank0
  3920  0331  00A4               	movwf	___fldiv@b
  3921  0332  3188  20E0  3180   	fcall	___fldiv
  3922  0335  0140               	movlb	0	; select bank0
  3923  0336  0823               	movf	?___fldiv+3,w
  3924  0337  00BD               	movwf	floorf@x+3
  3925  0338  0822               	movf	?___fldiv+2,w
  3926  0339  00BC               	movwf	floorf@x+2
  3927  033A  0821               	movf	?___fldiv+1,w
  3928  033B  00BB               	movwf	floorf@x+1
  3929  033C  0820               	movf	?___fldiv,w
  3930  033D  00BA               	movwf	floorf@x
  3931  033E  3187  2721  3180   	fcall	_floorf
  3932  0341  0140               	movlb	0	; select bank0
  3933  0342  083D               	movf	?_floorf+3,w
  3934  0343  0141               	movlb	1	; select bank1
  3935  0344  00CA               	movwf	(efgtoa@l+3)^(0+128)
  3936  0345  0140               	movlb	0	; select bank0
  3937  0346  083C               	movf	?_floorf+2,w
  3938  0347  0141               	movlb	1	; select bank1
  3939  0348  00C9               	movwf	(efgtoa@l+2)^(0+128)
  3940  0349  0140               	movlb	0	; select bank0
  3941  034A  083B               	movf	?_floorf+1,w
  3942  034B  0141               	movlb	1	; select bank1
  3943  034C  00C8               	movwf	(efgtoa@l+1)^(0+128)
  3944  034D  0140               	movlb	0	; select bank0
  3945  034E  083A               	movf	?_floorf,w
  3946  034F  0141               	movlb	1	; select bank1
  3947  0350  00C7               	movwf	efgtoa@l^(0+128)
  3948                           
  3949                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  3950  0351  084A               	movf	(efgtoa@l+3)^(0+128),w
  3951  0352  0140               	movlb	0	; select bank0
  3952  0353  00A3               	movwf	___fltol@f1+3
  3953  0354  0141               	movlb	1	; select bank1
  3954  0355  0849               	movf	(efgtoa@l+2)^(0+128),w
  3955  0356  0140               	movlb	0	; select bank0
  3956  0357  00A2               	movwf	___fltol@f1+2
  3957  0358  0141               	movlb	1	; select bank1
  3958  0359  0848               	movf	(efgtoa@l+1)^(0+128),w
  3959  035A  0140               	movlb	0	; select bank0
  3960  035B  00A1               	movwf	___fltol@f1+1
  3961  035C  0141               	movlb	1	; select bank1
  3962  035D  0847               	movf	efgtoa@l^(0+128),w
  3963  035E  0140               	movlb	0	; select bank0
  3964  035F  00A0               	movwf	___fltol@f1
  3965  0360  3195  251C  3180   	fcall	___fltol
  3966  0363  0140               	movlb	0	; select bank0
  3967  0364  0821               	movf	?___fltol+1,w
  3968  0365  0141               	movlb	1	; select bank1
  3969  0366  00B9               	movwf	(efgtoa@d+1)^(0+128)
  3970  0367  0140               	movlb	0	; select bank0
  3971  0368  0820               	movf	?___fltol,w
  3972  0369  0141               	movlb	1	; select bank1
  3973  036A  00B8               	movwf	efgtoa@d^(0+128)
  3974                           
  3975                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  3976  036B  084A               	movf	(efgtoa@l+3)^(0+128),w
  3977  036C  0140               	movlb	0	; select bank0
  3978  036D  00B5               	movwf	___flmul@a+3
  3979  036E  0141               	movlb	1	; select bank1
  3980  036F  0849               	movf	(efgtoa@l+2)^(0+128),w
  3981  0370  0140               	movlb	0	; select bank0
  3982  0371  00B4               	movwf	___flmul@a+2
  3983  0372  0141               	movlb	1	; select bank1
  3984  0373  0848               	movf	(efgtoa@l+1)^(0+128),w
  3985  0374  0140               	movlb	0	; select bank0
  3986  0375  00B3               	movwf	___flmul@a+1
  3987  0376  0141               	movlb	1	; select bank1
  3988  0377  0847               	movf	efgtoa@l^(0+128),w
  3989  0378  0140               	movlb	0	; select bank0
  3990  0379  00B2               	movwf	___flmul@a
  3991  037A  0141               	movlb	1	; select bank1
  3992  037B  0858               	movf	(efgtoa@u+3)^(0+128),w
  3993  037C  0140               	movlb	0	; select bank0
  3994  037D  00B1               	movwf	___flmul@b+3
  3995  037E  0141               	movlb	1	; select bank1
  3996  037F  0857               	movf	(efgtoa@u+2)^(0+128),w
  3997  0380  0140               	movlb	0	; select bank0
  3998  0381  00B0               	movwf	___flmul@b+2
  3999  0382  0141               	movlb	1	; select bank1
  4000  0383  0856               	movf	(efgtoa@u+1)^(0+128),w
  4001  0384  0140               	movlb	0	; select bank0
  4002  0385  00AF               	movwf	___flmul@b+1
  4003  0386  0141               	movlb	1	; select bank1
  4004  0387  0855               	movf	efgtoa@u^(0+128),w
  4005  0388  0140               	movlb	0	; select bank0
  4006  0389  00AE               	movwf	___flmul@b
  4007  038A  318D  25D4  3180   	fcall	___flmul
  4008  038D  0140               	movlb	0	; select bank0
  4009  038E  0831               	movf	?___flmul+3,w
  4010  038F  00CB               	movwf	___flsub@a+3
  4011  0390  0830               	movf	?___flmul+2,w
  4012  0391  00CA               	movwf	___flsub@a+2
  4013  0392  082F               	movf	?___flmul+1,w
  4014  0393  00C9               	movwf	___flsub@a+1
  4015  0394  082E               	movf	?___flmul,w
  4016  0395  00C8               	movwf	___flsub@a
  4017  0396  0141               	movlb	1	; select bank1
  4018  0397  0846               	movf	(efgtoa@h+3)^(0+128),w
  4019  0398  0140               	movlb	0	; select bank0
  4020  0399  00CF               	movwf	___flsub@b+3
  4021  039A  0141               	movlb	1	; select bank1
  4022  039B  0845               	movf	(efgtoa@h+2)^(0+128),w
  4023  039C  0140               	movlb	0	; select bank0
  4024  039D  00CE               	movwf	___flsub@b+2
  4025  039E  0141               	movlb	1	; select bank1
  4026  039F  0844               	movf	(efgtoa@h+1)^(0+128),w
  4027  03A0  0140               	movlb	0	; select bank0
  4028  03A1  00CD               	movwf	___flsub@b+1
  4029  03A2  0141               	movlb	1	; select bank1
  4030  03A3  0843               	movf	efgtoa@h^(0+128),w
  4031  03A4  0140               	movlb	0	; select bank0
  4032  03A5  00CC               	movwf	___flsub@b
  4033  03A6  3192  227C  3180   	fcall	___flsub
  4034  03A9  0140               	movlb	0	; select bank0
  4035  03AA  084B               	movf	?___flsub+3,w
  4036  03AB  0141               	movlb	1	; select bank1
  4037  03AC  00C6               	movwf	(efgtoa@h+3)^(0+128)
  4038  03AD  0140               	movlb	0	; select bank0
  4039  03AE  084A               	movf	?___flsub+2,w
  4040  03AF  0141               	movlb	1	; select bank1
  4041  03B0  00C5               	movwf	(efgtoa@h+2)^(0+128)
  4042  03B1  0140               	movlb	0	; select bank0
  4043  03B2  0849               	movf	?___flsub+1,w
  4044  03B3  0141               	movlb	1	; select bank1
  4045  03B4  00C4               	movwf	(efgtoa@h+1)^(0+128)
  4046  03B5  0140               	movlb	0	; select bank0
  4047  03B6  0848               	movf	?___flsub,w
  4048  03B7  0141               	movlb	1	; select bank1
  4049  03B8  00C3               	movwf	efgtoa@h^(0+128)
  4050                           
  4051                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  4052  03B9  3041               	movlw	65
  4053  03BA  0140               	movlb	0	; select bank0
  4054  03BB  00A3               	movwf	___fldiv@a+3
  4055  03BC  3020               	movlw	32
  4056  03BD  00A2               	movwf	___fldiv@a+2
  4057  03BE  3000               	movlw	0
  4058  03BF  00A1               	movwf	___fldiv@a+1
  4059  03C0  3000               	movlw	0
  4060  03C1  00A0               	movwf	___fldiv@a
  4061  03C2  0141               	movlb	1	; select bank1
  4062  03C3  0858               	movf	(efgtoa@u+3)^(0+128),w
  4063  03C4  0140               	movlb	0	; select bank0
  4064  03C5  00A7               	movwf	___fldiv@b+3
  4065  03C6  0141               	movlb	1	; select bank1
  4066  03C7  0857               	movf	(efgtoa@u+2)^(0+128),w
  4067  03C8  0140               	movlb	0	; select bank0
  4068  03C9  00A6               	movwf	___fldiv@b+2
  4069  03CA  0141               	movlb	1	; select bank1
  4070  03CB  0856               	movf	(efgtoa@u+1)^(0+128),w
  4071  03CC  0140               	movlb	0	; select bank0
  4072  03CD  00A5               	movwf	___fldiv@b+1
  4073  03CE  0141               	movlb	1	; select bank1
  4074  03CF  0855               	movf	efgtoa@u^(0+128),w
  4075  03D0  0140               	movlb	0	; select bank0
  4076  03D1  00A4               	movwf	___fldiv@b
  4077  03D2  3188  20E0  3180   	fcall	___fldiv
  4078  03D5  0140               	movlb	0	; select bank0
  4079  03D6  0823               	movf	?___fldiv+3,w
  4080  03D7  0141               	movlb	1	; select bank1
  4081  03D8  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4082  03D9  0140               	movlb	0	; select bank0
  4083  03DA  0822               	movf	?___fldiv+2,w
  4084  03DB  0141               	movlb	1	; select bank1
  4085  03DC  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4086  03DD  0140               	movlb	0	; select bank0
  4087  03DE  0821               	movf	?___fldiv+1,w
  4088  03DF  0141               	movlb	1	; select bank1
  4089  03E0  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4090  03E1  0140               	movlb	0	; select bank0
  4091  03E2  0820               	movf	?___fldiv,w
  4092  03E3  0141               	movlb	1	; select bank1
  4093  03E4  00D5               	movwf	efgtoa@u^(0+128)
  4094                           
  4095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  4096  03E5  3001               	movlw	1
  4097  03E6  07CB               	addwf	efgtoa@i^(0+128),f
  4098  03E7  3000               	movlw	0
  4099  03E8  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  4100  03E9  2B02               	goto	l4559
  4101  03EA                     l4561:	
  4102                           
  4103                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  4104  03EA  3040               	movlw	64
  4105  03EB  0140               	movlb	0	; select bank0
  4106  03EC  00B1               	movwf	___flmul@b+3
  4107  03ED  30A0               	movlw	160
  4108  03EE  00B0               	movwf	___flmul@b+2
  4109  03EF  3000               	movlw	0
  4110  03F0  00AF               	movwf	___flmul@b+1
  4111  03F1  3000               	movlw	0
  4112  03F2  00AE               	movwf	___flmul@b
  4113  03F3  0141               	movlb	1	; select bank1
  4114  03F4  0858               	movf	(efgtoa@u+3)^(0+128),w
  4115  03F5  0140               	movlb	0	; select bank0
  4116  03F6  00B5               	movwf	___flmul@a+3
  4117  03F7  0141               	movlb	1	; select bank1
  4118  03F8  0857               	movf	(efgtoa@u+2)^(0+128),w
  4119  03F9  0140               	movlb	0	; select bank0
  4120  03FA  00B4               	movwf	___flmul@a+2
  4121  03FB  0141               	movlb	1	; select bank1
  4122  03FC  0856               	movf	(efgtoa@u+1)^(0+128),w
  4123  03FD  0140               	movlb	0	; select bank0
  4124  03FE  00B3               	movwf	___flmul@a+1
  4125  03FF  0141               	movlb	1	; select bank1
  4126  0400  0855               	movf	efgtoa@u^(0+128),w
  4127  0401  0140               	movlb	0	; select bank0
  4128  0402  00B2               	movwf	___flmul@a
  4129  0403  318D  25D4  3180   	fcall	___flmul
  4130  0406  0140               	movlb	0	; select bank0
  4131  0407  0831               	movf	?___flmul+3,w
  4132  0408  0141               	movlb	1	; select bank1
  4133  0409  00CA               	movwf	(efgtoa@l+3)^(0+128)
  4134  040A  0140               	movlb	0	; select bank0
  4135  040B  0830               	movf	?___flmul+2,w
  4136  040C  0141               	movlb	1	; select bank1
  4137  040D  00C9               	movwf	(efgtoa@l+2)^(0+128)
  4138  040E  0140               	movlb	0	; select bank0
  4139  040F  082F               	movf	?___flmul+1,w
  4140  0410  0141               	movlb	1	; select bank1
  4141  0411  00C8               	movwf	(efgtoa@l+1)^(0+128)
  4142  0412  0140               	movlb	0	; select bank0
  4143  0413  082E               	movf	?___flmul,w
  4144  0414  0141               	movlb	1	; select bank1
  4145  0415  00C7               	movwf	efgtoa@l^(0+128)
  4146                           
  4147                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  4148  0416  0846               	movf	(efgtoa@h+3)^(0+128),w
  4149  0417  0140               	movlb	0	; select bank0
  4150  0418  00CB               	movwf	___flge@ff1+3
  4151  0419  0141               	movlb	1	; select bank1
  4152  041A  0845               	movf	(efgtoa@h+2)^(0+128),w
  4153  041B  0140               	movlb	0	; select bank0
  4154  041C  00CA               	movwf	___flge@ff1+2
  4155  041D  0141               	movlb	1	; select bank1
  4156  041E  0844               	movf	(efgtoa@h+1)^(0+128),w
  4157  041F  0140               	movlb	0	; select bank0
  4158  0420  00C9               	movwf	___flge@ff1+1
  4159  0421  0141               	movlb	1	; select bank1
  4160  0422  0843               	movf	efgtoa@h^(0+128),w
  4161  0423  0140               	movlb	0	; select bank0
  4162  0424  00C8               	movwf	___flge@ff1
  4163  0425  0141               	movlb	1	; select bank1
  4164  0426  084A               	movf	(efgtoa@l+3)^(0+128),w
  4165  0427  0140               	movlb	0	; select bank0
  4166  0428  00CF               	movwf	___flge@ff2+3
  4167  0429  0141               	movlb	1	; select bank1
  4168  042A  0849               	movf	(efgtoa@l+2)^(0+128),w
  4169  042B  0140               	movlb	0	; select bank0
  4170  042C  00CE               	movwf	___flge@ff2+2
  4171  042D  0141               	movlb	1	; select bank1
  4172  042E  0848               	movf	(efgtoa@l+1)^(0+128),w
  4173  042F  0140               	movlb	0	; select bank0
  4174  0430  00CD               	movwf	___flge@ff2+1
  4175  0431  0141               	movlb	1	; select bank1
  4176  0432  0847               	movf	efgtoa@l^(0+128),w
  4177  0433  0140               	movlb	0	; select bank0
  4178  0434  00CC               	movwf	___flge@ff2
  4179  0435  3196  2675  3180   	fcall	___flge
  4180  0438  1803               	btfsc	3,0
  4181  0439  2C3D               	goto	l4565
  4182                           
  4183                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  4184  043A  3000               	movlw	0
  4185  043B  0141               	movlb	1	; select bank1
  4186  043C  2C66               	goto	L6
  4187  043D                     l4565:	
  4188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 430:     } else {
  4189                           
  4190                           
  4191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  4192  043D  0141               	movlb	1	; select bank1
  4193  043E  0846               	movf	(efgtoa@h+3)^(0+128),w
  4194  043F  0140               	movlb	0	; select bank0
  4195  0440  00A3               	movwf	___fleq@ff1+3
  4196  0441  0141               	movlb	1	; select bank1
  4197  0442  0845               	movf	(efgtoa@h+2)^(0+128),w
  4198  0443  0140               	movlb	0	; select bank0
  4199  0444  00A2               	movwf	___fleq@ff1+2
  4200  0445  0141               	movlb	1	; select bank1
  4201  0446  0844               	movf	(efgtoa@h+1)^(0+128),w
  4202  0447  0140               	movlb	0	; select bank0
  4203  0448  00A1               	movwf	___fleq@ff1+1
  4204  0449  0141               	movlb	1	; select bank1
  4205  044A  0843               	movf	efgtoa@h^(0+128),w
  4206  044B  0140               	movlb	0	; select bank0
  4207  044C  00A0               	movwf	___fleq@ff1
  4208  044D  0141               	movlb	1	; select bank1
  4209  044E  084A               	movf	(efgtoa@l+3)^(0+128),w
  4210  044F  0140               	movlb	0	; select bank0
  4211  0450  00A7               	movwf	___fleq@ff2+3
  4212  0451  0141               	movlb	1	; select bank1
  4213  0452  0849               	movf	(efgtoa@l+2)^(0+128),w
  4214  0453  0140               	movlb	0	; select bank0
  4215  0454  00A6               	movwf	___fleq@ff2+2
  4216  0455  0141               	movlb	1	; select bank1
  4217  0456  0848               	movf	(efgtoa@l+1)^(0+128),w
  4218  0457  0140               	movlb	0	; select bank0
  4219  0458  00A5               	movwf	___fleq@ff2+1
  4220  0459  0141               	movlb	1	; select bank1
  4221  045A  0847               	movf	efgtoa@l^(0+128),w
  4222  045B  0140               	movlb	0	; select bank0
  4223  045C  00A4               	movwf	___fleq@ff2
  4224  045D  3188  2001  3180   	fcall	___fleq
  4225  0460  1C03               	btfss	3,0
  4226  0461  2C6D               	goto	l4571
  4227  0462  0141               	movlb	1	; select bank1
  4228  0463  1838               	btfsc	efgtoa@d^(0+128),0
  4229  0464  2C6D               	goto	l4571
  4230                           
  4231                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  4232  0465  3000               	movlw	0
  4233  0466                     L6:	
  4234  0466  00CA               	movwf	(efgtoa@l+3)^(0+128)
  4235  0467  3000               	movlw	0
  4236  0468  00C9               	movwf	(efgtoa@l+2)^(0+128)
  4237  0469  3000               	movlw	0
  4238  046A  00C8               	movwf	(efgtoa@l+1)^(0+128)
  4239  046B  3000               	movlw	0
  4240  046C  00C7               	movwf	efgtoa@l^(0+128)
  4241  046D                     l4571:	
  4242                           
  4243                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  4244  046D  0141               	movlb	1	; select bank1
  4245  046E  084A               	movf	(efgtoa@l+3)^(0+128),w
  4246  046F  0140               	movlb	0	; select bank0
  4247  0470  00A3               	movwf	___fladd@b+3
  4248  0471  0141               	movlb	1	; select bank1
  4249  0472  0849               	movf	(efgtoa@l+2)^(0+128),w
  4250  0473  0140               	movlb	0	; select bank0
  4251  0474  00A2               	movwf	___fladd@b+2
  4252  0475  0141               	movlb	1	; select bank1
  4253  0476  0848               	movf	(efgtoa@l+1)^(0+128),w
  4254  0477  0140               	movlb	0	; select bank0
  4255  0478  00A1               	movwf	___fladd@b+1
  4256  0479  0141               	movlb	1	; select bank1
  4257  047A  0847               	movf	efgtoa@l^(0+128),w
  4258  047B  0140               	movlb	0	; select bank0
  4259  047C  00A0               	movwf	___fladd@b
  4260  047D  0141               	movlb	1	; select bank1
  4261  047E  0850               	movf	(efgtoa@g+3)^(0+128),w
  4262  047F  0140               	movlb	0	; select bank0
  4263  0480  00A7               	movwf	___fladd@a+3
  4264  0481  0141               	movlb	1	; select bank1
  4265  0482  084F               	movf	(efgtoa@g+2)^(0+128),w
  4266  0483  0140               	movlb	0	; select bank0
  4267  0484  00A6               	movwf	___fladd@a+2
  4268  0485  0141               	movlb	1	; select bank1
  4269  0486  084E               	movf	(efgtoa@g+1)^(0+128),w
  4270  0487  0140               	movlb	0	; select bank0
  4271  0488  00A5               	movwf	___fladd@a+1
  4272  0489  0141               	movlb	1	; select bank1
  4273  048A  084D               	movf	efgtoa@g^(0+128),w
  4274  048B  0140               	movlb	0	; select bank0
  4275  048C  00A4               	movwf	___fladd@a
  4276  048D  318B  23F2  3180   	fcall	___fladd
  4277  0490  0140               	movlb	0	; select bank0
  4278  0491  0823               	movf	?___fladd+3,w
  4279  0492  0141               	movlb	1	; select bank1
  4280  0493  00C6               	movwf	(efgtoa@h+3)^(0+128)
  4281  0494  0140               	movlb	0	; select bank0
  4282  0495  0822               	movf	?___fladd+2,w
  4283  0496  0141               	movlb	1	; select bank1
  4284  0497  00C5               	movwf	(efgtoa@h+2)^(0+128)
  4285  0498  0140               	movlb	0	; select bank0
  4286  0499  0821               	movf	?___fladd+1,w
  4287  049A  0141               	movlb	1	; select bank1
  4288  049B  00C4               	movwf	(efgtoa@h+1)^(0+128)
  4289  049C  0140               	movlb	0	; select bank0
  4290  049D  0820               	movf	?___fladd,w
  4291  049E  0141               	movlb	1	; select bank1
  4292  049F  00C3               	movwf	efgtoa@h^(0+128)
  4293                           
  4294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  4295  04A0  0823               	movf	(efgtoa@ou+3)^(0+128),w
  4296  04A1  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4297  04A2  0822               	movf	(efgtoa@ou+2)^(0+128),w
  4298  04A3  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4299  04A4  0821               	movf	(efgtoa@ou+1)^(0+128),w
  4300  04A5  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4301  04A6  0820               	movf	efgtoa@ou^(0+128),w
  4302  04A7  00D5               	movwf	efgtoa@u^(0+128)
  4303                           
  4304                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  4305  04A8  3065               	movlw	101
  4306  04A9  063F               	xorwf	efgtoa@nmode^(0+128),w
  4307  04AA  1903               	btfsc	3,2
  4308  04AB  2CB1               	goto	l4579
  4309  04AC  0852               	movf	(efgtoa@e+1)^(0+128),w
  4310  04AD  00B7               	movwf	(efgtoa@ne+1)^(0+128)
  4311  04AE  0851               	movf	efgtoa@e^(0+128),w
  4312  04AF  00B6               	movwf	efgtoa@ne^(0+128)
  4313  04B0  2CB3               	goto	l282
  4314  04B1                     l4579:	
  4315  04B1  01B6               	clrf	efgtoa@ne^(0+128)
  4316  04B2  01B7               	clrf	(efgtoa@ne+1)^(0+128)
  4317  04B3                     l282:	
  4318                           
  4319                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  4320  04B3  01B2               	clrf	efgtoa@pp^(0+128)
  4321  04B4  01B3               	clrf	(efgtoa@pp+1)^(0+128)
  4322                           
  4323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  4324  04B5  01B0               	clrf	efgtoa@t^(0+128)
  4325  04B6  01B1               	clrf	(efgtoa@t+1)^(0+128)
  4326                           
  4327                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  4328  04B7  01CB               	clrf	efgtoa@i^(0+128)
  4329  04B8  01CC               	clrf	(efgtoa@i+1)^(0+128)
  4330                           
  4331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  4332  04B9  2DF7               	goto	l4629
  4333  04BA                     l4581:	
  4334                           
  4335                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  4336  04BA  0141               	movlb	1	; select bank1
  4337  04BB  0858               	movf	(efgtoa@u+3)^(0+128),w
  4338  04BC  0140               	movlb	0	; select bank0
  4339  04BD  00A3               	movwf	___fldiv@a+3
  4340  04BE  0141               	movlb	1	; select bank1
  4341  04BF  0857               	movf	(efgtoa@u+2)^(0+128),w
  4342  04C0  0140               	movlb	0	; select bank0
  4343  04C1  00A2               	movwf	___fldiv@a+2
  4344  04C2  0141               	movlb	1	; select bank1
  4345  04C3  0856               	movf	(efgtoa@u+1)^(0+128),w
  4346  04C4  0140               	movlb	0	; select bank0
  4347  04C5  00A1               	movwf	___fldiv@a+1
  4348  04C6  0141               	movlb	1	; select bank1
  4349  04C7  0855               	movf	efgtoa@u^(0+128),w
  4350  04C8  0140               	movlb	0	; select bank0
  4351  04C9  00A0               	movwf	___fldiv@a
  4352  04CA  0141               	movlb	1	; select bank1
  4353  04CB  0846               	movf	(efgtoa@h+3)^(0+128),w
  4354  04CC  0140               	movlb	0	; select bank0
  4355  04CD  00A7               	movwf	___fldiv@b+3
  4356  04CE  0141               	movlb	1	; select bank1
  4357  04CF  0845               	movf	(efgtoa@h+2)^(0+128),w
  4358  04D0  0140               	movlb	0	; select bank0
  4359  04D1  00A6               	movwf	___fldiv@b+2
  4360  04D2  0141               	movlb	1	; select bank1
  4361  04D3  0844               	movf	(efgtoa@h+1)^(0+128),w
  4362  04D4  0140               	movlb	0	; select bank0
  4363  04D5  00A5               	movwf	___fldiv@b+1
  4364  04D6  0141               	movlb	1	; select bank1
  4365  04D7  0843               	movf	efgtoa@h^(0+128),w
  4366  04D8  0140               	movlb	0	; select bank0
  4367  04D9  00A4               	movwf	___fldiv@b
  4368  04DA  3188  20E0  3180   	fcall	___fldiv
  4369  04DD  0140               	movlb	0	; select bank0
  4370  04DE  0823               	movf	?___fldiv+3,w
  4371  04DF  00BD               	movwf	floorf@x+3
  4372  04E0  0822               	movf	?___fldiv+2,w
  4373  04E1  00BC               	movwf	floorf@x+2
  4374  04E2  0821               	movf	?___fldiv+1,w
  4375  04E3  00BB               	movwf	floorf@x+1
  4376  04E4  0820               	movf	?___fldiv,w
  4377  04E5  00BA               	movwf	floorf@x
  4378  04E6  3187  2721  3180   	fcall	_floorf
  4379  04E9  0140               	movlb	0	; select bank0
  4380  04EA  083D               	movf	?_floorf+3,w
  4381  04EB  0141               	movlb	1	; select bank1
  4382  04EC  00CA               	movwf	(efgtoa@l+3)^(0+128)
  4383  04ED  0140               	movlb	0	; select bank0
  4384  04EE  083C               	movf	?_floorf+2,w
  4385  04EF  0141               	movlb	1	; select bank1
  4386  04F0  00C9               	movwf	(efgtoa@l+2)^(0+128)
  4387  04F1  0140               	movlb	0	; select bank0
  4388  04F2  083B               	movf	?_floorf+1,w
  4389  04F3  0141               	movlb	1	; select bank1
  4390  04F4  00C8               	movwf	(efgtoa@l+1)^(0+128)
  4391  04F5  0140               	movlb	0	; select bank0
  4392  04F6  083A               	movf	?_floorf,w
  4393  04F7  0141               	movlb	1	; select bank1
  4394  04F8  00C7               	movwf	efgtoa@l^(0+128)
  4395                           
  4396                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  4397  04F9  084A               	movf	(efgtoa@l+3)^(0+128),w
  4398  04FA  0140               	movlb	0	; select bank0
  4399  04FB  00A3               	movwf	___fltol@f1+3
  4400  04FC  0141               	movlb	1	; select bank1
  4401  04FD  0849               	movf	(efgtoa@l+2)^(0+128),w
  4402  04FE  0140               	movlb	0	; select bank0
  4403  04FF  00A2               	movwf	___fltol@f1+2
  4404  0500  0141               	movlb	1	; select bank1
  4405  0501  0848               	movf	(efgtoa@l+1)^(0+128),w
  4406  0502  0140               	movlb	0	; select bank0
  4407  0503  00A1               	movwf	___fltol@f1+1
  4408  0504  0141               	movlb	1	; select bank1
  4409  0505  0847               	movf	efgtoa@l^(0+128),w
  4410  0506  0140               	movlb	0	; select bank0
  4411  0507  00A0               	movwf	___fltol@f1
  4412  0508  3195  251C  3180   	fcall	___fltol
  4413  050B  0140               	movlb	0	; select bank0
  4414  050C  0821               	movf	?___fltol+1,w
  4415  050D  0141               	movlb	1	; select bank1
  4416  050E  00B9               	movwf	(efgtoa@d+1)^(0+128)
  4417  050F  0140               	movlb	0	; select bank0
  4418  0510  0820               	movf	?___fltol,w
  4419  0511  0141               	movlb	1	; select bank1
  4420  0512  00B8               	movwf	efgtoa@d^(0+128)
  4421                           
  4422                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4423  0513  1A77               	btfsc	_flags,4
  4424  0514  2D23               	goto	l4593
  4425  0515  0838               	movf	efgtoa@d^(0+128),w
  4426  0516  0439               	iorwf	(efgtoa@d+1)^(0+128),w
  4427  0517  1D03               	btfss	3,2
  4428  0518  2D23               	goto	l4593
  4429  0519  3067               	movlw	103
  4430  051A  0642               	xorwf	efgtoa@mode^(0+128),w
  4431  051B  1903               	btfsc	3,2
  4432  051C  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  4433  051D  2D23               	goto	l4593
  4434                           
  4435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  4436  051E  3001               	movlw	1
  4437  051F  07B0               	addwf	efgtoa@t^(0+128),f
  4438  0520  3000               	movlw	0
  4439  0521  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  4440                           
  4441                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  4442  0522  2D75               	goto	l4621
  4443  0523                     l4593:	
  4444                           
  4445                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  4446  0523  0832               	movf	efgtoa@pp^(0+128),w
  4447  0524  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  4448  0525  1903               	btfsc	3,2
  4449  0526  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  4450  0527  2D41               	goto	l4613
  4451                           
  4452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  4453  0528  302E               	movlw	46
  4454  0529  0140               	movlb	0	; select bank0
  4455  052A  00D9               	movwf	??_efgtoa
  4456  052B  0141               	movlb	1	; select bank1
  4457  052C  0853               	movf	efgtoa@n^(0+128),w
  4458  052D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4459  052E  0086               	movwf	6
  4460  052F  3001               	movlw	1	; select bank3/4
  4461  0530  0087               	movwf	7
  4462  0531  0140               	movlb	0	; select bank0
  4463  0532  0859               	movf	??_efgtoa,w
  4464  0533  0081               	movwf	1
  4465  0534  3001               	movlw	1
  4466  0535  0141               	movlb	1	; select bank1
  4467  0536  07D3               	addwf	efgtoa@n^(0+128),f
  4468  0537  3000               	movlw	0
  4469  0538  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  4470                           
  4471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  4472  0539  30FF               	movlw	255
  4473  053A  07C0               	addwf	efgtoa@w^(0+128),f
  4474  053B  30FF               	movlw	255
  4475  053C  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  4476                           
  4477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  4478  053D  3001               	movlw	1
  4479  053E  00B2               	movwf	efgtoa@pp^(0+128)
  4480  053F  3000               	movlw	0
  4481  0540  00B3               	movwf	(efgtoa@pp^(0+128)+1)
  4482  0541                     l4613:	
  4483                           
  4484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  4485  0541  0830               	movf	efgtoa@t^(0+128),w
  4486  0542  0431               	iorwf	(efgtoa@t+1)^(0+128),w
  4487  0543  1903               	btfsc	3,2
  4488  0544  2D5F               	goto	l4615
  4489                           
  4490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  4491  0545  3030               	movlw	48
  4492  0546  0140               	movlb	0	; select bank0
  4493  0547  00D9               	movwf	??_efgtoa
  4494  0548  0141               	movlb	1	; select bank1
  4495  0549  0853               	movf	efgtoa@n^(0+128),w
  4496  054A  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4497  054B  0086               	movwf	6
  4498  054C  3001               	movlw	1	; select bank3/4
  4499  054D  0087               	movwf	7
  4500  054E  0140               	movlb	0	; select bank0
  4501  054F  0859               	movf	??_efgtoa,w
  4502  0550  0081               	movwf	1
  4503  0551  3001               	movlw	1
  4504  0552  0141               	movlb	1	; select bank1
  4505  0553  07D3               	addwf	efgtoa@n^(0+128),f
  4506  0554  3000               	movlw	0
  4507  0555  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  4508                           
  4509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  4510  0556  30FF               	movlw	255
  4511  0557  07C0               	addwf	efgtoa@w^(0+128),f
  4512  0558  30FF               	movlw	255
  4513  0559  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  4514                           
  4515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  4516  055A  30FF               	movlw	255
  4517  055B  07B0               	addwf	efgtoa@t^(0+128),f
  4518  055C  30FF               	movlw	255
  4519  055D  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  4520  055E  2D41               	goto	l4613
  4521  055F                     l4615:	
  4522                           
  4523                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  4524  055F  0838               	movf	efgtoa@d^(0+128),w
  4525  0560  3E30               	addlw	48
  4526  0561  0140               	movlb	0	; select bank0
  4527  0562  00D9               	movwf	??_efgtoa
  4528  0563  0141               	movlb	1	; select bank1
  4529  0564  0853               	movf	efgtoa@n^(0+128),w
  4530  0565  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4531  0566  0086               	movwf	6
  4532  0567  3001               	movlw	1	; select bank3/4
  4533  0568  0087               	movwf	7
  4534  0569  0140               	movlb	0	; select bank0
  4535  056A  0859               	movf	??_efgtoa,w
  4536  056B  0081               	movwf	1
  4537  056C  3001               	movlw	1
  4538  056D  0141               	movlb	1	; select bank1
  4539  056E  07D3               	addwf	efgtoa@n^(0+128),f
  4540  056F  3000               	movlw	0
  4541  0570  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  4542                           
  4543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  4544  0571  30FF               	movlw	255
  4545  0572  07C0               	addwf	efgtoa@w^(0+128),f
  4546  0573  30FF               	movlw	255
  4547  0574  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  4548  0575                     l4621:	
  4549                           
  4550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  4551  0575  084A               	movf	(efgtoa@l+3)^(0+128),w
  4552  0576  0140               	movlb	0	; select bank0
  4553  0577  00B5               	movwf	___flmul@a+3
  4554  0578  0141               	movlb	1	; select bank1
  4555  0579  0849               	movf	(efgtoa@l+2)^(0+128),w
  4556  057A  0140               	movlb	0	; select bank0
  4557  057B  00B4               	movwf	___flmul@a+2
  4558  057C  0141               	movlb	1	; select bank1
  4559  057D  0848               	movf	(efgtoa@l+1)^(0+128),w
  4560  057E  0140               	movlb	0	; select bank0
  4561  057F  00B3               	movwf	___flmul@a+1
  4562  0580  0141               	movlb	1	; select bank1
  4563  0581  0847               	movf	efgtoa@l^(0+128),w
  4564  0582  0140               	movlb	0	; select bank0
  4565  0583  00B2               	movwf	___flmul@a
  4566  0584  0141               	movlb	1	; select bank1
  4567  0585  0858               	movf	(efgtoa@u+3)^(0+128),w
  4568  0586  0140               	movlb	0	; select bank0
  4569  0587  00B1               	movwf	___flmul@b+3
  4570  0588  0141               	movlb	1	; select bank1
  4571  0589  0857               	movf	(efgtoa@u+2)^(0+128),w
  4572  058A  0140               	movlb	0	; select bank0
  4573  058B  00B0               	movwf	___flmul@b+2
  4574  058C  0141               	movlb	1	; select bank1
  4575  058D  0856               	movf	(efgtoa@u+1)^(0+128),w
  4576  058E  0140               	movlb	0	; select bank0
  4577  058F  00AF               	movwf	___flmul@b+1
  4578  0590  0141               	movlb	1	; select bank1
  4579  0591  0855               	movf	efgtoa@u^(0+128),w
  4580  0592  0140               	movlb	0	; select bank0
  4581  0593  00AE               	movwf	___flmul@b
  4582  0594  318D  25D4  3180   	fcall	___flmul
  4583  0597  0140               	movlb	0	; select bank0
  4584  0598  0831               	movf	?___flmul+3,w
  4585  0599  00CB               	movwf	___flsub@a+3
  4586  059A  0830               	movf	?___flmul+2,w
  4587  059B  00CA               	movwf	___flsub@a+2
  4588  059C  082F               	movf	?___flmul+1,w
  4589  059D  00C9               	movwf	___flsub@a+1
  4590  059E  082E               	movf	?___flmul,w
  4591  059F  00C8               	movwf	___flsub@a
  4592  05A0  0141               	movlb	1	; select bank1
  4593  05A1  0846               	movf	(efgtoa@h+3)^(0+128),w
  4594  05A2  0140               	movlb	0	; select bank0
  4595  05A3  00CF               	movwf	___flsub@b+3
  4596  05A4  0141               	movlb	1	; select bank1
  4597  05A5  0845               	movf	(efgtoa@h+2)^(0+128),w
  4598  05A6  0140               	movlb	0	; select bank0
  4599  05A7  00CE               	movwf	___flsub@b+2
  4600  05A8  0141               	movlb	1	; select bank1
  4601  05A9  0844               	movf	(efgtoa@h+1)^(0+128),w
  4602  05AA  0140               	movlb	0	; select bank0
  4603  05AB  00CD               	movwf	___flsub@b+1
  4604  05AC  0141               	movlb	1	; select bank1
  4605  05AD  0843               	movf	efgtoa@h^(0+128),w
  4606  05AE  0140               	movlb	0	; select bank0
  4607  05AF  00CC               	movwf	___flsub@b
  4608  05B0  3192  227C  3180   	fcall	___flsub
  4609  05B3  0140               	movlb	0	; select bank0
  4610  05B4  084B               	movf	?___flsub+3,w
  4611  05B5  0141               	movlb	1	; select bank1
  4612  05B6  00C6               	movwf	(efgtoa@h+3)^(0+128)
  4613  05B7  0140               	movlb	0	; select bank0
  4614  05B8  084A               	movf	?___flsub+2,w
  4615  05B9  0141               	movlb	1	; select bank1
  4616  05BA  00C5               	movwf	(efgtoa@h+2)^(0+128)
  4617  05BB  0140               	movlb	0	; select bank0
  4618  05BC  0849               	movf	?___flsub+1,w
  4619  05BD  0141               	movlb	1	; select bank1
  4620  05BE  00C4               	movwf	(efgtoa@h+1)^(0+128)
  4621  05BF  0140               	movlb	0	; select bank0
  4622  05C0  0848               	movf	?___flsub,w
  4623  05C1  0141               	movlb	1	; select bank1
  4624  05C2  00C3               	movwf	efgtoa@h^(0+128)
  4625                           
  4626                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  4627  05C3  3041               	movlw	65
  4628  05C4  0140               	movlb	0	; select bank0
  4629  05C5  00A3               	movwf	___fldiv@a+3
  4630  05C6  3020               	movlw	32
  4631  05C7  00A2               	movwf	___fldiv@a+2
  4632  05C8  3000               	movlw	0
  4633  05C9  00A1               	movwf	___fldiv@a+1
  4634  05CA  3000               	movlw	0
  4635  05CB  00A0               	movwf	___fldiv@a
  4636  05CC  0141               	movlb	1	; select bank1
  4637  05CD  0858               	movf	(efgtoa@u+3)^(0+128),w
  4638  05CE  0140               	movlb	0	; select bank0
  4639  05CF  00A7               	movwf	___fldiv@b+3
  4640  05D0  0141               	movlb	1	; select bank1
  4641  05D1  0857               	movf	(efgtoa@u+2)^(0+128),w
  4642  05D2  0140               	movlb	0	; select bank0
  4643  05D3  00A6               	movwf	___fldiv@b+2
  4644  05D4  0141               	movlb	1	; select bank1
  4645  05D5  0856               	movf	(efgtoa@u+1)^(0+128),w
  4646  05D6  0140               	movlb	0	; select bank0
  4647  05D7  00A5               	movwf	___fldiv@b+1
  4648  05D8  0141               	movlb	1	; select bank1
  4649  05D9  0855               	movf	efgtoa@u^(0+128),w
  4650  05DA  0140               	movlb	0	; select bank0
  4651  05DB  00A4               	movwf	___fldiv@b
  4652  05DC  3188  20E0  3180   	fcall	___fldiv
  4653  05DF  0140               	movlb	0	; select bank0
  4654  05E0  0823               	movf	?___fldiv+3,w
  4655  05E1  0141               	movlb	1	; select bank1
  4656  05E2  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4657  05E3  0140               	movlb	0	; select bank0
  4658  05E4  0822               	movf	?___fldiv+2,w
  4659  05E5  0141               	movlb	1	; select bank1
  4660  05E6  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4661  05E7  0140               	movlb	0	; select bank0
  4662  05E8  0821               	movf	?___fldiv+1,w
  4663  05E9  0141               	movlb	1	; select bank1
  4664  05EA  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4665  05EB  0140               	movlb	0	; select bank0
  4666  05EC  0820               	movf	?___fldiv,w
  4667  05ED  0141               	movlb	1	; select bank1
  4668  05EE  00D5               	movwf	efgtoa@u^(0+128)
  4669                           
  4670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  4671  05EF  30FF               	movlw	255
  4672  05F0  07B6               	addwf	efgtoa@ne^(0+128),f
  4673  05F1  30FF               	movlw	255
  4674  05F2  3DB7               	addwfc	(efgtoa@ne+1)^(0+128),f
  4675                           
  4676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  4677  05F3  3001               	movlw	1
  4678  05F4  07CB               	addwf	efgtoa@i^(0+128),f
  4679  05F5  3000               	movlw	0
  4680  05F6  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  4681  05F7                     l4629:	
  4682                           
  4683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  4684  05F7  084C               	movf	(efgtoa@i+1)^(0+128),w
  4685  05F8  3A80               	xorlw	128
  4686  05F9  0140               	movlb	0	; select bank0
  4687  05FA  00D9               	movwf	??_efgtoa
  4688  05FB  0141               	movlb	1	; select bank1
  4689  05FC  0835               	movf	(efgtoa@m+1)^(0+128),w
  4690  05FD  3A80               	xorlw	128
  4691  05FE  0140               	movlb	0	; select bank0
  4692  05FF  0259               	subwf	??_efgtoa,w
  4693  0600  1D03               	skipz
  4694  0601  2E05               	goto	u7695
  4695  0602  0141               	movlb	1	; select bank1
  4696  0603  0834               	movf	efgtoa@m^(0+128),w
  4697  0604  024B               	subwf	efgtoa@i^(0+128),w
  4698  0605                     u7695:	
  4699  0605  1803               	skipnc
  4700  0606  2E15               	goto	l4633
  4701  0607  0141               	movlb	1	; select bank1
  4702  0608  0854               	movf	(efgtoa@n+1)^(0+128),w
  4703  0609  3A80               	xorlw	128
  4704  060A  0140               	movlb	0	; select bank0
  4705  060B  00D9               	movwf	??_efgtoa
  4706  060C  3080               	movlw	128
  4707  060D  0259               	subwf	??_efgtoa,w
  4708  060E  1D03               	skipz
  4709  060F  2E13               	goto	u7705
  4710  0610  304B               	movlw	75
  4711  0611  0141               	movlb	1	; select bank1
  4712  0612  0253               	subwf	efgtoa@n^(0+128),w
  4713  0613                     u7705:	
  4714  0613  1C03               	skipc
  4715  0614  2CBA               	goto	l4581
  4716  0615                     l4633:	
  4717                           
  4718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  4719  0615  0141               	movlb	1	; select bank1
  4720  0616  0832               	movf	efgtoa@pp^(0+128),w
  4721  0617  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  4722  0618  1903               	btfsc	3,2
  4723  0619  1E77               	btfss	_flags,4
  4724  061A  2E2C               	goto	l4641
  4725                           
  4726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  4727  061B  302E               	movlw	46
  4728  061C  0140               	movlb	0	; select bank0
  4729  061D  00D9               	movwf	??_efgtoa
  4730  061E  0141               	movlb	1	; select bank1
  4731  061F  0853               	movf	efgtoa@n^(0+128),w
  4732  0620  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4733  0621  0086               	movwf	6
  4734  0622  3001               	movlw	1	; select bank3/4
  4735  0623  0087               	movwf	7
  4736  0624  0140               	movlb	0	; select bank0
  4737  0625  0859               	movf	??_efgtoa,w
  4738  0626  0081               	movwf	1
  4739  0627  3001               	movlw	1
  4740  0628  0141               	movlb	1	; select bank1
  4741  0629  07D3               	addwf	efgtoa@n^(0+128),f
  4742  062A  3000               	movlw	0
  4743  062B  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  4744  062C                     l4641:	
  4745                           
  4746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  4747  062C  0853               	movf	efgtoa@n^(0+128),w
  4748  062D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4749  062E  0086               	movwf	6
  4750  062F  3001               	movlw	1	; select bank3/4
  4751  0630  0087               	movwf	7
  4752  0631  0181               	clrf	1
  4753                           
  4754                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  4755  0632  3065               	movlw	101
  4756  0633  063F               	xorwf	efgtoa@nmode^(0+128),w
  4757  0634  1D03               	btfss	3,2
  4758  0635  2F0A               	goto	l4703
  4759                           
  4760                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  4761  0636  304F               	movlw	79
  4762  0637  00CB               	movwf	efgtoa@i^(0+128)
  4763  0638  3000               	movlw	0
  4764  0639  00CC               	movwf	(efgtoa@i^(0+128)+1)
  4765                           
  4766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  4767  063A  084B               	movf	efgtoa@i^(0+128),w
  4768  063B  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4769  063C  0086               	movwf	6
  4770  063D  3001               	movlw	1	; select bank3/4
  4771  063E  0087               	movwf	7
  4772  063F  0181               	clrf	1
  4773                           
  4774                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  4775  0640  01BA               	clrf	efgtoa@sign^(0+128)
  4776  0641  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  4777                           
  4778                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  4779  0642  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  4780  0643  2E4D               	goto	l4657
  4781                           
  4782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  4783  0644  3001               	movlw	1
  4784  0645  00BA               	movwf	efgtoa@sign^(0+128)
  4785  0646  3000               	movlw	0
  4786  0647  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  4787                           
  4788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  4789  0648  09D1               	comf	efgtoa@e^(0+128),f
  4790  0649  09D2               	comf	(efgtoa@e+1)^(0+128),f
  4791  064A  0AD1               	incf	efgtoa@e^(0+128),f
  4792  064B  1903               	skipnz
  4793  064C  0AD2               	incf	(efgtoa@e+1)^(0+128),f
  4794  064D                     l4657:	
  4795                           
  4796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  4797  064D  3002               	movlw	2
  4798  064E  00BD               	movwf	efgtoa@p^(0+128)
  4799  064F  3000               	movlw	0
  4800  0650  00BE               	movwf	(efgtoa@p^(0+128)+1)
  4801  0651                     l4669:	
  4802                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  4803                           
  4804                           
  4805                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  4806  0651  0851               	movf	efgtoa@e^(0+128),w
  4807  0652  0452               	iorwf	(efgtoa@e+1)^(0+128),w
  4808  0653  1903               	btfsc	3,2
  4809  0654  2E97               	goto	l4671
  4810  0655                     l4659:	
  4811                           
  4812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  4813  0655  30FF               	movlw	255
  4814  0656  0141               	movlb	1	; select bank1
  4815  0657  07CB               	addwf	efgtoa@i^(0+128),f
  4816  0658  30FF               	movlw	255
  4817  0659  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  4818                           
  4819                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  4820  065A  300A               	movlw	10
  4821  065B  0140               	movlb	0	; select bank0
  4822  065C  00A0               	movwf	___awmod@divisor
  4823  065D  3000               	movlw	0
  4824  065E  00A1               	movwf	___awmod@divisor+1
  4825  065F  0141               	movlb	1	; select bank1
  4826  0660  0852               	movf	(efgtoa@e+1)^(0+128),w
  4827  0661  0140               	movlb	0	; select bank0
  4828  0662  00A3               	movwf	___awmod@dividend+1
  4829  0663  0141               	movlb	1	; select bank1
  4830  0664  0851               	movf	efgtoa@e^(0+128),w
  4831  0665  0140               	movlb	0	; select bank0
  4832  0666  00A2               	movwf	___awmod@dividend
  4833  0667  3193  238D  3180   	fcall	___awmod
  4834  066A  0140               	movlb	0	; select bank0
  4835  066B  0820               	movf	?___awmod,w
  4836  066C  3E30               	addlw	48
  4837  066D  00D9               	movwf	??_efgtoa
  4838  066E  0141               	movlb	1	; select bank1
  4839  066F  084B               	movf	efgtoa@i^(0+128),w
  4840  0670  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4841  0671  0086               	movwf	6
  4842  0672  3001               	movlw	1	; select bank3/4
  4843  0673  0087               	movwf	7
  4844  0674  0140               	movlb	0	; select bank0
  4845  0675  0859               	movf	??_efgtoa,w
  4846  0676  0081               	movwf	1
  4847                           
  4848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  4849  0677  300A               	movlw	10
  4850  0678  00A0               	movwf	___awdiv@divisor
  4851  0679  3000               	movlw	0
  4852  067A  00A1               	movwf	___awdiv@divisor+1
  4853  067B  0141               	movlb	1	; select bank1
  4854  067C  0852               	movf	(efgtoa@e+1)^(0+128),w
  4855  067D  0140               	movlb	0	; select bank0
  4856  067E  00A3               	movwf	___awdiv@dividend+1
  4857  067F  0141               	movlb	1	; select bank1
  4858  0680  0851               	movf	efgtoa@e^(0+128),w
  4859  0681  0140               	movlb	0	; select bank0
  4860  0682  00A2               	movwf	___awdiv@dividend
  4861  0683  3194  246F  3180   	fcall	___awdiv
  4862  0686  0140               	movlb	0	; select bank0
  4863  0687  0821               	movf	?___awdiv+1,w
  4864  0688  0141               	movlb	1	; select bank1
  4865  0689  00D2               	movwf	(efgtoa@e+1)^(0+128)
  4866  068A  0140               	movlb	0	; select bank0
  4867  068B  0820               	movf	?___awdiv,w
  4868  068C  0141               	movlb	1	; select bank1
  4869  068D  00D1               	movwf	efgtoa@e^(0+128)
  4870                           
  4871                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  4872  068E  30FF               	movlw	255
  4873  068F  07BD               	addwf	efgtoa@p^(0+128),f
  4874  0690  30FF               	movlw	255
  4875  0691  3DBE               	addwfc	(efgtoa@p+1)^(0+128),f
  4876                           
  4877                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  4878  0692  30FF               	movlw	255
  4879  0693  07C0               	addwf	efgtoa@w^(0+128),f
  4880  0694  30FF               	movlw	255
  4881  0695  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  4882  0696  2E51               	goto	l4669
  4883  0697                     l4671:	
  4884  0697  083E               	movf	(efgtoa@p+1)^(0+128),w
  4885  0698  3A80               	xorlw	128
  4886  0699  0140               	movlb	0	; select bank0
  4887  069A  00D9               	movwf	??_efgtoa
  4888  069B  3080               	movlw	128
  4889  069C  0259               	subwf	??_efgtoa,w
  4890  069D  1D03               	skipz
  4891  069E  2EA2               	goto	u7765
  4892  069F  3001               	movlw	1
  4893  06A0  0141               	movlb	1	; select bank1
  4894  06A1  023D               	subwf	efgtoa@p^(0+128),w
  4895  06A2                     u7765:	
  4896  06A2  1803               	skipnc
  4897  06A3  2E55               	goto	l4659
  4898                           
  4899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  4900  06A4  30FF               	movlw	255
  4901  06A5  0141               	movlb	1	; select bank1
  4902  06A6  07CB               	addwf	efgtoa@i^(0+128),f
  4903  06A7  30FF               	movlw	255
  4904  06A8  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  4905                           
  4906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  4907  06A9  083A               	movf	efgtoa@sign^(0+128),w
  4908  06AA  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  4909  06AB  1D03               	btfss	3,2
  4910  06AC  2EAF               	goto	l4679
  4911  06AD  302B               	movlw	43
  4912  06AE  2EB0               	goto	L7
  4913  06AF                     l4679:	
  4914  06AF  302D               	movlw	45
  4915  06B0                     L7:	
  4916  06B0  00AA               	movwf	_efgtoa$350^(0+128)
  4917  06B1  3000               	movlw	0
  4918  06B2  00AB               	movwf	(_efgtoa$350^(0+128)+1)
  4919  06B3  082A               	movf	_efgtoa$350^(0+128),w
  4920  06B4  0140               	movlb	0	; select bank0
  4921  06B5  00D9               	movwf	??_efgtoa
  4922  06B6  0141               	movlb	1	; select bank1
  4923  06B7  084B               	movf	efgtoa@i^(0+128),w
  4924  06B8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4925  06B9  0086               	movwf	6
  4926  06BA  3001               	movlw	1	; select bank3/4
  4927  06BB  0087               	movwf	7
  4928  06BC  0140               	movlb	0	; select bank0
  4929  06BD  0859               	movf	??_efgtoa,w
  4930  06BE  0081               	movwf	1
  4931                           
  4932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  4933  06BF  30FF               	movlw	255
  4934  06C0  0141               	movlb	1	; select bank1
  4935  06C1  07C0               	addwf	efgtoa@w^(0+128),f
  4936  06C2  30FF               	movlw	255
  4937  06C3  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  4938                           
  4939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4940  06C4  30FF               	movlw	255
  4941  06C5  07CB               	addwf	efgtoa@i^(0+128),f
  4942  06C6  30FF               	movlw	255
  4943  06C7  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  4944  06C8  0140               	movlb	0	; select bank0
  4945  06C9  0858               	movf	efgtoa@c,w
  4946  06CA  3EBF               	addlw	191
  4947  06CB  00D9               	movwf	??_efgtoa
  4948  06CC  30FF               	movlw	255
  4949  06CD  1803               	skipnc
  4950  06CE  3000               	movlw	0
  4951  06CF  00DA               	movwf	??_efgtoa+1
  4952  06D0  3000               	movlw	0
  4953  06D1  025A               	subwf	??_efgtoa+1,w
  4954  06D2  301A               	movlw	26
  4955  06D3  1903               	skipnz
  4956  06D4  0259               	subwf	??_efgtoa,w
  4957  06D5  1803               	btfsc	3,0
  4958  06D6  2ED9               	goto	u7780
  4959  06D7  3001               	movlw	1
  4960  06D8  2EDA               	goto	u7790
  4961  06D9                     u7780:	
  4962  06D9  3000               	movlw	0
  4963  06DA                     u7790:	
  4964  06DA  00DB               	movwf	??_efgtoa+2
  4965  06DB  01DC               	clrf	??_efgtoa+3
  4966  06DC  085B               	movf	??_efgtoa+2,w
  4967  06DD  0141               	movlb	1	; select bank1
  4968  06DE  00AE               	movwf	_efgtoa$352^(0+128)
  4969  06DF  0140               	movlb	0	; select bank0
  4970  06E0  085C               	movf	??_efgtoa+3,w
  4971  06E1  0141               	movlb	1	; select bank1
  4972  06E2  00AF               	movwf	(_efgtoa$352+1)^(0+128)
  4973  06E3  082E               	movf	_efgtoa$352^(0+128),w
  4974  06E4  042F               	iorwf	(_efgtoa$352+1)^(0+128),w
  4975  06E5  1D03               	btfss	3,2
  4976  06E6  2EE9               	goto	l4695
  4977  06E7  3065               	movlw	101
  4978  06E8  2EEA               	goto	L8
  4979  06E9                     l4695:	
  4980  06E9  3045               	movlw	69
  4981  06EA                     L8:	
  4982  06EA  00AC               	movwf	_efgtoa$351^(0+128)
  4983  06EB  3000               	movlw	0
  4984  06EC  00AD               	movwf	(_efgtoa$351^(0+128)+1)
  4985  06ED  082C               	movf	_efgtoa$351^(0+128),w
  4986  06EE  0140               	movlb	0	; select bank0
  4987  06EF  00D9               	movwf	??_efgtoa
  4988  06F0  0141               	movlb	1	; select bank1
  4989  06F1  084B               	movf	efgtoa@i^(0+128),w
  4990  06F2  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4991  06F3  0086               	movwf	6
  4992  06F4  3001               	movlw	1	; select bank3/4
  4993  06F5  0087               	movwf	7
  4994  06F6  0140               	movlb	0	; select bank0
  4995  06F7  0859               	movf	??_efgtoa,w
  4996  06F8  0081               	movwf	1
  4997                           
  4998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  4999  06F9  30FF               	movlw	255
  5000  06FA  0141               	movlb	1	; select bank1
  5001  06FB  07C0               	addwf	efgtoa@w^(0+128),f
  5002  06FC  30FF               	movlw	255
  5003  06FD  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5004                           
  5005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  5006  06FE  084B               	movf	efgtoa@i^(0+128),w
  5007  06FF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5008  0700  0140               	movlb	0	; select bank0
  5009  0701  00A0               	movwf	strcpy@src
  5010  0702  3001               	movlw	1
  5011  0703  00A1               	movwf	strcpy@src+1
  5012  0704  0141               	movlb	1	; select bank1
  5013  0705  0853               	movf	efgtoa@n^(0+128),w
  5014  0706  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5015  0707  3192  22BB  3180   	fcall	_strcpy
  5016  070A                     l4703:	
  5017                           
  5018                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 502:     return pad(fp, &dbuf
      +                          [0], w);
  5019  070A  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  5020  070B  0140               	movlb	0	; select bank0
  5021  070C  00D9               	movwf	??_efgtoa
  5022  070D  0859               	movf	??_efgtoa,w
  5023  070E  00B1               	movwf	pad@buf
  5024  070F  0141               	movlb	1	; select bank1
  5025  0710  0841               	movf	(efgtoa@w+1)^(0+128),w
  5026  0711  0140               	movlb	0	; select bank0
  5027  0712  00B3               	movwf	pad@p+1
  5028  0713  0141               	movlb	1	; select bank1
  5029  0714  0840               	movf	efgtoa@w^(0+128),w
  5030  0715  0140               	movlb	0	; select bank0
  5031  0716  00B2               	movwf	pad@p
  5032  0717  0141               	movlb	1	; select bank1
  5033  0718  083C               	movf	efgtoa@fp^(0+128),w
  5034  0719  3193  23D3         	fcall	_pad
  5035  071B  0140               	movlb	0	; select bank0
  5036  071C  0832               	movf	?_pad+1,w
  5037  071D  00D5               	movwf	?_efgtoa+1
  5038  071E  0831               	movf	?_pad,w
  5039  071F  00D4               	movwf	?_efgtoa
  5040  0720  0008               	return
  5041  0721                     __end_of_efgtoa:	
  5042                           
  5043                           	psect	text6
  5044  12DB                     __ptext6:	
  5045 ;; *************** function _tolower *****************
  5046 ;; Defined at:
  5047 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;  c               2    6[BANK0 ] int 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;		None
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  2    6[BANK0 ] int 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5062 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5063 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5065 ;;Total ram usage:        8 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    3
  5068 ;; This function calls:
  5069 ;;		_isupper
  5070 ;; This function is called by:
  5071 ;;		_efgtoa
  5072 ;;		_vfpfcnvrt
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           
  5077                           ;psect for function _tolower
  5078  12DB                     _tolower:	
  5079                           
  5080                           ;incstack = 0
  5081                           ; Regs used in _tolower: [wreg+status,2+status,0]
  5082  12DB  0140               	movlb	0	; select bank0
  5083  12DC  0826               	movf	tolower@c,w
  5084  12DD  3EBF               	addlw	191
  5085  12DE  00A8               	movwf	??_tolower
  5086  12DF  30FF               	movlw	255
  5087  12E0  3D27               	addwfc	tolower@c+1,w
  5088  12E1  00A9               	movwf	??_tolower+1
  5089  12E2  3000               	movlw	0
  5090  12E3  0229               	subwf	??_tolower+1,w
  5091  12E4  301A               	movlw	26
  5092  12E5  1903               	skipnz
  5093  12E6  0228               	subwf	??_tolower,w
  5094  12E7  1803               	btfsc	3,0
  5095  12E8  2AEB               	goto	u6220
  5096  12E9  3001               	movlw	1
  5097  12EA  2AEC               	goto	u6230
  5098  12EB                     u6220:	
  5099  12EB  3000               	movlw	0
  5100  12EC                     u6230:	
  5101  12EC  00AA               	movwf	??_tolower+2
  5102  12ED  01AB               	clrf	??_tolower+3
  5103  12EE  082A               	movf	??_tolower+2,w
  5104  12EF  00AC               	movwf	_tolower$751
  5105  12F0  082B               	movf	??_tolower+3,w
  5106  12F1  00AD               	movwf	_tolower$751+1
  5107  12F2  082C               	movf	_tolower$751,w
  5108  12F3  042D               	iorwf	_tolower$751+1,w
  5109  12F4  1903               	btfsc	3,2
  5110  12F5  0008               	return
  5111  12F6  3020               	movlw	32
  5112  12F7  0426               	iorwf	tolower@c,w
  5113  12F8  00A6               	movwf	?_tolower
  5114  12F9  3000               	movlw	0
  5115  12FA  0427               	iorwf	tolower@c+1,w
  5116  12FB  00A7               	movwf	?_tolower+1
  5117  12FC  0008               	return
  5118  12FD                     __end_of_tolower:	
  5119                           
  5120                           	psect	text7
  5121  124B                     __ptext7:	
  5122 ;; *************** function _isupper *****************
  5123 ;; Defined at:
  5124 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  c               2    0[BANK0 ] int 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  2    0[BANK0 ] int 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;Total ram usage:        6 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    2
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_efgtoa
  5149 ;;		_vfpfcnvrt
  5150 ;;		_tolower
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           
  5155                           ;psect for function _isupper
  5156  124B                     _isupper:	
  5157                           
  5158                           ;incstack = 0
  5159                           ; Regs used in _isupper: [wreg+status,2+status,0]
  5160  124B  0140               	movlb	0	; select bank0
  5161  124C  0820               	movf	isupper@c,w
  5162  124D  3EBF               	addlw	191
  5163  124E  00A2               	movwf	??_isupper
  5164  124F  30FF               	movlw	255
  5165  1250  3D21               	addwfc	isupper@c+1,w
  5166  1251  00A3               	movwf	??_isupper+1
  5167  1252  3000               	movlw	0
  5168  1253  0223               	subwf	??_isupper+1,w
  5169  1254  301A               	movlw	26
  5170  1255  1903               	skipnz
  5171  1256  0222               	subwf	??_isupper,w
  5172  1257  1803               	btfsc	3,0
  5173  1258  2A5B               	goto	u5610
  5174  1259  3001               	movlw	1
  5175  125A  2A5C               	goto	u5620
  5176  125B                     u5610:	
  5177  125B  3000               	movlw	0
  5178  125C                     u5620:	
  5179  125C  00A4               	movwf	??_isupper+2
  5180  125D  01A5               	clrf	??_isupper+3
  5181  125E  0824               	movf	??_isupper+2,w
  5182  125F  00A0               	movwf	?_isupper
  5183  1260  0825               	movf	??_isupper+3,w
  5184  1261  00A1               	movwf	?_isupper+1
  5185  1262  0008               	return
  5186  1263                     __end_of_isupper:	
  5187                           
  5188                           	psect	text8
  5189  12BB                     __ptext8:	
  5190 ;; *************** function _strcpy *****************
  5191 ;; Defined at:
  5192 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  dest            1    wreg     PTR unsigned char 
  5195 ;;		 -> dbuf(80), 
  5196 ;;  src             2    0[BANK0 ] PTR const unsigned char 
  5197 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5198 ;;		 -> dbuf(80), 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  dest            1    7[BANK0 ] PTR unsigned char 
  5201 ;;		 -> dbuf(80), 
  5202 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  5203 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5204 ;;		 -> dbuf(80), 
  5205 ;;  d               1    6[BANK0 ] PTR unsigned char 
  5206 ;;		 -> dbuf(80), 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1    wreg      PTR unsigned char 
  5209 ;; Registers used:
  5210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;Total ram usage:        8 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:    2
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_efgtoa
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function _strcpy
  5232  12BB                     _strcpy:	
  5233                           
  5234                           ;incstack = 0
  5235                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  5236                           ;strcpy@dest stored from wreg
  5237  12BB  0140               	movlb	0	; select bank0
  5238  12BC  00A7               	movwf	strcpy@dest
  5239  12BD  0821               	movf	strcpy@src+1,w
  5240  12BE  00A5               	movwf	strcpy@s+1
  5241  12BF  0820               	movf	strcpy@src,w
  5242  12C0  00A4               	movwf	strcpy@s
  5243  12C1  0827               	movf	strcpy@dest,w
  5244  12C2  00A2               	movwf	??_strcpy
  5245  12C3  0822               	movf	??_strcpy,w
  5246  12C4  00A6               	movwf	strcpy@d
  5247  12C5                     l3929:	
  5248  12C5  0826               	movf	strcpy@d,w
  5249  12C6  0086               	movwf	6
  5250  12C7  3001               	movlw	1	; select bank2/3
  5251  12C8  0087               	movwf	7
  5252  12C9  0AA6               	incf	strcpy@d,f
  5253  12CA  0825               	movf	strcpy@s+1,w
  5254  12CB  00A3               	movwf	??_strcpy+1
  5255  12CC  0824               	movf	strcpy@s,w
  5256  12CD  00A2               	movwf	??_strcpy
  5257  12CE  0AA4               	incf	strcpy@s,f
  5258  12CF  1903               	skipnz
  5259  12D0  0AA5               	incf	strcpy@s+1,f
  5260  12D1  0822               	movf	??_strcpy,w
  5261  12D2  0084               	movwf	4
  5262  12D3  0823               	movf	??_strcpy+1,w
  5263  12D4  0085               	movwf	5
  5264  12D5  0800               	movf	0,w	;code access
  5265  12D6  3FC0               	movwi [0]fsr1
  5266  12D7  0889               	movf	9,f
  5267  12D8  1903               	btfsc	3,2
  5268  12D9  0008               	return
  5269  12DA  2AC5               	goto	l3929
  5270  12DB                     __end_of_strcpy:	
  5271                           
  5272                           	psect	text9
  5273  13D3                     __ptext9:	
  5274 ;; *************** function _pad *****************
  5275 ;; Defined at:
  5276 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  fp              1    wreg     PTR struct _IO_FILE
  5279 ;;		 -> NULL(0), 
  5280 ;;  buf             1   17[BANK0 ] PTR unsigned char 
  5281 ;;		 -> dbuf(80), 
  5282 ;;  p               2   18[BANK0 ] int 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  fp              1   25[BANK0 ] PTR struct _IO_FILE
  5285 ;;		 -> NULL(0), 
  5286 ;;  w               2   23[BANK0 ] int 
  5287 ;;  i               2   21[BANK0 ] int 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  2   17[BANK0 ] int 
  5290 ;; Registers used:
  5291 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5297 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5300 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5301 ;;Total ram usage:        9 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    5
  5304 ;; This function calls:
  5305 ;;		_fputc
  5306 ;;		_fputs
  5307 ;;		_strlen
  5308 ;; This function is called by:
  5309 ;;		_efgtoa
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           
  5314                           ;psect for function _pad
  5315  13D3                     _pad:	
  5316                           
  5317                           ;incstack = 0
  5318                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5319                           ;pad@fp stored from wreg
  5320  13D3  0140               	movlb	0	; select bank0
  5321  13D4  00B9               	movwf	pad@fp
  5322                           
  5323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  5324  13D5  1C77               	btfss	_flags,0
  5325  13D6  2BDF               	goto	l3887
  5326                           
  5327                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  5328  13D7  0839               	movf	pad@fp,w
  5329  13D8  00B4               	movwf	??_pad
  5330  13D9  0834               	movf	??_pad,w
  5331  13DA  00A9               	movwf	fputs@fp
  5332  13DB  0831               	movf	pad@buf,w
  5333  13DC  3192  22FD  3193   	fcall	_fputs
  5334  13DF                     l3887:	
  5335                           
  5336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  5337  13DF  0140               	movlb	0	; select bank0
  5338  13E0  1BB3               	btfsc	pad@p+1,7
  5339  13E1  2BE7               	goto	l3891
  5340  13E2  0833               	movf	pad@p+1,w
  5341  13E3  00B8               	movwf	pad@w+1
  5342  13E4  0832               	movf	pad@p,w
  5343  13E5  00B7               	movwf	pad@w
  5344  13E6  2BE9               	goto	l215
  5345  13E7                     l3891:	
  5346  13E7  01B7               	clrf	pad@w
  5347  13E8  01B8               	clrf	pad@w+1
  5348  13E9                     l215:	
  5349                           
  5350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  5351  13E9  01B5               	clrf	pad@i
  5352  13EA  01B6               	clrf	pad@i+1
  5353  13EB                     l3897:	
  5354                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  5355                           
  5356                           
  5357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  5358  13EB  0836               	movf	pad@i+1,w
  5359  13EC  3A80               	xorlw	128
  5360  13ED  00B4               	movwf	??_pad
  5361  13EE  0838               	movf	pad@w+1,w
  5362  13EF  3A80               	xorlw	128
  5363  13F0  0234               	subwf	??_pad,w
  5364  13F1  1D03               	skipz
  5365  13F2  2BF5               	goto	u6115
  5366  13F3  0837               	movf	pad@w,w
  5367  13F4  0235               	subwf	pad@i,w
  5368  13F5                     u6115:	
  5369  13F5  1803               	btfsc	3,0
  5370  13F6  2C09               	goto	l218
  5371                           
  5372                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  5373  13F7  3020               	movlw	32
  5374  13F8  0140               	movlb	0	; select bank0
  5375  13F9  00A1               	movwf	fputc@c
  5376  13FA  3000               	movlw	0
  5377  13FB  00A2               	movwf	fputc@c+1
  5378  13FC  0839               	movf	pad@fp,w
  5379  13FD  00B4               	movwf	??_pad
  5380  13FE  0834               	movf	??_pad,w
  5381  13FF  00A3               	movwf	fputc@fp
  5382  1400  3193  2356  3193   	fcall	_fputc
  5383                           
  5384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  5385  1403  3001               	movlw	1
  5386  1404  0140               	movlb	0	; select bank0
  5387  1405  07B5               	addwf	pad@i,f
  5388  1406  3000               	movlw	0
  5389  1407  3DB6               	addwfc	pad@i+1,f
  5390  1408  2BEB               	goto	l3897
  5391  1409                     l218:	
  5392                           
  5393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  5394  1409  1877               	btfsc	_flags,0
  5395  140A  2C14               	goto	l219
  5396                           
  5397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  5398  140B  0140               	movlb	0	; select bank0
  5399  140C  0839               	movf	pad@fp,w
  5400  140D  00B4               	movwf	??_pad
  5401  140E  0834               	movf	??_pad,w
  5402  140F  00A9               	movwf	fputs@fp
  5403  1410  0831               	movf	pad@buf,w
  5404  1411  3192  22FD  3193   	fcall	_fputs
  5405  1414                     l219:	
  5406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 92:     }
  5407                           
  5408                           
  5409                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  5410  1414  0140               	movlb	0	; select bank0
  5411  1415  0831               	movf	pad@buf,w
  5412  1416  3192  2263         	fcall	_strlen
  5413  1418  0140               	movlb	0	; select bank0
  5414  1419  0837               	movf	pad@w,w
  5415  141A  0720               	addwf	?_strlen,w
  5416  141B  00B1               	movwf	?_pad
  5417  141C  0838               	movf	pad@w+1,w
  5418  141D  3D21               	addwfc	?_strlen+1,w
  5419  141E  00B2               	movwf	?_pad+1
  5420  141F  0008               	return
  5421  1420                     __end_of_pad:	
  5422                           
  5423                           	psect	text10
  5424  1263                     __ptext10:	
  5425 ;; *************** function _strlen *****************
  5426 ;; Defined at:
  5427 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  s               1    wreg     PTR const unsigned char 
  5430 ;;		 -> dbuf(80), 
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  5433 ;;		 -> dbuf(80), 
  5434 ;;  a               1    3[BANK0 ] PTR const unsigned char 
  5435 ;;		 -> dbuf(80), 
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  2    0[BANK0 ] unsigned int 
  5438 ;; Registers used:
  5439 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;Total ram usage:        5 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:    2
  5452 ;; This function calls:
  5453 ;;		Nothing
  5454 ;; This function is called by:
  5455 ;;		_pad
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           
  5460                           ;psect for function _strlen
  5461  1263                     _strlen:	
  5462                           
  5463                           ;incstack = 0
  5464                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5465                           ;strlen@s stored from wreg
  5466  1263  0140               	movlb	0	; select bank0
  5467  1264  00A4               	movwf	strlen@s
  5468  1265  0824               	movf	strlen@s,w
  5469  1266  00A2               	movwf	??_strlen
  5470  1267  0822               	movf	??_strlen,w
  5471  1268  00A3               	movwf	strlen@a
  5472  1269                     l3665:	
  5473  1269  0824               	movf	strlen@s,w
  5474  126A  0086               	movwf	6
  5475  126B  3001               	movlw	1	; select bank2/3
  5476  126C  0087               	movwf	7
  5477  126D  0801               	movf	1,w
  5478  126E  1903               	btfsc	3,2
  5479  126F  2A75               	goto	l3667
  5480  1270  3001               	movlw	1
  5481  1271  00A2               	movwf	??_strlen
  5482  1272  0822               	movf	??_strlen,w
  5483  1273  07A4               	addwf	strlen@s,f
  5484  1274  2A69               	goto	l3665
  5485  1275                     l3667:	
  5486  1275  0823               	movf	strlen@a,w
  5487  1276  0224               	subwf	strlen@s,w
  5488  1277  00A0               	movwf	?_strlen
  5489  1278  01A1               	clrf	?_strlen+1
  5490  1279  1BA0               	btfsc	?_strlen,7
  5491  127A  03A1               	decf	?_strlen+1,f
  5492  127B  0008               	return
  5493  127C                     __end_of_strlen:	
  5494                           
  5495                           	psect	text11
  5496  12FD                     __ptext11:	
  5497 ;; *************** function _fputs *****************
  5498 ;; Defined at:
  5499 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  s               1    wreg     PTR const unsigned char 
  5502 ;;		 -> dbuf(80), 
  5503 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  5504 ;;		 -> NULL(0), 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  s               1   16[BANK0 ] PTR const unsigned char 
  5507 ;;		 -> dbuf(80), 
  5508 ;;  i               2   14[BANK0 ] int 
  5509 ;;  c               1   13[BANK0 ] unsigned char 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  2    9[BANK0 ] int 
  5512 ;; Registers used:
  5513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5519 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;Total ram usage:        8 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:    4
  5526 ;; This function calls:
  5527 ;;		_fputc
  5528 ;; This function is called by:
  5529 ;;		_pad
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           
  5534                           ;psect for function _fputs
  5535  12FD                     _fputs:	
  5536                           
  5537                           ;incstack = 0
  5538                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5539                           ;fputs@s stored from wreg
  5540  12FD  0140               	movlb	0	; select bank0
  5541  12FE  00B0               	movwf	fputs@s
  5542  12FF  01AE               	clrf	fputs@i
  5543  1300  01AF               	clrf	fputs@i+1
  5544  1301                     l3659:	
  5545  1301  082E               	movf	fputs@i,w
  5546  1302  0730               	addwf	fputs@s,w
  5547  1303  00AA               	movwf	??_fputs
  5548  1304  082A               	movf	??_fputs,w
  5549  1305  0086               	movwf	6
  5550  1306  3001               	movlw	1	; select bank2/3
  5551  1307  0087               	movwf	7
  5552  1308  0801               	movf	1,w
  5553  1309  00AB               	movwf	??_fputs+1
  5554  130A  082B               	movf	??_fputs+1,w
  5555  130B  00AD               	movwf	fputs@c
  5556  130C  082D               	movf	fputs@c,w
  5557  130D  1903               	btfsc	3,2
  5558  130E  0008               	return
  5559  130F  082D               	movf	fputs@c,w
  5560  1310  00AA               	movwf	??_fputs
  5561  1311  01AB               	clrf	??_fputs+1
  5562  1312  082A               	movf	??_fputs,w
  5563  1313  00A1               	movwf	fputc@c
  5564  1314  082B               	movf	??_fputs+1,w
  5565  1315  00A2               	movwf	fputc@c+1
  5566  1316  0829               	movf	fputs@fp,w
  5567  1317  00AC               	movwf	??_fputs+2
  5568  1318  082C               	movf	??_fputs+2,w
  5569  1319  00A3               	movwf	fputc@fp
  5570  131A  3193  2356  3192   	fcall	_fputc
  5571  131D  3001               	movlw	1
  5572  131E  0140               	movlb	0	; select bank0
  5573  131F  07AE               	addwf	fputs@i,f
  5574  1320  3000               	movlw	0
  5575  1321  3DAF               	addwfc	fputs@i+1,f
  5576  1322  2B01               	goto	l3659
  5577  1323                     __end_of_fputs:	
  5578                           
  5579                           	psect	text12
  5580  1356                     __ptext12:	
  5581 ;; *************** function _fputc *****************
  5582 ;; Defined at:
  5583 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  c               2    1[BANK0 ] int 
  5586 ;;  fp              1    3[BANK0 ] PTR struct _IO_FILE
  5587 ;;		 -> NULL(0), 
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;		None
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  2    1[BANK0 ] int 
  5592 ;; Registers used:
  5593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5599 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;Total ram usage:        8 bytes
  5604 ;; Hardware stack levels used:    1
  5605 ;; Hardware stack levels required when called:    3
  5606 ;; This function calls:
  5607 ;;		_putch
  5608 ;; This function is called by:
  5609 ;;		_pad
  5610 ;;		_vfpfcnvrt
  5611 ;;		_fputs
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           
  5616                           ;psect for function _fputc
  5617  1356                     _fputc:	
  5618                           
  5619                           ;incstack = 0
  5620                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5621  1356  0140               	movlb	0	; select bank0
  5622  1357  0823               	movf	fputc@fp,w
  5623  1358  1D03               	btfss	3,2
  5624  1359  0823               	movf	fputc@fp,w
  5625  135A  1D03               	btfss	3,2
  5626  135B  2B60               	goto	l3645
  5627  135C  0821               	movf	fputc@c,w
  5628  135D  3192  2217         	fcall	_putch
  5629  135F  0008               	return
  5630  1360                     l3645:	
  5631  1360  0823               	movf	fputc@fp,w
  5632  1361  3E03               	addlw	3
  5633  1362  0086               	movwf	6
  5634  1363  0187               	clrf	7
  5635  1364  0016               	moviw fsr1++
  5636  1365  0401               	iorwf	1,w
  5637  1366  1903               	btfsc	3,2
  5638  1367  2B83               	goto	l3649
  5639  1368  0823               	movf	fputc@fp,w
  5640  1369  3E03               	addlw	3
  5641  136A  0086               	movwf	6
  5642  136B  0187               	clrf	7
  5643  136C  3F40               	moviw [0]fsr1
  5644  136D  00A4               	movwf	??_fputc
  5645  136E  3F41               	moviw [1]fsr1
  5646  136F  00A5               	movwf	??_fputc+1
  5647  1370  0A23               	incf	fputc@fp,w
  5648  1371  0086               	movwf	6
  5649  1372  0187               	clrf	7
  5650  1373  3F40               	moviw [0]fsr1
  5651  1374  00A6               	movwf	??_fputc+2
  5652  1375  3F41               	moviw [1]fsr1
  5653  1376  00A7               	movwf	??_fputc+3
  5654  1377  0827               	movf	??_fputc+3,w
  5655  1378  3A80               	xorlw	128
  5656  1379  00A8               	movwf	??_fputc+4
  5657  137A  0825               	movf	??_fputc+1,w
  5658  137B  3A80               	xorlw	128
  5659  137C  0228               	subwf	??_fputc+4,w
  5660  137D  1D03               	skipz
  5661  137E  2B81               	goto	u5585
  5662  137F  0824               	movf	??_fputc,w
  5663  1380  0226               	subwf	??_fputc+2,w
  5664  1381                     u5585:	
  5665  1381  1803               	skipnc
  5666  1382  0008               	return
  5667  1383                     l3649:	
  5668  1383  0140               	movlb	0	; select bank0
  5669  1384  0A23               	incf	fputc@fp,w
  5670  1385  0086               	movwf	6
  5671  1386  0187               	clrf	7
  5672  1387  3001               	movlw	1
  5673  1388  0781               	addwf	1,f
  5674  1389  3141               	addfsr 1,1
  5675  138A  1803               	skipnc
  5676  138B  0A81               	incf	1,f
  5677  138C  0008               	return
  5678  138D                     __end_of_fputc:	
  5679                           
  5680                           	psect	text13
  5681  1217                     __ptext13:	
  5682 ;; *************** function _putch *****************
  5683 ;; Defined at:
  5684 ;;		line 27 in file "UART_funcs.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  byte            1    wreg     unsigned char 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;  byte            1    0[BANK0 ] unsigned char 
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  1    wreg      void 
  5691 ;; Registers used:
  5692 ;;		wreg
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;Total ram usage:        1 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; Hardware stack levels required when called:    2
  5705 ;; This function calls:
  5706 ;;		Nothing
  5707 ;; This function is called by:
  5708 ;;		_fputc
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           
  5713                           ;psect for function _putch
  5714  1217                     _putch:	
  5715                           
  5716                           ;incstack = 0
  5717                           ; Regs used in _putch: [wreg]
  5718                           ;putch@byte stored from wreg
  5719  1217  0140               	movlb	0	; select bank0
  5720  1218  00A0               	movwf	putch@byte
  5721                           
  5722                           ;UART_funcs.c: 27: void putch(unsigned char byte);UART_funcs.c: 28: {;UART_funcs.c: 29: 
      +                              TXSTA=0x26;
  5723  1219  3026               	movlw	38
  5724  121A  0142               	movlb	2	; select bank2
  5725  121B  009E               	movwf	30	;volatile
  5726                           
  5727                           ;UART_funcs.c: 30:     RCSTAbits.SPEN=1;
  5728  121C  179D               	bsf	29,7	;volatile
  5729                           
  5730                           ;UART_funcs.c: 31:     TXREG=byte;
  5731  121D  0140               	movlb	0	; select bank0
  5732  121E  0820               	movf	putch@byte,w
  5733  121F  0142               	movlb	2	; select bank2
  5734  1220  009A               	movwf	26	;volatile
  5735  1221                     l105:	
  5736                           ;UART_funcs.c: 32:     while(TX1STAbits.TRMT == 0)continue;
  5737                           
  5738  1221  1C9E               	btfss	30,1	;volatile
  5739  1222  2A21               	goto	l105
  5740                           
  5741                           ;UART_funcs.c: 33:     TX1STAbits.TRMT = 0;
  5742  1223  109E               	bcf	30,1	;volatile
  5743  1224  0008               	return
  5744  1225                     __end_of_putch:	
  5745                           
  5746                           	psect	text14
  5747  0721                     __ptext14:	
  5748 ;; *************** function _floorf *****************
  5749 ;; Defined at:
  5750 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  x               4   26[BANK0 ] float 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  u               4   42[BANK0 ] struct .
  5755 ;;  m               4   36[BANK0 ] unsigned long 
  5756 ;;  e               2   40[BANK0 ] int 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  4   26[BANK0 ] float 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5766 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;Total ram usage:       20 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    2
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_efgtoa
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           
  5781                           ;psect for function _floorf
  5782  0721                     _floorf:	
  5783                           
  5784                           ;incstack = 0
  5785                           ; Regs used in _floorf: [wreg+status,2+status,0]
  5786  0721  0142               	movlb	2	; select bank2
  5787  0722  0823               	movf	(floorf@F524+3)^(0+256),w
  5788  0723  0140               	movlb	0	; select bank0
  5789  0724  00CD               	movwf	floorf@u+3
  5790  0725  0142               	movlb	2	; select bank2
  5791  0726  0822               	movf	(floorf@F524+2)^(0+256),w
  5792  0727  0140               	movlb	0	; select bank0
  5793  0728  00CC               	movwf	floorf@u+2
  5794  0729  0142               	movlb	2	; select bank2
  5795  072A  0821               	movf	(floorf@F524+1)^(0+256),w
  5796  072B  0140               	movlb	0	; select bank0
  5797  072C  00CB               	movwf	floorf@u+1
  5798  072D  0142               	movlb	2	; select bank2
  5799  072E  0820               	movf	floorf@F524^(0+256),w
  5800  072F  0140               	movlb	0	; select bank0
  5801  0730  00CA               	movwf	floorf@u
  5802  0731  083D               	movf	floorf@x+3,w
  5803  0732  00CD               	movwf	floorf@u+3
  5804  0733  083C               	movf	floorf@x+2,w
  5805  0734  00CC               	movwf	floorf@u+2
  5806  0735  083B               	movf	floorf@x+1,w
  5807  0736  00CB               	movwf	floorf@u+1
  5808  0737  083A               	movf	floorf@x,w
  5809  0738  00CA               	movwf	floorf@u
  5810  0739  084A               	movf	floorf@u,w
  5811  073A  00BE               	movwf	??_floorf
  5812  073B  084B               	movf	floorf@u+1,w
  5813  073C  00BF               	movwf	??_floorf+1
  5814  073D  084C               	movf	floorf@u+2,w
  5815  073E  00C0               	movwf	??_floorf+2
  5816  073F  084D               	movf	floorf@u+3,w
  5817  0740  00C1               	movwf	??_floorf+3
  5818  0741  3017               	movlw	23
  5819  0742                     u6255:	
  5820  0742  36C1               	lsrf	??_floorf+3,f
  5821  0743  0CC0               	rrf	??_floorf+2,f
  5822  0744  0CBF               	rrf	??_floorf+1,f
  5823  0745  0CBE               	rrf	??_floorf,f
  5824  0746  0B89               	decfsz	9,f
  5825  0747  2F42               	goto	u6255
  5826  0748  30FF               	movlw	255
  5827  0749  053E               	andwf	??_floorf,w
  5828  074A  00C2               	movwf	??_floorf+4
  5829  074B  3000               	movlw	0
  5830  074C  053F               	andwf	??_floorf+1,w
  5831  074D  00C3               	movwf	??_floorf+5
  5832  074E  0842               	movf	??_floorf+4,w
  5833  074F  3E81               	addlw	129
  5834  0750  00C8               	movwf	floorf@e
  5835  0751  30FF               	movlw	255
  5836  0752  3D43               	addwfc	??_floorf+5,w
  5837  0753  00C9               	movwf	floorf@e+1
  5838  0754  0849               	movf	floorf@e+1,w
  5839  0755  3A80               	xorlw	128
  5840  0756  00BE               	movwf	??_floorf
  5841  0757  3080               	movlw	128
  5842  0758  023E               	subwf	??_floorf,w
  5843  0759  1D03               	skipz
  5844  075A  2F5D               	goto	u6265
  5845  075B  3017               	movlw	23
  5846  075C  0248               	subwf	floorf@e,w
  5847  075D                     u6265:	
  5848  075D  1803               	btfsc	3,0
  5849  075E  0008               	return
  5850  075F  0140               	movlb	0	; select bank0
  5851  0760  1BC9               	btfsc	floorf@e+1,7
  5852  0761  2FBA               	goto	l3961
  5853  0762  30FF               	movlw	255
  5854  0763  00BE               	movwf	??_floorf
  5855  0764  30FF               	movlw	255
  5856  0765  00BF               	movwf	??_floorf+1
  5857  0766  307F               	movlw	127
  5858  0767  00C0               	movwf	??_floorf+2
  5859  0768  3000               	movlw	0
  5860  0769  00C1               	movwf	??_floorf+3
  5861  076A  0A48               	incf	floorf@e,w
  5862  076B  2F70               	goto	u6280
  5863  076C                     u6285:	
  5864  076C  37C1               	asrf	??_floorf+3,f
  5865  076D  0CC0               	rrf	??_floorf+2,f
  5866  076E  0CBF               	rrf	??_floorf+1,f
  5867  076F  0CBE               	rrf	??_floorf,f
  5868  0770                     u6280:	
  5869  0770  0B89               	decfsz	9,f
  5870  0771  2F6C               	goto	u6285
  5871  0772  0841               	movf	??_floorf+3,w
  5872  0773  00C7               	movwf	floorf@m+3
  5873  0774  0840               	movf	??_floorf+2,w
  5874  0775  00C6               	movwf	floorf@m+2
  5875  0776  083F               	movf	??_floorf+1,w
  5876  0777  00C5               	movwf	floorf@m+1
  5877  0778  083E               	movf	??_floorf,w
  5878  0779  00C4               	movwf	floorf@m
  5879  077A  084A               	movf	floorf@u,w
  5880  077B  0544               	andwf	floorf@m,w
  5881  077C  00BE               	movwf	??_floorf
  5882  077D  084B               	movf	floorf@u+1,w
  5883  077E  0545               	andwf	floorf@m+1,w
  5884  077F  00BF               	movwf	??_floorf+1
  5885  0780  084C               	movf	floorf@u+2,w
  5886  0781  0546               	andwf	floorf@m+2,w
  5887  0782  00C0               	movwf	??_floorf+2
  5888  0783  084D               	movf	floorf@u+3,w
  5889  0784  0547               	andwf	floorf@m+3,w
  5890  0785  00C1               	movwf	??_floorf+3
  5891  0786  0841               	movf	??_floorf+3,w
  5892  0787  0440               	iorwf	??_floorf+2,w
  5893  0788  043F               	iorwf	??_floorf+1,w
  5894  0789  043E               	iorwf	??_floorf,w
  5895  078A  1903               	btfsc	3,2
  5896  078B  0008               	return
  5897  078C  084A               	movf	floorf@u,w
  5898  078D  00BE               	movwf	??_floorf
  5899  078E  084B               	movf	floorf@u+1,w
  5900  078F  00BF               	movwf	??_floorf+1
  5901  0790  084C               	movf	floorf@u+2,w
  5902  0791  00C0               	movwf	??_floorf+2
  5903  0792  084D               	movf	floorf@u+3,w
  5904  0793  00C1               	movwf	??_floorf+3
  5905  0794  301F               	movlw	31
  5906  0795                     u6305:	
  5907  0795  36C1               	lsrf	??_floorf+3,f
  5908  0796  0CC0               	rrf	??_floorf+2,f
  5909  0797  0CBF               	rrf	??_floorf+1,f
  5910  0798  0CBE               	rrf	??_floorf,f
  5911  0799  0B89               	decfsz	9,f
  5912  079A  2F95               	goto	u6305
  5913  079B  0841               	movf	??_floorf+3,w
  5914  079C  0440               	iorwf	??_floorf+2,w
  5915  079D  043F               	iorwf	??_floorf+1,w
  5916  079E  043E               	iorwf	??_floorf,w
  5917  079F  1903               	skipnz
  5918  07A0  2FA9               	goto	l3959
  5919  07A1  0844               	movf	floorf@m,w
  5920  07A2  07CA               	addwf	floorf@u,f
  5921  07A3  0845               	movf	floorf@m+1,w
  5922  07A4  3DCB               	addwfc	floorf@u+1,f
  5923  07A5  0846               	movf	floorf@m+2,w
  5924  07A6  3DCC               	addwfc	floorf@u+2,f
  5925  07A7  0847               	movf	floorf@m+3,w
  5926  07A8  3DCD               	addwfc	floorf@u+3,f
  5927  07A9                     l3959:	
  5928  07A9  0944               	comf	floorf@m,w
  5929  07AA  00BE               	movwf	??_floorf
  5930  07AB  0945               	comf	floorf@m+1,w
  5931  07AC  00BF               	movwf	??_floorf+1
  5932  07AD  0946               	comf	floorf@m+2,w
  5933  07AE  00C0               	movwf	??_floorf+2
  5934  07AF  0947               	comf	floorf@m+3,w
  5935  07B0  00C1               	movwf	??_floorf+3
  5936  07B1  083E               	movf	??_floorf,w
  5937  07B2  05CA               	andwf	floorf@u,f
  5938  07B3  083F               	movf	??_floorf+1,w
  5939  07B4  05CB               	andwf	floorf@u+1,f
  5940  07B5  0840               	movf	??_floorf+2,w
  5941  07B6  05CC               	andwf	floorf@u+2,f
  5942  07B7  0841               	movf	??_floorf+3,w
  5943  07B8  05CD               	andwf	floorf@u+3,f
  5944  07B9  2FF0               	goto	l807
  5945  07BA                     l3961:	
  5946  07BA  084A               	movf	floorf@u,w
  5947  07BB  00BE               	movwf	??_floorf
  5948  07BC  084B               	movf	floorf@u+1,w
  5949  07BD  00BF               	movwf	??_floorf+1
  5950  07BE  084C               	movf	floorf@u+2,w
  5951  07BF  00C0               	movwf	??_floorf+2
  5952  07C0  084D               	movf	floorf@u+3,w
  5953  07C1  00C1               	movwf	??_floorf+3
  5954  07C2  301F               	movlw	31
  5955  07C3                     u6325:	
  5956  07C3  36C1               	lsrf	??_floorf+3,f
  5957  07C4  0CC0               	rrf	??_floorf+2,f
  5958  07C5  0CBF               	rrf	??_floorf+1,f
  5959  07C6  0CBE               	rrf	??_floorf,f
  5960  07C7  0B89               	decfsz	9,f
  5961  07C8  2FC3               	goto	u6325
  5962  07C9  0841               	movf	??_floorf+3,w
  5963  07CA  0440               	iorwf	??_floorf+2,w
  5964  07CB  043F               	iorwf	??_floorf+1,w
  5965  07CC  043E               	iorwf	??_floorf,w
  5966  07CD  1D03               	skipz
  5967  07CE  2FD3               	goto	l3965
  5968  07CF  3000               	movlw	0
  5969  07D0  00CD               	movwf	floorf@u+3
  5970  07D1  3000               	movlw	0
  5971  07D2  2FEB               	goto	L9
  5972  07D3                     l3965:	
  5973  07D3  084A               	movf	floorf@u,w
  5974  07D4  00BE               	movwf	??_floorf
  5975  07D5  084B               	movf	floorf@u+1,w
  5976  07D6  00BF               	movwf	??_floorf+1
  5977  07D7  084C               	movf	floorf@u+2,w
  5978  07D8  00C0               	movwf	??_floorf+2
  5979  07D9  084D               	movf	floorf@u+3,w
  5980  07DA  00C1               	movwf	??_floorf+3
  5981  07DB  3001               	movlw	1
  5982  07DC                     u6345:	
  5983  07DC  35BE               	lslf	??_floorf,f
  5984  07DD  0DBF               	rlf	??_floorf+1,f
  5985  07DE  0DC0               	rlf	??_floorf+2,f
  5986  07DF  0DC1               	rlf	??_floorf+3,f
  5987  07E0  0B89               	decfsz	9,f
  5988  07E1  2FDC               	goto	u6345
  5989  07E2  0841               	movf	??_floorf+3,w
  5990  07E3  0440               	iorwf	??_floorf+2,w
  5991  07E4  043F               	iorwf	??_floorf+1,w
  5992  07E5  043E               	iorwf	??_floorf,w
  5993  07E6  1903               	skipnz
  5994  07E7  2FF0               	goto	l807
  5995  07E8  30BF               	movlw	191
  5996  07E9  00CD               	movwf	floorf@u+3
  5997  07EA  3080               	movlw	128
  5998  07EB                     L9:	
  5999  07EB  00CC               	movwf	floorf@u+2
  6000  07EC  3000               	movlw	0
  6001  07ED  00CB               	movwf	floorf@u+1
  6002  07EE  3000               	movlw	0
  6003  07EF  00CA               	movwf	floorf@u
  6004  07F0                     l807:	
  6005  07F0  084D               	movf	floorf@u+3,w
  6006  07F1  00BD               	movwf	?_floorf+3
  6007  07F2  084C               	movf	floorf@u+2,w
  6008  07F3  00BC               	movwf	?_floorf+2
  6009  07F4  084B               	movf	floorf@u+1,w
  6010  07F5  00BB               	movwf	?_floorf+1
  6011  07F6  084A               	movf	floorf@u,w
  6012  07F7  00BA               	movwf	?_floorf
  6013  07F8  0008               	return
  6014  07F9                     __end_of_floorf:	
  6015                           
  6016                           	psect	text15
  6017  1582                     __ptext15:	
  6018 ;; *************** function ___fpclassifyf *****************
  6019 ;; Defined at:
  6020 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;  x               4    0[BANK0 ] float 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;  u               4   12[BANK0 ] struct .
  6025 ;;  e               2   10[BANK0 ] int 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  2    0[BANK0 ] int 
  6028 ;; Registers used:
  6029 ;;		wreg, status,2, status,0
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6035 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6038 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6039 ;;Total ram usage:       16 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    2
  6042 ;; This function calls:
  6043 ;;		Nothing
  6044 ;; This function is called by:
  6045 ;;		_efgtoa
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           
  6050                           ;psect for function ___fpclassifyf
  6051  1582                     ___fpclassifyf:	
  6052                           
  6053                           ;incstack = 0
  6054                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  6055  1582  0142               	movlb	2	; select bank2
  6056  1583  0827               	movf	(___fpclassifyf@F463+3)^(0+256),w
  6057  1584  0140               	movlb	0	; select bank0
  6058  1585  00AF               	movwf	___fpclassifyf@u+3
  6059  1586  0142               	movlb	2	; select bank2
  6060  1587  0826               	movf	(___fpclassifyf@F463+2)^(0+256),w
  6061  1588  0140               	movlb	0	; select bank0
  6062  1589  00AE               	movwf	___fpclassifyf@u+2
  6063  158A  0142               	movlb	2	; select bank2
  6064  158B  0825               	movf	(___fpclassifyf@F463+1)^(0+256),w
  6065  158C  0140               	movlb	0	; select bank0
  6066  158D  00AD               	movwf	___fpclassifyf@u+1
  6067  158E  0142               	movlb	2	; select bank2
  6068  158F  0824               	movf	___fpclassifyf@F463^(0+256),w
  6069  1590  0140               	movlb	0	; select bank0
  6070  1591  00AC               	movwf	___fpclassifyf@u
  6071  1592  0823               	movf	___fpclassifyf@x+3,w
  6072  1593  00AF               	movwf	___fpclassifyf@u+3
  6073  1594  0822               	movf	___fpclassifyf@x+2,w
  6074  1595  00AE               	movwf	___fpclassifyf@u+2
  6075  1596  0821               	movf	___fpclassifyf@x+1,w
  6076  1597  00AD               	movwf	___fpclassifyf@u+1
  6077  1598  0820               	movf	___fpclassifyf@x,w
  6078  1599  00AC               	movwf	___fpclassifyf@u
  6079  159A  082C               	movf	___fpclassifyf@u,w
  6080  159B  00A4               	movwf	??___fpclassifyf
  6081  159C  082D               	movf	___fpclassifyf@u+1,w
  6082  159D  00A5               	movwf	??___fpclassifyf+1
  6083  159E  082E               	movf	___fpclassifyf@u+2,w
  6084  159F  00A6               	movwf	??___fpclassifyf+2
  6085  15A0  082F               	movf	___fpclassifyf@u+3,w
  6086  15A1  00A7               	movwf	??___fpclassifyf+3
  6087  15A2  3017               	movlw	23
  6088  15A3                     u6135:	
  6089  15A3  36A7               	lsrf	??___fpclassifyf+3,f
  6090  15A4  0CA6               	rrf	??___fpclassifyf+2,f
  6091  15A5  0CA5               	rrf	??___fpclassifyf+1,f
  6092  15A6  0CA4               	rrf	??___fpclassifyf,f
  6093  15A7  0B89               	decfsz	9,f
  6094  15A8  2DA3               	goto	u6135
  6095  15A9  30FF               	movlw	255
  6096  15AA  0524               	andwf	??___fpclassifyf,w
  6097  15AB  00AA               	movwf	___fpclassifyf@e
  6098  15AC  3000               	movlw	0
  6099  15AD  0525               	andwf	??___fpclassifyf+1,w
  6100  15AE  00AB               	movwf	___fpclassifyf@e+1
  6101  15AF  082A               	movf	___fpclassifyf@e,w
  6102  15B0  042B               	iorwf	___fpclassifyf@e+1,w
  6103  15B1  1D03               	btfss	3,2
  6104  15B2  2DD2               	goto	l3917
  6105  15B3  082C               	movf	___fpclassifyf@u,w
  6106  15B4  00A4               	movwf	??___fpclassifyf
  6107  15B5  082D               	movf	___fpclassifyf@u+1,w
  6108  15B6  00A5               	movwf	??___fpclassifyf+1
  6109  15B7  082E               	movf	___fpclassifyf@u+2,w
  6110  15B8  00A6               	movwf	??___fpclassifyf+2
  6111  15B9  082F               	movf	___fpclassifyf@u+3,w
  6112  15BA  00A7               	movwf	??___fpclassifyf+3
  6113  15BB  3001               	movlw	1
  6114  15BC                     u6155:	
  6115  15BC  35A4               	lslf	??___fpclassifyf,f
  6116  15BD  0DA5               	rlf	??___fpclassifyf+1,f
  6117  15BE  0DA6               	rlf	??___fpclassifyf+2,f
  6118  15BF  0DA7               	rlf	??___fpclassifyf+3,f
  6119  15C0  0B89               	decfsz	9,f
  6120  15C1  2DBC               	goto	u6155
  6121  15C2  0827               	movf	??___fpclassifyf+3,w
  6122  15C3  0426               	iorwf	??___fpclassifyf+2,w
  6123  15C4  0425               	iorwf	??___fpclassifyf+1,w
  6124  15C5  0424               	iorwf	??___fpclassifyf,w
  6125  15C6  1D03               	skipz
  6126  15C7  2DCD               	goto	l3913
  6127  15C8  3002               	movlw	2
  6128  15C9  00A0               	movwf	?___fpclassifyf
  6129  15CA  3000               	movlw	0
  6130  15CB  00A1               	movwf	?___fpclassifyf+1
  6131  15CC  0008               	return
  6132  15CD                     l3913:	
  6133  15CD  3003               	movlw	3
  6134  15CE  00A0               	movwf	?___fpclassifyf
  6135  15CF  3000               	movlw	0
  6136  15D0  00A1               	movwf	?___fpclassifyf+1
  6137  15D1  0008               	return
  6138  15D2                     l3917:	
  6139  15D2  0A2A               	incf	___fpclassifyf@e,w
  6140  15D3  042B               	iorwf	___fpclassifyf@e+1,w
  6141  15D4  1D03               	btfss	3,2
  6142  15D5  2DF5               	goto	l3923
  6143  15D6  082C               	movf	___fpclassifyf@u,w
  6144  15D7  00A4               	movwf	??___fpclassifyf
  6145  15D8  082D               	movf	___fpclassifyf@u+1,w
  6146  15D9  00A5               	movwf	??___fpclassifyf+1
  6147  15DA  082E               	movf	___fpclassifyf@u+2,w
  6148  15DB  00A6               	movwf	??___fpclassifyf+2
  6149  15DC  082F               	movf	___fpclassifyf@u+3,w
  6150  15DD  00A7               	movwf	??___fpclassifyf+3
  6151  15DE  3009               	movlw	9
  6152  15DF                     u6185:	
  6153  15DF  35A4               	lslf	??___fpclassifyf,f
  6154  15E0  0DA5               	rlf	??___fpclassifyf+1,f
  6155  15E1  0DA6               	rlf	??___fpclassifyf+2,f
  6156  15E2  0DA7               	rlf	??___fpclassifyf+3,f
  6157  15E3  0B89               	decfsz	9,f
  6158  15E4  2DDF               	goto	u6185
  6159  15E5  0827               	movf	??___fpclassifyf+3,w
  6160  15E6  0426               	iorwf	??___fpclassifyf+2,w
  6161  15E7  0425               	iorwf	??___fpclassifyf+1,w
  6162  15E8  0424               	iorwf	??___fpclassifyf,w
  6163  15E9  1D03               	btfss	3,2
  6164  15EA  2DED               	goto	u6190
  6165  15EB  3001               	movlw	1
  6166  15EC  2DEE               	goto	u6200
  6167  15ED                     u6190:	
  6168  15ED  3000               	movlw	0
  6169  15EE                     u6200:	
  6170  15EE  00A8               	movwf	??___fpclassifyf+4
  6171  15EF  01A9               	clrf	??___fpclassifyf+5
  6172  15F0  0828               	movf	??___fpclassifyf+4,w
  6173  15F1  00A0               	movwf	?___fpclassifyf
  6174  15F2  0829               	movf	??___fpclassifyf+5,w
  6175  15F3  00A1               	movwf	?___fpclassifyf+1
  6176  15F4  0008               	return
  6177  15F5                     l3923:	
  6178  15F5  3004               	movlw	4
  6179  15F6  00A0               	movwf	?___fpclassifyf
  6180  15F7  3000               	movlw	0
  6181  15F8  00A1               	movwf	?___fpclassifyf+1
  6182  15F9  0008               	return
  6183  15FA                     __end_of___fpclassifyf:	
  6184                           
  6185                           	psect	text16
  6186  151C                     __ptext16:	
  6187 ;; *************** function ___fltol *****************
  6188 ;; Defined at:
  6189 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  f1              4    0[BANK0 ] int 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;  exp1            1   10[BANK0 ] unsigned char 
  6194 ;;  sign1           1    9[BANK0 ] unsigned char 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  4    0[BANK0 ] long 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6204 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6208 ;;Total ram usage:       11 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    2
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_efgtoa
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           
  6219                           ;psect for function ___fltol
  6220  151C                     ___fltol:	
  6221                           
  6222                           ;incstack = 0
  6223                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6224  151C  1003               	clrc
  6225  151D  0140               	movlb	0	; select bank0
  6226  151E  0D22               	rlf	___fltol@f1+2,w
  6227  151F  0D23               	rlf	___fltol@f1+3,w
  6228  1520  00A4               	movwf	??___fltol
  6229  1521  0824               	movf	??___fltol,w
  6230  1522  00AA               	movwf	___fltol@exp1
  6231  1523  082A               	movf	___fltol@exp1,w
  6232  1524  1D03               	btfss	3,2
  6233  1525  2D2F               	goto	l4099
  6234  1526                     l4095:	
  6235  1526  3000               	movlw	0
  6236  1527  00A3               	movwf	?___fltol+3
  6237  1528  3000               	movlw	0
  6238  1529  00A2               	movwf	?___fltol+2
  6239  152A  3000               	movlw	0
  6240  152B  00A1               	movwf	?___fltol+1
  6241  152C  3000               	movlw	0
  6242  152D  00A0               	movwf	?___fltol
  6243  152E  0008               	return
  6244  152F                     l4099:	
  6245  152F  0820               	movf	___fltol@f1,w
  6246  1530  00A4               	movwf	??___fltol
  6247  1531  0821               	movf	___fltol@f1+1,w
  6248  1532  00A5               	movwf	??___fltol+1
  6249  1533  0822               	movf	___fltol@f1+2,w
  6250  1534  00A6               	movwf	??___fltol+2
  6251  1535  0823               	movf	___fltol@f1+3,w
  6252  1536  00A7               	movwf	??___fltol+3
  6253  1537  301F               	movlw	31
  6254  1538                     u6655:	
  6255  1538  36A7               	lsrf	??___fltol+3,f
  6256  1539  0CA6               	rrf	??___fltol+2,f
  6257  153A  0CA5               	rrf	??___fltol+1,f
  6258  153B  0CA4               	rrf	??___fltol,f
  6259  153C  0B89               	decfsz	9,f
  6260  153D  2D38               	goto	u6655
  6261  153E  0824               	movf	??___fltol,w
  6262  153F  00A8               	movwf	??___fltol+4
  6263  1540  0828               	movf	??___fltol+4,w
  6264  1541  00A9               	movwf	___fltol@sign1
  6265  1542  17A2               	bsf	___fltol@f1+2,7
  6266  1543  30FF               	movlw	255
  6267  1544  05A0               	andwf	___fltol@f1,f
  6268  1545  30FF               	movlw	255
  6269  1546  05A1               	andwf	___fltol@f1+1,f
  6270  1547  30FF               	movlw	255
  6271  1548  05A2               	andwf	___fltol@f1+2,f
  6272  1549  3000               	movlw	0
  6273  154A  05A3               	andwf	___fltol@f1+3,f
  6274  154B  3096               	movlw	150
  6275  154C  02AA               	subwf	___fltol@exp1,f
  6276  154D  1FAA               	btfss	___fltol@exp1,7
  6277  154E  2D62               	goto	l4117
  6278  154F  082A               	movf	___fltol@exp1,w
  6279  1550  3A80               	xorlw	128
  6280  1551  3E97               	addlw	151
  6281  1552  1C03               	btfss	3,0
  6282  1553  2D26               	goto	l4095
  6283  1554                     l4115:	
  6284  1554  3001               	movlw	1
  6285  1555                     u6685:	
  6286  1555  36A3               	lsrf	___fltol@f1+3,f
  6287  1556  0CA2               	rrf	___fltol@f1+2,f
  6288  1557  0CA1               	rrf	___fltol@f1+1,f
  6289  1558  0CA0               	rrf	___fltol@f1,f
  6290  1559  0B89               	decfsz	9,f
  6291  155A  2D55               	goto	u6685
  6292  155B  3001               	movlw	1
  6293  155C  00A4               	movwf	??___fltol
  6294  155D  0824               	movf	??___fltol,w
  6295  155E  07AA               	addwf	___fltol@exp1,f
  6296  155F  1903               	btfsc	3,2
  6297  1560  2D73               	goto	l4125
  6298  1561  2D54               	goto	l4115
  6299  1562                     l4117:	
  6300  1562  3020               	movlw	32
  6301  1563  022A               	subwf	___fltol@exp1,w
  6302  1564  1803               	btfsc	3,0
  6303  1565  2D26               	goto	l4095
  6304  1566                     l537:	
  6305  1566  082A               	movf	___fltol@exp1,w
  6306  1567  1903               	btfsc	3,2
  6307  1568  2D73               	goto	l4125
  6308  1569  3001               	movlw	1
  6309  156A                     u6715:	
  6310  156A  35A0               	lslf	___fltol@f1,f
  6311  156B  0DA1               	rlf	___fltol@f1+1,f
  6312  156C  0DA2               	rlf	___fltol@f1+2,f
  6313  156D  0DA3               	rlf	___fltol@f1+3,f
  6314  156E  0B89               	decfsz	9,f
  6315  156F  2D6A               	goto	u6715
  6316  1570  3001               	movlw	1
  6317  1571  02AA               	subwf	___fltol@exp1,f
  6318  1572  2D66               	goto	l537
  6319  1573                     l4125:	
  6320  1573  0829               	movf	___fltol@sign1,w
  6321  1574  1903               	btfsc	3,2
  6322  1575  0008               	return
  6323  1576  09A0               	comf	___fltol@f1,f
  6324  1577  09A1               	comf	___fltol@f1+1,f
  6325  1578  09A2               	comf	___fltol@f1+2,f
  6326  1579  09A3               	comf	___fltol@f1+3,f
  6327  157A  0AA0               	incf	___fltol@f1,f
  6328  157B  1903               	skipnz
  6329  157C  0AA1               	incf	___fltol@f1+1,f
  6330  157D  1903               	skipnz
  6331  157E  0AA2               	incf	___fltol@f1+2,f
  6332  157F  1903               	skipnz
  6333  1580  0AA3               	incf	___fltol@f1+3,f
  6334  1581  0008               	return
  6335  1582                     __end_of___fltol:	
  6336                           
  6337                           	psect	text17
  6338  127C                     __ptext17:	
  6339 ;; *************** function ___flsub *****************
  6340 ;; Defined at:
  6341 ;;		line 242 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  a               4   40[BANK0 ] long 
  6344 ;;  b               4   44[BANK0 ] long 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  4   40[BANK0 ] long 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, pclath, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6356 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6360 ;;Total ram usage:        8 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    3
  6363 ;; This function calls:
  6364 ;;		___fladd
  6365 ;; This function is called by:
  6366 ;;		_efgtoa
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           
  6371                           ;psect for function ___flsub
  6372  127C                     ___flsub:	
  6373                           
  6374                           ;incstack = 0
  6375                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  6376  127C  3080               	movlw	128
  6377  127D  0140               	movlb	0	; select bank0
  6378  127E  06CB               	xorwf	___flsub@a+3,f
  6379  127F  084F               	movf	___flsub@b+3,w
  6380  1280  00A3               	movwf	___fladd@b+3
  6381  1281  084E               	movf	___flsub@b+2,w
  6382  1282  00A2               	movwf	___fladd@b+2
  6383  1283  084D               	movf	___flsub@b+1,w
  6384  1284  00A1               	movwf	___fladd@b+1
  6385  1285  084C               	movf	___flsub@b,w
  6386  1286  00A0               	movwf	___fladd@b
  6387  1287  084B               	movf	___flsub@a+3,w
  6388  1288  00A7               	movwf	___fladd@a+3
  6389  1289  084A               	movf	___flsub@a+2,w
  6390  128A  00A6               	movwf	___fladd@a+2
  6391  128B  0849               	movf	___flsub@a+1,w
  6392  128C  00A5               	movwf	___fladd@a+1
  6393  128D  0848               	movf	___flsub@a,w
  6394  128E  00A4               	movwf	___fladd@a
  6395  128F  318B  23F2         	fcall	___fladd
  6396  1291  0140               	movlb	0	; select bank0
  6397  1292  0823               	movf	?___fladd+3,w
  6398  1293  00CB               	movwf	?___flsub+3
  6399  1294  0822               	movf	?___fladd+2,w
  6400  1295  00CA               	movwf	?___flsub+2
  6401  1296  0821               	movf	?___fladd+1,w
  6402  1297  00C9               	movwf	?___flsub+1
  6403  1298  0820               	movf	?___fladd,w
  6404  1299  00C8               	movwf	?___flsub
  6405  129A  0008               	return
  6406  129B                     __end_of___flsub:	
  6407                           
  6408                           	psect	text18
  6409  0BF2                     __ptext18:	
  6410 ;; *************** function ___fladd *****************
  6411 ;; Defined at:
  6412 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  b               4    0[BANK0 ] long 
  6415 ;;  a               4    4[BANK0 ] long 
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;  grs             1   19[BANK0 ] unsigned char 
  6418 ;;  bexp            1   18[BANK0 ] unsigned char 
  6419 ;;  aexp            1   17[BANK0 ] unsigned char 
  6420 ;;  signs           1   16[BANK0 ] unsigned char 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  4    0[BANK0 ] unsigned char 
  6423 ;; Registers used:
  6424 ;;		wreg, status,2, status,0
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6430 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;Total ram usage:       20 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    2
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_efgtoa
  6441 ;;		___flsub
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           
  6446                           ;psect for function ___fladd
  6447  0BF2                     ___fladd:	
  6448                           
  6449                           ;incstack = 0
  6450                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  6451  0BF2  0140               	movlb	0	; select bank0
  6452  0BF3  0823               	movf	___fladd@b+3,w
  6453  0BF4  3980               	andlw	128
  6454  0BF5  00A8               	movwf	??___fladd
  6455  0BF6  0828               	movf	??___fladd,w
  6456  0BF7  00B0               	movwf	___fladd@signs
  6457  0BF8  3523               	lslf	___fladd@b+3,w
  6458  0BF9  00A8               	movwf	??___fladd
  6459  0BFA  0828               	movf	??___fladd,w
  6460  0BFB  00B2               	movwf	___fladd@bexp
  6461  0BFC  1BA2               	btfsc	___fladd@b+2,7
  6462  0BFD  1432               	bsf	___fladd@bexp,0
  6463  0BFE  0832               	movf	___fladd@bexp,w
  6464  0BFF  1903               	btfsc	3,2
  6465  0C00  2C0F               	goto	l3693
  6466  0C01  0A32               	incf	___fladd@bexp,w
  6467  0C02  1D03               	btfss	3,2
  6468  0C03  2C0C               	goto	l3689
  6469  0C04  3000               	movlw	0
  6470  0C05  00A3               	movwf	___fladd@b+3
  6471  0C06  3000               	movlw	0
  6472  0C07  00A2               	movwf	___fladd@b+2
  6473  0C08  3000               	movlw	0
  6474  0C09  00A1               	movwf	___fladd@b+1
  6475  0C0A  3000               	movlw	0
  6476  0C0B  00A0               	movwf	___fladd@b
  6477  0C0C                     l3689:	
  6478  0C0C  17A2               	bsf	___fladd@b+2,7
  6479  0C0D  01A3               	clrf	___fladd@b+3
  6480  0C0E  2C17               	goto	l3695
  6481  0C0F                     l3693:	
  6482  0C0F  3000               	movlw	0
  6483  0C10  00A3               	movwf	___fladd@b+3
  6484  0C11  3000               	movlw	0
  6485  0C12  00A2               	movwf	___fladd@b+2
  6486  0C13  3000               	movlw	0
  6487  0C14  00A1               	movwf	___fladd@b+1
  6488  0C15  3000               	movlw	0
  6489  0C16  00A0               	movwf	___fladd@b
  6490  0C17                     l3695:	
  6491  0C17  0827               	movf	___fladd@a+3,w
  6492  0C18  3980               	andlw	128
  6493  0C19  00A8               	movwf	??___fladd
  6494  0C1A  0828               	movf	??___fladd,w
  6495  0C1B  00B1               	movwf	___fladd@aexp
  6496  0C1C  0831               	movf	___fladd@aexp,w
  6497  0C1D  0630               	xorwf	___fladd@signs,w
  6498  0C1E  1D03               	btfss	3,2
  6499  0C1F  1730               	bsf	___fladd@signs,6
  6500  0C20  3527               	lslf	___fladd@a+3,w
  6501  0C21  00A8               	movwf	??___fladd
  6502  0C22  0828               	movf	??___fladd,w
  6503  0C23  00B1               	movwf	___fladd@aexp
  6504  0C24  1BA6               	btfsc	___fladd@a+2,7
  6505  0C25  1431               	bsf	___fladd@aexp,0
  6506  0C26  0831               	movf	___fladd@aexp,w
  6507  0C27  1903               	btfsc	3,2
  6508  0C28  2C37               	goto	l3717
  6509  0C29  0A31               	incf	___fladd@aexp,w
  6510  0C2A  1D03               	btfss	3,2
  6511  0C2B  2C34               	goto	l3713
  6512  0C2C  3000               	movlw	0
  6513  0C2D  00A7               	movwf	___fladd@a+3
  6514  0C2E  3000               	movlw	0
  6515  0C2F  00A6               	movwf	___fladd@a+2
  6516  0C30  3000               	movlw	0
  6517  0C31  00A5               	movwf	___fladd@a+1
  6518  0C32  3000               	movlw	0
  6519  0C33  00A4               	movwf	___fladd@a
  6520  0C34                     l3713:	
  6521  0C34  17A6               	bsf	___fladd@a+2,7
  6522  0C35  01A7               	clrf	___fladd@a+3
  6523  0C36  2C3F               	goto	l637
  6524  0C37                     l3717:	
  6525  0C37  3000               	movlw	0
  6526  0C38  00A7               	movwf	___fladd@a+3
  6527  0C39  3000               	movlw	0
  6528  0C3A  00A6               	movwf	___fladd@a+2
  6529  0C3B  3000               	movlw	0
  6530  0C3C  00A5               	movwf	___fladd@a+1
  6531  0C3D  3000               	movlw	0
  6532  0C3E  00A4               	movwf	___fladd@a
  6533  0C3F                     l637:	
  6534  0C3F  0832               	movf	___fladd@bexp,w
  6535  0C40  0231               	subwf	___fladd@aexp,w
  6536  0C41  1803               	skipnc
  6537  0C42  2C85               	goto	l3753
  6538  0C43  1F30               	btfss	___fladd@signs,6
  6539  0C44  2C49               	goto	l3723
  6540  0C45  3080               	movlw	128
  6541  0C46  00A8               	movwf	??___fladd
  6542  0C47  0828               	movf	??___fladd,w
  6543  0C48  06B0               	xorwf	___fladd@signs,f
  6544  0C49                     l3723:	
  6545  0C49  0832               	movf	___fladd@bexp,w
  6546  0C4A  00A8               	movwf	??___fladd
  6547  0C4B  0828               	movf	??___fladd,w
  6548  0C4C  00B3               	movwf	___fladd@grs
  6549  0C4D  0831               	movf	___fladd@aexp,w
  6550  0C4E  00A8               	movwf	??___fladd
  6551  0C4F  0828               	movf	??___fladd,w
  6552  0C50  00B2               	movwf	___fladd@bexp
  6553  0C51  0833               	movf	___fladd@grs,w
  6554  0C52  00A8               	movwf	??___fladd
  6555  0C53  0828               	movf	??___fladd,w
  6556  0C54  00B1               	movwf	___fladd@aexp
  6557  0C55  0820               	movf	___fladd@b,w
  6558  0C56  00A8               	movwf	??___fladd
  6559  0C57  0828               	movf	??___fladd,w
  6560  0C58  00B3               	movwf	___fladd@grs
  6561  0C59  0824               	movf	___fladd@a,w
  6562  0C5A  00A8               	movwf	??___fladd
  6563  0C5B  0828               	movf	??___fladd,w
  6564  0C5C  00A0               	movwf	___fladd@b
  6565  0C5D  0833               	movf	___fladd@grs,w
  6566  0C5E  00A8               	movwf	??___fladd
  6567  0C5F  0828               	movf	??___fladd,w
  6568  0C60  00A4               	movwf	___fladd@a
  6569  0C61  0821               	movf	___fladd@b+1,w
  6570  0C62  00A8               	movwf	??___fladd
  6571  0C63  0828               	movf	??___fladd,w
  6572  0C64  00B3               	movwf	___fladd@grs
  6573  0C65  0825               	movf	___fladd@a+1,w
  6574  0C66  00A8               	movwf	??___fladd
  6575  0C67  0828               	movf	??___fladd,w
  6576  0C68  00A1               	movwf	___fladd@b+1
  6577  0C69  0833               	movf	___fladd@grs,w
  6578  0C6A  00A8               	movwf	??___fladd
  6579  0C6B  0828               	movf	??___fladd,w
  6580  0C6C  00A5               	movwf	___fladd@a+1
  6581  0C6D  0822               	movf	___fladd@b+2,w
  6582  0C6E  00A8               	movwf	??___fladd
  6583  0C6F  0828               	movf	??___fladd,w
  6584  0C70  00B3               	movwf	___fladd@grs
  6585  0C71  0826               	movf	___fladd@a+2,w
  6586  0C72  00A8               	movwf	??___fladd
  6587  0C73  0828               	movf	??___fladd,w
  6588  0C74  00A2               	movwf	___fladd@b+2
  6589  0C75  0833               	movf	___fladd@grs,w
  6590  0C76  00A8               	movwf	??___fladd
  6591  0C77  0828               	movf	??___fladd,w
  6592  0C78  00A6               	movwf	___fladd@a+2
  6593  0C79  0823               	movf	___fladd@b+3,w
  6594  0C7A  00A8               	movwf	??___fladd
  6595  0C7B  0828               	movf	??___fladd,w
  6596  0C7C  00B3               	movwf	___fladd@grs
  6597  0C7D  0827               	movf	___fladd@a+3,w
  6598  0C7E  00A8               	movwf	??___fladd
  6599  0C7F  0828               	movf	??___fladd,w
  6600  0C80  00A3               	movwf	___fladd@b+3
  6601  0C81  0833               	movf	___fladd@grs,w
  6602  0C82  00A8               	movwf	??___fladd
  6603  0C83  0828               	movf	??___fladd,w
  6604  0C84  00A7               	movwf	___fladd@a+3
  6605  0C85                     l3753:	
  6606  0C85  01B3               	clrf	___fladd@grs
  6607  0C86  0831               	movf	___fladd@aexp,w
  6608  0C87  00A8               	movwf	??___fladd
  6609  0C88  01A9               	clrf	??___fladd+1
  6610  0C89  0829               	movf	??___fladd+1,w
  6611  0C8A  00AB               	movwf	??___fladd+3
  6612  0C8B  0832               	movf	___fladd@bexp,w
  6613  0C8C  0228               	subwf	??___fladd,w
  6614  0C8D  00AA               	movwf	??___fladd+2
  6615  0C8E  1C03               	skipc
  6616  0C8F  03AB               	decf	??___fladd+3,f
  6617  0C90  082B               	movf	??___fladd+3,w
  6618  0C91  3A80               	xorlw	128
  6619  0C92  00AC               	movwf	??___fladd+4
  6620  0C93  3080               	movlw	128
  6621  0C94  022C               	subwf	??___fladd+4,w
  6622  0C95  1D03               	skipz
  6623  0C96  2C99               	goto	u5725
  6624  0C97  301A               	movlw	26
  6625  0C98  022A               	subwf	??___fladd+2,w
  6626  0C99                     u5725:	
  6627  0C99  1C03               	skipc
  6628  0C9A  2CCD               	goto	l3771
  6629  0C9B  0140               	movlb	0	; select bank0
  6630  0C9C  0823               	movf	___fladd@b+3,w
  6631  0C9D  0422               	iorwf	___fladd@b+2,w
  6632  0C9E  0421               	iorwf	___fladd@b+1,w
  6633  0C9F  0420               	iorwf	___fladd@b,w
  6634  0CA0  1903               	btfsc	3,2
  6635  0CA1  2CA4               	goto	u5730
  6636  0CA2  3001               	movlw	1
  6637  0CA3  2CA5               	goto	u5740
  6638  0CA4                     u5730:	
  6639  0CA4  3000               	movlw	0
  6640  0CA5                     u5740:	
  6641  0CA5  00A8               	movwf	??___fladd
  6642  0CA6  0828               	movf	??___fladd,w
  6643  0CA7  00B3               	movwf	___fladd@grs
  6644  0CA8  3000               	movlw	0
  6645  0CA9  00A3               	movwf	___fladd@b+3
  6646  0CAA  3000               	movlw	0
  6647  0CAB  00A2               	movwf	___fladd@b+2
  6648  0CAC  3000               	movlw	0
  6649  0CAD  00A1               	movwf	___fladd@b+1
  6650  0CAE  3000               	movlw	0
  6651  0CAF  00A0               	movwf	___fladd@b
  6652  0CB0  0831               	movf	___fladd@aexp,w
  6653  0CB1  00A8               	movwf	??___fladd
  6654  0CB2  0828               	movf	??___fladd,w
  6655  0CB3  00B2               	movwf	___fladd@bexp
  6656  0CB4  2CD2               	goto	l641
  6657  0CB5                     l643:	
  6658  0CB5  1C33               	btfss	___fladd@grs,0
  6659  0CB6  2CBD               	goto	l3761
  6660  0CB7  3633               	lsrf	___fladd@grs,w
  6661  0CB8  3801               	iorlw	1
  6662  0CB9  00A8               	movwf	??___fladd
  6663  0CBA  0828               	movf	??___fladd,w
  6664  0CBB  00B3               	movwf	___fladd@grs
  6665  0CBC  2CBF               	goto	l3763
  6666  0CBD                     l3761:	
  6667  0CBD  1003               	clrc
  6668  0CBE  0CB3               	rrf	___fladd@grs,f
  6669  0CBF                     l3763:	
  6670  0CBF  1820               	btfsc	___fladd@b,0
  6671  0CC0  17B3               	bsf	___fladd@grs,7
  6672  0CC1  3001               	movlw	1
  6673  0CC2  00A8               	movwf	??___fladd
  6674  0CC3                     u5775:	
  6675  0CC3  37A3               	asrf	___fladd@b+3,f
  6676  0CC4  0CA2               	rrf	___fladd@b+2,f
  6677  0CC5  0CA1               	rrf	___fladd@b+1,f
  6678  0CC6  0CA0               	rrf	___fladd@b,f
  6679  0CC7  0BA8               	decfsz	??___fladd& (0+127),f
  6680  0CC8  2CC3               	goto	u5775
  6681  0CC9  3001               	movlw	1
  6682  0CCA  00A8               	movwf	??___fladd
  6683  0CCB  0828               	movf	??___fladd,w
  6684  0CCC  07B2               	addwf	___fladd@bexp,f
  6685  0CCD                     l3771:	
  6686  0CCD  0140               	movlb	0	; select bank0
  6687  0CCE  0831               	movf	___fladd@aexp,w
  6688  0CCF  0232               	subwf	___fladd@bexp,w
  6689  0CD0  1C03               	skipc
  6690  0CD1  2CB5               	goto	l643
  6691  0CD2                     l641:	
  6692  0CD2  1B30               	btfsc	___fladd@signs,6
  6693  0CD3  2D03               	goto	l3797
  6694  0CD4  0832               	movf	___fladd@bexp,w
  6695  0CD5  1D03               	btfss	3,2
  6696  0CD6  2CE0               	goto	l3779
  6697  0CD7  3000               	movlw	0
  6698  0CD8  00A3               	movwf	?___fladd+3
  6699  0CD9  3000               	movlw	0
  6700  0CDA  00A2               	movwf	?___fladd+2
  6701  0CDB  3000               	movlw	0
  6702  0CDC  00A1               	movwf	?___fladd+1
  6703  0CDD  3000               	movlw	0
  6704  0CDE  00A0               	movwf	?___fladd
  6705  0CDF  0008               	return
  6706  0CE0                     l3779:	
  6707  0CE0  0824               	movf	___fladd@a,w
  6708  0CE1  07A0               	addwf	___fladd@b,f
  6709  0CE2  0825               	movf	___fladd@a+1,w
  6710  0CE3  3DA1               	addwfc	___fladd@b+1,f
  6711  0CE4  0826               	movf	___fladd@a+2,w
  6712  0CE5  3DA2               	addwfc	___fladd@b+2,f
  6713  0CE6  0827               	movf	___fladd@a+3,w
  6714  0CE7  3DA3               	addwfc	___fladd@b+3,f
  6715  0CE8  1C23               	btfss	___fladd@b+3,0
  6716  0CE9  2D7D               	goto	l3831
  6717  0CEA  1C33               	btfss	___fladd@grs,0
  6718  0CEB  2CF2               	goto	l3787
  6719  0CEC  3633               	lsrf	___fladd@grs,w
  6720  0CED  3801               	iorlw	1
  6721  0CEE  00A8               	movwf	??___fladd
  6722  0CEF  0828               	movf	??___fladd,w
  6723  0CF0  00B3               	movwf	___fladd@grs
  6724  0CF1  2CF4               	goto	l3789
  6725  0CF2                     l3787:	
  6726  0CF2  1003               	clrc
  6727  0CF3  0CB3               	rrf	___fladd@grs,f
  6728  0CF4                     l3789:	
  6729  0CF4  1820               	btfsc	___fladd@b,0
  6730  0CF5  17B3               	bsf	___fladd@grs,7
  6731  0CF6  3001               	movlw	1
  6732  0CF7  00A8               	movwf	??___fladd
  6733  0CF8                     u5845:	
  6734  0CF8  37A3               	asrf	___fladd@b+3,f
  6735  0CF9  0CA2               	rrf	___fladd@b+2,f
  6736  0CFA  0CA1               	rrf	___fladd@b+1,f
  6737  0CFB  0CA0               	rrf	___fladd@b,f
  6738  0CFC  0BA8               	decfsz	??___fladd& (0+127),f
  6739  0CFD  2CF8               	goto	u5845
  6740  0CFE  3001               	movlw	1
  6741  0CFF  00A8               	movwf	??___fladd
  6742  0D00  0828               	movf	??___fladd,w
  6743  0D01  07B2               	addwf	___fladd@bexp,f
  6744  0D02  2D7D               	goto	l3831
  6745  0D03                     l3797:	
  6746  0D03  0823               	movf	___fladd@b+3,w
  6747  0D04  3A80               	xorlw	128
  6748  0D05  00A8               	movwf	??___fladd
  6749  0D06  0827               	movf	___fladd@a+3,w
  6750  0D07  3A80               	xorlw	128
  6751  0D08  0228               	subwf	??___fladd,w
  6752  0D09  1D03               	skipz
  6753  0D0A  2D15               	goto	u5853
  6754  0D0B  0826               	movf	___fladd@a+2,w
  6755  0D0C  0222               	subwf	___fladd@b+2,w
  6756  0D0D  1D03               	skipz
  6757  0D0E  2D15               	goto	u5853
  6758  0D0F  0825               	movf	___fladd@a+1,w
  6759  0D10  0221               	subwf	___fladd@b+1,w
  6760  0D11  1D03               	skipz
  6761  0D12  2D15               	goto	u5853
  6762  0D13  0824               	movf	___fladd@a,w
  6763  0D14  0220               	subwf	___fladd@b,w
  6764  0D15                     u5853:	
  6765  0D15  1803               	skipnc
  6766  0D16  2D4D               	goto	l3807
  6767  0D17  30FF               	movlw	255
  6768  0D18  00A8               	movwf	??___fladd
  6769  0D19  30FF               	movlw	255
  6770  0D1A  00A9               	movwf	??___fladd+1
  6771  0D1B  30FF               	movlw	255
  6772  0D1C  00AA               	movwf	??___fladd+2
  6773  0D1D  30FF               	movlw	255
  6774  0D1E  00AB               	movwf	??___fladd+3
  6775  0D1F  0820               	movf	___fladd@b,w
  6776  0D20  0224               	subwf	___fladd@a,w
  6777  0D21  00AC               	movwf	??___fladd+4
  6778  0D22  0821               	movf	___fladd@b+1,w
  6779  0D23  3B25               	subwfb	___fladd@a+1,w
  6780  0D24  00AD               	movwf	??___fladd+5
  6781  0D25  0822               	movf	___fladd@b+2,w
  6782  0D26  3B26               	subwfb	___fladd@a+2,w
  6783  0D27  00AE               	movwf	??___fladd+6
  6784  0D28  0823               	movf	___fladd@b+3,w
  6785  0D29  3B27               	subwfb	___fladd@a+3,w
  6786  0D2A  00AF               	movwf	??___fladd+7
  6787  0D2B  082C               	movf	??___fladd+4,w
  6788  0D2C  07A8               	addwf	??___fladd,f
  6789  0D2D  082D               	movf	??___fladd+5,w
  6790  0D2E  3DA9               	addwfc	??___fladd+1,f
  6791  0D2F  082E               	movf	??___fladd+6,w
  6792  0D30  3DAA               	addwfc	??___fladd+2,f
  6793  0D31  082F               	movf	??___fladd+7,w
  6794  0D32  3DAB               	addwfc	??___fladd+3,f
  6795  0D33  082B               	movf	??___fladd+3,w
  6796  0D34  00A3               	movwf	___fladd@b+3
  6797  0D35  082A               	movf	??___fladd+2,w
  6798  0D36  00A2               	movwf	___fladd@b+2
  6799  0D37  0829               	movf	??___fladd+1,w
  6800  0D38  00A1               	movwf	___fladd@b+1
  6801  0D39  0828               	movf	??___fladd,w
  6802  0D3A  00A0               	movwf	___fladd@b
  6803  0D3B  3080               	movlw	128
  6804  0D3C  00A8               	movwf	??___fladd
  6805  0D3D  0828               	movf	??___fladd,w
  6806  0D3E  06B0               	xorwf	___fladd@signs,f
  6807  0D3F  09B3               	comf	___fladd@grs,f
  6808  0D40  0AB3               	incf	___fladd@grs,f
  6809  0D41  0833               	movf	___fladd@grs,w
  6810  0D42  1D03               	btfss	3,2
  6811  0D43  2D55               	goto	l658
  6812  0D44  3001               	movlw	1
  6813  0D45  07A0               	addwf	___fladd@b,f
  6814  0D46  3000               	movlw	0
  6815  0D47  3DA1               	addwfc	___fladd@b+1,f
  6816  0D48  3000               	movlw	0
  6817  0D49  3DA2               	addwfc	___fladd@b+2,f
  6818  0D4A  3000               	movlw	0
  6819  0D4B  3DA3               	addwfc	___fladd@b+3,f
  6820  0D4C  2D55               	goto	l658
  6821  0D4D                     l3807:	
  6822  0D4D  0824               	movf	___fladd@a,w
  6823  0D4E  02A0               	subwf	___fladd@b,f
  6824  0D4F  0825               	movf	___fladd@a+1,w
  6825  0D50  3BA1               	subwfb	___fladd@b+1,f
  6826  0D51  0826               	movf	___fladd@a+2,w
  6827  0D52  3BA2               	subwfb	___fladd@b+2,f
  6828  0D53  0827               	movf	___fladd@a+3,w
  6829  0D54  3BA3               	subwfb	___fladd@b+3,f
  6830  0D55                     l658:	
  6831  0D55  0823               	movf	___fladd@b+3,w
  6832  0D56  0422               	iorwf	___fladd@b+2,w
  6833  0D57  0421               	iorwf	___fladd@b+1,w
  6834  0D58  0420               	iorwf	___fladd@b,w
  6835  0D59  1D03               	skipz
  6836  0D5A  2D7B               	goto	l3829
  6837  0D5B  0833               	movf	___fladd@grs,w
  6838  0D5C  1D03               	btfss	3,2
  6839  0D5D  2D7B               	goto	l3829
  6840  0D5E  3000               	movlw	0
  6841  0D5F  00A3               	movwf	?___fladd+3
  6842  0D60  3000               	movlw	0
  6843  0D61  00A2               	movwf	?___fladd+2
  6844  0D62  3000               	movlw	0
  6845  0D63  00A1               	movwf	?___fladd+1
  6846  0D64  3000               	movlw	0
  6847  0D65  00A0               	movwf	?___fladd
  6848  0D66  0008               	return
  6849  0D67                     l3815:	
  6850  0D67  3001               	movlw	1
  6851  0D68                     u5895:	
  6852  0D68  35A0               	lslf	___fladd@b,f
  6853  0D69  0DA1               	rlf	___fladd@b+1,f
  6854  0D6A  0DA2               	rlf	___fladd@b+2,f
  6855  0D6B  0DA3               	rlf	___fladd@b+3,f
  6856  0D6C  0B89               	decfsz	9,f
  6857  0D6D  2D68               	goto	u5895
  6858  0D6E  1BB3               	btfsc	___fladd@grs,7
  6859  0D6F  1420               	bsf	___fladd@b,0
  6860  0D70  1C33               	btfss	___fladd@grs,0
  6861  0D71  2D74               	goto	l3823
  6862  0D72  1403               	setc
  6863  0D73  2D75               	goto	L10
  6864  0D74                     l3823:	
  6865  0D74  1003               	clrc
  6866  0D75                     L10:	
  6867  0D75  0DB3               	rlf	___fladd@grs,f
  6868  0D76  0832               	movf	___fladd@bexp,w
  6869  0D77  1903               	btfsc	3,2
  6870  0D78  2D7B               	goto	l3829
  6871  0D79  3001               	movlw	1
  6872  0D7A  02B2               	subwf	___fladd@bexp,f
  6873  0D7B                     l3829:	
  6874  0D7B  1FA2               	btfss	___fladd@b+2,7
  6875  0D7C  2D67               	goto	l3815
  6876  0D7D                     l3831:	
  6877  0D7D  01B1               	clrf	___fladd@aexp
  6878  0D7E  1FB3               	btfss	___fladd@grs,7
  6879  0D7F  2D88               	goto	l3841
  6880  0D80  0833               	movf	___fladd@grs,w
  6881  0D81  397F               	andlw	127
  6882  0D82  1903               	btfsc	3,2
  6883  0D83  1820               	btfsc	___fladd@b,0
  6884  0D84  2D86               	goto	l3837
  6885  0D85  2D88               	goto	l3841
  6886  0D86                     l3837:	
  6887  0D86  01B1               	clrf	___fladd@aexp
  6888  0D87  0AB1               	incf	___fladd@aexp,f
  6889  0D88                     l3841:	
  6890  0D88  0831               	movf	___fladd@aexp,w
  6891  0D89  1903               	btfsc	3,2
  6892  0D8A  2DB4               	goto	l671
  6893  0D8B  3001               	movlw	1
  6894  0D8C  07A0               	addwf	___fladd@b,f
  6895  0D8D  3000               	movlw	0
  6896  0D8E  3DA1               	addwfc	___fladd@b+1,f
  6897  0D8F  3000               	movlw	0
  6898  0D90  3DA2               	addwfc	___fladd@b+2,f
  6899  0D91  3000               	movlw	0
  6900  0D92  3DA3               	addwfc	___fladd@b+3,f
  6901  0D93  1C23               	btfss	___fladd@b+3,0
  6902  0D94  2DB4               	goto	l671
  6903  0D95  0820               	movf	___fladd@b,w
  6904  0D96  00A8               	movwf	??___fladd
  6905  0D97  0821               	movf	___fladd@b+1,w
  6906  0D98  00A9               	movwf	??___fladd+1
  6907  0D99  0822               	movf	___fladd@b+2,w
  6908  0D9A  00AA               	movwf	??___fladd+2
  6909  0D9B  0823               	movf	___fladd@b+3,w
  6910  0D9C  00AB               	movwf	??___fladd+3
  6911  0D9D  3001               	movlw	1
  6912  0D9E  00AC               	movwf	??___fladd+4
  6913  0D9F                     u5995:	
  6914  0D9F  37AB               	asrf	??___fladd+3,f
  6915  0DA0  0CAA               	rrf	??___fladd+2,f
  6916  0DA1  0CA9               	rrf	??___fladd+1,f
  6917  0DA2  0CA8               	rrf	??___fladd,f
  6918  0DA3  0BAC               	decfsz	??___fladd+4,f
  6919  0DA4  2D9F               	goto	u5995
  6920  0DA5  082B               	movf	??___fladd+3,w
  6921  0DA6  00A3               	movwf	___fladd@b+3
  6922  0DA7  082A               	movf	??___fladd+2,w
  6923  0DA8  00A2               	movwf	___fladd@b+2
  6924  0DA9  0829               	movf	??___fladd+1,w
  6925  0DAA  00A1               	movwf	___fladd@b+1
  6926  0DAB  0828               	movf	??___fladd,w
  6927  0DAC  00A0               	movwf	___fladd@b
  6928  0DAD  0A32               	incf	___fladd@bexp,w
  6929  0DAE  1903               	btfsc	3,2
  6930  0DAF  2DB4               	goto	l671
  6931  0DB0  3001               	movlw	1
  6932  0DB1  00A8               	movwf	??___fladd
  6933  0DB2  0828               	movf	??___fladd,w
  6934  0DB3  07B2               	addwf	___fladd@bexp,f
  6935  0DB4                     l671:	
  6936  0DB4  0A32               	incf	___fladd@bexp,w
  6937  0DB5  1D03               	btfss	3,2
  6938  0DB6  0832               	movf	___fladd@bexp,w
  6939  0DB7  1D03               	btfss	3,2
  6940  0DB8  2DC4               	goto	l3859
  6941  0DB9  3000               	movlw	0
  6942  0DBA  00A3               	movwf	___fladd@b+3
  6943  0DBB  3000               	movlw	0
  6944  0DBC  00A2               	movwf	___fladd@b+2
  6945  0DBD  3000               	movlw	0
  6946  0DBE  00A1               	movwf	___fladd@b+1
  6947  0DBF  3000               	movlw	0
  6948  0DC0  00A0               	movwf	___fladd@b
  6949  0DC1  0832               	movf	___fladd@bexp,w
  6950  0DC2  1903               	btfsc	3,2
  6951  0DC3  01B0               	clrf	___fladd@signs
  6952  0DC4                     l3859:	
  6953  0DC4  1C32               	btfss	___fladd@bexp,0
  6954  0DC5  2DC8               	goto	l3863
  6955  0DC6  17A2               	bsf	___fladd@b+2,7
  6956  0DC7  2DCC               	goto	l679
  6957  0DC8                     l3863:	
  6958  0DC8  307F               	movlw	127
  6959  0DC9  00A8               	movwf	??___fladd
  6960  0DCA  0828               	movf	??___fladd,w
  6961  0DCB  05A2               	andwf	___fladd@b+2,f
  6962  0DCC                     l679:	
  6963  0DCC  3632               	lsrf	___fladd@bexp,w
  6964  0DCD  00A8               	movwf	??___fladd
  6965  0DCE  0828               	movf	??___fladd,w
  6966  0DCF  00A3               	movwf	___fladd@b+3
  6967  0DD0  1FB0               	btfss	___fladd@signs,7
  6968  0DD1  0008               	return
  6969  0DD2  17A3               	bsf	___fladd@b+3,7
  6970  0DD3  0008               	return
  6971  0DD4                     __end_of___fladd:	
  6972                           
  6973                           	psect	text19
  6974  120D                     __ptext19:	
  6975 ;; *************** function ___flneg *****************
  6976 ;; Defined at:
  6977 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  f1              4    0[BANK0 ] unsigned char 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  4    0[BANK0 ] unsigned char 
  6984 ;; Registers used:
  6985 ;;		wreg
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6991 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6994 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;Total ram usage:        4 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    2
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_efgtoa
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           
  7006                           ;psect for function ___flneg
  7007  120D                     ___flneg:	
  7008                           
  7009                           ;incstack = 0
  7010                           ; Regs used in ___flneg: [wreg]
  7011  120D  0140               	movlb	0	; select bank0
  7012  120E  0823               	movf	___flneg@f1+3,w
  7013  120F  0422               	iorwf	___flneg@f1+2,w
  7014  1210  0421               	iorwf	___flneg@f1+1,w
  7015  1211  0420               	iorwf	___flneg@f1,w
  7016  1212  1903               	skipnz
  7017  1213  0008               	return
  7018  1214  3080               	movlw	128
  7019  1215  06A3               	xorwf	___flneg@f1+3,f
  7020  1216  0008               	return
  7021  1217                     __end_of___flneg:	
  7022                           
  7023                           	psect	text20
  7024  0DD4                     __ptext20:	
  7025 ;; *************** function ___flmul *****************
  7026 ;; Defined at:
  7027 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  7028 ;; Parameters:    Size  Location     Type
  7029 ;;  b               4   14[BANK0 ] unsigned char 
  7030 ;;  a               4   18[BANK0 ] unsigned char 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  prod            4   34[BANK0 ] struct .
  7033 ;;  grs             4   29[BANK0 ] unsigned long 
  7034 ;;  temp            2   38[BANK0 ] struct .
  7035 ;;  bexp            1   33[BANK0 ] unsigned char 
  7036 ;;  aexp            1   28[BANK0 ] unsigned char 
  7037 ;;  sign            1   27[BANK0 ] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  4   14[BANK0 ] unsigned char 
  7040 ;; Registers used:
  7041 ;;		wreg, status,2, status,0, pclath, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7047 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;Total ram usage:       26 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    3
  7054 ;; This function calls:
  7055 ;;		__Umul8_16
  7056 ;; This function is called by:
  7057 ;;		_main
  7058 ;;		_efgtoa
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           
  7063                           ;psect for function ___flmul
  7064  0DD4                     ___flmul:	
  7065                           
  7066                           ;incstack = 0
  7067                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  7068  0DD4  0140               	movlb	0	; select bank0
  7069  0DD5  0831               	movf	___flmul@b+3,w
  7070  0DD6  3980               	andlw	128
  7071  0DD7  00B6               	movwf	??___flmul
  7072  0DD8  0836               	movf	??___flmul,w
  7073  0DD9  00BB               	movwf	___flmul@sign
  7074  0DDA  3531               	lslf	___flmul@b+3,w
  7075  0DDB  00B6               	movwf	??___flmul
  7076  0DDC  0836               	movf	??___flmul,w
  7077  0DDD  00C1               	movwf	___flmul@bexp
  7078  0DDE  1BB0               	btfsc	___flmul@b+2,7
  7079  0DDF  1441               	bsf	___flmul@bexp,0
  7080  0DE0  0841               	movf	___flmul@bexp,w
  7081  0DE1  1903               	btfsc	3,2
  7082  0DE2  2DF0               	goto	l4291
  7083  0DE3  0A41               	incf	___flmul@bexp,w
  7084  0DE4  1D03               	btfss	3,2
  7085  0DE5  2DEE               	goto	l4289
  7086  0DE6  3000               	movlw	0
  7087  0DE7  00B1               	movwf	___flmul@b+3
  7088  0DE8  3000               	movlw	0
  7089  0DE9  00B0               	movwf	___flmul@b+2
  7090  0DEA  3000               	movlw	0
  7091  0DEB  00AF               	movwf	___flmul@b+1
  7092  0DEC  3000               	movlw	0
  7093  0DED  00AE               	movwf	___flmul@b
  7094  0DEE                     l4289:	
  7095  0DEE  17B0               	bsf	___flmul@b+2,7
  7096  0DEF  2DF8               	goto	l4293
  7097  0DF0                     l4291:	
  7098  0DF0  3000               	movlw	0
  7099  0DF1  00B1               	movwf	___flmul@b+3
  7100  0DF2  3000               	movlw	0
  7101  0DF3  00B0               	movwf	___flmul@b+2
  7102  0DF4  3000               	movlw	0
  7103  0DF5  00AF               	movwf	___flmul@b+1
  7104  0DF6  3000               	movlw	0
  7105  0DF7  00AE               	movwf	___flmul@b
  7106  0DF8                     l4293:	
  7107  0DF8  0835               	movf	___flmul@a+3,w
  7108  0DF9  3980               	andlw	128
  7109  0DFA  00B6               	movwf	??___flmul
  7110  0DFB  0836               	movf	??___flmul,w
  7111  0DFC  06BB               	xorwf	___flmul@sign,f
  7112  0DFD  3535               	lslf	___flmul@a+3,w
  7113  0DFE  00B6               	movwf	??___flmul
  7114  0DFF  0836               	movf	??___flmul,w
  7115  0E00  00BC               	movwf	___flmul@aexp
  7116  0E01  1BB4               	btfsc	___flmul@a+2,7
  7117  0E02  143C               	bsf	___flmul@aexp,0
  7118  0E03  083C               	movf	___flmul@aexp,w
  7119  0E04  1903               	btfsc	3,2
  7120  0E05  2E13               	goto	l4309
  7121  0E06  0A3C               	incf	___flmul@aexp,w
  7122  0E07  1D03               	btfss	3,2
  7123  0E08  2E11               	goto	l4307
  7124  0E09  3000               	movlw	0
  7125  0E0A  00B5               	movwf	___flmul@a+3
  7126  0E0B  3000               	movlw	0
  7127  0E0C  00B4               	movwf	___flmul@a+2
  7128  0E0D  3000               	movlw	0
  7129  0E0E  00B3               	movwf	___flmul@a+1
  7130  0E0F  3000               	movlw	0
  7131  0E10  00B2               	movwf	___flmul@a
  7132  0E11                     l4307:	
  7133  0E11  17B4               	bsf	___flmul@a+2,7
  7134  0E12  2E1B               	goto	l4311
  7135  0E13                     l4309:	
  7136  0E13  3000               	movlw	0
  7137  0E14  00B5               	movwf	___flmul@a+3
  7138  0E15  3000               	movlw	0
  7139  0E16  00B4               	movwf	___flmul@a+2
  7140  0E17  3000               	movlw	0
  7141  0E18  00B3               	movwf	___flmul@a+1
  7142  0E19  3000               	movlw	0
  7143  0E1A  00B2               	movwf	___flmul@a
  7144  0E1B                     l4311:	
  7145  0E1B  083C               	movf	___flmul@aexp,w
  7146  0E1C  1D03               	btfss	3,2
  7147  0E1D  0841               	movf	___flmul@bexp,w
  7148  0E1E  1D03               	btfss	3,2
  7149  0E1F  2E29               	goto	l4319
  7150  0E20  3000               	movlw	0
  7151  0E21  00B1               	movwf	?___flmul+3
  7152  0E22  3000               	movlw	0
  7153  0E23  00B0               	movwf	?___flmul+2
  7154  0E24  3000               	movlw	0
  7155  0E25  00AF               	movwf	?___flmul+1
  7156  0E26  3000               	movlw	0
  7157  0E27  00AE               	movwf	?___flmul
  7158  0E28  0008               	return
  7159  0E29                     l4319:	
  7160  0E29  082E               	movf	___flmul@b,w
  7161  0E2A  00B6               	movwf	??___flmul
  7162  0E2B  0836               	movf	??___flmul,w
  7163  0E2C  00A0               	movwf	__Umul8_16@multiplicand
  7164  0E2D  0834               	movf	___flmul@a+2,w
  7165  0E2E  3192  229B  318D   	fcall	__Umul8_16
  7166  0E31  0140               	movlb	0	; select bank0
  7167  0E32  0821               	movf	?__Umul8_16+1,w
  7168  0E33  00C7               	movwf	___flmul@temp+1
  7169  0E34  0820               	movf	?__Umul8_16,w
  7170  0E35  00C6               	movwf	___flmul@temp
  7171  0E36  0846               	movf	___flmul@temp,w
  7172  0E37  00B6               	movwf	??___flmul
  7173  0E38  01B7               	clrf	??___flmul+1
  7174  0E39  01B8               	clrf	??___flmul+2
  7175  0E3A  01B9               	clrf	??___flmul+3
  7176  0E3B  0839               	movf	??___flmul+3,w
  7177  0E3C  00C0               	movwf	___flmul@grs+3
  7178  0E3D  0838               	movf	??___flmul+2,w
  7179  0E3E  00BF               	movwf	___flmul@grs+2
  7180  0E3F  0837               	movf	??___flmul+1,w
  7181  0E40  00BE               	movwf	___flmul@grs+1
  7182  0E41  0836               	movf	??___flmul,w
  7183  0E42  00BD               	movwf	___flmul@grs
  7184  0E43  0847               	movf	___flmul@temp+1,w
  7185  0E44  00B6               	movwf	??___flmul
  7186  0E45  01B7               	clrf	??___flmul+1
  7187  0E46  01B8               	clrf	??___flmul+2
  7188  0E47  01B9               	clrf	??___flmul+3
  7189  0E48  0839               	movf	??___flmul+3,w
  7190  0E49  00C5               	movwf	___flmul@prod+3
  7191  0E4A  0838               	movf	??___flmul+2,w
  7192  0E4B  00C4               	movwf	___flmul@prod+2
  7193  0E4C  0837               	movf	??___flmul+1,w
  7194  0E4D  00C3               	movwf	___flmul@prod+1
  7195  0E4E  0836               	movf	??___flmul,w
  7196  0E4F  00C2               	movwf	___flmul@prod
  7197  0E50  082F               	movf	___flmul@b+1,w
  7198  0E51  00B6               	movwf	??___flmul
  7199  0E52  0836               	movf	??___flmul,w
  7200  0E53  00A0               	movwf	__Umul8_16@multiplicand
  7201  0E54  0833               	movf	___flmul@a+1,w
  7202  0E55  3192  229B  318D   	fcall	__Umul8_16
  7203  0E58  0140               	movlb	0	; select bank0
  7204  0E59  0821               	movf	?__Umul8_16+1,w
  7205  0E5A  00C7               	movwf	___flmul@temp+1
  7206  0E5B  0820               	movf	?__Umul8_16,w
  7207  0E5C  00C6               	movwf	___flmul@temp
  7208  0E5D  0846               	movf	___flmul@temp,w
  7209  0E5E  00B6               	movwf	??___flmul
  7210  0E5F  01B7               	clrf	??___flmul+1
  7211  0E60  01B8               	clrf	??___flmul+2
  7212  0E61  01B9               	clrf	??___flmul+3
  7213  0E62  0836               	movf	??___flmul,w
  7214  0E63  07BD               	addwf	___flmul@grs,f
  7215  0E64  0837               	movf	??___flmul+1,w
  7216  0E65  3DBE               	addwfc	___flmul@grs+1,f
  7217  0E66  0838               	movf	??___flmul+2,w
  7218  0E67  3DBF               	addwfc	___flmul@grs+2,f
  7219  0E68  0839               	movf	??___flmul+3,w
  7220  0E69  3DC0               	addwfc	___flmul@grs+3,f
  7221  0E6A  0847               	movf	___flmul@temp+1,w
  7222  0E6B  00B6               	movwf	??___flmul
  7223  0E6C  01B7               	clrf	??___flmul+1
  7224  0E6D  01B8               	clrf	??___flmul+2
  7225  0E6E  01B9               	clrf	??___flmul+3
  7226  0E6F  0836               	movf	??___flmul,w
  7227  0E70  07C2               	addwf	___flmul@prod,f
  7228  0E71  0837               	movf	??___flmul+1,w
  7229  0E72  3DC3               	addwfc	___flmul@prod+1,f
  7230  0E73  0838               	movf	??___flmul+2,w
  7231  0E74  3DC4               	addwfc	___flmul@prod+2,f
  7232  0E75  0839               	movf	??___flmul+3,w
  7233  0E76  3DC5               	addwfc	___flmul@prod+3,f
  7234  0E77  0830               	movf	___flmul@b+2,w
  7235  0E78  00B6               	movwf	??___flmul
  7236  0E79  0836               	movf	??___flmul,w
  7237  0E7A  00A0               	movwf	__Umul8_16@multiplicand
  7238  0E7B  0832               	movf	___flmul@a,w
  7239  0E7C  3192  229B  318D   	fcall	__Umul8_16
  7240  0E7F  0140               	movlb	0	; select bank0
  7241  0E80  0821               	movf	?__Umul8_16+1,w
  7242  0E81  00C7               	movwf	___flmul@temp+1
  7243  0E82  0820               	movf	?__Umul8_16,w
  7244  0E83  00C6               	movwf	___flmul@temp
  7245  0E84  0846               	movf	___flmul@temp,w
  7246  0E85  00B6               	movwf	??___flmul
  7247  0E86  01B7               	clrf	??___flmul+1
  7248  0E87  01B8               	clrf	??___flmul+2
  7249  0E88  01B9               	clrf	??___flmul+3
  7250  0E89  0836               	movf	??___flmul,w
  7251  0E8A  07BD               	addwf	___flmul@grs,f
  7252  0E8B  0837               	movf	??___flmul+1,w
  7253  0E8C  3DBE               	addwfc	___flmul@grs+1,f
  7254  0E8D  0838               	movf	??___flmul+2,w
  7255  0E8E  3DBF               	addwfc	___flmul@grs+2,f
  7256  0E8F  0839               	movf	??___flmul+3,w
  7257  0E90  3DC0               	addwfc	___flmul@grs+3,f
  7258  0E91  0847               	movf	___flmul@temp+1,w
  7259  0E92  00B6               	movwf	??___flmul
  7260  0E93  01B7               	clrf	??___flmul+1
  7261  0E94  01B8               	clrf	??___flmul+2
  7262  0E95  01B9               	clrf	??___flmul+3
  7263  0E96  0836               	movf	??___flmul,w
  7264  0E97  07C2               	addwf	___flmul@prod,f
  7265  0E98  0837               	movf	??___flmul+1,w
  7266  0E99  3DC3               	addwfc	___flmul@prod+1,f
  7267  0E9A  0838               	movf	??___flmul+2,w
  7268  0E9B  3DC4               	addwfc	___flmul@prod+2,f
  7269  0E9C  0839               	movf	??___flmul+3,w
  7270  0E9D  3DC5               	addwfc	___flmul@prod+3,f
  7271  0E9E  3008               	movlw	8
  7272  0E9F                     u7115:	
  7273  0E9F  35BD               	lslf	___flmul@grs,f
  7274  0EA0  0DBE               	rlf	___flmul@grs+1,f
  7275  0EA1  0DBF               	rlf	___flmul@grs+2,f
  7276  0EA2  0DC0               	rlf	___flmul@grs+3,f
  7277  0EA3  0B89               	decfsz	9,f
  7278  0EA4  2E9F               	goto	u7115
  7279  0EA5  082F               	movf	___flmul@b+1,w
  7280  0EA6  00B6               	movwf	??___flmul
  7281  0EA7  0836               	movf	??___flmul,w
  7282  0EA8  00A0               	movwf	__Umul8_16@multiplicand
  7283  0EA9  0832               	movf	___flmul@a,w
  7284  0EAA  3192  229B  318D   	fcall	__Umul8_16
  7285  0EAD  0140               	movlb	0	; select bank0
  7286  0EAE  0821               	movf	?__Umul8_16+1,w
  7287  0EAF  00C7               	movwf	___flmul@temp+1
  7288  0EB0  0820               	movf	?__Umul8_16,w
  7289  0EB1  00C6               	movwf	___flmul@temp
  7290  0EB2  0846               	movf	___flmul@temp,w
  7291  0EB3  07BD               	addwf	___flmul@grs,f
  7292  0EB4  0847               	movf	___flmul@temp+1,w
  7293  0EB5  3DBE               	addwfc	___flmul@grs+1,f
  7294  0EB6  3000               	movlw	0
  7295  0EB7  3DBF               	addwfc	___flmul@grs+2,f
  7296  0EB8  3DC0               	addwfc	___flmul@grs+3,f
  7297  0EB9  082E               	movf	___flmul@b,w
  7298  0EBA  00B6               	movwf	??___flmul
  7299  0EBB  0836               	movf	??___flmul,w
  7300  0EBC  00A0               	movwf	__Umul8_16@multiplicand
  7301  0EBD  0833               	movf	___flmul@a+1,w
  7302  0EBE  3192  229B  318D   	fcall	__Umul8_16
  7303  0EC1  0140               	movlb	0	; select bank0
  7304  0EC2  0821               	movf	?__Umul8_16+1,w
  7305  0EC3  00C7               	movwf	___flmul@temp+1
  7306  0EC4  0820               	movf	?__Umul8_16,w
  7307  0EC5  00C6               	movwf	___flmul@temp
  7308  0EC6  0846               	movf	___flmul@temp,w
  7309  0EC7  07BD               	addwf	___flmul@grs,f
  7310  0EC8  0847               	movf	___flmul@temp+1,w
  7311  0EC9  3DBE               	addwfc	___flmul@grs+1,f
  7312  0ECA  3000               	movlw	0
  7313  0ECB  3DBF               	addwfc	___flmul@grs+2,f
  7314  0ECC  3DC0               	addwfc	___flmul@grs+3,f
  7315  0ECD  3008               	movlw	8
  7316  0ECE                     u7125:	
  7317  0ECE  35BD               	lslf	___flmul@grs,f
  7318  0ECF  0DBE               	rlf	___flmul@grs+1,f
  7319  0ED0  0DBF               	rlf	___flmul@grs+2,f
  7320  0ED1  0DC0               	rlf	___flmul@grs+3,f
  7321  0ED2  0B89               	decfsz	9,f
  7322  0ED3  2ECE               	goto	u7125
  7323  0ED4  082E               	movf	___flmul@b,w
  7324  0ED5  00B6               	movwf	??___flmul
  7325  0ED6  0836               	movf	??___flmul,w
  7326  0ED7  00A0               	movwf	__Umul8_16@multiplicand
  7327  0ED8  0832               	movf	___flmul@a,w
  7328  0ED9  3192  229B  318D   	fcall	__Umul8_16
  7329  0EDC  0140               	movlb	0	; select bank0
  7330  0EDD  0821               	movf	?__Umul8_16+1,w
  7331  0EDE  00C7               	movwf	___flmul@temp+1
  7332  0EDF  0820               	movf	?__Umul8_16,w
  7333  0EE0  00C6               	movwf	___flmul@temp
  7334  0EE1  0846               	movf	___flmul@temp,w
  7335  0EE2  07BD               	addwf	___flmul@grs,f
  7336  0EE3  0847               	movf	___flmul@temp+1,w
  7337  0EE4  3DBE               	addwfc	___flmul@grs+1,f
  7338  0EE5  3000               	movlw	0
  7339  0EE6  3DBF               	addwfc	___flmul@grs+2,f
  7340  0EE7  3DC0               	addwfc	___flmul@grs+3,f
  7341  0EE8  082F               	movf	___flmul@b+1,w
  7342  0EE9  00B6               	movwf	??___flmul
  7343  0EEA  0836               	movf	??___flmul,w
  7344  0EEB  00A0               	movwf	__Umul8_16@multiplicand
  7345  0EEC  0834               	movf	___flmul@a+2,w
  7346  0EED  3192  229B  318D   	fcall	__Umul8_16
  7347  0EF0  0140               	movlb	0	; select bank0
  7348  0EF1  0821               	movf	?__Umul8_16+1,w
  7349  0EF2  00C7               	movwf	___flmul@temp+1
  7350  0EF3  0820               	movf	?__Umul8_16,w
  7351  0EF4  00C6               	movwf	___flmul@temp
  7352  0EF5  0846               	movf	___flmul@temp,w
  7353  0EF6  07C2               	addwf	___flmul@prod,f
  7354  0EF7  0847               	movf	___flmul@temp+1,w
  7355  0EF8  3DC3               	addwfc	___flmul@prod+1,f
  7356  0EF9  3000               	movlw	0
  7357  0EFA  3DC4               	addwfc	___flmul@prod+2,f
  7358  0EFB  3DC5               	addwfc	___flmul@prod+3,f
  7359  0EFC  0830               	movf	___flmul@b+2,w
  7360  0EFD  00B6               	movwf	??___flmul
  7361  0EFE  0836               	movf	??___flmul,w
  7362  0EFF  00A0               	movwf	__Umul8_16@multiplicand
  7363  0F00  0833               	movf	___flmul@a+1,w
  7364  0F01  3192  229B  318D   	fcall	__Umul8_16
  7365  0F04  0140               	movlb	0	; select bank0
  7366  0F05  0821               	movf	?__Umul8_16+1,w
  7367  0F06  00C7               	movwf	___flmul@temp+1
  7368  0F07  0820               	movf	?__Umul8_16,w
  7369  0F08  00C6               	movwf	___flmul@temp
  7370  0F09  0846               	movf	___flmul@temp,w
  7371  0F0A  07C2               	addwf	___flmul@prod,f
  7372  0F0B  0847               	movf	___flmul@temp+1,w
  7373  0F0C  3DC3               	addwfc	___flmul@prod+1,f
  7374  0F0D  3000               	movlw	0
  7375  0F0E  3DC4               	addwfc	___flmul@prod+2,f
  7376  0F0F  3DC5               	addwfc	___flmul@prod+3,f
  7377  0F10  0830               	movf	___flmul@b+2,w
  7378  0F11  00B6               	movwf	??___flmul
  7379  0F12  0836               	movf	??___flmul,w
  7380  0F13  00A0               	movwf	__Umul8_16@multiplicand
  7381  0F14  0834               	movf	___flmul@a+2,w
  7382  0F15  3192  229B  318D   	fcall	__Umul8_16
  7383  0F18  0140               	movlb	0	; select bank0
  7384  0F19  0821               	movf	?__Umul8_16+1,w
  7385  0F1A  00C7               	movwf	___flmul@temp+1
  7386  0F1B  0820               	movf	?__Umul8_16,w
  7387  0F1C  00C6               	movwf	___flmul@temp
  7388  0F1D  0846               	movf	___flmul@temp,w
  7389  0F1E  00B6               	movwf	??___flmul
  7390  0F1F  0847               	movf	___flmul@temp+1,w
  7391  0F20  00B7               	movwf	??___flmul+1
  7392  0F21  01B8               	clrf	??___flmul+2
  7393  0F22  01B9               	clrf	??___flmul+3
  7394  0F23  3008               	movlw	8
  7395  0F24                     u7135:	
  7396  0F24  35B6               	lslf	??___flmul,f
  7397  0F25  0DB7               	rlf	??___flmul+1,f
  7398  0F26  0DB8               	rlf	??___flmul+2,f
  7399  0F27  0DB9               	rlf	??___flmul+3,f
  7400  0F28  0B89               	decfsz	9,f
  7401  0F29  2F24               	goto	u7135
  7402  0F2A  0836               	movf	??___flmul,w
  7403  0F2B  07C2               	addwf	___flmul@prod,f
  7404  0F2C  0837               	movf	??___flmul+1,w
  7405  0F2D  3DC3               	addwfc	___flmul@prod+1,f
  7406  0F2E  0838               	movf	??___flmul+2,w
  7407  0F2F  3DC4               	addwfc	___flmul@prod+2,f
  7408  0F30  0839               	movf	??___flmul+3,w
  7409  0F31  3DC5               	addwfc	___flmul@prod+3,f
  7410  0F32  083D               	movf	___flmul@grs,w
  7411  0F33  00B6               	movwf	??___flmul
  7412  0F34  083E               	movf	___flmul@grs+1,w
  7413  0F35  00B7               	movwf	??___flmul+1
  7414  0F36  083F               	movf	___flmul@grs+2,w
  7415  0F37  00B8               	movwf	??___flmul+2
  7416  0F38  0840               	movf	___flmul@grs+3,w
  7417  0F39  00B9               	movwf	??___flmul+3
  7418  0F3A  3018               	movlw	24
  7419  0F3B                     u7145:	
  7420  0F3B  36B9               	lsrf	??___flmul+3,f
  7421  0F3C  0CB8               	rrf	??___flmul+2,f
  7422  0F3D  0CB7               	rrf	??___flmul+1,f
  7423  0F3E  0CB6               	rrf	??___flmul,f
  7424  0F3F  0B89               	decfsz	9,f
  7425  0F40  2F3B               	goto	u7145
  7426  0F41  0836               	movf	??___flmul,w
  7427  0F42  07C2               	addwf	___flmul@prod,f
  7428  0F43  0837               	movf	??___flmul+1,w
  7429  0F44  3DC3               	addwfc	___flmul@prod+1,f
  7430  0F45  0838               	movf	??___flmul+2,w
  7431  0F46  3DC4               	addwfc	___flmul@prod+2,f
  7432  0F47  0839               	movf	??___flmul+3,w
  7433  0F48  3DC5               	addwfc	___flmul@prod+3,f
  7434  0F49  3008               	movlw	8
  7435  0F4A                     u7155:	
  7436  0F4A  35BD               	lslf	___flmul@grs,f
  7437  0F4B  0DBE               	rlf	___flmul@grs+1,f
  7438  0F4C  0DBF               	rlf	___flmul@grs+2,f
  7439  0F4D  0DC0               	rlf	___flmul@grs+3,f
  7440  0F4E  0B89               	decfsz	9,f
  7441  0F4F  2F4A               	goto	u7155
  7442  0F50  0841               	movf	___flmul@bexp,w
  7443  0F51  073C               	addwf	___flmul@aexp,w
  7444  0F52  00B6               	movwf	??___flmul
  7445  0F53  01B7               	clrf	??___flmul+1
  7446  0F54  0DB7               	rlf	??___flmul+1,f
  7447  0F55  0836               	movf	??___flmul,w
  7448  0F56  3E82               	addlw	130
  7449  0F57  00C6               	movwf	___flmul@temp
  7450  0F58  30FF               	movlw	255
  7451  0F59  3D37               	addwfc	??___flmul+1,w
  7452  0F5A  00C7               	movwf	___flmul@temp+1
  7453  0F5B                     l4371:	
  7454  0F5B  1BC4               	btfsc	___flmul@prod+2,7
  7455  0F5C  2F72               	goto	l4373
  7456  0F5D  3001               	movlw	1
  7457  0F5E                     u7165:	
  7458  0F5E  35C2               	lslf	___flmul@prod,f
  7459  0F5F  0DC3               	rlf	___flmul@prod+1,f
  7460  0F60  0DC4               	rlf	___flmul@prod+2,f
  7461  0F61  0DC5               	rlf	___flmul@prod+3,f
  7462  0F62  0B89               	decfsz	9,f
  7463  0F63  2F5E               	goto	u7165
  7464  0F64  1BC0               	btfsc	___flmul@grs+3,7
  7465  0F65  1442               	bsf	___flmul@prod,0
  7466  0F66  3001               	movlw	1
  7467  0F67                     u7185:	
  7468  0F67  35BD               	lslf	___flmul@grs,f
  7469  0F68  0DBE               	rlf	___flmul@grs+1,f
  7470  0F69  0DBF               	rlf	___flmul@grs+2,f
  7471  0F6A  0DC0               	rlf	___flmul@grs+3,f
  7472  0F6B  0B89               	decfsz	9,f
  7473  0F6C  2F67               	goto	u7185
  7474  0F6D  30FF               	movlw	255
  7475  0F6E  07C6               	addwf	___flmul@temp,f
  7476  0F6F  30FF               	movlw	255
  7477  0F70  3DC7               	addwfc	___flmul@temp+1,f
  7478  0F71  2F5B               	goto	l4371
  7479  0F72                     l4373:	
  7480  0F72  01BC               	clrf	___flmul@aexp
  7481  0F73  1FC0               	btfss	___flmul@grs+3,7
  7482  0F74  2F8B               	goto	l4383
  7483  0F75  30FF               	movlw	255
  7484  0F76  053D               	andwf	___flmul@grs,w
  7485  0F77  00B6               	movwf	??___flmul
  7486  0F78  30FF               	movlw	255
  7487  0F79  053E               	andwf	___flmul@grs+1,w
  7488  0F7A  00B7               	movwf	??___flmul+1
  7489  0F7B  30FF               	movlw	255
  7490  0F7C  053F               	andwf	___flmul@grs+2,w
  7491  0F7D  00B8               	movwf	??___flmul+2
  7492  0F7E  307F               	movlw	127
  7493  0F7F  0540               	andwf	___flmul@grs+3,w
  7494  0F80  00B9               	movwf	??___flmul+3
  7495  0F81  0839               	movf	??___flmul+3,w
  7496  0F82  0438               	iorwf	??___flmul+2,w
  7497  0F83  0437               	iorwf	??___flmul+1,w
  7498  0F84  0436               	iorwf	??___flmul,w
  7499  0F85  1903               	skipnz
  7500  0F86  1842               	btfsc	___flmul@prod,0
  7501  0F87  2F89               	goto	l4379
  7502  0F88  2F8B               	goto	l4383
  7503  0F89                     l4379:	
  7504  0F89  01BC               	clrf	___flmul@aexp
  7505  0F8A  0ABC               	incf	___flmul@aexp,f
  7506  0F8B                     l4383:	
  7507  0F8B  083C               	movf	___flmul@aexp,w
  7508  0F8C  1903               	btfsc	3,2
  7509  0F8D  2FB4               	goto	l4393
  7510  0F8E  3001               	movlw	1
  7511  0F8F  07C2               	addwf	___flmul@prod,f
  7512  0F90  3000               	movlw	0
  7513  0F91  3DC3               	addwfc	___flmul@prod+1,f
  7514  0F92  3000               	movlw	0
  7515  0F93  3DC4               	addwfc	___flmul@prod+2,f
  7516  0F94  3000               	movlw	0
  7517  0F95  3DC5               	addwfc	___flmul@prod+3,f
  7518  0F96  1C45               	btfss	___flmul@prod+3,0
  7519  0F97  2FB4               	goto	l4393
  7520  0F98  0842               	movf	___flmul@prod,w
  7521  0F99  00B6               	movwf	??___flmul
  7522  0F9A  0843               	movf	___flmul@prod+1,w
  7523  0F9B  00B7               	movwf	??___flmul+1
  7524  0F9C  0844               	movf	___flmul@prod+2,w
  7525  0F9D  00B8               	movwf	??___flmul+2
  7526  0F9E  0845               	movf	___flmul@prod+3,w
  7527  0F9F  00B9               	movwf	??___flmul+3
  7528  0FA0  3001               	movlw	1
  7529  0FA1  00BA               	movwf	??___flmul+4
  7530  0FA2                     u7255:	
  7531  0FA2  37B9               	asrf	??___flmul+3,f
  7532  0FA3  0CB8               	rrf	??___flmul+2,f
  7533  0FA4  0CB7               	rrf	??___flmul+1,f
  7534  0FA5  0CB6               	rrf	??___flmul,f
  7535  0FA6  0BBA               	decfsz	??___flmul+4,f
  7536  0FA7  2FA2               	goto	u7255
  7537  0FA8  0839               	movf	??___flmul+3,w
  7538  0FA9  00C5               	movwf	___flmul@prod+3
  7539  0FAA  0838               	movf	??___flmul+2,w
  7540  0FAB  00C4               	movwf	___flmul@prod+2
  7541  0FAC  0837               	movf	??___flmul+1,w
  7542  0FAD  00C3               	movwf	___flmul@prod+1
  7543  0FAE  0836               	movf	??___flmul,w
  7544  0FAF  00C2               	movwf	___flmul@prod
  7545  0FB0  3001               	movlw	1
  7546  0FB1  07C6               	addwf	___flmul@temp,f
  7547  0FB2  3000               	movlw	0
  7548  0FB3  3DC7               	addwfc	___flmul@temp+1,f
  7549  0FB4                     l4393:	
  7550  0FB4  0847               	movf	___flmul@temp+1,w
  7551  0FB5  3A80               	xorlw	128
  7552  0FB6  00B6               	movwf	??___flmul
  7553  0FB7  3080               	movlw	128
  7554  0FB8  0236               	subwf	??___flmul,w
  7555  0FB9  1D03               	skipz
  7556  0FBA  2FBD               	goto	u7265
  7557  0FBB  30FF               	movlw	255
  7558  0FBC  0246               	subwf	___flmul@temp,w
  7559  0FBD                     u7265:	
  7560  0FBD  1C03               	skipc
  7561  0FBE  2FC9               	goto	l4397
  7562  0FBF  307F               	movlw	127
  7563  0FC0  0140               	movlb	0	; select bank0
  7564  0FC1  00C5               	movwf	___flmul@prod+3
  7565  0FC2  3080               	movlw	128
  7566  0FC3  00C4               	movwf	___flmul@prod+2
  7567  0FC4  3000               	movlw	0
  7568  0FC5  00C3               	movwf	___flmul@prod+1
  7569  0FC6  3000               	movlw	0
  7570  0FC7  00C2               	movwf	___flmul@prod
  7571  0FC8  2FF3               	goto	l745
  7572  0FC9                     l4397:	
  7573  0FC9  0140               	movlb	0	; select bank0
  7574  0FCA  0847               	movf	___flmul@temp+1,w
  7575  0FCB  3A80               	xorlw	128
  7576  0FCC  00B6               	movwf	??___flmul
  7577  0FCD  3080               	movlw	128
  7578  0FCE  0236               	subwf	??___flmul,w
  7579  0FCF  1D03               	skipz
  7580  0FD0  2FD3               	goto	u7275
  7581  0FD1  3001               	movlw	1
  7582  0FD2  0246               	subwf	___flmul@temp,w
  7583  0FD3                     u7275:	
  7584  0FD3  1803               	skipnc
  7585  0FD4  2FE0               	goto	l4403
  7586  0FD5  3000               	movlw	0
  7587  0FD6  0140               	movlb	0	; select bank0
  7588  0FD7  00C5               	movwf	___flmul@prod+3
  7589  0FD8  3000               	movlw	0
  7590  0FD9  00C4               	movwf	___flmul@prod+2
  7591  0FDA  3000               	movlw	0
  7592  0FDB  00C3               	movwf	___flmul@prod+1
  7593  0FDC  3000               	movlw	0
  7594  0FDD  00C2               	movwf	___flmul@prod
  7595  0FDE  01BB               	clrf	___flmul@sign
  7596  0FDF  2FF3               	goto	l745
  7597  0FE0                     l4403:	
  7598  0FE0  0140               	movlb	0	; select bank0
  7599  0FE1  0846               	movf	___flmul@temp,w
  7600  0FE2  00B6               	movwf	??___flmul
  7601  0FE3  0836               	movf	??___flmul,w
  7602  0FE4  00C1               	movwf	___flmul@bexp
  7603  0FE5  30FF               	movlw	255
  7604  0FE6  05C2               	andwf	___flmul@prod,f
  7605  0FE7  30FF               	movlw	255
  7606  0FE8  05C3               	andwf	___flmul@prod+1,f
  7607  0FE9  307F               	movlw	127
  7608  0FEA  05C4               	andwf	___flmul@prod+2,f
  7609  0FEB  3000               	movlw	0
  7610  0FEC  05C5               	andwf	___flmul@prod+3,f
  7611  0FED  1841               	btfsc	___flmul@bexp,0
  7612  0FEE  17C4               	bsf	___flmul@prod+2,7
  7613  0FEF  3641               	lsrf	___flmul@bexp,w
  7614  0FF0  00B6               	movwf	??___flmul
  7615  0FF1  0836               	movf	??___flmul,w
  7616  0FF2  00C5               	movwf	___flmul@prod+3
  7617  0FF3                     l745:	
  7618  0FF3  083B               	movf	___flmul@sign,w
  7619  0FF4  00B6               	movwf	??___flmul
  7620  0FF5  0836               	movf	??___flmul,w
  7621  0FF6  04C5               	iorwf	___flmul@prod+3,f
  7622  0FF7  0845               	movf	___flmul@prod+3,w
  7623  0FF8  00B1               	movwf	?___flmul+3
  7624  0FF9  0844               	movf	___flmul@prod+2,w
  7625  0FFA  00B0               	movwf	?___flmul+2
  7626  0FFB  0843               	movf	___flmul@prod+1,w
  7627  0FFC  00AF               	movwf	?___flmul+1
  7628  0FFD  0842               	movf	___flmul@prod,w
  7629  0FFE  00AE               	movwf	?___flmul
  7630  0FFF  0008               	return
  7631  1000                     __end_of___flmul:	
  7632                           
  7633                           	psect	text21
  7634  129B                     __ptext21:	
  7635 ;; *************** function __Umul8_16 *****************
  7636 ;; Defined at:
  7637 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  multiplier      1    wreg     unsigned char 
  7640 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;  multiplier      1    8[BANK0 ] unsigned char 
  7643 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  7644 ;;  product         2    4[BANK0 ] unsigned int 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  2    0[BANK0 ] unsigned int 
  7647 ;; Registers used:
  7648 ;;		wreg, status,2, status,0
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7654 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;Total ram usage:        9 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; Hardware stack levels required when called:    2
  7661 ;; This function calls:
  7662 ;;		Nothing
  7663 ;; This function is called by:
  7664 ;;		___flmul
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           
  7669                           ;psect for function __Umul8_16
  7670  129B                     __Umul8_16:	
  7671                           
  7672                           ;incstack = 0
  7673                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7674                           ;__Umul8_16@multiplier stored from wreg
  7675  129B  0140               	movlb	0	; select bank0
  7676  129C  00A8               	movwf	__Umul8_16@multiplier
  7677  129D  01A4               	clrf	__Umul8_16@product
  7678  129E  01A5               	clrf	__Umul8_16@product+1
  7679  129F  0820               	movf	__Umul8_16@multiplicand,w
  7680  12A0  00A2               	movwf	??__Umul8_16
  7681  12A1  01A3               	clrf	??__Umul8_16+1
  7682  12A2  0822               	movf	??__Umul8_16,w
  7683  12A3  00A6               	movwf	__Umul8_16@word_mpld
  7684  12A4  0823               	movf	??__Umul8_16+1,w
  7685  12A5  00A7               	movwf	__Umul8_16@word_mpld+1
  7686  12A6                     l3873:	
  7687  12A6  1C28               	btfss	__Umul8_16@multiplier,0
  7688  12A7  2AAC               	goto	l881
  7689  12A8  0826               	movf	__Umul8_16@word_mpld,w
  7690  12A9  07A4               	addwf	__Umul8_16@product,f
  7691  12AA  0827               	movf	__Umul8_16@word_mpld+1,w
  7692  12AB  3DA5               	addwfc	__Umul8_16@product+1,f
  7693  12AC                     l881:	
  7694  12AC  3001               	movlw	1
  7695  12AD                     u6075:	
  7696  12AD  35A6               	lslf	__Umul8_16@word_mpld,f
  7697  12AE  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  7698  12AF  0B89               	decfsz	9,f
  7699  12B0  2AAD               	goto	u6075
  7700  12B1  1003               	clrc
  7701  12B2  0CA8               	rrf	__Umul8_16@multiplier,f
  7702  12B3  0828               	movf	__Umul8_16@multiplier,w
  7703  12B4  1D03               	btfss	3,2
  7704  12B5  2AA6               	goto	l3873
  7705  12B6  0825               	movf	__Umul8_16@product+1,w
  7706  12B7  00A1               	movwf	?__Umul8_16+1
  7707  12B8  0824               	movf	__Umul8_16@product,w
  7708  12B9  00A0               	movwf	?__Umul8_16
  7709  12BA  0008               	return
  7710  12BB                     __end_of__Umul8_16:	
  7711                           
  7712                           	psect	text22
  7713  1675                     __ptext22:	
  7714 ;; *************** function ___flge *****************
  7715 ;; Defined at:
  7716 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;  ff1             4   40[BANK0 ] unsigned int 
  7719 ;;  ff2             4   44[BANK0 ] unsigned int 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;		None
  7722 ;; Return value:  Size  Location     Type
  7723 ;;		None               void
  7724 ;; Registers used:
  7725 ;;		wreg, status,2, status,0
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7731 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7733 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7734 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7735 ;;Total ram usage:       12 bytes
  7736 ;; Hardware stack levels used:    1
  7737 ;; Hardware stack levels required when called:    2
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_efgtoa
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           
  7746                           ;psect for function ___flge
  7747  1675                     ___flge:	
  7748                           
  7749                           ;incstack = 0
  7750                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7751  1675  3000               	movlw	0
  7752  1676  0140               	movlb	0	; select bank0
  7753  1677  0548               	andwf	___flge@ff1,w
  7754  1678  00D0               	movwf	??___flge
  7755  1679  3000               	movlw	0
  7756  167A  0549               	andwf	___flge@ff1+1,w
  7757  167B  00D1               	movwf	??___flge+1
  7758  167C  3080               	movlw	128
  7759  167D  054A               	andwf	___flge@ff1+2,w
  7760  167E  00D2               	movwf	??___flge+2
  7761  167F  307F               	movlw	127
  7762  1680  054B               	andwf	___flge@ff1+3,w
  7763  1681  00D3               	movwf	??___flge+3
  7764  1682  0853               	movf	??___flge+3,w
  7765  1683  0452               	iorwf	??___flge+2,w
  7766  1684  0451               	iorwf	??___flge+1,w
  7767  1685  0450               	iorwf	??___flge,w
  7768  1686  1D03               	skipz
  7769  1687  2E90               	goto	l514
  7770  1688  3000               	movlw	0
  7771  1689  00CB               	movwf	___flge@ff1+3
  7772  168A  3000               	movlw	0
  7773  168B  00CA               	movwf	___flge@ff1+2
  7774  168C  3000               	movlw	0
  7775  168D  00C9               	movwf	___flge@ff1+1
  7776  168E  3000               	movlw	0
  7777  168F  00C8               	movwf	___flge@ff1
  7778  1690                     l514:	
  7779  1690  3000               	movlw	0
  7780  1691  054C               	andwf	___flge@ff2,w
  7781  1692  00D0               	movwf	??___flge
  7782  1693  3000               	movlw	0
  7783  1694  054D               	andwf	___flge@ff2+1,w
  7784  1695  00D1               	movwf	??___flge+1
  7785  1696  3080               	movlw	128
  7786  1697  054E               	andwf	___flge@ff2+2,w
  7787  1698  00D2               	movwf	??___flge+2
  7788  1699  307F               	movlw	127
  7789  169A  054F               	andwf	___flge@ff2+3,w
  7790  169B  00D3               	movwf	??___flge+3
  7791  169C  0853               	movf	??___flge+3,w
  7792  169D  0452               	iorwf	??___flge+2,w
  7793  169E  0451               	iorwf	??___flge+1,w
  7794  169F  0450               	iorwf	??___flge,w
  7795  16A0  1D03               	skipz
  7796  16A1  2EAA               	goto	l4071
  7797  16A2  3000               	movlw	0
  7798  16A3  00CF               	movwf	___flge@ff2+3
  7799  16A4  3000               	movlw	0
  7800  16A5  00CE               	movwf	___flge@ff2+2
  7801  16A6  3000               	movlw	0
  7802  16A7  00CD               	movwf	___flge@ff2+1
  7803  16A8  3000               	movlw	0
  7804  16A9  00CC               	movwf	___flge@ff2
  7805  16AA                     l4071:	
  7806  16AA  1FCB               	btfss	___flge@ff1+3,7
  7807  16AB  2EC4               	goto	l4075
  7808  16AC  3000               	movlw	0
  7809  16AD  00D0               	movwf	??___flge
  7810  16AE  3000               	movlw	0
  7811  16AF  00D1               	movwf	??___flge+1
  7812  16B0  3000               	movlw	0
  7813  16B1  00D2               	movwf	??___flge+2
  7814  16B2  3080               	movlw	128
  7815  16B3  00D3               	movwf	??___flge+3
  7816  16B4  0848               	movf	___flge@ff1,w
  7817  16B5  02D0               	subwf	??___flge,f
  7818  16B6  0849               	movf	___flge@ff1+1,w
  7819  16B7  3BD1               	subwfb	??___flge+1,f
  7820  16B8  084A               	movf	___flge@ff1+2,w
  7821  16B9  3BD2               	subwfb	??___flge+2,f
  7822  16BA  084B               	movf	___flge@ff1+3,w
  7823  16BB  3BD3               	subwfb	??___flge+3,f
  7824  16BC  0853               	movf	??___flge+3,w
  7825  16BD  00CB               	movwf	___flge@ff1+3
  7826  16BE  0852               	movf	??___flge+2,w
  7827  16BF  00CA               	movwf	___flge@ff1+2
  7828  16C0  0851               	movf	??___flge+1,w
  7829  16C1  00C9               	movwf	___flge@ff1+1
  7830  16C2  0850               	movf	??___flge,w
  7831  16C3  00C8               	movwf	___flge@ff1
  7832  16C4                     l4075:	
  7833  16C4  1FCF               	btfss	___flge@ff2+3,7
  7834  16C5  2EDE               	goto	l517
  7835  16C6  3000               	movlw	0
  7836  16C7  00D0               	movwf	??___flge
  7837  16C8  3000               	movlw	0
  7838  16C9  00D1               	movwf	??___flge+1
  7839  16CA  3000               	movlw	0
  7840  16CB  00D2               	movwf	??___flge+2
  7841  16CC  3080               	movlw	128
  7842  16CD  00D3               	movwf	??___flge+3
  7843  16CE  084C               	movf	___flge@ff2,w
  7844  16CF  02D0               	subwf	??___flge,f
  7845  16D0  084D               	movf	___flge@ff2+1,w
  7846  16D1  3BD1               	subwfb	??___flge+1,f
  7847  16D2  084E               	movf	___flge@ff2+2,w
  7848  16D3  3BD2               	subwfb	??___flge+2,f
  7849  16D4  084F               	movf	___flge@ff2+3,w
  7850  16D5  3BD3               	subwfb	??___flge+3,f
  7851  16D6  0853               	movf	??___flge+3,w
  7852  16D7  00CF               	movwf	___flge@ff2+3
  7853  16D8  0852               	movf	??___flge+2,w
  7854  16D9  00CE               	movwf	___flge@ff2+2
  7855  16DA  0851               	movf	??___flge+1,w
  7856  16DB  00CD               	movwf	___flge@ff2+1
  7857  16DC  0850               	movf	??___flge,w
  7858  16DD  00CC               	movwf	___flge@ff2
  7859  16DE                     l517:	
  7860  16DE  3080               	movlw	128
  7861  16DF  06CB               	xorwf	___flge@ff1+3,f
  7862  16E0  3080               	movlw	128
  7863  16E1  06CF               	xorwf	___flge@ff2+3,f
  7864  16E2  084F               	movf	___flge@ff2+3,w
  7865  16E3  024B               	subwf	___flge@ff1+3,w
  7866  16E4  1D03               	skipz
  7867  16E5  0008               	return
  7868  16E6  084E               	movf	___flge@ff2+2,w
  7869  16E7  024A               	subwf	___flge@ff1+2,w
  7870  16E8  1D03               	skipz
  7871  16E9  0008               	return
  7872  16EA  084D               	movf	___flge@ff2+1,w
  7873  16EB  0249               	subwf	___flge@ff1+1,w
  7874  16EC  1D03               	skipz
  7875  16ED  0008               	return
  7876  16EE  084C               	movf	___flge@ff2,w
  7877  16EF  0248               	subwf	___flge@ff1,w
  7878  16F0  0008               	return
  7879  16F1                     __end_of___flge:	
  7880                           
  7881                           	psect	text23
  7882  0801                     __ptext23:	
  7883 ;; *************** function ___fleq *****************
  7884 ;; Defined at:
  7885 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  ff1             4    0[BANK0 ] unsigned int 
  7888 ;;  ff2             4    4[BANK0 ] unsigned int 
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;		None
  7891 ;; Return value:  Size  Location     Type
  7892 ;;		None               void
  7893 ;; Registers used:
  7894 ;;		wreg, status,2, status,0
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7900 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7902 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7903 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7904 ;;Total ram usage:       12 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:    2
  7907 ;; This function calls:
  7908 ;;		Nothing
  7909 ;; This function is called by:
  7910 ;;		_efgtoa
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           
  7915                           ;psect for function ___fleq
  7916  0801                     ___fleq:	
  7917                           
  7918                           ;incstack = 0
  7919                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7920  0801  3000               	movlw	0
  7921  0802  0140               	movlb	0	; select bank0
  7922  0803  0520               	andwf	___fleq@ff1,w
  7923  0804  00A8               	movwf	??___fleq
  7924  0805  3000               	movlw	0
  7925  0806  0521               	andwf	___fleq@ff1+1,w
  7926  0807  00A9               	movwf	??___fleq+1
  7927  0808  3080               	movlw	128
  7928  0809  0522               	andwf	___fleq@ff1+2,w
  7929  080A  00AA               	movwf	??___fleq+2
  7930  080B  307F               	movlw	127
  7931  080C  0523               	andwf	___fleq@ff1+3,w
  7932  080D  00AB               	movwf	??___fleq+3
  7933  080E  082B               	movf	??___fleq+3,w
  7934  080F  042A               	iorwf	??___fleq+2,w
  7935  0810  0429               	iorwf	??___fleq+1,w
  7936  0811  0428               	iorwf	??___fleq,w
  7937  0812  1D03               	skipz
  7938  0813  281C               	goto	l505
  7939  0814  3000               	movlw	0
  7940  0815  00A3               	movwf	___fleq@ff1+3
  7941  0816  3000               	movlw	0
  7942  0817  00A2               	movwf	___fleq@ff1+2
  7943  0818  3000               	movlw	0
  7944  0819  00A1               	movwf	___fleq@ff1+1
  7945  081A  3000               	movlw	0
  7946  081B  00A0               	movwf	___fleq@ff1
  7947  081C                     l505:	
  7948  081C  3000               	movlw	0
  7949  081D  0524               	andwf	___fleq@ff2,w
  7950  081E  00A8               	movwf	??___fleq
  7951  081F  3000               	movlw	0
  7952  0820  0525               	andwf	___fleq@ff2+1,w
  7953  0821  00A9               	movwf	??___fleq+1
  7954  0822  3080               	movlw	128
  7955  0823  0526               	andwf	___fleq@ff2+2,w
  7956  0824  00AA               	movwf	??___fleq+2
  7957  0825  307F               	movlw	127
  7958  0826  0527               	andwf	___fleq@ff2+3,w
  7959  0827  00AB               	movwf	??___fleq+3
  7960  0828  082B               	movf	??___fleq+3,w
  7961  0829  042A               	iorwf	??___fleq+2,w
  7962  082A  0429               	iorwf	??___fleq+1,w
  7963  082B  0428               	iorwf	??___fleq,w
  7964  082C  1D03               	skipz
  7965  082D  2836               	goto	l506
  7966  082E  3000               	movlw	0
  7967  082F  00A7               	movwf	___fleq@ff2+3
  7968  0830  3000               	movlw	0
  7969  0831  00A6               	movwf	___fleq@ff2+2
  7970  0832  3000               	movlw	0
  7971  0833  00A5               	movwf	___fleq@ff2+1
  7972  0834  3000               	movlw	0
  7973  0835  00A4               	movwf	___fleq@ff2
  7974  0836                     l506:	
  7975  0836  0827               	movf	___fleq@ff2+3,w
  7976  0837  0623               	xorwf	___fleq@ff1+3,w
  7977  0838  1D03               	skipz
  7978  0839  2844               	goto	u6575
  7979  083A  0826               	movf	___fleq@ff2+2,w
  7980  083B  0622               	xorwf	___fleq@ff1+2,w
  7981  083C  1D03               	skipz
  7982  083D  2844               	goto	u6575
  7983  083E  0825               	movf	___fleq@ff2+1,w
  7984  083F  0621               	xorwf	___fleq@ff1+1,w
  7985  0840  1D03               	skipz
  7986  0841  2844               	goto	u6575
  7987  0842  0824               	movf	___fleq@ff2,w
  7988  0843  0620               	xorwf	___fleq@ff1,w
  7989  0844                     u6575:	
  7990  0844  1903               	skipnz
  7991  0845  2848               	goto	l4061
  7992  0846  1003               	clrc
  7993  0847  0008               	return
  7994  0848                     l4061:	
  7995  0848  1403               	setc
  7996  0849  0008               	return
  7997  084A                     __end_of___fleq:	
  7998                           
  7999                           	psect	text24
  8000  08E0                     __ptext24:	
  8001 ;; *************** function ___fldiv *****************
  8002 ;; Defined at:
  8003 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;  a               4    0[BANK0 ] unsigned int 
  8006 ;;  b               4    4[BANK0 ] unsigned int 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  grs             4   20[BANK0 ] unsigned long 
  8009 ;;  rem             4   13[BANK0 ] unsigned long 
  8010 ;;  new_exp         2   18[BANK0 ] int 
  8011 ;;  aexp            1   25[BANK0 ] unsigned char 
  8012 ;;  bexp            1   24[BANK0 ] unsigned char 
  8013 ;;  sign            1   17[BANK0 ] unsigned char 
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  4    0[BANK0 ] unsigned char 
  8016 ;; Registers used:
  8017 ;;		wreg, status,2, status,0
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8023 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;Total ram usage:       26 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:    2
  8030 ;; This function calls:
  8031 ;;		Nothing
  8032 ;; This function is called by:
  8033 ;;		_efgtoa
  8034 ;; This function uses a non-reentrant model
  8035 ;;
  8036                           
  8037                           
  8038                           ;psect for function ___fldiv
  8039  08E0                     ___fldiv:	
  8040                           
  8041                           ;incstack = 0
  8042                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8043  08E0  0140               	movlb	0	; select bank0
  8044  08E1  0827               	movf	___fldiv@b+3,w
  8045  08E2  3980               	andlw	128
  8046  08E3  00A8               	movwf	??___fldiv
  8047  08E4  0828               	movf	??___fldiv,w
  8048  08E5  00B1               	movwf	___fldiv@sign
  8049  08E6  3527               	lslf	___fldiv@b+3,w
  8050  08E7  00A8               	movwf	??___fldiv
  8051  08E8  0828               	movf	??___fldiv,w
  8052  08E9  00B8               	movwf	___fldiv@bexp
  8053  08EA  1BA6               	btfsc	___fldiv@b+2,7
  8054  08EB  1438               	bsf	___fldiv@bexp,0
  8055  08EC  0838               	movf	___fldiv@bexp,w
  8056  08ED  1903               	btfsc	3,2
  8057  08EE  28FD               	goto	l4153
  8058  08EF  0A38               	incf	___fldiv@bexp,w
  8059  08F0  1D03               	btfss	3,2
  8060  08F1  28FA               	goto	l4149
  8061  08F2  3000               	movlw	0
  8062  08F3  00A7               	movwf	___fldiv@b+3
  8063  08F4  3000               	movlw	0
  8064  08F5  00A6               	movwf	___fldiv@b+2
  8065  08F6  3000               	movlw	0
  8066  08F7  00A5               	movwf	___fldiv@b+1
  8067  08F8  3000               	movlw	0
  8068  08F9  00A4               	movwf	___fldiv@b
  8069  08FA                     l4149:	
  8070  08FA  17A6               	bsf	___fldiv@b+2,7
  8071  08FB  01A7               	clrf	___fldiv@b+3
  8072  08FC  2905               	goto	l4155
  8073  08FD                     l4153:	
  8074  08FD  3000               	movlw	0
  8075  08FE  00A7               	movwf	___fldiv@b+3
  8076  08FF  3000               	movlw	0
  8077  0900  00A6               	movwf	___fldiv@b+2
  8078  0901  3000               	movlw	0
  8079  0902  00A5               	movwf	___fldiv@b+1
  8080  0903  3000               	movlw	0
  8081  0904  00A4               	movwf	___fldiv@b
  8082  0905                     l4155:	
  8083  0905  0823               	movf	___fldiv@a+3,w
  8084  0906  3980               	andlw	128
  8085  0907  00A8               	movwf	??___fldiv
  8086  0908  0828               	movf	??___fldiv,w
  8087  0909  06B1               	xorwf	___fldiv@sign,f
  8088  090A  3523               	lslf	___fldiv@a+3,w
  8089  090B  00A8               	movwf	??___fldiv
  8090  090C  0828               	movf	??___fldiv,w
  8091  090D  00B9               	movwf	___fldiv@aexp
  8092  090E  1BA2               	btfsc	___fldiv@a+2,7
  8093  090F  1439               	bsf	___fldiv@aexp,0
  8094  0910  0839               	movf	___fldiv@aexp,w
  8095  0911  1903               	btfsc	3,2
  8096  0912  2921               	goto	l4173
  8097  0913  0A39               	incf	___fldiv@aexp,w
  8098  0914  1D03               	btfss	3,2
  8099  0915  291E               	goto	l4169
  8100  0916  3000               	movlw	0
  8101  0917  00A3               	movwf	___fldiv@a+3
  8102  0918  3000               	movlw	0
  8103  0919  00A2               	movwf	___fldiv@a+2
  8104  091A  3000               	movlw	0
  8105  091B  00A1               	movwf	___fldiv@a+1
  8106  091C  3000               	movlw	0
  8107  091D  00A0               	movwf	___fldiv@a
  8108  091E                     l4169:	
  8109  091E  17A2               	bsf	___fldiv@a+2,7
  8110  091F  01A3               	clrf	___fldiv@a+3
  8111  0920  2929               	goto	l693
  8112  0921                     l4173:	
  8113  0921  3000               	movlw	0
  8114  0922  00A3               	movwf	___fldiv@a+3
  8115  0923  3000               	movlw	0
  8116  0924  00A2               	movwf	___fldiv@a+2
  8117  0925  3000               	movlw	0
  8118  0926  00A1               	movwf	___fldiv@a+1
  8119  0927  3000               	movlw	0
  8120  0928  00A0               	movwf	___fldiv@a
  8121  0929                     l693:	
  8122  0929  0823               	movf	___fldiv@a+3,w
  8123  092A  0422               	iorwf	___fldiv@a+2,w
  8124  092B  0421               	iorwf	___fldiv@a+1,w
  8125  092C  0420               	iorwf	___fldiv@a,w
  8126  092D  1D03               	skipz
  8127  092E  2948               	goto	l4183
  8128  092F  3000               	movlw	0
  8129  0930  00A7               	movwf	___fldiv@b+3
  8130  0931  3000               	movlw	0
  8131  0932  00A6               	movwf	___fldiv@b+2
  8132  0933  3000               	movlw	0
  8133  0934  00A5               	movwf	___fldiv@b+1
  8134  0935  3000               	movlw	0
  8135  0936  00A4               	movwf	___fldiv@b
  8136  0937  3080               	movlw	128
  8137  0938  04A6               	iorwf	___fldiv@b+2,f
  8138  0939  307F               	movlw	127
  8139  093A  04A7               	iorwf	___fldiv@b+3,f
  8140  093B                     L12:	
  8141  093B  0831               	movf	___fldiv@sign,w
  8142  093C  00A8               	movwf	??___fldiv
  8143  093D  0828               	movf	??___fldiv,w
  8144  093E  04A7               	iorwf	___fldiv@b+3,f
  8145  093F  0827               	movf	___fldiv@b+3,w
  8146  0940  00A3               	movwf	?___fldiv+3
  8147  0941  0826               	movf	___fldiv@b+2,w
  8148  0942  00A2               	movwf	?___fldiv+2
  8149  0943  0825               	movf	___fldiv@b+1,w
  8150  0944  00A1               	movwf	?___fldiv+1
  8151  0945  0824               	movf	___fldiv@b,w
  8152  0946  00A0               	movwf	?___fldiv
  8153  0947  0008               	return
  8154  0948                     l4183:	
  8155  0948  0838               	movf	___fldiv@bexp,w
  8156  0949  1D03               	btfss	3,2
  8157  094A  2954               	goto	l4189
  8158  094B  3000               	movlw	0
  8159  094C  00A3               	movwf	?___fldiv+3
  8160  094D  3000               	movlw	0
  8161  094E  00A2               	movwf	?___fldiv+2
  8162  094F  3000               	movlw	0
  8163  0950  00A1               	movwf	?___fldiv+1
  8164  0951  3000               	movlw	0
  8165  0952  00A0               	movwf	?___fldiv
  8166  0953  0008               	return
  8167  0954                     l4189:	
  8168  0954  0838               	movf	___fldiv@bexp,w
  8169  0955  00A8               	movwf	??___fldiv
  8170  0956  01A9               	clrf	??___fldiv+1
  8171  0957  0829               	movf	??___fldiv+1,w
  8172  0958  00AB               	movwf	??___fldiv+3
  8173  0959  0839               	movf	___fldiv@aexp,w
  8174  095A  0228               	subwf	??___fldiv,w
  8175  095B  00AA               	movwf	??___fldiv+2
  8176  095C  1C03               	skipc
  8177  095D  03AB               	decf	??___fldiv+3,f
  8178  095E  082A               	movf	??___fldiv+2,w
  8179  095F  3E7F               	addlw	127
  8180  0960  00B2               	movwf	___fldiv@new_exp
  8181  0961  3000               	movlw	0
  8182  0962  3D2B               	addwfc	??___fldiv+3,w
  8183  0963  00B3               	movwf	___fldiv@new_exp+1
  8184  0964  0827               	movf	___fldiv@b+3,w
  8185  0965  00B0               	movwf	___fldiv@rem+3
  8186  0966  0826               	movf	___fldiv@b+2,w
  8187  0967  00AF               	movwf	___fldiv@rem+2
  8188  0968  0825               	movf	___fldiv@b+1,w
  8189  0969  00AE               	movwf	___fldiv@rem+1
  8190  096A  0824               	movf	___fldiv@b,w
  8191  096B  00AD               	movwf	___fldiv@rem
  8192  096C  3000               	movlw	0
  8193  096D  00A7               	movwf	___fldiv@b+3
  8194  096E  3000               	movlw	0
  8195  096F  00A6               	movwf	___fldiv@b+2
  8196  0970  3000               	movlw	0
  8197  0971  00A5               	movwf	___fldiv@b+1
  8198  0972  3000               	movlw	0
  8199  0973  00A4               	movwf	___fldiv@b
  8200  0974  3000               	movlw	0
  8201  0975  00B7               	movwf	___fldiv@grs+3
  8202  0976  3000               	movlw	0
  8203  0977  00B6               	movwf	___fldiv@grs+2
  8204  0978  3000               	movlw	0
  8205  0979  00B5               	movwf	___fldiv@grs+1
  8206  097A  3000               	movlw	0
  8207  097B  00B4               	movwf	___fldiv@grs
  8208  097C  01B9               	clrf	___fldiv@aexp
  8209  097D                     l4217:	
  8210  097D  301A               	movlw	26
  8211  097E  0239               	subwf	___fldiv@aexp,w
  8212  097F  1803               	btfsc	3,0
  8213  0980  29B9               	goto	l4219
  8214  0981  0839               	movf	___fldiv@aexp,w
  8215  0982  1903               	btfsc	3,2
  8216  0983  299B               	goto	l4209
  8217  0984  3001               	movlw	1
  8218  0985                     u6835:	
  8219  0985  35AD               	lslf	___fldiv@rem,f
  8220  0986  0DAE               	rlf	___fldiv@rem+1,f
  8221  0987  0DAF               	rlf	___fldiv@rem+2,f
  8222  0988  0DB0               	rlf	___fldiv@rem+3,f
  8223  0989  0B89               	decfsz	9,f
  8224  098A  2985               	goto	u6835
  8225  098B  3001               	movlw	1
  8226  098C                     u6845:	
  8227  098C  35A4               	lslf	___fldiv@b,f
  8228  098D  0DA5               	rlf	___fldiv@b+1,f
  8229  098E  0DA6               	rlf	___fldiv@b+2,f
  8230  098F  0DA7               	rlf	___fldiv@b+3,f
  8231  0990  0B89               	decfsz	9,f
  8232  0991  298C               	goto	u6845
  8233  0992  1BB7               	btfsc	___fldiv@grs+3,7
  8234  0993  1424               	bsf	___fldiv@b,0
  8235  0994  3001               	movlw	1
  8236  0995                     u6865:	
  8237  0995  35B4               	lslf	___fldiv@grs,f
  8238  0996  0DB5               	rlf	___fldiv@grs+1,f
  8239  0997  0DB6               	rlf	___fldiv@grs+2,f
  8240  0998  0DB7               	rlf	___fldiv@grs+3,f
  8241  0999  0B89               	decfsz	9,f
  8242  099A  2995               	goto	u6865
  8243  099B                     l4209:	
  8244  099B  0823               	movf	___fldiv@a+3,w
  8245  099C  0230               	subwf	___fldiv@rem+3,w
  8246  099D  1D03               	skipz
  8247  099E  29A9               	goto	u6875
  8248  099F  0822               	movf	___fldiv@a+2,w
  8249  09A0  022F               	subwf	___fldiv@rem+2,w
  8250  09A1  1D03               	skipz
  8251  09A2  29A9               	goto	u6875
  8252  09A3  0821               	movf	___fldiv@a+1,w
  8253  09A4  022E               	subwf	___fldiv@rem+1,w
  8254  09A5  1D03               	skipz
  8255  09A6  29A9               	goto	u6875
  8256  09A7  0820               	movf	___fldiv@a,w
  8257  09A8  022D               	subwf	___fldiv@rem,w
  8258  09A9                     u6875:	
  8259  09A9  1C03               	skipc
  8260  09AA  29B4               	goto	l4215
  8261  09AB  1737               	bsf	___fldiv@grs+3,6
  8262  09AC  0820               	movf	___fldiv@a,w
  8263  09AD  02AD               	subwf	___fldiv@rem,f
  8264  09AE  0821               	movf	___fldiv@a+1,w
  8265  09AF  3BAE               	subwfb	___fldiv@rem+1,f
  8266  09B0  0822               	movf	___fldiv@a+2,w
  8267  09B1  3BAF               	subwfb	___fldiv@rem+2,f
  8268  09B2  0823               	movf	___fldiv@a+3,w
  8269  09B3  3BB0               	subwfb	___fldiv@rem+3,f
  8270  09B4                     l4215:	
  8271  09B4  3001               	movlw	1
  8272  09B5  00A8               	movwf	??___fldiv
  8273  09B6  0828               	movf	??___fldiv,w
  8274  09B7  07B9               	addwf	___fldiv@aexp,f
  8275  09B8  297D               	goto	l4217
  8276  09B9                     l4219:	
  8277  09B9  0830               	movf	___fldiv@rem+3,w
  8278  09BA  042F               	iorwf	___fldiv@rem+2,w
  8279  09BB  042E               	iorwf	___fldiv@rem+1,w
  8280  09BC  042D               	iorwf	___fldiv@rem,w
  8281  09BD  1D03               	btfss	3,2
  8282  09BE  1434               	bsf	___fldiv@grs,0
  8283  09BF                     l4233:	
  8284  09BF  1BA6               	btfsc	___fldiv@b+2,7
  8285  09C0  29D6               	goto	l4235
  8286  09C1  3001               	movlw	1
  8287  09C2                     u6905:	
  8288  09C2  35A4               	lslf	___fldiv@b,f
  8289  09C3  0DA5               	rlf	___fldiv@b+1,f
  8290  09C4  0DA6               	rlf	___fldiv@b+2,f
  8291  09C5  0DA7               	rlf	___fldiv@b+3,f
  8292  09C6  0B89               	decfsz	9,f
  8293  09C7  29C2               	goto	u6905
  8294  09C8  1BB7               	btfsc	___fldiv@grs+3,7
  8295  09C9  1424               	bsf	___fldiv@b,0
  8296  09CA  3001               	movlw	1
  8297  09CB                     u6925:	
  8298  09CB  35B4               	lslf	___fldiv@grs,f
  8299  09CC  0DB5               	rlf	___fldiv@grs+1,f
  8300  09CD  0DB6               	rlf	___fldiv@grs+2,f
  8301  09CE  0DB7               	rlf	___fldiv@grs+3,f
  8302  09CF  0B89               	decfsz	9,f
  8303  09D0  29CB               	goto	u6925
  8304  09D1  30FF               	movlw	255
  8305  09D2  07B2               	addwf	___fldiv@new_exp,f
  8306  09D3  30FF               	movlw	255
  8307  09D4  3DB3               	addwfc	___fldiv@new_exp+1,f
  8308  09D5  29BF               	goto	l4233
  8309  09D6                     l4235:	
  8310  09D6  01B9               	clrf	___fldiv@aexp
  8311  09D7  1FB7               	btfss	___fldiv@grs+3,7
  8312  09D8  29EF               	goto	l4245
  8313  09D9  30FF               	movlw	255
  8314  09DA  0534               	andwf	___fldiv@grs,w
  8315  09DB  00A8               	movwf	??___fldiv
  8316  09DC  30FF               	movlw	255
  8317  09DD  0535               	andwf	___fldiv@grs+1,w
  8318  09DE  00A9               	movwf	??___fldiv+1
  8319  09DF  30FF               	movlw	255
  8320  09E0  0536               	andwf	___fldiv@grs+2,w
  8321  09E1  00AA               	movwf	??___fldiv+2
  8322  09E2  307F               	movlw	127
  8323  09E3  0537               	andwf	___fldiv@grs+3,w
  8324  09E4  00AB               	movwf	??___fldiv+3
  8325  09E5  082B               	movf	??___fldiv+3,w
  8326  09E6  042A               	iorwf	??___fldiv+2,w
  8327  09E7  0429               	iorwf	??___fldiv+1,w
  8328  09E8  0428               	iorwf	??___fldiv,w
  8329  09E9  1903               	skipnz
  8330  09EA  1824               	btfsc	___fldiv@b,0
  8331  09EB  29ED               	goto	l4241
  8332  09EC  29EF               	goto	l4245
  8333  09ED                     l4241:	
  8334  09ED  01B9               	clrf	___fldiv@aexp
  8335  09EE  0AB9               	incf	___fldiv@aexp,f
  8336  09EF                     l4245:	
  8337  09EF  0839               	movf	___fldiv@aexp,w
  8338  09F0  1903               	btfsc	3,2
  8339  09F1  2A18               	goto	l4255
  8340  09F2  3001               	movlw	1
  8341  09F3  07A4               	addwf	___fldiv@b,f
  8342  09F4  3000               	movlw	0
  8343  09F5  3DA5               	addwfc	___fldiv@b+1,f
  8344  09F6  3000               	movlw	0
  8345  09F7  3DA6               	addwfc	___fldiv@b+2,f
  8346  09F8  3000               	movlw	0
  8347  09F9  3DA7               	addwfc	___fldiv@b+3,f
  8348  09FA  1C27               	btfss	___fldiv@b+3,0
  8349  09FB  2A18               	goto	l4255
  8350  09FC  0824               	movf	___fldiv@b,w
  8351  09FD  00A8               	movwf	??___fldiv
  8352  09FE  0825               	movf	___fldiv@b+1,w
  8353  09FF  00A9               	movwf	??___fldiv+1
  8354  0A00  0826               	movf	___fldiv@b+2,w
  8355  0A01  00AA               	movwf	??___fldiv+2
  8356  0A02  0827               	movf	___fldiv@b+3,w
  8357  0A03  00AB               	movwf	??___fldiv+3
  8358  0A04  3001               	movlw	1
  8359  0A05  00AC               	movwf	??___fldiv+4
  8360  0A06                     u6995:	
  8361  0A06  37AB               	asrf	??___fldiv+3,f
  8362  0A07  0CAA               	rrf	??___fldiv+2,f
  8363  0A08  0CA9               	rrf	??___fldiv+1,f
  8364  0A09  0CA8               	rrf	??___fldiv,f
  8365  0A0A  0BAC               	decfsz	??___fldiv+4,f
  8366  0A0B  2A06               	goto	u6995
  8367  0A0C  082B               	movf	??___fldiv+3,w
  8368  0A0D  00A7               	movwf	___fldiv@b+3
  8369  0A0E  082A               	movf	??___fldiv+2,w
  8370  0A0F  00A6               	movwf	___fldiv@b+2
  8371  0A10  0829               	movf	??___fldiv+1,w
  8372  0A11  00A5               	movwf	___fldiv@b+1
  8373  0A12  0828               	movf	??___fldiv,w
  8374  0A13  00A4               	movwf	___fldiv@b
  8375  0A14  3001               	movlw	1
  8376  0A15  07B2               	addwf	___fldiv@new_exp,f
  8377  0A16  3000               	movlw	0
  8378  0A17  3DB3               	addwfc	___fldiv@new_exp+1,f
  8379  0A18                     l4255:	
  8380  0A18  0833               	movf	___fldiv@new_exp+1,w
  8381  0A19  3A80               	xorlw	128
  8382  0A1A  00A8               	movwf	??___fldiv
  8383  0A1B  3080               	movlw	128
  8384  0A1C  0228               	subwf	??___fldiv,w
  8385  0A1D  1D03               	skipz
  8386  0A1E  2A21               	goto	u7005
  8387  0A1F  30FF               	movlw	255
  8388  0A20  0232               	subwf	___fldiv@new_exp,w
  8389  0A21                     u7005:	
  8390  0A21  1C03               	skipc
  8391  0A22  2A30               	goto	l714
  8392  0A23  30FF               	movlw	255
  8393  0A24  0140               	movlb	0	; select bank0
  8394  0A25  00B2               	movwf	___fldiv@new_exp
  8395  0A26  3000               	movlw	0
  8396  0A27  00B3               	movwf	___fldiv@new_exp+1
  8397  0A28  3000               	movlw	0
  8398  0A29  00A7               	movwf	___fldiv@b+3
  8399  0A2A  3000               	movlw	0
  8400  0A2B  00A6               	movwf	___fldiv@b+2
  8401  0A2C  3000               	movlw	0
  8402  0A2D  00A5               	movwf	___fldiv@b+1
  8403  0A2E  3000               	movlw	0
  8404  0A2F  00A4               	movwf	___fldiv@b
  8405  0A30                     l714:	
  8406  0A30  0140               	movlb	0	; select bank0
  8407  0A31  0833               	movf	___fldiv@new_exp+1,w
  8408  0A32  3A80               	xorlw	128
  8409  0A33  00A8               	movwf	??___fldiv
  8410  0A34  3080               	movlw	128
  8411  0A35  0228               	subwf	??___fldiv,w
  8412  0A36  1D03               	skipz
  8413  0A37  2A3A               	goto	u7015
  8414  0A38  3001               	movlw	1
  8415  0A39  0232               	subwf	___fldiv@new_exp,w
  8416  0A3A                     u7015:	
  8417  0A3A  1803               	skipnc
  8418  0A3B  2A48               	goto	l715
  8419  0A3C  0140               	movlb	0	; select bank0
  8420  0A3D  01B2               	clrf	___fldiv@new_exp
  8421  0A3E  01B3               	clrf	___fldiv@new_exp+1
  8422  0A3F  3000               	movlw	0
  8423  0A40  00A7               	movwf	___fldiv@b+3
  8424  0A41  3000               	movlw	0
  8425  0A42  00A6               	movwf	___fldiv@b+2
  8426  0A43  3000               	movlw	0
  8427  0A44  00A5               	movwf	___fldiv@b+1
  8428  0A45  3000               	movlw	0
  8429  0A46  00A4               	movwf	___fldiv@b
  8430  0A47  01B1               	clrf	___fldiv@sign
  8431  0A48                     l715:	
  8432  0A48  0140               	movlb	0	; select bank0
  8433  0A49  0832               	movf	___fldiv@new_exp,w
  8434  0A4A  00A8               	movwf	??___fldiv
  8435  0A4B  0828               	movf	??___fldiv,w
  8436  0A4C  00B8               	movwf	___fldiv@bexp
  8437  0A4D  1C38               	btfss	___fldiv@bexp,0
  8438  0A4E  2A51               	goto	l4269
  8439  0A4F  17A6               	bsf	___fldiv@b+2,7
  8440  0A50  2A55               	goto	l717
  8441  0A51                     l4269:	
  8442  0A51  307F               	movlw	127
  8443  0A52  00A8               	movwf	??___fldiv
  8444  0A53  0828               	movf	??___fldiv,w
  8445  0A54  05A6               	andwf	___fldiv@b+2,f
  8446  0A55                     l717:	
  8447  0A55  3638               	lsrf	___fldiv@bexp,w
  8448  0A56  00A8               	movwf	??___fldiv
  8449  0A57  0828               	movf	??___fldiv,w
  8450  0A58  00A7               	movwf	___fldiv@b+3
  8451  0A59  293B               	goto	L12
  8452  0A5A                     __end_of___fldiv:	
  8453                           
  8454                           	psect	text25
  8455  138D                     __ptext25:	
  8456 ;; *************** function ___awmod *****************
  8457 ;; Defined at:
  8458 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  divisor         2    0[BANK0 ] int 
  8461 ;;  dividend        2    2[BANK0 ] int 
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;  sign            1    6[BANK0 ] unsigned char 
  8464 ;;  counter         1    5[BANK0 ] unsigned char 
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  2    0[BANK0 ] int 
  8467 ;; Registers used:
  8468 ;;		wreg, status,2, status,0
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8474 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8475 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8476 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8477 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8478 ;;Total ram usage:        7 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; Hardware stack levels required when called:    2
  8481 ;; This function calls:
  8482 ;;		Nothing
  8483 ;; This function is called by:
  8484 ;;		_efgtoa
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           
  8489                           ;psect for function ___awmod
  8490  138D                     ___awmod:	
  8491                           
  8492                           ;incstack = 0
  8493                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8494  138D  0140               	movlb	0	; select bank0
  8495  138E  01A6               	clrf	___awmod@sign
  8496  138F  1FA3               	btfss	___awmod@dividend+1,7
  8497  1390  2B98               	goto	l4023
  8498  1391  09A2               	comf	___awmod@dividend,f
  8499  1392  09A3               	comf	___awmod@dividend+1,f
  8500  1393  0AA2               	incf	___awmod@dividend,f
  8501  1394  1903               	skipnz
  8502  1395  0AA3               	incf	___awmod@dividend+1,f
  8503  1396  01A6               	clrf	___awmod@sign
  8504  1397  0AA6               	incf	___awmod@sign,f
  8505  1398                     l4023:	
  8506  1398  1FA1               	btfss	___awmod@divisor+1,7
  8507  1399  2B9F               	goto	l4027
  8508  139A  09A0               	comf	___awmod@divisor,f
  8509  139B  09A1               	comf	___awmod@divisor+1,f
  8510  139C  0AA0               	incf	___awmod@divisor,f
  8511  139D  1903               	skipnz
  8512  139E  0AA1               	incf	___awmod@divisor+1,f
  8513  139F                     l4027:	
  8514  139F  0820               	movf	___awmod@divisor,w
  8515  13A0  0421               	iorwf	___awmod@divisor+1,w
  8516  13A1  1903               	btfsc	3,2
  8517  13A2  2BC6               	goto	l4045
  8518  13A3  01A5               	clrf	___awmod@counter
  8519  13A4  0AA5               	incf	___awmod@counter,f
  8520  13A5                     l4035:	
  8521  13A5  1BA1               	btfsc	___awmod@divisor+1,7
  8522  13A6  2BB1               	goto	l4037
  8523  13A7  3001               	movlw	1
  8524  13A8                     u6495:	
  8525  13A8  35A0               	lslf	___awmod@divisor,f
  8526  13A9  0DA1               	rlf	___awmod@divisor+1,f
  8527  13AA  0B89               	decfsz	9,f
  8528  13AB  2BA8               	goto	u6495
  8529  13AC  3001               	movlw	1
  8530  13AD  00A4               	movwf	??___awmod
  8531  13AE  0824               	movf	??___awmod,w
  8532  13AF  07A5               	addwf	___awmod@counter,f
  8533  13B0  2BA5               	goto	l4035
  8534  13B1                     l4037:	
  8535  13B1  0821               	movf	___awmod@divisor+1,w
  8536  13B2  0223               	subwf	___awmod@dividend+1,w
  8537  13B3  1D03               	skipz
  8538  13B4  2BB7               	goto	u6515
  8539  13B5  0820               	movf	___awmod@divisor,w
  8540  13B6  0222               	subwf	___awmod@dividend,w
  8541  13B7                     u6515:	
  8542  13B7  1C03               	skipc
  8543  13B8  2BBD               	goto	l4041
  8544  13B9  0820               	movf	___awmod@divisor,w
  8545  13BA  02A2               	subwf	___awmod@dividend,f
  8546  13BB  0821               	movf	___awmod@divisor+1,w
  8547  13BC  3BA3               	subwfb	___awmod@dividend+1,f
  8548  13BD                     l4041:	
  8549  13BD  3001               	movlw	1
  8550  13BE                     u6525:	
  8551  13BE  36A1               	lsrf	___awmod@divisor+1,f
  8552  13BF  0CA0               	rrf	___awmod@divisor,f
  8553  13C0  0B89               	decfsz	9,f
  8554  13C1  2BBE               	goto	u6525
  8555  13C2  3001               	movlw	1
  8556  13C3  02A5               	subwf	___awmod@counter,f
  8557  13C4  1D03               	btfss	3,2
  8558  13C5  2BB1               	goto	l4037
  8559  13C6                     l4045:	
  8560  13C6  0826               	movf	___awmod@sign,w
  8561  13C7  1903               	btfsc	3,2
  8562  13C8  2BCE               	goto	l4049
  8563  13C9  09A2               	comf	___awmod@dividend,f
  8564  13CA  09A3               	comf	___awmod@dividend+1,f
  8565  13CB  0AA2               	incf	___awmod@dividend,f
  8566  13CC  1903               	skipnz
  8567  13CD  0AA3               	incf	___awmod@dividend+1,f
  8568  13CE                     l4049:	
  8569  13CE  0823               	movf	___awmod@dividend+1,w
  8570  13CF  00A1               	movwf	?___awmod+1
  8571  13D0  0822               	movf	___awmod@dividend,w
  8572  13D1  00A0               	movwf	?___awmod
  8573  13D2  0008               	return
  8574  13D3                     __end_of___awmod:	
  8575                           
  8576                           	psect	text26
  8577  146F                     __ptext26:	
  8578 ;; *************** function ___awdiv *****************
  8579 ;; Defined at:
  8580 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  divisor         2    0[BANK0 ] int 
  8583 ;;  dividend        2    2[BANK0 ] int 
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;  quotient        2    7[BANK0 ] int 
  8586 ;;  sign            1    6[BANK0 ] unsigned char 
  8587 ;;  counter         1    5[BANK0 ] unsigned char 
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  2    0[BANK0 ] int 
  8590 ;; Registers used:
  8591 ;;		wreg, status,2, status,0
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8597 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8601 ;;Total ram usage:        9 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:    2
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_efgtoa
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           
  8612                           ;psect for function ___awdiv
  8613  146F                     ___awdiv:	
  8614                           
  8615                           ;incstack = 0
  8616                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8617  146F  0140               	movlb	0	; select bank0
  8618  1470  01A6               	clrf	___awdiv@sign
  8619  1471  1FA1               	btfss	___awdiv@divisor+1,7
  8620  1472  2C7A               	goto	l3979
  8621  1473  09A0               	comf	___awdiv@divisor,f
  8622  1474  09A1               	comf	___awdiv@divisor+1,f
  8623  1475  0AA0               	incf	___awdiv@divisor,f
  8624  1476  1903               	skipnz
  8625  1477  0AA1               	incf	___awdiv@divisor+1,f
  8626  1478  01A6               	clrf	___awdiv@sign
  8627  1479  0AA6               	incf	___awdiv@sign,f
  8628  147A                     l3979:	
  8629  147A  1FA3               	btfss	___awdiv@dividend+1,7
  8630  147B  2C85               	goto	l3985
  8631  147C  09A2               	comf	___awdiv@dividend,f
  8632  147D  09A3               	comf	___awdiv@dividend+1,f
  8633  147E  0AA2               	incf	___awdiv@dividend,f
  8634  147F  1903               	skipnz
  8635  1480  0AA3               	incf	___awdiv@dividend+1,f
  8636  1481  3001               	movlw	1
  8637  1482  00A4               	movwf	??___awdiv
  8638  1483  0824               	movf	??___awdiv,w
  8639  1484  06A6               	xorwf	___awdiv@sign,f
  8640  1485                     l3985:	
  8641  1485  01A7               	clrf	___awdiv@quotient
  8642  1486  01A8               	clrf	___awdiv@quotient+1
  8643  1487  0820               	movf	___awdiv@divisor,w
  8644  1488  0421               	iorwf	___awdiv@divisor+1,w
  8645  1489  1903               	btfsc	3,2
  8646  148A  2CB4               	goto	l4007
  8647  148B  01A5               	clrf	___awdiv@counter
  8648  148C  0AA5               	incf	___awdiv@counter,f
  8649  148D                     l3995:	
  8650  148D  1BA1               	btfsc	___awdiv@divisor+1,7
  8651  148E  2C99               	goto	l3997
  8652  148F  3001               	movlw	1
  8653  1490                     u6395:	
  8654  1490  35A0               	lslf	___awdiv@divisor,f
  8655  1491  0DA1               	rlf	___awdiv@divisor+1,f
  8656  1492  0B89               	decfsz	9,f
  8657  1493  2C90               	goto	u6395
  8658  1494  3001               	movlw	1
  8659  1495  00A4               	movwf	??___awdiv
  8660  1496  0824               	movf	??___awdiv,w
  8661  1497  07A5               	addwf	___awdiv@counter,f
  8662  1498  2C8D               	goto	l3995
  8663  1499                     l3997:	
  8664  1499  3001               	movlw	1
  8665  149A                     u6415:	
  8666  149A  35A7               	lslf	___awdiv@quotient,f
  8667  149B  0DA8               	rlf	___awdiv@quotient+1,f
  8668  149C  0B89               	decfsz	9,f
  8669  149D  2C9A               	goto	u6415
  8670  149E  0821               	movf	___awdiv@divisor+1,w
  8671  149F  0223               	subwf	___awdiv@dividend+1,w
  8672  14A0  1D03               	skipz
  8673  14A1  2CA4               	goto	u6425
  8674  14A2  0820               	movf	___awdiv@divisor,w
  8675  14A3  0222               	subwf	___awdiv@dividend,w
  8676  14A4                     u6425:	
  8677  14A4  1C03               	skipc
  8678  14A5  2CAB               	goto	l4003
  8679  14A6  0820               	movf	___awdiv@divisor,w
  8680  14A7  02A2               	subwf	___awdiv@dividend,f
  8681  14A8  0821               	movf	___awdiv@divisor+1,w
  8682  14A9  3BA3               	subwfb	___awdiv@dividend+1,f
  8683  14AA  1427               	bsf	___awdiv@quotient,0
  8684  14AB                     l4003:	
  8685  14AB  3001               	movlw	1
  8686  14AC                     u6435:	
  8687  14AC  36A1               	lsrf	___awdiv@divisor+1,f
  8688  14AD  0CA0               	rrf	___awdiv@divisor,f
  8689  14AE  0B89               	decfsz	9,f
  8690  14AF  2CAC               	goto	u6435
  8691  14B0  3001               	movlw	1
  8692  14B1  02A5               	subwf	___awdiv@counter,f
  8693  14B2  1D03               	btfss	3,2
  8694  14B3  2C99               	goto	l3997
  8695  14B4                     l4007:	
  8696  14B4  0826               	movf	___awdiv@sign,w
  8697  14B5  1903               	btfsc	3,2
  8698  14B6  2CBC               	goto	l4011
  8699  14B7  09A7               	comf	___awdiv@quotient,f
  8700  14B8  09A8               	comf	___awdiv@quotient+1,f
  8701  14B9  0AA7               	incf	___awdiv@quotient,f
  8702  14BA  1903               	skipnz
  8703  14BB  0AA8               	incf	___awdiv@quotient+1,f
  8704  14BC                     l4011:	
  8705  14BC  0828               	movf	___awdiv@quotient+1,w
  8706  14BD  00A1               	movwf	?___awdiv+1
  8707  14BE  0827               	movf	___awdiv@quotient,w
  8708  14BF  00A0               	movwf	?___awdiv
  8709  14C0  0008               	return
  8710  14C1                     __end_of___awdiv:	
  8711                           
  8712                           	psect	text27
  8713  14C1                     __ptext27:	
  8714 ;; *************** function _init_UART *****************
  8715 ;; Defined at:
  8716 ;;		line 5 in file "UART_funcs.c"
  8717 ;; Parameters:    Size  Location     Type
  8718 ;;  baud_rate       4   15[BANK0 ] long 
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;  clock           4    0        long 
  8721 ;;  spbrgVal        2   35[BANK0 ] unsigned int 
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  1    wreg      void 
  8724 ;; Registers used:
  8725 ;;		wreg, status,2, status,0, pclath, cstack
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8732 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8733 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8735 ;;Total ram usage:       22 bytes
  8736 ;; Hardware stack levels used:    1
  8737 ;; Hardware stack levels required when called:    3
  8738 ;; This function calls:
  8739 ;;		___aldiv
  8740 ;; This function is called by:
  8741 ;;		_main
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           
  8746                           ;psect for function _init_UART
  8747  14C1                     _init_UART:	
  8748                           
  8749                           ;UART_funcs.c: 7:     ANSELC = 0x00;
  8750                           
  8751                           ;incstack = 0
  8752                           ; Regs used in _init_UART: [wreg+status,2+status,0+pclath+cstack]
  8753  14C1  017E               	movlb	62	; select bank62
  8754  14C2  01CE               	clrf	78	;volatile
  8755                           
  8756                           ;UART_funcs.c: 8:     RX1DTPPS = 0x14;
  8757  14C3  3014               	movlw	20
  8758  14C4  017D               	movlb	61	; select bank61
  8759  14C5  00CB               	movwf	75	;volatile
  8760                           
  8761                           ;UART_funcs.c: 9:     RC5PPS = 0x0F;
  8762  14C6  300F               	movlw	15
  8763  14C7  017E               	movlb	62	; select bank62
  8764  14C8  00A5               	movwf	37	;volatile
  8765                           
  8766                           ;UART_funcs.c: 11:     unsigned int spbrgVal = (clock - baud_rate * 16) / (baud_rate * 1
      +                          6);
  8767  14C9  0140               	movlb	0	; select bank0
  8768  14CA  082F               	movf	init_UART@baud_rate,w
  8769  14CB  00B3               	movwf	??_init_UART
  8770  14CC  0830               	movf	init_UART@baud_rate+1,w
  8771  14CD  00B4               	movwf	??_init_UART+1
  8772  14CE  0831               	movf	init_UART@baud_rate+2,w
  8773  14CF  00B5               	movwf	??_init_UART+2
  8774  14D0  0832               	movf	init_UART@baud_rate+3,w
  8775  14D1  00B6               	movwf	??_init_UART+3
  8776  14D2  3004               	movlw	4
  8777  14D3                     u8065:	
  8778  14D3  35B3               	lslf	??_init_UART,f
  8779  14D4  0DB4               	rlf	??_init_UART+1,f
  8780  14D5  0DB5               	rlf	??_init_UART+2,f
  8781  14D6  0DB6               	rlf	??_init_UART+3,f
  8782  14D7  0B89               	decfsz	9,f
  8783  14D8  2CD3               	goto	u8065
  8784  14D9  0836               	movf	??_init_UART+3,w
  8785  14DA  00A3               	movwf	___aldiv@divisor+3
  8786  14DB  0835               	movf	??_init_UART+2,w
  8787  14DC  00A2               	movwf	___aldiv@divisor+2
  8788  14DD  0834               	movf	??_init_UART+1,w
  8789  14DE  00A1               	movwf	___aldiv@divisor+1
  8790  14DF  0833               	movf	??_init_UART,w
  8791  14E0  00A0               	movwf	___aldiv@divisor
  8792  14E1  082F               	movf	init_UART@baud_rate,w
  8793  14E2  00B7               	movwf	??_init_UART+4
  8794  14E3  0830               	movf	init_UART@baud_rate+1,w
  8795  14E4  00B8               	movwf	??_init_UART+5
  8796  14E5  0831               	movf	init_UART@baud_rate+2,w
  8797  14E6  00B9               	movwf	??_init_UART+6
  8798  14E7  0832               	movf	init_UART@baud_rate+3,w
  8799  14E8  00BA               	movwf	??_init_UART+7
  8800  14E9  3004               	movlw	4
  8801  14EA                     u8075:	
  8802  14EA  35B7               	lslf	??_init_UART+4,f
  8803  14EB  0DB8               	rlf	??_init_UART+5,f
  8804  14EC  0DB9               	rlf	??_init_UART+6,f
  8805  14ED  0DBA               	rlf	??_init_UART+7,f
  8806  14EE  0B89               	decfsz	9,f
  8807  14EF  2CEA               	goto	u8075
  8808  14F0  3000               	movlw	0
  8809  14F1  00BB               	movwf	??_init_UART+8
  8810  14F2  3048               	movlw	72
  8811  14F3  00BC               	movwf	??_init_UART+9
  8812  14F4  30E8               	movlw	232
  8813  14F5  00BD               	movwf	??_init_UART+10
  8814  14F6  3001               	movlw	1
  8815  14F7  00BE               	movwf	??_init_UART+11
  8816  14F8  0837               	movf	??_init_UART+4,w
  8817  14F9  02BB               	subwf	??_init_UART+8,f
  8818  14FA  0838               	movf	??_init_UART+5,w
  8819  14FB  3BBC               	subwfb	??_init_UART+9,f
  8820  14FC  0839               	movf	??_init_UART+6,w
  8821  14FD  3BBD               	subwfb	??_init_UART+10,f
  8822  14FE  083A               	movf	??_init_UART+7,w
  8823  14FF  3BBE               	subwfb	??_init_UART+11,f
  8824  1500  083E               	movf	??_init_UART+11,w
  8825  1501  00A7               	movwf	___aldiv@dividend+3
  8826  1502  083D               	movf	??_init_UART+10,w
  8827  1503  00A6               	movwf	___aldiv@dividend+2
  8828  1504  083C               	movf	??_init_UART+9,w
  8829  1505  00A5               	movwf	___aldiv@dividend+1
  8830  1506  083B               	movf	??_init_UART+8,w
  8831  1507  00A4               	movwf	___aldiv@dividend
  8832  1508  3196  26F1         	fcall	___aldiv
  8833  150A  0140               	movlb	0	; select bank0
  8834  150B  0821               	movf	?___aldiv+1,w
  8835  150C  00C4               	movwf	init_UART@spbrgVal+1
  8836  150D  0820               	movf	?___aldiv,w
  8837  150E  00C3               	movwf	init_UART@spbrgVal
  8838                           
  8839                           ;UART_funcs.c: 13:     SPBRG = spbrgVal;
  8840  150F  0843               	movf	init_UART@spbrgVal,w
  8841  1510  0142               	movlb	2	; select bank2
  8842  1511  009B               	movwf	27	;volatile
  8843                           
  8844                           ;UART_funcs.c: 15:     PEIE =1;
  8845  1512  170B               	bsf	11,6	;volatile
  8846                           
  8847                           ;UART_funcs.c: 16:     INTCONbits.GIE =1;
  8848  1513  178B               	bsf	11,7	;volatile
  8849                           
  8850                           ;UART_funcs.c: 18:     TX1STA = 0b10100110;
  8851  1514  30A6               	movlw	166
  8852  1515  009E               	movwf	30	;volatile
  8853                           
  8854                           ;UART_funcs.c: 19:     RC1STA = 0b10010000;
  8855  1516  3090               	movlw	144
  8856  1517  009D               	movwf	29	;volatile
  8857                           
  8858                           ;UART_funcs.c: 20:     BAUD1CON = 0b00000000;
  8859  1518  019F               	clrf	31	;volatile
  8860                           
  8861                           ;UART_funcs.c: 22:     RC1IE = 1;
  8862  1519  014E               	movlb	14	; select bank14
  8863  151A  1699               	bsf	25,5	;volatile
  8864  151B  0008               	return
  8865  151C                     __end_of_init_UART:	
  8866                           
  8867                           	psect	text28
  8868  16F1                     __ptext28:	
  8869 ;; *************** function ___aldiv *****************
  8870 ;; Defined at:
  8871 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aldiv.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;  divisor         4    0[BANK0 ] long 
  8874 ;;  dividend        4    4[BANK0 ] long 
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;  quotient        4   11[BANK0 ] long 
  8877 ;;  sign            1   10[BANK0 ] unsigned char 
  8878 ;;  counter         1    9[BANK0 ] unsigned char 
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  4    0[BANK0 ] long 
  8881 ;; Registers used:
  8882 ;;		wreg, status,2, status,0
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8888 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8890 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;Total ram usage:       15 bytes
  8893 ;; Hardware stack levels used:    1
  8894 ;; Hardware stack levels required when called:    2
  8895 ;; This function calls:
  8896 ;;		Nothing
  8897 ;; This function is called by:
  8898 ;;		_init_UART
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           
  8903                           ;psect for function ___aldiv
  8904  16F1                     ___aldiv:	
  8905                           
  8906                           ;incstack = 0
  8907                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8908  16F1  0140               	movlb	0	; select bank0
  8909  16F2  01AA               	clrf	___aldiv@sign
  8910  16F3  1FA3               	btfss	___aldiv@divisor+3,7
  8911  16F4  2F02               	goto	l401
  8912  16F5  09A0               	comf	___aldiv@divisor,f
  8913  16F6  09A1               	comf	___aldiv@divisor+1,f
  8914  16F7  09A2               	comf	___aldiv@divisor+2,f
  8915  16F8  09A3               	comf	___aldiv@divisor+3,f
  8916  16F9  0AA0               	incf	___aldiv@divisor,f
  8917  16FA  1903               	skipnz
  8918  16FB  0AA1               	incf	___aldiv@divisor+1,f
  8919  16FC  1903               	skipnz
  8920  16FD  0AA2               	incf	___aldiv@divisor+2,f
  8921  16FE  1903               	skipnz
  8922  16FF  0AA3               	incf	___aldiv@divisor+3,f
  8923  1700  01AA               	clrf	___aldiv@sign
  8924  1701  0AAA               	incf	___aldiv@sign,f
  8925  1702                     l401:	
  8926  1702  1FA7               	btfss	___aldiv@dividend+3,7
  8927  1703  2F13               	goto	l4827
  8928  1704  09A4               	comf	___aldiv@dividend,f
  8929  1705  09A5               	comf	___aldiv@dividend+1,f
  8930  1706  09A6               	comf	___aldiv@dividend+2,f
  8931  1707  09A7               	comf	___aldiv@dividend+3,f
  8932  1708  0AA4               	incf	___aldiv@dividend,f
  8933  1709  1903               	skipnz
  8934  170A  0AA5               	incf	___aldiv@dividend+1,f
  8935  170B  1903               	skipnz
  8936  170C  0AA6               	incf	___aldiv@dividend+2,f
  8937  170D  1903               	skipnz
  8938  170E  0AA7               	incf	___aldiv@dividend+3,f
  8939  170F  3001               	movlw	1
  8940  1710  00A8               	movwf	??___aldiv
  8941  1711  0828               	movf	??___aldiv,w
  8942  1712  06AA               	xorwf	___aldiv@sign,f
  8943  1713                     l4827:	
  8944  1713  3000               	movlw	0
  8945  1714  00AE               	movwf	___aldiv@quotient+3
  8946  1715  3000               	movlw	0
  8947  1716  00AD               	movwf	___aldiv@quotient+2
  8948  1717  3000               	movlw	0
  8949  1718  00AC               	movwf	___aldiv@quotient+1
  8950  1719  3000               	movlw	0
  8951  171A  00AB               	movwf	___aldiv@quotient
  8952  171B  0823               	movf	___aldiv@divisor+3,w
  8953  171C  0422               	iorwf	___aldiv@divisor+2,w
  8954  171D  0421               	iorwf	___aldiv@divisor+1,w
  8955  171E  0420               	iorwf	___aldiv@divisor,w
  8956  171F  1903               	skipnz
  8957  1720  2F5C               	goto	l4849
  8958  1721  01A9               	clrf	___aldiv@counter
  8959  1722  0AA9               	incf	___aldiv@counter,f
  8960  1723                     l4835:	
  8961  1723  1BA3               	btfsc	___aldiv@divisor+3,7
  8962  1724  2F31               	goto	l4837
  8963  1725  3001               	movlw	1
  8964  1726                     u7995:	
  8965  1726  35A0               	lslf	___aldiv@divisor,f
  8966  1727  0DA1               	rlf	___aldiv@divisor+1,f
  8967  1728  0DA2               	rlf	___aldiv@divisor+2,f
  8968  1729  0DA3               	rlf	___aldiv@divisor+3,f
  8969  172A  0B89               	decfsz	9,f
  8970  172B  2F26               	goto	u7995
  8971  172C  3001               	movlw	1
  8972  172D  00A8               	movwf	??___aldiv
  8973  172E  0828               	movf	??___aldiv,w
  8974  172F  07A9               	addwf	___aldiv@counter,f
  8975  1730  2F23               	goto	l4835
  8976  1731                     l4837:	
  8977  1731  3001               	movlw	1
  8978  1732                     u8015:	
  8979  1732  35AB               	lslf	___aldiv@quotient,f
  8980  1733  0DAC               	rlf	___aldiv@quotient+1,f
  8981  1734  0DAD               	rlf	___aldiv@quotient+2,f
  8982  1735  0DAE               	rlf	___aldiv@quotient+3,f
  8983  1736  0B89               	decfsz	9,f
  8984  1737  2F32               	goto	u8015
  8985  1738  0823               	movf	___aldiv@divisor+3,w
  8986  1739  0227               	subwf	___aldiv@dividend+3,w
  8987  173A  1D03               	skipz
  8988  173B  2F46               	goto	u8025
  8989  173C  0822               	movf	___aldiv@divisor+2,w
  8990  173D  0226               	subwf	___aldiv@dividend+2,w
  8991  173E  1D03               	skipz
  8992  173F  2F46               	goto	u8025
  8993  1740  0821               	movf	___aldiv@divisor+1,w
  8994  1741  0225               	subwf	___aldiv@dividend+1,w
  8995  1742  1D03               	skipz
  8996  1743  2F46               	goto	u8025
  8997  1744  0820               	movf	___aldiv@divisor,w
  8998  1745  0224               	subwf	___aldiv@dividend,w
  8999  1746                     u8025:	
  9000  1746  1C03               	skipc
  9001  1747  2F51               	goto	l4845
  9002  1748  0820               	movf	___aldiv@divisor,w
  9003  1749  02A4               	subwf	___aldiv@dividend,f
  9004  174A  0821               	movf	___aldiv@divisor+1,w
  9005  174B  3BA5               	subwfb	___aldiv@dividend+1,f
  9006  174C  0822               	movf	___aldiv@divisor+2,w
  9007  174D  3BA6               	subwfb	___aldiv@dividend+2,f
  9008  174E  0823               	movf	___aldiv@divisor+3,w
  9009  174F  3BA7               	subwfb	___aldiv@dividend+3,f
  9010  1750  142B               	bsf	___aldiv@quotient,0
  9011  1751                     l4845:	
  9012  1751  3001               	movlw	1
  9013  1752                     u8035:	
  9014  1752  36A3               	lsrf	___aldiv@divisor+3,f
  9015  1753  0CA2               	rrf	___aldiv@divisor+2,f
  9016  1754  0CA1               	rrf	___aldiv@divisor+1,f
  9017  1755  0CA0               	rrf	___aldiv@divisor,f
  9018  1756  0B89               	decfsz	9,f
  9019  1757  2F52               	goto	u8035
  9020  1758  3001               	movlw	1
  9021  1759  02A9               	subwf	___aldiv@counter,f
  9022  175A  1D03               	btfss	3,2
  9023  175B  2F31               	goto	l4837
  9024  175C                     l4849:	
  9025  175C  082A               	movf	___aldiv@sign,w
  9026  175D  1903               	btfsc	3,2
  9027  175E  2F6A               	goto	l4853
  9028  175F  09AB               	comf	___aldiv@quotient,f
  9029  1760  09AC               	comf	___aldiv@quotient+1,f
  9030  1761  09AD               	comf	___aldiv@quotient+2,f
  9031  1762  09AE               	comf	___aldiv@quotient+3,f
  9032  1763  0AAB               	incf	___aldiv@quotient,f
  9033  1764  1903               	skipnz
  9034  1765  0AAC               	incf	___aldiv@quotient+1,f
  9035  1766  1903               	skipnz
  9036  1767  0AAD               	incf	___aldiv@quotient+2,f
  9037  1768  1903               	skipnz
  9038  1769  0AAE               	incf	___aldiv@quotient+3,f
  9039  176A                     l4853:	
  9040  176A  082E               	movf	___aldiv@quotient+3,w
  9041  176B  00A3               	movwf	?___aldiv+3
  9042  176C  082D               	movf	___aldiv@quotient+2,w
  9043  176D  00A2               	movwf	?___aldiv+2
  9044  176E  082C               	movf	___aldiv@quotient+1,w
  9045  176F  00A1               	movwf	?___aldiv+1
  9046  1770  082B               	movf	___aldiv@quotient,w
  9047  1771  00A0               	movwf	?___aldiv
  9048  1772  0008               	return
  9049  1773                     __end_of___aldiv:	
  9050                           
  9051                           	psect	text29
  9052  084A                     __ptext29:	
  9053 ;; *************** function ___xxtofl *****************
  9054 ;; Defined at:
  9055 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  sign            1    wreg     unsigned char 
  9058 ;;  val             4    0[BANK0 ] long 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  sign            1    8[BANK0 ] unsigned char 
  9061 ;;  arg             4   10[BANK0 ] unsigned long 
  9062 ;;  exp             1    9[BANK0 ] unsigned char 
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  4    0[BANK0 ] unsigned char 
  9065 ;; Registers used:
  9066 ;;		wreg, status,2, status,0
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9072 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;Total ram usage:       14 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:    2
  9079 ;; This function calls:
  9080 ;;		Nothing
  9081 ;; This function is called by:
  9082 ;;		_main
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086                           
  9087                           ;psect for function ___xxtofl
  9088  084A                     ___xxtofl:	
  9089                           
  9090                           ;incstack = 0
  9091                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9092                           ;___xxtofl@sign stored from wreg
  9093  084A  0140               	movlb	0	; select bank0
  9094  084B  00A8               	movwf	___xxtofl@sign
  9095  084C  0828               	movf	___xxtofl@sign,w
  9096  084D  1D03               	btfss	3,2
  9097  084E  1FA3               	btfss	___xxtofl@val+3,7
  9098  084F  2860               	goto	l4931
  9099  0850  0920               	comf	___xxtofl@val,w
  9100  0851  00AA               	movwf	___xxtofl@arg
  9101  0852  0921               	comf	___xxtofl@val+1,w
  9102  0853  00AB               	movwf	___xxtofl@arg+1
  9103  0854  0922               	comf	___xxtofl@val+2,w
  9104  0855  00AC               	movwf	___xxtofl@arg+2
  9105  0856  0923               	comf	___xxtofl@val+3,w
  9106  0857  00AD               	movwf	___xxtofl@arg+3
  9107  0858  0AAA               	incf	___xxtofl@arg,f
  9108  0859  1903               	skipnz
  9109  085A  0AAB               	incf	___xxtofl@arg+1,f
  9110  085B  1903               	skipnz
  9111  085C  0AAC               	incf	___xxtofl@arg+2,f
  9112  085D  1903               	skipnz
  9113  085E  0AAD               	incf	___xxtofl@arg+3,f
  9114  085F  2868               	goto	l771
  9115  0860                     l4931:	
  9116  0860  0823               	movf	___xxtofl@val+3,w
  9117  0861  00AD               	movwf	___xxtofl@arg+3
  9118  0862  0822               	movf	___xxtofl@val+2,w
  9119  0863  00AC               	movwf	___xxtofl@arg+2
  9120  0864  0821               	movf	___xxtofl@val+1,w
  9121  0865  00AB               	movwf	___xxtofl@arg+1
  9122  0866  0820               	movf	___xxtofl@val,w
  9123  0867  00AA               	movwf	___xxtofl@arg
  9124  0868                     l771:	
  9125  0868  0823               	movf	___xxtofl@val+3,w
  9126  0869  0422               	iorwf	___xxtofl@val+2,w
  9127  086A  0421               	iorwf	___xxtofl@val+1,w
  9128  086B  0420               	iorwf	___xxtofl@val,w
  9129  086C  1D03               	skipz
  9130  086D  2877               	goto	l4937
  9131  086E  3000               	movlw	0
  9132  086F  00A3               	movwf	?___xxtofl+3
  9133  0870  3000               	movlw	0
  9134  0871  00A2               	movwf	?___xxtofl+2
  9135  0872  3000               	movlw	0
  9136  0873  00A1               	movwf	?___xxtofl+1
  9137  0874  3000               	movlw	0
  9138  0875  00A0               	movwf	?___xxtofl
  9139  0876  0008               	return
  9140  0877                     l4937:	
  9141  0877  3096               	movlw	150
  9142  0878  00A4               	movwf	??___xxtofl
  9143  0879  0824               	movf	??___xxtofl,w
  9144  087A  00A9               	movwf	___xxtofl@exp
  9145  087B                     l4941:	
  9146  087B  30FE               	movlw	254
  9147  087C  052D               	andwf	___xxtofl@arg+3,w
  9148  087D  1903               	btfsc	3,2
  9149  087E  289E               	goto	l777
  9150  087F  3001               	movlw	1
  9151  0880  00A4               	movwf	??___xxtofl
  9152  0881  0824               	movf	??___xxtofl,w
  9153  0882  07A9               	addwf	___xxtofl@exp,f
  9154  0883  3001               	movlw	1
  9155  0884                     u8195:	
  9156  0884  36AD               	lsrf	___xxtofl@arg+3,f
  9157  0885  0CAC               	rrf	___xxtofl@arg+2,f
  9158  0886  0CAB               	rrf	___xxtofl@arg+1,f
  9159  0887  0CAA               	rrf	___xxtofl@arg,f
  9160  0888  0B89               	decfsz	9,f
  9161  0889  2884               	goto	u8195
  9162  088A  287B               	goto	l4941
  9163  088B                     l4943:	
  9164  088B  3001               	movlw	1
  9165  088C  00A4               	movwf	??___xxtofl
  9166  088D  0824               	movf	??___xxtofl,w
  9167  088E  07A9               	addwf	___xxtofl@exp,f
  9168  088F  3001               	movlw	1
  9169  0890  07AA               	addwf	___xxtofl@arg,f
  9170  0891  3000               	movlw	0
  9171  0892  3DAB               	addwfc	___xxtofl@arg+1,f
  9172  0893  3000               	movlw	0
  9173  0894  3DAC               	addwfc	___xxtofl@arg+2,f
  9174  0895  3000               	movlw	0
  9175  0896  3DAD               	addwfc	___xxtofl@arg+3,f
  9176  0897  3001               	movlw	1
  9177  0898                     u8215:	
  9178  0898  36AD               	lsrf	___xxtofl@arg+3,f
  9179  0899  0CAC               	rrf	___xxtofl@arg+2,f
  9180  089A  0CAB               	rrf	___xxtofl@arg+1,f
  9181  089B  0CAA               	rrf	___xxtofl@arg,f
  9182  089C  0B89               	decfsz	9,f
  9183  089D  2898               	goto	u8215
  9184  089E                     l777:	
  9185  089E  30FF               	movlw	255
  9186  089F  052D               	andwf	___xxtofl@arg+3,w
  9187  08A0  1903               	btfsc	3,2
  9188  08A1  28B0               	goto	l4951
  9189  08A2  288B               	goto	l4943
  9190  08A3                     l4953:	
  9191  08A3  3002               	movlw	2
  9192  08A4  0229               	subwf	___xxtofl@exp,w
  9193  08A5  1C03               	btfss	3,0
  9194  08A6  28B2               	goto	l784
  9195  08A7  3001               	movlw	1
  9196  08A8  02A9               	subwf	___xxtofl@exp,f
  9197  08A9  3001               	movlw	1
  9198  08AA                     u8235:	
  9199  08AA  35AA               	lslf	___xxtofl@arg,f
  9200  08AB  0DAB               	rlf	___xxtofl@arg+1,f
  9201  08AC  0DAC               	rlf	___xxtofl@arg+2,f
  9202  08AD  0DAD               	rlf	___xxtofl@arg+3,f
  9203  08AE  0B89               	decfsz	9,f
  9204  08AF  28AA               	goto	u8235
  9205  08B0                     l4951:	
  9206  08B0  1FAC               	btfss	___xxtofl@arg+2,7
  9207  08B1  28A3               	goto	l4953
  9208  08B2                     l784:	
  9209  08B2  1829               	btfsc	___xxtofl@exp,0
  9210  08B3  28BC               	goto	l785
  9211  08B4  30FF               	movlw	255
  9212  08B5  05AA               	andwf	___xxtofl@arg,f
  9213  08B6  30FF               	movlw	255
  9214  08B7  05AB               	andwf	___xxtofl@arg+1,f
  9215  08B8  307F               	movlw	127
  9216  08B9  05AC               	andwf	___xxtofl@arg+2,f
  9217  08BA  30FF               	movlw	255
  9218  08BB  05AD               	andwf	___xxtofl@arg+3,f
  9219  08BC                     l785:	
  9220  08BC  1003               	clrc
  9221  08BD  0CA9               	rrf	___xxtofl@exp,f
  9222  08BE  0829               	movf	___xxtofl@exp,w
  9223  08BF  00A4               	movwf	??___xxtofl
  9224  08C0  01A5               	clrf	??___xxtofl+1
  9225  08C1  01A6               	clrf	??___xxtofl+2
  9226  08C2  01A7               	clrf	??___xxtofl+3
  9227  08C3  3018               	movlw	24
  9228  08C4                     u8275:	
  9229  08C4  35A4               	lslf	??___xxtofl,f
  9230  08C5  0DA5               	rlf	??___xxtofl+1,f
  9231  08C6  0DA6               	rlf	??___xxtofl+2,f
  9232  08C7  0DA7               	rlf	??___xxtofl+3,f
  9233  08C8  0B89               	decfsz	9,f
  9234  08C9  28C4               	goto	u8275
  9235  08CA  0824               	movf	??___xxtofl,w
  9236  08CB  04AA               	iorwf	___xxtofl@arg,f
  9237  08CC  0825               	movf	??___xxtofl+1,w
  9238  08CD  04AB               	iorwf	___xxtofl@arg+1,f
  9239  08CE  0826               	movf	??___xxtofl+2,w
  9240  08CF  04AC               	iorwf	___xxtofl@arg+2,f
  9241  08D0  0827               	movf	??___xxtofl+3,w
  9242  08D1  04AD               	iorwf	___xxtofl@arg+3,f
  9243  08D2  0828               	movf	___xxtofl@sign,w
  9244  08D3  1D03               	btfss	3,2
  9245  08D4  1FA3               	btfss	___xxtofl@val+3,7
  9246  08D5  28D7               	goto	l4965
  9247  08D6  17AD               	bsf	___xxtofl@arg+3,7
  9248  08D7                     l4965:	
  9249  08D7  082D               	movf	___xxtofl@arg+3,w
  9250  08D8  00A3               	movwf	?___xxtofl+3
  9251  08D9  082C               	movf	___xxtofl@arg+2,w
  9252  08DA  00A2               	movwf	?___xxtofl+2
  9253  08DB  082B               	movf	___xxtofl@arg+1,w
  9254  08DC  00A1               	movwf	?___xxtofl+1
  9255  08DD  082A               	movf	___xxtofl@arg,w
  9256  08DE  00A0               	movwf	?___xxtofl
  9257  08DF  0008               	return
  9258  08E0                     __end_of___xxtofl:	
  9259                           
  9260                           	psect	text30
  9261  1236                     __ptext30:	
  9262 ;; *************** function _ADC_read *****************
  9263 ;; Defined at:
  9264 ;;		line 39 in file "ADC_funcs.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;		None
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;		None
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  2    0[BANK0 ] unsigned int 
  9271 ;; Registers used:
  9272 ;;		wreg
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9278 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9280 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;Total ram usage:        3 bytes
  9283 ;; Hardware stack levels used:    1
  9284 ;; Hardware stack levels required when called:    2
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		_main
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           
  9293                           ;psect for function _ADC_read
  9294  1236                     _ADC_read:	
  9295                           
  9296                           ;ADC_funcs.c: 40:   _delay((unsigned long)((2)*(32000000/4000.0)));
  9297                           
  9298                           ;incstack = 0
  9299                           ; Regs used in _ADC_read: [wreg]
  9300  1236  3015               	movlw	21
  9301  1237  0140               	movlb	0	; select bank0
  9302  1238  00A2               	movwf	??_ADC_read
  9303  1239  30C6               	movlw	198
  9304  123A                     u8317:	
  9305  123A  0B89               	decfsz	9,f
  9306  123B  2A3A               	goto	u8317
  9307  123C  0BA2               	decfsz	??_ADC_read,f
  9308  123D  2A3A               	goto	u8317
  9309  123E  0000               	nop
  9310                           
  9311                           ;ADC_funcs.c: 41:   ADCON0bits.GOnDONE = 1;
  9312  123F  0141               	movlb	1	; select bank1
  9313  1240  149D               	bsf	29,1	;volatile
  9314  1241                     l64:	
  9315                           ;ADC_funcs.c: 42:   while(ADCON0bits.GOnDONE == 1);
  9316                           
  9317  1241  189D               	btfsc	29,1	;volatile
  9318  1242  2A41               	goto	l64
  9319                           
  9320                           ;ADC_funcs.c: 43:   return ( (ADRESH<<8) + ADRESL);
  9321  1243  081C               	movf	28,w	;volatile
  9322  1244  0140               	movlb	0	; select bank0
  9323  1245  00A1               	movwf	?_ADC_read+1
  9324  1246  0141               	movlb	1	; select bank1
  9325  1247  081B               	movf	27,w	;volatile
  9326  1248  0140               	movlb	0	; select bank0
  9327  1249  00A0               	movwf	?_ADC_read
  9328  124A  0008               	return
  9329  124B                     __end_of_ADC_read:	
  9330                           
  9331                           	psect	text31
  9332  1773                     __ptext31:	
  9333 ;; *************** function _ADC_init *****************
  9334 ;; Defined at:
  9335 ;;		line 5 in file "ADC_funcs.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;  pin             2    0[BANK0 ] PTR unsigned char 
  9338 ;;		 -> STR_1(3), 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  pinNum          2    6[BANK0 ] int 
  9341 ;;  chan            1    5[BANK0 ] unsigned char 
  9342 ;;  block           1    4[BANK0 ] unsigned char 
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      unsigned char 
  9345 ;; Registers used:
  9346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9354 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9355 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9356 ;;Total ram usage:        8 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; Hardware stack levels required when called:    2
  9359 ;; This function calls:
  9360 ;;		Nothing
  9361 ;; This function is called by:
  9362 ;;		_main
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           
  9367                           ;psect for function _ADC_init
  9368  1773                     _ADC_init:	
  9369                           
  9370                           ;ADC_funcs.c: 6:     char block = pin[0];
  9371                           
  9372                           ;incstack = 0
  9373                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0+pclath]
  9374  1773  0140               	movlb	0	; select bank0
  9375  1774  0820               	movf	ADC_init@pin,w
  9376  1775  0084               	movwf	4
  9377  1776  0821               	movf	ADC_init@pin+1,w
  9378  1777  0085               	movwf	5
  9379  1778  0800               	movf	0,w	;code access
  9380  1779  00A2               	movwf	??_ADC_init
  9381  177A  0822               	movf	??_ADC_init,w
  9382  177B  00A4               	movwf	ADC_init@block
  9383                           
  9384                           ;ADC_funcs.c: 7:     int pinNum = pin[1] - '0';
  9385  177C  0821               	movf	ADC_init@pin+1,w
  9386  177D  00A3               	movwf	??_ADC_init+1
  9387  177E  0820               	movf	ADC_init@pin,w
  9388  177F  00A2               	movwf	??_ADC_init
  9389  1780  3001               	movlw	1
  9390  1781  0722               	addwf	??_ADC_init,w
  9391  1782  0084               	movwf	4
  9392  1783  0823               	movf	??_ADC_init+1,w
  9393  1784  1803               	skipnc
  9394  1785  0A23               	incf	??_ADC_init+1,w
  9395  1786  0085               	movwf	5
  9396  1787  0800               	movf	0,w	;code access
  9397  1788  3ED0               	addlw	208
  9398  1789  00A6               	movwf	ADC_init@pinNum
  9399  178A  30FF               	movlw	255
  9400  178B  1803               	skipnc
  9401  178C  3000               	movlw	0
  9402  178D  00A7               	movwf	ADC_init@pinNum+1
  9403                           
  9404                           ;ADC_funcs.c: 8:     char chan ;;ADC_funcs.c: 11:      switch(block){
  9405  178E  2FDD               	goto	l4899
  9406  178F                     l4883:	
  9407  178F  3001               	movlw	1
  9408  1790  00A2               	movwf	??_ADC_init
  9409  1791  0A26               	incf	ADC_init@pinNum,w
  9410  1792  2F94               	goto	u8084
  9411  1793                     u8085:	
  9412  1793  35A2               	lslf	??_ADC_init,f
  9413  1794                     u8084:	
  9414  1794  0B89               	decfsz	9,f
  9415  1795  2F93               	goto	u8085
  9416  1796  0822               	movf	??_ADC_init,w
  9417  1797  00A3               	movwf	??_ADC_init+1
  9418  1798  0823               	movf	??_ADC_init+1,w
  9419  1799  0492               	iorwf	18,f	;volatile
  9420                           
  9421                           ;ADC_funcs.c: 13:                    ANSELA |= 1 << pinNum;
  9422  179A  3001               	movlw	1
  9423  179B  00A2               	movwf	??_ADC_init
  9424  179C  0A26               	incf	ADC_init@pinNum,w
  9425  179D  2F9F               	goto	u8094
  9426  179E                     u8095:	
  9427  179E  35A2               	lslf	??_ADC_init,f
  9428  179F                     u8094:	
  9429  179F  0B89               	decfsz	9,f
  9430  17A0  2F9E               	goto	u8095
  9431  17A1  0822               	movf	??_ADC_init,w
  9432  17A2  00A3               	movwf	??_ADC_init+1
  9433  17A3  0823               	movf	??_ADC_init+1,w
  9434  17A4  017E               	movlb	62	; select bank62
  9435  17A5  04B8               	iorwf	56,f	;volatile
  9436  17A6                     l4887:	
  9437  17A6  3001               	movlw	1
  9438  17A7  0140               	movlb	0	; select bank0
  9439  17A8  00A2               	movwf	??_ADC_init
  9440  17A9  0A26               	incf	ADC_init@pinNum,w
  9441  17AA  2FAC               	goto	u8104
  9442  17AB                     u8105:	
  9443  17AB  35A2               	lslf	??_ADC_init,f
  9444  17AC                     u8104:	
  9445  17AC  0B89               	decfsz	9,f
  9446  17AD  2FAB               	goto	u8105
  9447  17AE  0822               	movf	??_ADC_init,w
  9448  17AF  00A3               	movwf	??_ADC_init+1
  9449  17B0  0823               	movf	??_ADC_init+1,w
  9450  17B1  0493               	iorwf	19,f	;volatile
  9451                           
  9452                           ;ADC_funcs.c: 17:                    ANSELB |= 1 << pinNum;
  9453  17B2  3001               	movlw	1
  9454  17B3  00A2               	movwf	??_ADC_init
  9455  17B4  0A26               	incf	ADC_init@pinNum,w
  9456  17B5  2FB7               	goto	u8114
  9457  17B6                     u8115:	
  9458  17B6  35A2               	lslf	??_ADC_init,f
  9459  17B7                     u8114:	
  9460  17B7  0B89               	decfsz	9,f
  9461  17B8  2FB6               	goto	u8115
  9462  17B9  0822               	movf	??_ADC_init,w
  9463  17BA  00A3               	movwf	??_ADC_init+1
  9464  17BB  0823               	movf	??_ADC_init+1,w
  9465  17BC  017E               	movlb	62	; select bank62
  9466  17BD  04C3               	iorwf	67,f	;volatile
  9467  17BE                     l4893:	
  9468  17BE  3001               	movlw	1
  9469  17BF  0140               	movlb	0	; select bank0
  9470  17C0  00A2               	movwf	??_ADC_init
  9471  17C1  0A26               	incf	ADC_init@pinNum,w
  9472  17C2  2FC4               	goto	u8124
  9473  17C3                     u8125:	
  9474  17C3  35A2               	lslf	??_ADC_init,f
  9475  17C4                     u8124:	
  9476  17C4  0B89               	decfsz	9,f
  9477  17C5  2FC3               	goto	u8125
  9478  17C6  0822               	movf	??_ADC_init,w
  9479  17C7  00A3               	movwf	??_ADC_init+1
  9480  17C8  0823               	movf	??_ADC_init+1,w
  9481  17C9  0494               	iorwf	20,f	;volatile
  9482                           
  9483                           ;ADC_funcs.c: 21:                    ANSELC |= 1 << pinNum;
  9484  17CA  3001               	movlw	1
  9485  17CB  00A2               	movwf	??_ADC_init
  9486  17CC  0A26               	incf	ADC_init@pinNum,w
  9487  17CD  2FCF               	goto	u8134
  9488  17CE                     u8135:	
  9489  17CE  35A2               	lslf	??_ADC_init,f
  9490  17CF                     u8134:	
  9491  17CF  0B89               	decfsz	9,f
  9492  17D0  2FCE               	goto	u8135
  9493  17D1  0822               	movf	??_ADC_init,w
  9494  17D2  00A3               	movwf	??_ADC_init+1
  9495  17D3  0823               	movf	??_ADC_init+1,w
  9496  17D4  017E               	movlb	62	; select bank62
  9497  17D5  04CE               	iorwf	78,f	;volatile
  9498                           
  9499                           ;ADC_funcs.c: 22:                    chan = 16 + (pinNum) ;
  9500  17D6  0140               	movlb	0	; select bank0
  9501  17D7  0826               	movf	ADC_init@pinNum,w
  9502  17D8  3E10               	addlw	16
  9503  17D9  00A2               	movwf	??_ADC_init
  9504  17DA  0822               	movf	??_ADC_init,w
  9505  17DB  00A5               	movwf	ADC_init@chan
  9506                           
  9507                           ;ADC_funcs.c: 24:     }
  9508  17DC  2FF0               	goto	l4901
  9509  17DD                     l4899:	
  9510  17DD  0824               	movf	ADC_init@block,w
  9511  17DE  00A2               	movwf	??_ADC_init
  9512  17DF  01A3               	clrf	??_ADC_init+1
  9513                           
  9514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9515                           ; Switch size 1, requested type "simple"
  9516                           ; Number of cases is 1, Range of values is 0 to 0
  9517                           ; switch strategies available:
  9518                           ; Name         Instructions Cycles
  9519                           ; simple_byte            4     3 (average)
  9520                           ; direct_byte            8     6 (fixed)
  9521                           ; jumptable            260     6 (fixed)
  9522                           ;	Chosen strategy is simple_byte
  9523  17E0  0823               	movf	??_ADC_init+1,w
  9524  17E1  3A00               	xorlw	0	; case 0
  9525  17E2  1903               	skipnz
  9526  17E3  2FE5               	goto	l5005
  9527  17E4  2FF0               	goto	l4901
  9528  17E5                     l5005:	
  9529                           
  9530                           ; Switch size 1, requested type "simple"
  9531                           ; Number of cases is 3, Range of values is 65 to 67
  9532                           ; switch strategies available:
  9533                           ; Name         Instructions Cycles
  9534                           ; simple_byte           10     6 (average)
  9535                           ; direct_byte           15     9 (fixed)
  9536                           ; jumptable            263     9 (fixed)
  9537                           ;	Chosen strategy is simple_byte
  9538  17E5  0822               	movf	??_ADC_init,w
  9539  17E6  3A41               	xorlw	65	; case 65
  9540  17E7  1903               	skipnz
  9541  17E8  2F8F               	goto	l4883
  9542  17E9  3A03               	xorlw	3	; case 66
  9543  17EA  1903               	skipnz
  9544  17EB  2FA6               	goto	l4887
  9545  17EC  3A01               	xorlw	1	; case 67
  9546  17ED  1903               	skipnz
  9547  17EE  2FBE               	goto	l4893
  9548  17EF  2FF0               	goto	l4901
  9549  17F0                     l4901:	
  9550                           
  9551                           ;ADC_funcs.c: 27:     ADCON0 |= chan << 2;
  9552  17F0  0825               	movf	ADC_init@chan,w	;volatile
  9553  17F1  00A2               	movwf	??_ADC_init
  9554  17F2  3001               	movlw	1
  9555  17F3                     u8145:	
  9556  17F3  35A2               	lslf	??_ADC_init,f
  9557  17F4  3EFF               	addlw	-1
  9558  17F5  1D03               	skipz
  9559  17F6  2FF3               	goto	u8145
  9560  17F7  3522               	lslf	??_ADC_init,w
  9561  17F8  00A3               	movwf	??_ADC_init+1
  9562  17F9  0823               	movf	??_ADC_init+1,w
  9563  17FA  0141               	movlb	1	; select bank1
  9564  17FB  049D               	iorwf	29,f	;volatile
  9565                           
  9566                           ;ADC_funcs.c: 30:     ADCON1 = 0b10100000;
  9567  17FC  30A0               	movlw	160
  9568  17FD  009E               	movwf	30	;volatile
  9569                           
  9570                           ;ADC_funcs.c: 33:     ADCON0bits.ADON = 1;
  9571  17FE  141D               	bsf	29,0	;volatile
  9572  17FF  0008               	return
  9573  1800                     __end_of_ADC_init:	
  9574                           
  9575                           	psect	intentry
  9576  0004                     __pintentry:	
  9577 ;; *************** function _UART_Recieve *****************
  9578 ;; Defined at:
  9579 ;;		line 54 in file "main.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;		None
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;  length_to_re    2    0        int 
  9584 ;;  b               1    4[COMMON] unsigned char 
  9585 ;;  received_cha    1    3[COMMON] PTR unsigned char 
  9586 ;;		 -> UART_Recieve@b(1), 
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  1    wreg      void 
  9589 ;; Registers used:
  9590 ;;		wreg, fsr1l, fsr1h, pclath, cstack
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;Total ram usage:        5 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; Hardware stack levels required when called:    1
  9603 ;; This function calls:
  9604 ;;		_readSerial
  9605 ;; This function is called by:
  9606 ;;		Interrupt level 1
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610  0004                     _UART_Recieve:	
  9611                           
  9612                           ;incstack = 0
  9613  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9614                           
  9615                           ; Regs used in _UART_Recieve: [wreg+fsr1l+fsr1h+pclath+cstack]
  9616  0005  3180               	pagesel	$
  9617                           
  9618                           ;main.c: 55:     char b;;main.c: 56:     char *received_char = &b;
  9619  0006  3074               	movlw	(low (UART_Recieve@b| 0))& (0+255)
  9620  0007  00F0               	movwf	??_UART_Recieve
  9621  0008  0870               	movf	??_UART_Recieve,w
  9622  0009  00F3               	movwf	UART_Recieve@received_char
  9623                           
  9624                           ;main.c: 58:     *received_char = readSerial();
  9625  000A  3192  2207         	fcall	_readSerial
  9626  000C  00F0               	movwf	??_UART_Recieve
  9627  000D  0873               	movf	UART_Recieve@received_char,w
  9628  000E  0086               	movwf	6
  9629  000F  0187               	clrf	7
  9630  0010  0870               	movf	??_UART_Recieve,w
  9631  0011  0081               	movwf	1
  9632  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9633  0013  0009               	retfie
  9634  0014                     __end_of_UART_Recieve:	
  9635                           
  9636                           	psect	text33
  9637  1207                     __ptext33:	
  9638 ;; *************** function _readSerial *****************
  9639 ;; Defined at:
  9640 ;;		line 47 in file "UART_funcs.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;		None
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      unsigned char 
  9647 ;; Registers used:
  9648 ;;		wreg
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;Total ram usage:        0 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; This function calls:
  9661 ;;		Nothing
  9662 ;; This function is called by:
  9663 ;;		_UART_Recieve
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           
  9668                           ;psect for function _readSerial
  9669  1207                     _readSerial:	
  9670  1207                     i1l111:	
  9671                           ;UART_funcs.c: 48:     while (!RC1IF);
  9672                           
  9673                           ;incstack = 0
  9674                           ; Regs used in _readSerial: [wreg]
  9675                           
  9676  1207  014E               	movlb	14	; select bank14
  9677  1208  1E8F               	btfss	15,5	;volatile
  9678  1209  2A07               	goto	i1l111
  9679                           
  9680                           ;UART_funcs.c: 49:     return RC1REG;
  9681  120A  0142               	movlb	2	; select bank2
  9682  120B  0819               	movf	25,w	;volatile
  9683  120C  0008               	return
  9684  120D                     __end_of_readSerial:	
  9685  007E                     btemp	set	126	;btemp
  9686  007E                     int$flags	set	126
  9687  007E                     wtemp0	set	126


Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         96
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     80      80
    BANK1            80     77      77
    BANK2            80      6      18
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S690_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    ADC_init@pin	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    UART_Recieve@received_char	PTR unsigned char  size(1) Largest target is 1
		 -> UART_Recieve@b(COMMON[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _UART_Recieve in COMMON

    None.

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _init_UART->___aldiv

Critical Paths under _UART_Recieve in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _UART_Recieve in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_Recieve in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_Recieve in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_Recieve in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_Recieve in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_Recieve in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_Recieve in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_Recieve in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_Recieve in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_Recieve in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_Recieve in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_Recieve in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   39924
                                             75 BANK1      2     2      0
                                              0 BANK2      6     6      0
                           _ADC_init
                           _ADC_read
                            ___flmul
                           ___xxtofl
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   33684
                                             65 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   33501
                                             57 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   33042
                                             61 BANK0     19    17      2
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     541
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              66    61      5   28496
                                             52 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     767
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3566
                                             17 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1367
                                              9 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     975
                                              1 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             26 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     375
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     517
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3727
                                             40 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    3302
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    4253
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             40 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     490
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2583
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     625
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _init_UART                                           22    18      4     845
                                             15 BANK0     22    18      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             3     1      2       0
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             8     6      2     508
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _UART_Recieve                                         5     5      0      30
                                              0 COMMON     5     5      0
                         _readSerial
 ---------------------------------------------------------------------------------
 (10) _readSerial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___xxtofl
   _init_UART
     ___aldiv
   _printf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isupper
         _strncmp
         _tolower
           _isupper

 _UART_Recieve (ROOT)
   _readSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     108       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4D      4D       8       96.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      6      12      10       22.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     108      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jun 16 05:48:25 2019

             ___fldiv@aexp 0039               ___fldiv@bexp 0038               ___fldiv@sign 0031  
              __CFG_CP$OFF 0000                         l64 1241               ___awdiv@sign 0026  
      __Umul8_16@word_mpld 0026                __CFG_LVP$ON 0000                        l105 1221  
                      l215 13E9                        l401 1702                        l218 1409  
                      l219 1414                        l253 028D                        l254 027B  
                      l264 02C7                        l505 081C                        l506 0836  
                      l514 1690                        l282 04B3                        l517 16DE  
                      l641 0CD2                        l537 1566                        l714 0A30  
                      l715 0A48                        l643 0CB5                        l717 0A55  
                      l637 0C3F                        l671 0DB4                        l807 07F0  
                      l745 0FF3                        l658 0D55                        l771 0868  
                      l693 0929                        l679 0DCC                        l784 08B2  
                      l785 08BC                        l777 089E                        l881 12AC  
                      _pad 13D3               ___awmod@sign 0026               __CFG_BORV$LO 0000  
                      wreg 0009                main@adc_out 0130               ___flmul@aexp 003C  
             ___flmul@bexp 0041                _tolower$751 002C               ___flmul@sign 003B  
             ___flmul@temp 0046               ___flmul@prod 0042              __CFG_BBEN$OFF 0000  
             __CFG_ZCD$OFF 0000               ___fltol@exp1 002A                       l4011 14BC  
                     l4003 14AB                       l4007 14B4                       l4023 1398  
                     l4041 13BD                       l4035 13A5                       l4027 139F  
                     l4115 1554                       l5005 17E5                       l4037 13B1  
                     l4045 13C6                       l4061 0848                       l4125 1573  
                     l4117 1562                       l4215 09B4                       l4071 16AA  
                     l4311 0E1B                       l4049 13CE                       l4241 09ED  
                     l4233 09BF                       l4209 099B                       l4217 097D  
                     l4153 08FD                       l4235 09D6                       l4219 09B9  
                     l4155 0905                       l4075 16C4                       l4403 0FE0  
                     l4307 0E11                       l4245 09EF                       l4173 0921  
                     l4149 08FA                       l4309 0E13                       l4501 0258  
                     l4255 0A18                       l4183 0948                       l4319 0E29  
                     l4095 1526                       l4511 0287                       l4169 091E  
                     l3713 0C34                       l4513 028F                       l4433 0095  
                     l4425 0084                       l4371 0F5B                       l4291 0DF0  
                     l3723 0C49                       l4099 152F                       l4269 0A51  
                     l4189 0954                       l4373 0F72                       l4293 0DF8  
                     l3717 0C37                       l3645 1360                       l4613 0541  
                     l4621 0575                       l4437 009B                       l4445 00AE  
                     ?_pad 0031                       l4383 0F8B                       l3823 0D74  
                     l3815 0D67                       l3807 0D4D                       l3831 0D7D  
                     l4703 070A                       l4615 055F                       l4535 02D4  
                     l4527 02C1                       l4519 0294                       l4455 00E8  
                     l4463 010F                       l4393 0FB4                       l4289 0DEE  
                     l3841 0D88                       l3761 0CBD                       l3753 0C85  
                     l3913 15CD                       l3649 1383                       l3665 1269  
                     l4641 062C                       l4633 0615                       l4561 03EA  
                     l4545 02E8                       l4537 02D8                       l4473 014A  
                     l4481 0171                       l4721 145B                       l4379 0F89  
                     l3763 0CBF                       l3771 0CCD                       l3923 15F5  
                     l3659 1301                       l3667 1275                       l4571 046D  
                     l4723 1437                       l4811 132C                       l4901 17F0  
                     l4397 0FC9                       l3837 0D86                       l3829 0D7B  
                     l3693 0C0F                       l3917 15D2                       l4581 04BA  
                     l4629 05F7                       l4565 043D                       l4549 02F0  
                     l4493 01C9                       l4813 134D                       l3863 0DC8  
                     l3695 0C17                       l4671 0697                       l4559 0302  
                     l4495 0203                       l4751 0AD7                       l3873 12A6  
                     l3689 0C0C                       l3961 07BA                       l3929 12C5  
                     l4657 064D                       l4593 0523                       l4489 0199  
                     l4729 1461                       l4931 0860                       l4835 1723  
                     l4827 1713                       l3859 0DC4                       l3787 0CF2  
                     l3779 0CE0                       l3891 13E7                       l4659 0655  
                     l4579 04B1                       l4499 0233                       l4763 0B17  
                     l4941 087B                       l4853 176A                       l4845 1751  
                     l4837 1731                       l3789 0CF4                       l3797 0D03  
                     l3965 07D3                       l4669 0651                       l4773 0B70  
                     l4781 0B9D                       l4951 08B0                       l4943 088B  
                     l3959 07A9                       l3887 13DF                       l4695 06E9  
                     l4679 06AF                       l4791 0BC4                       l4953 08A3  
                     l4937 0877                       l4849 175C                       l3985 1485  
                     l3897 13EB                       l4883 178F                       l3995 148D  
                     l3979 147A                       l4787 0BBE                       l4893 17BE  
                     l4965 08D7                       l3997 1499                       l4797 0BCF  
                     l4887 17A6                       l4977 1611                       l4899 17DD  
                     STR_1 181A                       STR_2 1800                       STR_3 1807  
                     STR_4 180F                       STR_7 180B                       STR_8 1813  
                     u6200 15EE                       u6115 13F5                       _PEIE 005E  
                     u6220 12EB                       u7005 0A21                       u6230 12EC  
                     u7015 0A3A                       u6135 15A3                       u6305 0795  
                     u5610 125B                       u6075 12AD                       u7115 0E9F  
                     u6155 15BC                       u5620 125C                       u7125 0ECE  
                     u6325 07C3                       u6190 15ED                       u8015 1732  
                     u6415 149A                       u7135 0F24                       u6255 0742  
                     u8104 17AC                       u6280 0770                       u8105 17AB  
                     u8025 1746                       u6425 14A4                       u7145 0F3B  
                     u6185 15DF                       u6345 07DC                       u6265 075D  
                     u8114 17B7                       u5730 0CA4                       u8115 17B6  
                     u8035 1752                       u6435 14AC                       u6515 13B7  
                     u7155 0F4A                       u8124 17C4                       u5740 0CA5  
                     u7340 00D5                       u8125 17C3                       u6525 13BE  
                     u7165 0F5E                       u5725 0C99                       u6285 076C  
                     u8134 17CF                       u7350 00D6                       u8135 17CE  
                     u8215 0898                       u7255 0FA2                       u8145 17F3  
                     u8065 14D3                       u7265 0FBD                       u7185 0F67  
                     u5585 1381                       u7505 02BD                       u8235 08AA  
                     u8075 14EA                       u6395 1490                       u7275 0FD3  
                     u6715 156A                       u8307 166D                       u8084 1794  
                     u7380 0137                       u8085 1793                       u8317 123A  
                     u5853 0D15                       u5845 0CF8                       u8094 179F  
                     u7390 0138                       u8095 179E                       u6495 13A8  
                     u6575 0844                       u5775 0CC3                       u6655 1538  
                     u6905 09C2                       u7705 0613                       u7465 0285  
                     u8275 08C4                       u8195 0884                       u6835 0985  
                     u6925 09CB                       u6845 098C                       u6685 1555  
                     u7910 0B55                       u5895 0D68                       u7575 0310  
                     u7495 02A3                       u7920 0B56                       u6865 0995  
                     u6875 09A9                       u5995 0D9F                       u7780 06D9  
                     u7765 06A2                       u7790 06DA                       u7695 0605  
                     u6995 0A06                       u7995 1726              __CFG_FCMEN$ON 0000  
                     _dbuf 01A0                       _main 15FA                       _prec 0075  
                     _nout 0128                       pad@i 0035                       pad@p 0032  
                     fsr0h 0005                       fsr1h 0007                       indf0 0000  
                     fsr0l 0004                       indf1 0001                       fsr1l 0006  
                     pad@w 0037                       btemp 007E              __CFG_BOREN$ON 0000  
            ___fpclassifyf 1582                       start 0014           __end_of_ADC_init 1800  
         __end_of_ADC_read 124B            ___fldiv@new_exp 0032              __CFG_CSWEN$ON 0000  
            __CFG_MCLRE$ON 0000              ADC_init@block 0024                      ??_pad 0034  
            ___fltol@sign1 0029            __end_of___aldiv 1773            __end_of___fladd 0DD4  
                    ?_main 0070            __end_of___fldiv 0A5A            __end_of___awdiv 14C1  
          __end_of___flneg 1217                      STR_11 1817                      STR_13 1817  
          __end_of___awmod 13D3            __end_of___flmul 1000            __end_of___flsub 129B  
          __end_of___fltol 1582            ___awdiv@divisor 0020                      _RC1IE 38CD  
                    _RC1IF 387D                      i1l111 1207            ___awdiv@counter 0025  
             vfpfcnvrt@fmt 005D                      _SPBRG 011B                      _TRISA 0012  
                    _TRISB 0013                      _TRISC 0014                      _TXREG 011A  
                    _TXSTA 011E              __CFG_WRTB$OFF 0000              __CFG_WRTC$OFF 0000  
                    _flags 0077                      _fputc 1356                      _fputs 12FD  
                    pad@fp 0039                      _width 012A                      _putch 1217  
          __end_of_isupper 1263                      status 0003                      wtemp0 007E  
           ?___fpclassifyf 0020            __end_of_tolower 12FD            __end_of_strncmp 146F  
          __initialization 0016               __end_of_main 1675             __CFG_SAFEN$OFF 0000  
           ADC_init@pinNum 0026                     ??_main 00EB                     _ADCON0 009D  
                   _ADCON1 009E                     ?_fputc 0021                     ?_fputs 0029  
                   _ADRESH 009C                     _ADRESL 009B         init_UART@baud_rate 002F  
         ___awdiv@dividend 0022                     _ANSELA 1F38                     ?_putch 0070  
                   _ANSELB 1F43                     _ANSELC 1F4E                     _RC1REG 0119  
                   _RC1STA 011D                     _RC5PPS 1F25             __CFG_WDTCCS$SC 0000  
                   _TX1STA 011E           __end_of___xxtofl 08E0             __CFG_PWRTE$OFF 0000  
             vfprintf@cfmt 00DF                     ___flge 1675                     ___fleq 0801  
                ??___aldiv 0028                  ??___fladd 0028                  ??___fldiv 0028  
                ??___awdiv 0024                  ??___flneg 0075             __CFG_STVREN$ON 0000  
                ??___awmod 0024                  ??___flmul 0036                  ??___flsub 0075  
                ??___fltol 0024                     _efgtoa 002D                     _floorf 0721  
         ___awdiv@quotient 0027            ___awmod@divisor 0020            ___awmod@counter 0025  
                   _printf 1225                     pad@buf 0031                     _strcpy 12BB  
                   _strlen 1263                     fputc@c 0021                     fputs@c 002D  
                   fputs@i 002E                     fputs@s 0030         __size_of__Umul8_16 0020  
          ___fpclassifyf@e 002A            ___fpclassifyf@u 002C            ___fpclassifyf@x 0020  
                ??_isupper 0022                  ?_ADC_init 0020                  ?_ADC_read 0020  
         __end_of_vfprintf 1356                  ??_tolower 0028                  ??_strncmp 0024  
               ___flge@ff1 0048                 ___flge@ff2 004C            ??___fpclassifyf 0024  
             ___xxtofl@arg 002A               ___xxtofl@exp 0029               ___xxtofl@val 0020  
               ___fleq@ff1 0020                 ___fleq@ff2 0024    __end_of__initialization 0029  
               ___flneg@f1 0020                 ___fltol@f1 0020             __pcstackCOMMON 0070  
           main@decimalADC 012C              __end_of_fputc 138D              __end_of_fputs 1323  
            __end_of_putch 1225                 ??_ADC_init 0022                 ??_ADC_read 0022  
                  ??_fputc 0024                    ??_fputs 002A                    ??_putch 0075  
               __pbssBANK2 0120                 __pbssBANK3 01A0         __size_of_init_UART 005B  
        __end_of__Umul8_16 12BB                 _efgtoa$340 00A4                 _efgtoa$341 00A6  
               _efgtoa$350 00AA                 _efgtoa$351 00AC                 _efgtoa$352 00AE  
               _efgtoa$346 00A8                 __pmaintext 15FA                    ?___flge 0048  
                  ?___fleq 0020            __CFG_PPS1WAY$ON 0000                 __pintentry 0004  
                  ?_efgtoa 0054                    ?_floorf 003A                    ?_printf 00E1  
      __CFG_RSTOSC$HFINT32 0000                    ?_strcpy 0020                    ?_strlen 0020  
                ?___xxtofl 0020         __size_of_vfpfcnvrt 0198              ?_UART_Recieve 0070  
                  ___aldiv 16F1            __size_of___flge 007C            __size_of___fleq 0049  
                  ___fladd 0BF2                    ___fldiv 08E0                    ___awdiv 146F  
                  ___flneg 120D                    ___awmod 138D                    ___flmul 0DD4  
                  ___flsub 127C                    ___fltol 151C                  ?_vfprintf 00D9  
               _readSerial 1207            __size_of_efgtoa 06F4            __size_of_floorf 00D8  
                  __ptext1 1225                    __ptext2 1323                    __ptext3 0A5A  
                  __ptext4 1420                    __ptext5 002D                    __ptext6 12DB  
                  __ptext7 124B                    __ptext8 12BB                    __ptext9 13D3  
          __size_of_printf 0011          __end_of_init_UART 151C            __CFG_WRTAPP$OFF 0000  
          __size_of_strcpy 0020            __size_of_strlen 0019               __size_of_pad 004D  
               ??___xxtofl 0024           ___awmod@dividend 0022           ___aldiv@dividend 0024  
          __CFG_WRTSAF$OFF 0000                    _isupper 124B                    efgtoa@c 0058  
                  efgtoa@d 00B8                    efgtoa@e 00D1                    efgtoa@f 0054  
                  efgtoa@g 00CD                    efgtoa@h 00C3                    efgtoa@i 00CB  
                  efgtoa@l 00C7                    efgtoa@m 00B4                    efgtoa@n 00D3  
                  efgtoa@p 00BD                    efgtoa@t 00B0                    efgtoa@u 00D5  
                  efgtoa@w 00C0                    _tolower 12DB                    clrloop0 07FA  
                  _strncmp 1420       end_of_initialization 0029                    floorf@e 0048  
                  floorf@m 0044                    floorf@u 004A                    floorf@x 003A  
           ??_UART_Recieve 0070                    fputc@fp 0023                    fputs@fp 0029  
        __end_of_vfpfcnvrt 0BF2                 efgtoa@mode 00C2                 efgtoa@sign 00BA  
                _RCSTAbits 011D           ___aldiv@quotient 002B                 ??_vfprintf 00DC  
    __CFG_WDTCPS$WDTCPS_31 0000                    strcpy@d 0026                    strlen@a 0023  
                  strcpy@s 0024                    strlen@s 0024                ___fladd@grs 0033  
            ___xxtofl@sign 0028                ___fldiv@grs 0034                ___fldiv@rem 002D  
         __CFG_FEXTOSC$OFF 0000          __size_of_ADC_init 008D          __size_of_ADC_read 0015  
              ___flmul@grs 003D               ADC_init@chan 0025             __end_of___flge 16F1  
           __end_of___fleq 084A                ?_readSerial 0070                vfpfcnvrt@ap 005E  
              vfpfcnvrt@ct 006B                vfpfcnvrt@fp 006F             __end_of_efgtoa 0721  
           __end_of_floorf 07F9                 floorf@F524 0120             __end_of_printf 1236  
           __end_of_strcpy 12DB             __end_of_strlen 127C        start_initialization 0016  
              __end_of_pad 1420      __end_of___fpclassifyf 15FA           __CFG_LPBOREN$OFF 0000  
              vfprintf@fmt 00D9                   ??___flge 0050                   ??___fleq 0028  
                 ??_efgtoa 0059                  __Umul8_16 129B                   ??_floorf 003E  
UART_Recieve@received_char 0073                   ??_printf 00E7       __end_of_UART_Recieve 0014  
                 ??_strcpy 0022                   ??_strlen 0022                  ___fladd@a 0024  
                ___fladd@b 0020                  ___fldiv@a 0020                  ___fldiv@b 0024  
                ___flmul@a 0032                  ___flmul@b 002E                __pbssCOMMON 0075  
                ___flsub@a 0048                  ___flsub@b 004C                  ___latbits 0002  
        init_UART@spbrgVal 0043              __pcstackBANK0 0020              __pcstackBANK1 00A0  
            __pcstackBANK2 012C          __size_of___xxtofl 0096        __size_of_readSerial 0006  
                 ?___aldiv 0020                   ?___fladd 0020                   ?___fldiv 0020  
                 ?___awdiv 0020                   ?___flneg 0020                   ?___awmod 0020  
                 ?___flmul 002E                   ?___flsub 0048                   ?___fltol 0020  
               ?__Umul8_16 0020          __size_of_vfprintf 0033              UART_Recieve@b 0074  
                 _BAUD1CON 011F                   ?_isupper 0020           __CFG_WDTE$NSLEEP 0000  
                _init_UART 14C1                   _ADC_init 1773                   _ADC_read 1236  
                 ?_tolower 0026             __size_of_fputc 0037             __size_of_fputs 0026  
                 ?_strncmp 0020             __size_of_putch 000E            ___aldiv@divisor 0020  
          ___aldiv@counter 0029                  clear_ram0 07F9                   _RX1DTPPS 1ECB  
        __CFG_BBSIZE$BB512 0000                  _vfpfcnvrt 0A5A                 _ADCON0bits 009D  
               ?_init_UART 002F                ADC_init@pin 0020                 vfpfcnvrt@c 006E  
               vfpfcnvrt@f 0067                 vfprintf@ap 00DB                 vfprintf@fp 00DE  
    __size_of_UART_Recieve 0010                ??__Umul8_16 0022               ??_readSerial 0070  
         __size_of___aldiv 0082           __size_of___fladd 01E2           __size_of___fldiv 017A  
         __size_of___awdiv 0052           __size_of___flneg 000A           __size_of___awmod 0046  
         __size_of___flmul 022C           __size_of___flsub 001F           __size_of___fltol 0066  
               ?_vfpfcnvrt 005D         ___fpclassifyf@F463 0124                   ___xxtofl 084A  
                 __ptext10 1263                   __ptext11 12FD                   __ptext20 0DD4  
                 __ptext12 1356                   __ptext21 129B                   __ptext13 1217  
                 __ptext30 1236                   __ptext22 1675                   __ptext14 0721  
                 __ptext31 1773                   __ptext23 0801                   __ptext15 1582  
                 __ptext24 08E0                   __ptext16 151C                   __ptext33 1207  
                 __ptext25 138D                   __ptext17 127C                   __ptext26 146F  
                 __ptext18 0BF2                   __ptext27 14C1                   __ptext19 120D  
                 __ptext28 16F1                   __ptext29 084A           __size_of_isupper 0018  
         __size_of_tolower 0022                 strcpy@dest 0027           __size_of_strncmp 004F  
       __end_of_readSerial 120D              __size_of_main 007B               _UART_Recieve 0004  
     __CFG_WDTCWS$WDTCWS_7 0000                   efgtoa@fp 00BC                   efgtoa@ne 00B6  
                 efgtoa@pp 00B2                   efgtoa@ou 00A0                   int$flags 007E  
                 _vfprintf 1323                  printf@fmt 00E1                  putch@byte 0020  
               _INTCONbits 000B                ??_init_UART 0033                   intlevel1 0000  
        __CFG_CLKOUTEN$OFF 0000                  strcpy@src 0020                   isupper@c 0020  
                strncmp@_l 0025                  strncmp@_r 0020                efgtoa@nmode 00BF  
                 printf@ap 00EA                ??_vfpfcnvrt 005F              _vfpfcnvrt$369 0065  
            __pstringtext1 1800              __pstringtext2 1807              __pstringtext3 180B  
            __pstringtext4 180F              __pstringtext5 1813              __pstringtext6 1817  
            __pstringtext7 181A              __pstringtext8 0000     __Umul8_16@multiplicand 0020  
                 tolower@c 0026     __size_of___fpclassifyf 0078                   strncmp@l 0028  
                 strncmp@n 0022                   strncmp@r 0026               ___aldiv@sign 002A  
               _TX1STAbits 011E              ___fladd@signs 0030               ___fladd@aexp 0031  
             ___fladd@bexp 0032       __Umul8_16@multiplier 0028          __Umul8_16@product 0024  
