

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jun 16 06:57:53 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F15345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.05
    58                           ; Generated 20/12/2018 GMT
    59                           ; 
    60                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F15345 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0119                     	;# 
   119  0119                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011A                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011B                     	;# 
   126  011B                     	;# 
   127  011B                     	;# 
   128  011B                     	;# 
   129  011C                     	;# 
   130  011C                     	;# 
   131  011C                     	;# 
   132  011D                     	;# 
   133  011D                     	;# 
   134  011D                     	;# 
   135  011E                     	;# 
   136  011E                     	;# 
   137  011E                     	;# 
   138  011F                     	;# 
   139  011F                     	;# 
   140  011F                     	;# 
   141  011F                     	;# 
   142  011F                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  018E                     	;# 
   146  018F                     	;# 
   147  0190                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  020C                     	;# 
   151  020C                     	;# 
   152  020D                     	;# 
   153  020E                     	;# 
   154  020F                     	;# 
   155  020F                     	;# 
   156  0210                     	;# 
   157  0210                     	;# 
   158  0211                     	;# 
   159  0211                     	;# 
   160  028C                     	;# 
   161  028C                     	;# 
   162  028D                     	;# 
   163  028D                     	;# 
   164  028E                     	;# 
   165  028F                     	;# 
   166  0290                     	;# 
   167  0291                     	;# 
   168  030C                     	;# 
   169  030C                     	;# 
   170  030D                     	;# 
   171  030E                     	;# 
   172  030F                     	;# 
   173  0310                     	;# 
   174  0310                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0314                     	;# 
   179  0314                     	;# 
   180  0315                     	;# 
   181  0316                     	;# 
   182  0318                     	;# 
   183  0318                     	;# 
   184  0319                     	;# 
   185  031A                     	;# 
   186  031C                     	;# 
   187  031C                     	;# 
   188  031D                     	;# 
   189  031E                     	;# 
   190  038C                     	;# 
   191  038C                     	;# 
   192  038D                     	;# 
   193  038E                     	;# 
   194  058C                     	;# 
   195  058C                     	;# 
   196  058D                     	;# 
   197  058E                     	;# 
   198  058F                     	;# 
   199  058F                     	;# 
   200  0590                     	;# 
   201  0591                     	;# 
   202  0592                     	;# 
   203  0593                     	;# 
   204  059C                     	;# 
   205  059C                     	;# 
   206  059D                     	;# 
   207  059D                     	;# 
   208  059E                     	;# 
   209  059F                     	;# 
   210  060C                     	;# 
   211  060D                     	;# 
   212  060E                     	;# 
   213  060F                     	;# 
   214  0610                     	;# 
   215  0611                     	;# 
   216  0612                     	;# 
   217  0613                     	;# 
   218  0614                     	;# 
   219  070C                     	;# 
   220  070D                     	;# 
   221  070E                     	;# 
   222  070F                     	;# 
   223  0710                     	;# 
   224  0711                     	;# 
   225  0712                     	;# 
   226  0713                     	;# 
   227  0716                     	;# 
   228  0717                     	;# 
   229  0718                     	;# 
   230  0719                     	;# 
   231  071A                     	;# 
   232  071B                     	;# 
   233  071C                     	;# 
   234  071D                     	;# 
   235  0796                     	;# 
   236  0797                     	;# 
   237  0798                     	;# 
   238  0799                     	;# 
   239  079A                     	;# 
   240  079B                     	;# 
   241  080C                     	;# 
   242  080D                     	;# 
   243  080E                     	;# 
   244  080F                     	;# 
   245  0810                     	;# 
   246  0811                     	;# 
   247  0812                     	;# 
   248  0813                     	;# 
   249  0814                     	;# 
   250  081A                     	;# 
   251  081A                     	;# 
   252  081B                     	;# 
   253  081C                     	;# 
   254  081C                     	;# 
   255  081D                     	;# 
   256  081E                     	;# 
   257  081F                     	;# 
   258  088C                     	;# 
   259  088D                     	;# 
   260  088E                     	;# 
   261  088F                     	;# 
   262  0890                     	;# 
   263  0891                     	;# 
   264  0892                     	;# 
   265  0893                     	;# 
   266  0895                     	;# 
   267  0896                     	;# 
   268  090C                     	;# 
   269  090E                     	;# 
   270  090F                     	;# 
   271  091F                     	;# 
   272  098F                     	;# 
   273  098F                     	;# 
   274  0990                     	;# 
   275  0991                     	;# 
   276  0992                     	;# 
   277  0993                     	;# 
   278  0994                     	;# 
   279  0995                     	;# 
   280  0996                     	;# 
   281  0997                     	;# 
   282  0A19                     	;# 
   283  0A19                     	;# 
   284  0A1A                     	;# 
   285  0A1A                     	;# 
   286  0A1B                     	;# 
   287  0A1B                     	;# 
   288  0A1B                     	;# 
   289  0A1C                     	;# 
   290  0A1C                     	;# 
   291  0A1D                     	;# 
   292  0A1D                     	;# 
   293  0A1E                     	;# 
   294  0A1E                     	;# 
   295  0A1F                     	;# 
   296  0A1F                     	;# 
   297  0A1F                     	;# 
   298  1E0F                     	;# 
   299  1E10                     	;# 
   300  1E11                     	;# 
   301  1E12                     	;# 
   302  1E13                     	;# 
   303  1E14                     	;# 
   304  1E15                     	;# 
   305  1E16                     	;# 
   306  1E17                     	;# 
   307  1E18                     	;# 
   308  1E19                     	;# 
   309  1E1A                     	;# 
   310  1E1B                     	;# 
   311  1E1C                     	;# 
   312  1E1D                     	;# 
   313  1E1E                     	;# 
   314  1E1F                     	;# 
   315  1E20                     	;# 
   316  1E21                     	;# 
   317  1E22                     	;# 
   318  1E23                     	;# 
   319  1E24                     	;# 
   320  1E25                     	;# 
   321  1E26                     	;# 
   322  1E27                     	;# 
   323  1E28                     	;# 
   324  1E29                     	;# 
   325  1E2A                     	;# 
   326  1E2B                     	;# 
   327  1E2C                     	;# 
   328  1E2D                     	;# 
   329  1E2E                     	;# 
   330  1E2F                     	;# 
   331  1E30                     	;# 
   332  1E31                     	;# 
   333  1E32                     	;# 
   334  1E33                     	;# 
   335  1E34                     	;# 
   336  1E35                     	;# 
   337  1E36                     	;# 
   338  1E37                     	;# 
   339  1E8F                     	;# 
   340  1E90                     	;# 
   341  1E91                     	;# 
   342  1E92                     	;# 
   343  1E93                     	;# 
   344  1E9C                     	;# 
   345  1EA1                     	;# 
   346  1EA2                     	;# 
   347  1EB1                     	;# 
   348  1EBB                     	;# 
   349  1EBC                     	;# 
   350  1EBD                     	;# 
   351  1EBE                     	;# 
   352  1EC3                     	;# 
   353  1EC5                     	;# 
   354  1EC6                     	;# 
   355  1EC7                     	;# 
   356  1ECB                     	;# 
   357  1ECC                     	;# 
   358  1ECD                     	;# 
   359  1ECE                     	;# 
   360  1F10                     	;# 
   361  1F11                     	;# 
   362  1F12                     	;# 
   363  1F13                     	;# 
   364  1F14                     	;# 
   365  1F15                     	;# 
   366  1F1C                     	;# 
   367  1F1D                     	;# 
   368  1F1E                     	;# 
   369  1F1F                     	;# 
   370  1F20                     	;# 
   371  1F21                     	;# 
   372  1F22                     	;# 
   373  1F23                     	;# 
   374  1F24                     	;# 
   375  1F25                     	;# 
   376  1F26                     	;# 
   377  1F27                     	;# 
   378  1F38                     	;# 
   379  1F39                     	;# 
   380  1F3A                     	;# 
   381  1F3B                     	;# 
   382  1F3C                     	;# 
   383  1F3D                     	;# 
   384  1F3E                     	;# 
   385  1F3F                     	;# 
   386  1F43                     	;# 
   387  1F44                     	;# 
   388  1F45                     	;# 
   389  1F46                     	;# 
   390  1F47                     	;# 
   391  1F48                     	;# 
   392  1F49                     	;# 
   393  1F4A                     	;# 
   394  1F4E                     	;# 
   395  1F4F                     	;# 
   396  1F50                     	;# 
   397  1F51                     	;# 
   398  1F52                     	;# 
   399  1F53                     	;# 
   400  1F54                     	;# 
   401  1F55                     	;# 
   402  1FE4                     	;# 
   403  1FE5                     	;# 
   404  1FE6                     	;# 
   405  1FE7                     	;# 
   406  1FE8                     	;# 
   407  1FE8                     	;# 
   408  1FE9                     	;# 
   409  1FEA                     	;# 
   410  1FEA                     	;# 
   411  1FEB                     	;# 
   412  1FED                     	;# 
   413  1FEE                     	;# 
   414  1FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  000D                     	;# 
   429  000E                     	;# 
   430  0012                     	;# 
   431  0013                     	;# 
   432  0014                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  009B                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0119                     	;# 
   443  0119                     	;# 
   444  0119                     	;# 
   445  011A                     	;# 
   446  011A                     	;# 
   447  011A                     	;# 
   448  011B                     	;# 
   449  011B                     	;# 
   450  011B                     	;# 
   451  011B                     	;# 
   452  011B                     	;# 
   453  011C                     	;# 
   454  011C                     	;# 
   455  011C                     	;# 
   456  011D                     	;# 
   457  011D                     	;# 
   458  011D                     	;# 
   459  011E                     	;# 
   460  011E                     	;# 
   461  011E                     	;# 
   462  011F                     	;# 
   463  011F                     	;# 
   464  011F                     	;# 
   465  011F                     	;# 
   466  011F                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  018E                     	;# 
   470  018F                     	;# 
   471  0190                     	;# 
   472  0191                     	;# 
   473  0192                     	;# 
   474  020C                     	;# 
   475  020C                     	;# 
   476  020D                     	;# 
   477  020E                     	;# 
   478  020F                     	;# 
   479  020F                     	;# 
   480  0210                     	;# 
   481  0210                     	;# 
   482  0211                     	;# 
   483  0211                     	;# 
   484  028C                     	;# 
   485  028C                     	;# 
   486  028D                     	;# 
   487  028D                     	;# 
   488  028E                     	;# 
   489  028F                     	;# 
   490  0290                     	;# 
   491  0291                     	;# 
   492  030C                     	;# 
   493  030C                     	;# 
   494  030D                     	;# 
   495  030E                     	;# 
   496  030F                     	;# 
   497  0310                     	;# 
   498  0310                     	;# 
   499  0311                     	;# 
   500  0312                     	;# 
   501  0313                     	;# 
   502  0314                     	;# 
   503  0314                     	;# 
   504  0315                     	;# 
   505  0316                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  031C                     	;# 
   511  031C                     	;# 
   512  031D                     	;# 
   513  031E                     	;# 
   514  038C                     	;# 
   515  038C                     	;# 
   516  038D                     	;# 
   517  038E                     	;# 
   518  058C                     	;# 
   519  058C                     	;# 
   520  058D                     	;# 
   521  058E                     	;# 
   522  058F                     	;# 
   523  058F                     	;# 
   524  0590                     	;# 
   525  0591                     	;# 
   526  0592                     	;# 
   527  0593                     	;# 
   528  059C                     	;# 
   529  059C                     	;# 
   530  059D                     	;# 
   531  059D                     	;# 
   532  059E                     	;# 
   533  059F                     	;# 
   534  060C                     	;# 
   535  060D                     	;# 
   536  060E                     	;# 
   537  060F                     	;# 
   538  0610                     	;# 
   539  0611                     	;# 
   540  0612                     	;# 
   541  0613                     	;# 
   542  0614                     	;# 
   543  070C                     	;# 
   544  070D                     	;# 
   545  070E                     	;# 
   546  070F                     	;# 
   547  0710                     	;# 
   548  0711                     	;# 
   549  0712                     	;# 
   550  0713                     	;# 
   551  0716                     	;# 
   552  0717                     	;# 
   553  0718                     	;# 
   554  0719                     	;# 
   555  071A                     	;# 
   556  071B                     	;# 
   557  071C                     	;# 
   558  071D                     	;# 
   559  0796                     	;# 
   560  0797                     	;# 
   561  0798                     	;# 
   562  0799                     	;# 
   563  079A                     	;# 
   564  079B                     	;# 
   565  080C                     	;# 
   566  080D                     	;# 
   567  080E                     	;# 
   568  080F                     	;# 
   569  0810                     	;# 
   570  0811                     	;# 
   571  0812                     	;# 
   572  0813                     	;# 
   573  0814                     	;# 
   574  081A                     	;# 
   575  081A                     	;# 
   576  081B                     	;# 
   577  081C                     	;# 
   578  081C                     	;# 
   579  081D                     	;# 
   580  081E                     	;# 
   581  081F                     	;# 
   582  088C                     	;# 
   583  088D                     	;# 
   584  088E                     	;# 
   585  088F                     	;# 
   586  0890                     	;# 
   587  0891                     	;# 
   588  0892                     	;# 
   589  0893                     	;# 
   590  0895                     	;# 
   591  0896                     	;# 
   592  090C                     	;# 
   593  090E                     	;# 
   594  090F                     	;# 
   595  091F                     	;# 
   596  098F                     	;# 
   597  098F                     	;# 
   598  0990                     	;# 
   599  0991                     	;# 
   600  0992                     	;# 
   601  0993                     	;# 
   602  0994                     	;# 
   603  0995                     	;# 
   604  0996                     	;# 
   605  0997                     	;# 
   606  0A19                     	;# 
   607  0A19                     	;# 
   608  0A1A                     	;# 
   609  0A1A                     	;# 
   610  0A1B                     	;# 
   611  0A1B                     	;# 
   612  0A1B                     	;# 
   613  0A1C                     	;# 
   614  0A1C                     	;# 
   615  0A1D                     	;# 
   616  0A1D                     	;# 
   617  0A1E                     	;# 
   618  0A1E                     	;# 
   619  0A1F                     	;# 
   620  0A1F                     	;# 
   621  0A1F                     	;# 
   622  1E0F                     	;# 
   623  1E10                     	;# 
   624  1E11                     	;# 
   625  1E12                     	;# 
   626  1E13                     	;# 
   627  1E14                     	;# 
   628  1E15                     	;# 
   629  1E16                     	;# 
   630  1E17                     	;# 
   631  1E18                     	;# 
   632  1E19                     	;# 
   633  1E1A                     	;# 
   634  1E1B                     	;# 
   635  1E1C                     	;# 
   636  1E1D                     	;# 
   637  1E1E                     	;# 
   638  1E1F                     	;# 
   639  1E20                     	;# 
   640  1E21                     	;# 
   641  1E22                     	;# 
   642  1E23                     	;# 
   643  1E24                     	;# 
   644  1E25                     	;# 
   645  1E26                     	;# 
   646  1E27                     	;# 
   647  1E28                     	;# 
   648  1E29                     	;# 
   649  1E2A                     	;# 
   650  1E2B                     	;# 
   651  1E2C                     	;# 
   652  1E2D                     	;# 
   653  1E2E                     	;# 
   654  1E2F                     	;# 
   655  1E30                     	;# 
   656  1E31                     	;# 
   657  1E32                     	;# 
   658  1E33                     	;# 
   659  1E34                     	;# 
   660  1E35                     	;# 
   661  1E36                     	;# 
   662  1E37                     	;# 
   663  1E8F                     	;# 
   664  1E90                     	;# 
   665  1E91                     	;# 
   666  1E92                     	;# 
   667  1E93                     	;# 
   668  1E9C                     	;# 
   669  1EA1                     	;# 
   670  1EA2                     	;# 
   671  1EB1                     	;# 
   672  1EBB                     	;# 
   673  1EBC                     	;# 
   674  1EBD                     	;# 
   675  1EBE                     	;# 
   676  1EC3                     	;# 
   677  1EC5                     	;# 
   678  1EC6                     	;# 
   679  1EC7                     	;# 
   680  1ECB                     	;# 
   681  1ECC                     	;# 
   682  1ECD                     	;# 
   683  1ECE                     	;# 
   684  1F10                     	;# 
   685  1F11                     	;# 
   686  1F12                     	;# 
   687  1F13                     	;# 
   688  1F14                     	;# 
   689  1F15                     	;# 
   690  1F1C                     	;# 
   691  1F1D                     	;# 
   692  1F1E                     	;# 
   693  1F1F                     	;# 
   694  1F20                     	;# 
   695  1F21                     	;# 
   696  1F22                     	;# 
   697  1F23                     	;# 
   698  1F24                     	;# 
   699  1F25                     	;# 
   700  1F26                     	;# 
   701  1F27                     	;# 
   702  1F38                     	;# 
   703  1F39                     	;# 
   704  1F3A                     	;# 
   705  1F3B                     	;# 
   706  1F3C                     	;# 
   707  1F3D                     	;# 
   708  1F3E                     	;# 
   709  1F3F                     	;# 
   710  1F43                     	;# 
   711  1F44                     	;# 
   712  1F45                     	;# 
   713  1F46                     	;# 
   714  1F47                     	;# 
   715  1F48                     	;# 
   716  1F49                     	;# 
   717  1F4A                     	;# 
   718  1F4E                     	;# 
   719  1F4F                     	;# 
   720  1F50                     	;# 
   721  1F51                     	;# 
   722  1F52                     	;# 
   723  1F53                     	;# 
   724  1F54                     	;# 
   725  1F55                     	;# 
   726  1FE4                     	;# 
   727  1FE5                     	;# 
   728  1FE6                     	;# 
   729  1FE7                     	;# 
   730  1FE8                     	;# 
   731  1FE8                     	;# 
   732  1FE9                     	;# 
   733  1FEA                     	;# 
   734  1FEA                     	;# 
   735  1FEB                     	;# 
   736  1FED                     	;# 
   737  1FEE                     	;# 
   738  1FEF                     	;# 
   739  0000                     	;# 
   740  0001                     	;# 
   741  0002                     	;# 
   742  0003                     	;# 
   743  0004                     	;# 
   744  0005                     	;# 
   745  0006                     	;# 
   746  0007                     	;# 
   747  0008                     	;# 
   748  0009                     	;# 
   749  000A                     	;# 
   750  000B                     	;# 
   751  000C                     	;# 
   752  000D                     	;# 
   753  000E                     	;# 
   754  0012                     	;# 
   755  0013                     	;# 
   756  0014                     	;# 
   757  0018                     	;# 
   758  0019                     	;# 
   759  001A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  009F                     	;# 
   766  0119                     	;# 
   767  0119                     	;# 
   768  0119                     	;# 
   769  011A                     	;# 
   770  011A                     	;# 
   771  011A                     	;# 
   772  011B                     	;# 
   773  011B                     	;# 
   774  011B                     	;# 
   775  011B                     	;# 
   776  011B                     	;# 
   777  011C                     	;# 
   778  011C                     	;# 
   779  011C                     	;# 
   780  011D                     	;# 
   781  011D                     	;# 
   782  011D                     	;# 
   783  011E                     	;# 
   784  011E                     	;# 
   785  011E                     	;# 
   786  011F                     	;# 
   787  011F                     	;# 
   788  011F                     	;# 
   789  011F                     	;# 
   790  011F                     	;# 
   791  018C                     	;# 
   792  018D                     	;# 
   793  018E                     	;# 
   794  018F                     	;# 
   795  0190                     	;# 
   796  0191                     	;# 
   797  0192                     	;# 
   798  020C                     	;# 
   799  020C                     	;# 
   800  020D                     	;# 
   801  020E                     	;# 
   802  020F                     	;# 
   803  020F                     	;# 
   804  0210                     	;# 
   805  0210                     	;# 
   806  0211                     	;# 
   807  0211                     	;# 
   808  028C                     	;# 
   809  028C                     	;# 
   810  028D                     	;# 
   811  028D                     	;# 
   812  028E                     	;# 
   813  028F                     	;# 
   814  0290                     	;# 
   815  0291                     	;# 
   816  030C                     	;# 
   817  030C                     	;# 
   818  030D                     	;# 
   819  030E                     	;# 
   820  030F                     	;# 
   821  0310                     	;# 
   822  0310                     	;# 
   823  0311                     	;# 
   824  0312                     	;# 
   825  0313                     	;# 
   826  0314                     	;# 
   827  0314                     	;# 
   828  0315                     	;# 
   829  0316                     	;# 
   830  0318                     	;# 
   831  0318                     	;# 
   832  0319                     	;# 
   833  031A                     	;# 
   834  031C                     	;# 
   835  031C                     	;# 
   836  031D                     	;# 
   837  031E                     	;# 
   838  038C                     	;# 
   839  038C                     	;# 
   840  038D                     	;# 
   841  038E                     	;# 
   842  058C                     	;# 
   843  058C                     	;# 
   844  058D                     	;# 
   845  058E                     	;# 
   846  058F                     	;# 
   847  058F                     	;# 
   848  0590                     	;# 
   849  0591                     	;# 
   850  0592                     	;# 
   851  0593                     	;# 
   852  059C                     	;# 
   853  059C                     	;# 
   854  059D                     	;# 
   855  059D                     	;# 
   856  059E                     	;# 
   857  059F                     	;# 
   858  060C                     	;# 
   859  060D                     	;# 
   860  060E                     	;# 
   861  060F                     	;# 
   862  0610                     	;# 
   863  0611                     	;# 
   864  0612                     	;# 
   865  0613                     	;# 
   866  0614                     	;# 
   867  070C                     	;# 
   868  070D                     	;# 
   869  070E                     	;# 
   870  070F                     	;# 
   871  0710                     	;# 
   872  0711                     	;# 
   873  0712                     	;# 
   874  0713                     	;# 
   875  0716                     	;# 
   876  0717                     	;# 
   877  0718                     	;# 
   878  0719                     	;# 
   879  071A                     	;# 
   880  071B                     	;# 
   881  071C                     	;# 
   882  071D                     	;# 
   883  0796                     	;# 
   884  0797                     	;# 
   885  0798                     	;# 
   886  0799                     	;# 
   887  079A                     	;# 
   888  079B                     	;# 
   889  080C                     	;# 
   890  080D                     	;# 
   891  080E                     	;# 
   892  080F                     	;# 
   893  0810                     	;# 
   894  0811                     	;# 
   895  0812                     	;# 
   896  0813                     	;# 
   897  0814                     	;# 
   898  081A                     	;# 
   899  081A                     	;# 
   900  081B                     	;# 
   901  081C                     	;# 
   902  081C                     	;# 
   903  081D                     	;# 
   904  081E                     	;# 
   905  081F                     	;# 
   906  088C                     	;# 
   907  088D                     	;# 
   908  088E                     	;# 
   909  088F                     	;# 
   910  0890                     	;# 
   911  0891                     	;# 
   912  0892                     	;# 
   913  0893                     	;# 
   914  0895                     	;# 
   915  0896                     	;# 
   916  090C                     	;# 
   917  090E                     	;# 
   918  090F                     	;# 
   919  091F                     	;# 
   920  098F                     	;# 
   921  098F                     	;# 
   922  0990                     	;# 
   923  0991                     	;# 
   924  0992                     	;# 
   925  0993                     	;# 
   926  0994                     	;# 
   927  0995                     	;# 
   928  0996                     	;# 
   929  0997                     	;# 
   930  0A19                     	;# 
   931  0A19                     	;# 
   932  0A1A                     	;# 
   933  0A1A                     	;# 
   934  0A1B                     	;# 
   935  0A1B                     	;# 
   936  0A1B                     	;# 
   937  0A1C                     	;# 
   938  0A1C                     	;# 
   939  0A1D                     	;# 
   940  0A1D                     	;# 
   941  0A1E                     	;# 
   942  0A1E                     	;# 
   943  0A1F                     	;# 
   944  0A1F                     	;# 
   945  0A1F                     	;# 
   946  1E0F                     	;# 
   947  1E10                     	;# 
   948  1E11                     	;# 
   949  1E12                     	;# 
   950  1E13                     	;# 
   951  1E14                     	;# 
   952  1E15                     	;# 
   953  1E16                     	;# 
   954  1E17                     	;# 
   955  1E18                     	;# 
   956  1E19                     	;# 
   957  1E1A                     	;# 
   958  1E1B                     	;# 
   959  1E1C                     	;# 
   960  1E1D                     	;# 
   961  1E1E                     	;# 
   962  1E1F                     	;# 
   963  1E20                     	;# 
   964  1E21                     	;# 
   965  1E22                     	;# 
   966  1E23                     	;# 
   967  1E24                     	;# 
   968  1E25                     	;# 
   969  1E26                     	;# 
   970  1E27                     	;# 
   971  1E28                     	;# 
   972  1E29                     	;# 
   973  1E2A                     	;# 
   974  1E2B                     	;# 
   975  1E2C                     	;# 
   976  1E2D                     	;# 
   977  1E2E                     	;# 
   978  1E2F                     	;# 
   979  1E30                     	;# 
   980  1E31                     	;# 
   981  1E32                     	;# 
   982  1E33                     	;# 
   983  1E34                     	;# 
   984  1E35                     	;# 
   985  1E36                     	;# 
   986  1E37                     	;# 
   987  1E8F                     	;# 
   988  1E90                     	;# 
   989  1E91                     	;# 
   990  1E92                     	;# 
   991  1E93                     	;# 
   992  1E9C                     	;# 
   993  1EA1                     	;# 
   994  1EA2                     	;# 
   995  1EB1                     	;# 
   996  1EBB                     	;# 
   997  1EBC                     	;# 
   998  1EBD                     	;# 
   999  1EBE                     	;# 
  1000  1EC3                     	;# 
  1001  1EC5                     	;# 
  1002  1EC6                     	;# 
  1003  1EC7                     	;# 
  1004  1ECB                     	;# 
  1005  1ECC                     	;# 
  1006  1ECD                     	;# 
  1007  1ECE                     	;# 
  1008  1F10                     	;# 
  1009  1F11                     	;# 
  1010  1F12                     	;# 
  1011  1F13                     	;# 
  1012  1F14                     	;# 
  1013  1F15                     	;# 
  1014  1F1C                     	;# 
  1015  1F1D                     	;# 
  1016  1F1E                     	;# 
  1017  1F1F                     	;# 
  1018  1F20                     	;# 
  1019  1F21                     	;# 
  1020  1F22                     	;# 
  1021  1F23                     	;# 
  1022  1F24                     	;# 
  1023  1F25                     	;# 
  1024  1F26                     	;# 
  1025  1F27                     	;# 
  1026  1F38                     	;# 
  1027  1F39                     	;# 
  1028  1F3A                     	;# 
  1029  1F3B                     	;# 
  1030  1F3C                     	;# 
  1031  1F3D                     	;# 
  1032  1F3E                     	;# 
  1033  1F3F                     	;# 
  1034  1F43                     	;# 
  1035  1F44                     	;# 
  1036  1F45                     	;# 
  1037  1F46                     	;# 
  1038  1F47                     	;# 
  1039  1F48                     	;# 
  1040  1F49                     	;# 
  1041  1F4A                     	;# 
  1042  1F4E                     	;# 
  1043  1F4F                     	;# 
  1044  1F50                     	;# 
  1045  1F51                     	;# 
  1046  1F52                     	;# 
  1047  1F53                     	;# 
  1048  1F54                     	;# 
  1049  1F55                     	;# 
  1050  1FE4                     	;# 
  1051  1FE5                     	;# 
  1052  1FE6                     	;# 
  1053  1FE7                     	;# 
  1054  1FE8                     	;# 
  1055  1FE8                     	;# 
  1056  1FE9                     	;# 
  1057  1FEA                     	;# 
  1058  1FEA                     	;# 
  1059  1FEB                     	;# 
  1060  1FED                     	;# 
  1061  1FEE                     	;# 
  1062  1FEF                     	;# 
  1063  0013                     _TRISB	set	19
  1064  000B                     _INTCONbits	set	11
  1065  0012                     _TRISA	set	18
  1066  0014                     _TRISC	set	20
  1067  005E                     _PEIE	set	94
  1068  009B                     _ADRESL	set	155
  1069  009C                     _ADRESH	set	156
  1070  009D                     _ADCON0bits	set	157
  1071  009E                     _ADCON1	set	158
  1072  009D                     _ADCON0	set	157
  1073  0119                     _RC1REG	set	281
  1074  011E                     _TX1STAbits	set	286
  1075  011A                     _TXREG	set	282
  1076  011D                     _RCSTAbits	set	285
  1077  011E                     _TXSTA	set	286
  1078  011F                     _BAUD1CON	set	287
  1079  011D                     _RC1STA	set	285
  1080  011E                     _TX1STA	set	286
  1081  011B                     _SPBRG	set	283
  1082  0717                     _PIE1bits	set	1815
  1083  070F                     _PIR3bits	set	1807
  1084  070D                     _PIR1bits	set	1805
  1085  38CD                     _RC1IE	set	14541
  1086  1ECB                     _RX1DTPPS	set	7883
  1087  1F25                     _RC5PPS	set	7973
  1088  1F4E                     _ANSELC	set	8014
  1089  1F43                     _ANSELB	set	8003
  1090  1F38                     _ANSELA	set	7992
  1091                           
  1092                           	psect	stringtext1
  1093  1800                     __pstringtext1:	
  1094  1800                     STR_1:	
  1095  1800  3425               	retlw	37	;'%'
  1096  1801  3466               	retlw	102	;'f'
  1097  1802  3420               	retlw	32	;' '
  1098  1803  340A               	retlw	10
  1099  1804  340D               	retlw	13
  1100  1805  3420               	retlw	32	;' '
  1101  1806  3400               	retlw	0
  1102                           
  1103                           	psect	stringtext2
  1104  1807                     __pstringtext2:	
  1105  1807                     STR_3:	
  1106  1807  3449               	retlw	73	;'I'
  1107  1808  344E               	retlw	78	;'N'
  1108  1809  3446               	retlw	70	;'F'
  1109  180A  3400               	retlw	0
  1110                           
  1111                           	psect	stringtext3
  1112  180B                     __pstringtext3:	
  1113  180B                     STR_7:	
  1114  180B  344E               	retlw	78	;'N'
  1115  180C  3441               	retlw	65	;'A'
  1116  180D  344E               	retlw	78	;'N'
  1117  180E  3400               	retlw	0
  1118                           
  1119                           	psect	stringtext4
  1120  180F                     __pstringtext4:	
  1121  180F                     STR_4:	
  1122  180F  3469               	retlw	105	;'i'
  1123  1810  346E               	retlw	110	;'n'
  1124  1811  3466               	retlw	102	;'f'
  1125  1812  3400               	retlw	0
  1126                           
  1127                           	psect	stringtext5
  1128  1813                     __pstringtext5:	
  1129  1813                     STR_8:	
  1130  1813  346E               	retlw	110	;'n'
  1131  1814  3461               	retlw	97	;'a'
  1132  1815  346E               	retlw	110	;'n'
  1133  1816  3400               	retlw	0
  1134                           
  1135                           	psect	stringtext6
  1136  1817                     __pstringtext6:	
  1137  1817                     STR_11:	
  1138  1817  346C               	retlw	108	;'l'
  1139  1818  3466               	retlw	102	;'f'
  1140  1819  3400               	retlw	0
  1141                           
  1142                           	psect	stringtext7
  1143  181A                     __pstringtext7:	
  1144  181A                     STR_2:	
  1145  181A  3443               	retlw	67	;'C'
  1146  181B  3431               	retlw	49	;'1'
  1147  181C  3400               	retlw	0
  1148                           
  1149                           	psect	stringtext8
  1150  0000                     __pstringtext8:	
  1151  1817                     
  1152                           ; #config settings
  1153  0000                     
  1154                           	psect	cinit
  1155  0064                     start_initialization:	
  1156  0064                     __initialization:	
  1157                           
  1158                           ; Clear objects allocated to BANK1
  1159  0064  30E7               	movlw	low __pbssBANK1
  1160  0065  0084               	movwf	4
  1161  0066  3000               	movlw	high __pbssBANK1
  1162  0067  0085               	movwf	5
  1163  0068  3008               	movlw	8
  1164  0069  3192  22AC  3180   	fcall	clear_ram0
  1165                           
  1166                           ; Clear objects allocated to BANK2
  1167  006C  3045               	movlw	low __pbssBANK2
  1168  006D  0084               	movwf	4
  1169  006E  3001               	movlw	high __pbssBANK2
  1170  006F  0085               	movwf	5
  1171  0070  3008               	movlw	8
  1172  0071  3192  22AC  3180   	fcall	clear_ram0
  1173                           
  1174                           ; Clear objects allocated to BANK3
  1175  0074  30A0               	movlw	low __pbssBANK3
  1176  0075  0084               	movwf	4
  1177  0076  3001               	movlw	high __pbssBANK3
  1178  0077  0085               	movwf	5
  1179  0078  3050               	movlw	80
  1180  0079  3192  22AC         	fcall	clear_ram0
  1181  007B                     end_of_initialization:	
  1182                           ;End of C runtime variable initialization code
  1183                           
  1184  007B                     __end_of__initialization:	
  1185  007B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1186  007C  0140               	movlb	0
  1187  007D  3192  2AFE         	ljmp	_main	;jump to C main() function
  1188                           
  1189                           	psect	bssBANK1
  1190  00E7                     __pbssBANK1:	
  1191  00E7                     _nout:	
  1192  00E7                     	ds	2
  1193  00E9                     _width:	
  1194  00E9                     	ds	2
  1195  00EB                     _prec:	
  1196  00EB                     	ds	2
  1197  00ED                     _flags:	
  1198  00ED                     	ds	2
  1199                           
  1200                           	psect	bssBANK2
  1201  0145                     __pbssBANK2:	
  1202  0145                     floorf@F524:	
  1203  0145                     	ds	4
  1204  0149                     ___fpclassifyf@F463:	
  1205  0149                     	ds	4
  1206                           
  1207                           	psect	bssBANK3
  1208  01A0                     __pbssBANK3:	
  1209  01A0                     _dbuf:	
  1210  01A0                     	ds	80
  1211                           
  1212                           	psect	clrtext
  1213  12AC                     clear_ram0:	
  1214                           ;	Called with FSR0 containing the base address, and
  1215                           ;	WREG with the size to clear
  1216                           
  1217  12AC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1218  12AD                     clrloop0:	
  1219  12AD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1220  12AE  3101               	addfsr 0,1
  1221  12AF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1222  12B0  2AAD               	goto	clrloop0	;have we reached the end yet?
  1223  12B1  3400               	retlw	0	;all done for this memory range, return
  1224                           
  1225                           	psect	cstackBANK2
  1226  0120                     __pcstackBANK2:	
  1227  0120                     ?_ADC_init:	
  1228  0120                     ?___aldiv:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0120                     ADC_init@pin:	
  1232                           ; 4 bytes @ 0x0
  1233                           
  1234  0120                     ___aldiv@divisor:	
  1235                           ; 2 bytes @ 0x0
  1236                           
  1237                           
  1238                           ; 4 bytes @ 0x0
  1239  0120                     	ds	2
  1240  0122                     ??_ADC_init:	
  1241                           
  1242                           ; 1 bytes @ 0x2
  1243  0122                     	ds	2
  1244  0124                     ADC_init@block:	
  1245  0124                     ___aldiv@dividend:	
  1246                           ; 1 bytes @ 0x4
  1247                           
  1248                           
  1249                           ; 4 bytes @ 0x4
  1250  0124                     	ds	1
  1251  0125                     ADC_init@chan:	
  1252                           
  1253                           ; 1 bytes @ 0x5
  1254  0125                     	ds	1
  1255  0126                     ADC_init@pinNum:	
  1256                           
  1257                           ; 2 bytes @ 0x6
  1258  0126                     	ds	2
  1259  0128                     ??___aldiv:	
  1260                           
  1261                           ; 1 bytes @ 0x8
  1262  0128                     	ds	1
  1263  0129                     ___aldiv@counter:	
  1264                           
  1265                           ; 1 bytes @ 0x9
  1266  0129                     	ds	1
  1267  012A                     ___aldiv@sign:	
  1268                           
  1269                           ; 1 bytes @ 0xA
  1270  012A                     	ds	1
  1271  012B                     ___aldiv@quotient:	
  1272                           
  1273                           ; 4 bytes @ 0xB
  1274  012B                     	ds	4
  1275  012F                     ?_init_UART:	
  1276  012F                     init_UART@baud_rate:	
  1277                           ; 1 bytes @ 0xF
  1278                           
  1279                           
  1280                           ; 4 bytes @ 0xF
  1281  012F                     	ds	4
  1282  0133                     ??_init_UART:	
  1283                           
  1284                           ; 1 bytes @ 0x13
  1285  0133                     	ds	16
  1286  0143                     init_UART@spbrgVal:	
  1287                           
  1288                           ; 2 bytes @ 0x23
  1289  0143                     	ds	2
  1290  0145                     ??_main:	
  1291                           
  1292                           	psect	cstackBANK1
  1293  00A0                     __pcstackBANK1:	
  1294                           ; 1 bytes @ 0x25
  1295                           
  1296  00A0                     efgtoa@ou:	
  1297                           
  1298                           ; 4 bytes @ 0x0
  1299  00A0                     	ds	4
  1300  00A4                     _efgtoa$416:	
  1301                           
  1302                           ; 2 bytes @ 0x4
  1303  00A4                     	ds	2
  1304  00A6                     _efgtoa$417:	
  1305                           
  1306                           ; 2 bytes @ 0x6
  1307  00A6                     	ds	2
  1308  00A8                     _efgtoa$422:	
  1309                           
  1310                           ; 2 bytes @ 0x8
  1311  00A8                     	ds	2
  1312  00AA                     _efgtoa$426:	
  1313                           
  1314                           ; 2 bytes @ 0xA
  1315  00AA                     	ds	2
  1316  00AC                     _efgtoa$427:	
  1317                           
  1318                           ; 2 bytes @ 0xC
  1319  00AC                     	ds	2
  1320  00AE                     _efgtoa$428:	
  1321                           
  1322                           ; 2 bytes @ 0xE
  1323  00AE                     	ds	2
  1324  00B0                     efgtoa@t:	
  1325                           
  1326                           ; 2 bytes @ 0x10
  1327  00B0                     	ds	2
  1328  00B2                     efgtoa@pp:	
  1329                           
  1330                           ; 2 bytes @ 0x12
  1331  00B2                     	ds	2
  1332  00B4                     efgtoa@m:	
  1333                           
  1334                           ; 2 bytes @ 0x14
  1335  00B4                     	ds	2
  1336  00B6                     efgtoa@ne:	
  1337                           
  1338                           ; 2 bytes @ 0x16
  1339  00B6                     	ds	2
  1340  00B8                     efgtoa@d:	
  1341                           
  1342                           ; 2 bytes @ 0x18
  1343  00B8                     	ds	2
  1344  00BA                     efgtoa@sign:	
  1345                           
  1346                           ; 2 bytes @ 0x1A
  1347  00BA                     	ds	2
  1348  00BC                     efgtoa@p:	
  1349                           
  1350                           ; 2 bytes @ 0x1C
  1351  00BC                     	ds	2
  1352  00BE                     efgtoa@fp:	
  1353                           
  1354                           ; 1 bytes @ 0x1E
  1355  00BE                     	ds	1
  1356  00BF                     efgtoa@nmode:	
  1357                           
  1358                           ; 1 bytes @ 0x1F
  1359  00BF                     	ds	1
  1360  00C0                     efgtoa@w:	
  1361                           
  1362                           ; 2 bytes @ 0x20
  1363  00C0                     	ds	2
  1364  00C2                     efgtoa@mode:	
  1365                           
  1366                           ; 1 bytes @ 0x22
  1367  00C2                     	ds	1
  1368  00C3                     efgtoa@h:	
  1369                           
  1370                           ; 4 bytes @ 0x23
  1371  00C3                     	ds	4
  1372  00C7                     efgtoa@l:	
  1373                           
  1374                           ; 4 bytes @ 0x27
  1375  00C7                     	ds	4
  1376  00CB                     efgtoa@i:	
  1377                           
  1378                           ; 2 bytes @ 0x2B
  1379  00CB                     	ds	2
  1380  00CD                     efgtoa@g:	
  1381                           
  1382                           ; 4 bytes @ 0x2D
  1383  00CD                     	ds	4
  1384  00D1                     efgtoa@e:	
  1385                           
  1386                           ; 2 bytes @ 0x31
  1387  00D1                     	ds	2
  1388  00D3                     efgtoa@n:	
  1389                           
  1390                           ; 2 bytes @ 0x33
  1391  00D3                     	ds	2
  1392  00D5                     efgtoa@u:	
  1393                           
  1394                           ; 4 bytes @ 0x35
  1395  00D5                     	ds	4
  1396  00D9                     ?_printf:	
  1397  00D9                     printf@fmt:	
  1398                           ; 2 bytes @ 0x39
  1399                           
  1400                           
  1401                           ; 2 bytes @ 0x39
  1402  00D9                     	ds	6
  1403  00DF                     ??_ISR:	
  1404                           
  1405                           ; 1 bytes @ 0x3F
  1406  00DF                     	ds	2
  1407  00E1                     ISR@decimalADC:	
  1408                           
  1409                           ; 4 bytes @ 0x41
  1410  00E1                     	ds	4
  1411  00E5                     ISR@adc_out:	
  1412                           
  1413                           ; 2 bytes @ 0x45
  1414  00E5                     	ds	2
  1415                           
  1416                           	psect	cstackCOMMON
  1417  0070                     __pcstackCOMMON:	
  1418  0070                     ?___fleq:	
  1419  0070                     ?_readSerial:	
  1420                           ; 1 bit 
  1421                           
  1422  0070                     ??_readSerial:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     ?_strcpy:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     ?_ISR:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0070                     ?_main:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  0070                     ?_putch:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437  0070                     ??_putch:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0070                     ?_ADC_read:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443  0070                     ?_strlen:	
  1444                           ; 2 bytes @ 0x0
  1445                           
  1446  0070                     ?___fpclassifyf:	
  1447                           ; 2 bytes @ 0x0
  1448                           
  1449  0070                     ?_isupper:	
  1450                           ; 2 bytes @ 0x0
  1451                           
  1452  0070                     ?_strncmp:	
  1453                           ; 2 bytes @ 0x0
  1454                           
  1455  0070                     ?__Umul8_16:	
  1456                           ; 2 bytes @ 0x0
  1457                           
  1458  0070                     ?___awdiv:	
  1459                           ; 2 bytes @ 0x0
  1460                           
  1461  0070                     ?___awmod:	
  1462                           ; 2 bytes @ 0x0
  1463                           
  1464  0070                     ?___flneg:	
  1465                           ; 2 bytes @ 0x0
  1466                           
  1467  0070                     ?___fltol:	
  1468                           ; 4 bytes @ 0x0
  1469                           
  1470  0070                     ?___fladd:	
  1471                           ; 4 bytes @ 0x0
  1472                           
  1473  0070                     ?___fldiv:	
  1474                           ; 4 bytes @ 0x0
  1475                           
  1476  0070                     ?___xxtofl:	
  1477                           ; 4 bytes @ 0x0
  1478                           
  1479  0070                     putch@byte:	
  1480                           ; 4 bytes @ 0x0
  1481                           
  1482  0070                     __Umul8_16@multiplicand:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ___awdiv@divisor:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ___awmod@divisor:	
  1489                           ; 2 bytes @ 0x0
  1490                           
  1491  0070                     isupper@c:	
  1492                           ; 2 bytes @ 0x0
  1493                           
  1494  0070                     strcpy@src:	
  1495                           ; 2 bytes @ 0x0
  1496                           
  1497  0070                     strncmp@_r:	
  1498                           ; 2 bytes @ 0x0
  1499                           
  1500  0070                     ___fleq@ff1:	
  1501                           ; 2 bytes @ 0x0
  1502                           
  1503  0070                     ___flneg@f1:	
  1504                           ; 4 bytes @ 0x0
  1505                           
  1506  0070                     ___fltol@f1:	
  1507                           ; 4 bytes @ 0x0
  1508                           
  1509  0070                     ___fladd@b:	
  1510                           ; 4 bytes @ 0x0
  1511                           
  1512  0070                     ___fldiv@a:	
  1513                           ; 4 bytes @ 0x0
  1514                           
  1515  0070                     ___xxtofl@val:	
  1516                           ; 4 bytes @ 0x0
  1517                           
  1518  0070                     ___fpclassifyf@x:	
  1519                           ; 4 bytes @ 0x0
  1520                           
  1521                           
  1522                           ; 4 bytes @ 0x0
  1523  0070                     	ds	1
  1524  0071                     ?_fputc:	
  1525  0071                     fputc@c:	
  1526                           ; 2 bytes @ 0x1
  1527                           
  1528                           
  1529                           ; 2 bytes @ 0x1
  1530  0071                     	ds	1
  1531  0072                     ??_ADC_read:	
  1532  0072                     ??_strlen:	
  1533                           ; 1 bytes @ 0x2
  1534                           
  1535  0072                     ??_isupper:	
  1536                           ; 1 bytes @ 0x2
  1537                           
  1538  0072                     ??_strcpy:	
  1539                           ; 1 bytes @ 0x2
  1540                           
  1541  0072                     ??__Umul8_16:	
  1542                           ; 1 bytes @ 0x2
  1543                           
  1544  0072                     ___awdiv@dividend:	
  1545                           ; 1 bytes @ 0x2
  1546                           
  1547  0072                     ___awmod@dividend:	
  1548                           ; 2 bytes @ 0x2
  1549                           
  1550  0072                     strncmp@n:	
  1551                           ; 2 bytes @ 0x2
  1552                           
  1553                           
  1554                           ; 2 bytes @ 0x2
  1555  0072                     	ds	1
  1556  0073                     fputc@fp:	
  1557  0073                     strlen@a:	
  1558                           ; 1 bytes @ 0x3
  1559                           
  1560                           
  1561                           ; 1 bytes @ 0x3
  1562  0073                     	ds	1
  1563  0074                     ??_fputc:	
  1564  0074                     ??___fpclassifyf:	
  1565                           ; 1 bytes @ 0x4
  1566                           
  1567  0074                     ??_strncmp:	
  1568                           ; 1 bytes @ 0x4
  1569                           
  1570  0074                     ??___awdiv:	
  1571                           ; 1 bytes @ 0x4
  1572                           
  1573  0074                     ??___awmod:	
  1574                           ; 1 bytes @ 0x4
  1575                           
  1576  0074                     ??___flneg:	
  1577                           ; 1 bytes @ 0x4
  1578                           
  1579  0074                     ??___fltol:	
  1580                           ; 1 bytes @ 0x4
  1581                           
  1582  0074                     ??___xxtofl:	
  1583                           ; 1 bytes @ 0x4
  1584                           
  1585  0074                     strlen@s:	
  1586                           ; 1 bytes @ 0x4
  1587                           
  1588  0074                     strcpy@s:	
  1589                           ; 1 bytes @ 0x4
  1590                           
  1591  0074                     __Umul8_16@product:	
  1592                           ; 2 bytes @ 0x4
  1593                           
  1594  0074                     ___fleq@ff2:	
  1595                           ; 2 bytes @ 0x4
  1596                           
  1597  0074                     ___fladd@a:	
  1598                           ; 4 bytes @ 0x4
  1599                           
  1600  0074                     ___fldiv@b:	
  1601                           ; 4 bytes @ 0x4
  1602                           
  1603                           
  1604                           ; 4 bytes @ 0x4
  1605  0074                     	ds	1
  1606  0075                     ___awdiv@counter:	
  1607  0075                     ___awmod@counter:	
  1608                           ; 1 bytes @ 0x5
  1609                           
  1610  0075                     strncmp@_l:	
  1611                           ; 1 bytes @ 0x5
  1612                           
  1613                           
  1614                           ; 1 bytes @ 0x5
  1615  0075                     	ds	1
  1616  0076                     ?_tolower:	
  1617  0076                     ___awdiv@sign:	
  1618                           ; 2 bytes @ 0x6
  1619                           
  1620  0076                     ___awmod@sign:	
  1621                           ; 1 bytes @ 0x6
  1622                           
  1623  0076                     strcpy@d:	
  1624                           ; 1 bytes @ 0x6
  1625                           
  1626  0076                     strncmp@r:	
  1627                           ; 1 bytes @ 0x6
  1628                           
  1629  0076                     tolower@c:	
  1630                           ; 2 bytes @ 0x6
  1631                           
  1632  0076                     __Umul8_16@word_mpld:	
  1633                           ; 2 bytes @ 0x6
  1634                           
  1635                           
  1636                           ; 2 bytes @ 0x6
  1637  0076                     	ds	1
  1638  0077                     strcpy@dest:	
  1639  0077                     ___awdiv@quotient:	
  1640                           ; 1 bytes @ 0x7
  1641                           
  1642                           
  1643                           ; 2 bytes @ 0x7
  1644  0077                     	ds	1
  1645  0078                     ??_tolower:	
  1646  0078                     ??___fleq:	
  1647                           ; 1 bytes @ 0x8
  1648                           
  1649  0078                     ??___fldiv:	
  1650                           ; 1 bytes @ 0x8
  1651                           
  1652  0078                     ___fladd@signs:	
  1653                           ; 1 bytes @ 0x8
  1654                           
  1655  0078                     ___xxtofl@sign:	
  1656                           ; 1 bytes @ 0x8
  1657                           
  1658  0078                     strncmp@l:	
  1659                           ; 1 bytes @ 0x8
  1660                           
  1661  0078                     __Umul8_16@multiplier:	
  1662                           ; 1 bytes @ 0x8
  1663                           
  1664                           
  1665                           ; 1 bytes @ 0x8
  1666  0078                     	ds	1
  1667  0079                     ?_fputs:	
  1668  0079                     ___fltol@sign1:	
  1669                           ; 2 bytes @ 0x9
  1670                           
  1671  0079                     ___fladd@aexp:	
  1672                           ; 1 bytes @ 0x9
  1673                           
  1674  0079                     ___xxtofl@exp:	
  1675                           ; 1 bytes @ 0x9
  1676                           
  1677  0079                     fputs@fp:	
  1678                           ; 1 bytes @ 0x9
  1679                           
  1680                           
  1681                           ; 1 bytes @ 0x9
  1682  0079                     	ds	1
  1683  007A                     ??_fputs:	
  1684  007A                     ___fltol@exp1:	
  1685                           ; 1 bytes @ 0xA
  1686                           
  1687  007A                     ___fladd@bexp:	
  1688                           ; 1 bytes @ 0xA
  1689                           
  1690  007A                     ___xxtofl@arg:	
  1691                           ; 1 bytes @ 0xA
  1692                           
  1693                           
  1694                           ; 4 bytes @ 0xA
  1695  007A                     	ds	1
  1696  007B                     ___fladd@grs:	
  1697                           
  1698                           ; 1 bytes @ 0xB
  1699  007B                     	ds	1
  1700  007C                     _tolower$827:	
  1701                           
  1702                           ; 2 bytes @ 0xC
  1703  007C                     	ds	1
  1704  007D                     ??_pad:	
  1705                           
  1706                           ; 1 bytes @ 0xD
  1707  007D                     	ds	1
  1708  007E                     ??___flsub:	
  1709                           
  1710                           	psect	cstackBANK0
  1711  0020                     __pcstackBANK0:	
  1712                           ; 1 bytes @ 0xE
  1713                           
  1714  0020                     ??___fladd:	
  1715  0020                     ?___flmul:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0020                     fputs@c:	
  1719                           ; 4 bytes @ 0x0
  1720                           
  1721  0020                     ___fpclassifyf@e:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0020                     ___fldiv@rem:	
  1725                           ; 2 bytes @ 0x0
  1726                           
  1727  0020                     ___flmul@b:	
  1728                           ; 4 bytes @ 0x0
  1729                           
  1730                           
  1731                           ; 4 bytes @ 0x0
  1732  0020                     	ds	1
  1733  0021                     fputs@i:	
  1734                           
  1735                           ; 2 bytes @ 0x1
  1736  0021                     	ds	1
  1737  0022                     ___fpclassifyf@u:	
  1738                           
  1739                           ; 4 bytes @ 0x2
  1740  0022                     	ds	1
  1741  0023                     fputs@s:	
  1742                           
  1743                           ; 1 bytes @ 0x3
  1744  0023                     	ds	1
  1745  0024                     ?_pad:	
  1746  0024                     pad@buf:	
  1747                           ; 2 bytes @ 0x4
  1748                           
  1749  0024                     ___fldiv@sign:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752  0024                     ___flmul@a:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755                           
  1756                           ; 4 bytes @ 0x4
  1757  0024                     	ds	1
  1758  0025                     pad@p:	
  1759  0025                     ___fldiv@new_exp:	
  1760                           ; 2 bytes @ 0x5
  1761                           
  1762                           
  1763                           ; 2 bytes @ 0x5
  1764  0025                     	ds	2
  1765  0027                     pad@i:	
  1766  0027                     ___fldiv@grs:	
  1767                           ; 2 bytes @ 0x7
  1768                           
  1769                           
  1770                           ; 4 bytes @ 0x7
  1771  0027                     	ds	1
  1772  0028                     ??___flmul:	
  1773                           
  1774                           ; 1 bytes @ 0x8
  1775  0028                     	ds	1
  1776  0029                     pad@w:	
  1777                           
  1778                           ; 2 bytes @ 0x9
  1779  0029                     	ds	2
  1780  002B                     pad@fp:	
  1781  002B                     ___fldiv@bexp:	
  1782                           ; 1 bytes @ 0xB
  1783                           
  1784                           
  1785                           ; 1 bytes @ 0xB
  1786  002B                     	ds	1
  1787  002C                     ___fldiv@aexp:	
  1788                           
  1789                           ; 1 bytes @ 0xC
  1790  002C                     	ds	1
  1791  002D                     ?_floorf:	
  1792  002D                     ___flmul@sign:	
  1793                           ; 4 bytes @ 0xD
  1794                           
  1795  002D                     floorf@x:	
  1796                           ; 1 bytes @ 0xD
  1797                           
  1798                           
  1799                           ; 4 bytes @ 0xD
  1800  002D                     	ds	1
  1801  002E                     ___flmul@grs:	
  1802                           
  1803                           ; 4 bytes @ 0xE
  1804  002E                     	ds	3
  1805  0031                     ??_floorf:	
  1806                           
  1807                           ; 1 bytes @ 0x11
  1808  0031                     	ds	1
  1809  0032                     ___flmul@aexp:	
  1810                           
  1811                           ; 1 bytes @ 0x12
  1812  0032                     	ds	1
  1813  0033                     ___flmul@bexp:	
  1814                           
  1815                           ; 1 bytes @ 0x13
  1816  0033                     	ds	1
  1817  0034                     ___flmul@prod:	
  1818                           
  1819                           ; 4 bytes @ 0x14
  1820  0034                     	ds	3
  1821  0037                     floorf@m:	
  1822                           
  1823                           ; 4 bytes @ 0x17
  1824  0037                     	ds	1
  1825  0038                     ___flmul@temp:	
  1826                           
  1827                           ; 2 bytes @ 0x18
  1828  0038                     	ds	2
  1829  003A                     ?___flge:	
  1830  003A                     ?___flsub:	
  1831                           ; 1 bit 
  1832                           
  1833  003A                     ___flge@ff1:	
  1834                           ; 4 bytes @ 0x1A
  1835                           
  1836  003A                     ___flsub@a:	
  1837                           ; 4 bytes @ 0x1A
  1838                           
  1839                           
  1840                           ; 4 bytes @ 0x1A
  1841  003A                     	ds	1
  1842  003B                     floorf@e:	
  1843                           
  1844                           ; 2 bytes @ 0x1B
  1845  003B                     	ds	2
  1846  003D                     floorf@u:	
  1847                           
  1848                           ; 4 bytes @ 0x1D
  1849  003D                     	ds	1
  1850  003E                     ___flge@ff2:	
  1851  003E                     ___flsub@b:	
  1852                           ; 4 bytes @ 0x1E
  1853                           
  1854                           
  1855                           ; 4 bytes @ 0x1E
  1856  003E                     	ds	4
  1857  0042                     ??___flge:	
  1858                           
  1859                           ; 1 bytes @ 0x22
  1860  0042                     	ds	4
  1861  0046                     ?_efgtoa:	
  1862  0046                     efgtoa@f:	
  1863                           ; 2 bytes @ 0x26
  1864                           
  1865                           
  1866                           ; 4 bytes @ 0x26
  1867  0046                     	ds	4
  1868  004A                     efgtoa@c:	
  1869                           
  1870                           ; 1 bytes @ 0x2A
  1871  004A                     	ds	1
  1872  004B                     ??_efgtoa:	
  1873                           
  1874                           ; 1 bytes @ 0x2B
  1875  004B                     	ds	4
  1876  004F                     ?_vfpfcnvrt:	
  1877  004F                     vfpfcnvrt@fmt:	
  1878                           ; 2 bytes @ 0x2F
  1879                           
  1880                           
  1881                           ; 1 bytes @ 0x2F
  1882  004F                     	ds	1
  1883  0050                     vfpfcnvrt@ap:	
  1884                           
  1885                           ; 1 bytes @ 0x30
  1886  0050                     	ds	1
  1887  0051                     ??_vfpfcnvrt:	
  1888                           
  1889                           ; 1 bytes @ 0x31
  1890  0051                     	ds	6
  1891  0057                     _vfpfcnvrt$445:	
  1892                           
  1893                           ; 2 bytes @ 0x37
  1894  0057                     	ds	2
  1895  0059                     vfpfcnvrt@vp:	
  1896                           
  1897                           ; 1 bytes @ 0x39
  1898  0059                     	ds	1
  1899  005A                     vfpfcnvrt@f:	
  1900                           
  1901                           ; 4 bytes @ 0x3A
  1902  005A                     	ds	4
  1903  005E                     vfpfcnvrt@ct:	
  1904                           
  1905                           ; 3 bytes @ 0x3E
  1906  005E                     	ds	3
  1907  0061                     vfpfcnvrt@c:	
  1908                           
  1909                           ; 1 bytes @ 0x41
  1910  0061                     	ds	1
  1911  0062                     vfpfcnvrt@fp:	
  1912                           
  1913                           ; 1 bytes @ 0x42
  1914  0062                     	ds	1
  1915  0063                     ?_vfprintf:	
  1916  0063                     vfprintf@fmt:	
  1917                           ; 2 bytes @ 0x43
  1918                           
  1919                           
  1920                           ; 2 bytes @ 0x43
  1921  0063                     	ds	2
  1922  0065                     vfprintf@ap:	
  1923                           
  1924                           ; 1 bytes @ 0x45
  1925  0065                     	ds	1
  1926  0066                     ??_vfprintf:	
  1927                           
  1928                           ; 1 bytes @ 0x46
  1929  0066                     	ds	2
  1930  0068                     vfprintf@fp:	
  1931                           
  1932                           ; 1 bytes @ 0x48
  1933  0068                     	ds	1
  1934  0069                     vfprintf@cfmt:	
  1935                           
  1936                           ; 2 bytes @ 0x49
  1937  0069                     	ds	2
  1938  006B                     ??_printf:	
  1939                           
  1940                           ; 1 bytes @ 0x4B
  1941  006B                     	ds	3
  1942  006E                     printf@ap:	
  1943                           
  1944                           ; 1 bytes @ 0x4E
  1945  006E                     	ds	1
  1946                           
  1947                           	psect	maintext
  1948  12FE                     __pmaintext:	
  1949 ;;
  1950 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1951 ;;
  1952 ;; *************** function _main *****************
  1953 ;; Defined at:
  1954 ;;		line 68 in file "main.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : B3F/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels required when called:   11
  1974 ;; This function calls:
  1975 ;;		_ADC_init
  1976 ;;		_init_UART
  1977 ;; This function is called by:
  1978 ;;		Startup code after reset
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function _main
  1984  12FE                     _main:	
  1985                           
  1986                           ;main.c: 70:     TRISC = 0b00010000;
  1987                           
  1988                           ;incstack = 0
  1989                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1990  12FE  3010               	movlw	16
  1991  12FF  0140               	movlb	0	; select bank0
  1992  1300  0094               	movwf	20	;volatile
  1993                           
  1994                           ;main.c: 71:     TRISA = 0x00;
  1995  1301  0192               	clrf	18	;volatile
  1996                           
  1997                           ;main.c: 73:     init_UART(115200);
  1998  1302  3000               	movlw	0
  1999  1303  0142               	movlb	2	; select bank2
  2000  1304  00B2               	movwf	(init_UART@baud_rate+3)^(0+256)
  2001  1305  3001               	movlw	1
  2002  1306  00B1               	movwf	(init_UART@baud_rate+2)^(0+256)
  2003  1307  30C2               	movlw	194
  2004  1308  00B0               	movwf	(init_UART@baud_rate+1)^(0+256)
  2005  1309  3000               	movlw	0
  2006  130A  00AF               	movwf	init_UART@baud_rate^(0+256)
  2007  130B  3195  259B  3192   	fcall	_init_UART
  2008                           
  2009                           ;main.c: 75:     ADC_init("C1");
  2010  130E  301A               	movlw	low (STR_2| (0+32768))
  2011  130F  0142               	movlb	2	; select bank2
  2012  1310  00A0               	movwf	ADC_init@pin^(0+256)
  2013  1311  3098               	movlw	high (STR_2| (0+32768))
  2014  1312  00A1               	movwf	(ADC_init@pin^(0+256)+1)
  2015  1313  3188  200D  3192   	fcall	_ADC_init
  2016  1316                     l30:	
  2017                           ;main.c: 77:     while(1){ }
  2018                           
  2019  1316  2B16               	goto	l30
  2020  1317                     __end_of_main:	
  2021                           
  2022                           	psect	text1
  2023  159B                     __ptext1:	
  2024 ;; *************** function _init_UART *****************
  2025 ;; Defined at:
  2026 ;;		line 5 in file "UART_funcs.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  baud_rate       4   15[BANK2 ] long 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  clock           4    0        long 
  2031 ;;  spbrgVal        2   35[BANK2 ] unsigned int 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0, pclath, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2041 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2042 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  2043 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  2044 ;;      Totals:         0       0       0      22       0       0       0       0       0       0       0       0       
      +0       0
  2045 ;;Total ram usage:       22 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:   10
  2048 ;; This function calls:
  2049 ;;		___aldiv
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _init_UART
  2057  159B                     _init_UART:	
  2058                           
  2059                           ;UART_funcs.c: 7:     ANSELC = 0x00;
  2060                           
  2061                           ;incstack = 0
  2062                           ; Regs used in _init_UART: [wreg+status,2+status,0+pclath+cstack]
  2063  159B  017E               	movlb	62	; select bank62
  2064  159C  01CE               	clrf	78	;volatile
  2065                           
  2066                           ;UART_funcs.c: 10:     RX1DTPPS = 0x14;
  2067  159D  3014               	movlw	20
  2068  159E  017D               	movlb	61	; select bank61
  2069  159F  00CB               	movwf	75	;volatile
  2070                           
  2071                           ;UART_funcs.c: 11:     RC5PPS = 0x0F;
  2072  15A0  300F               	movlw	15
  2073  15A1  017E               	movlb	62	; select bank62
  2074  15A2  00A5               	movwf	37	;volatile
  2075                           
  2076                           ;UART_funcs.c: 14:     unsigned int spbrgVal = (clock - baud_rate * 16) / (baud_rate * 1
      +                          6);
  2077  15A3  0142               	movlb	2	; select bank2
  2078  15A4  082F               	movf	init_UART@baud_rate^(0+256),w
  2079  15A5  00B3               	movwf	??_init_UART^(0+256)
  2080  15A6  0830               	movf	(init_UART@baud_rate+1)^(0+256),w
  2081  15A7  00B4               	movwf	(??_init_UART^(0+256)+1)
  2082  15A8  0831               	movf	(init_UART@baud_rate+2)^(0+256),w
  2083  15A9  00B5               	movwf	(??_init_UART^(0+256)+2)
  2084  15AA  0832               	movf	(init_UART@baud_rate+3)^(0+256),w
  2085  15AB  00B6               	movwf	(??_init_UART^(0+256)+3)
  2086  15AC  3004               	movlw	4
  2087  15AD                     u5345:	
  2088  15AD  35B3               	lslf	??_init_UART^(0+256),f
  2089  15AE  0DB4               	rlf	(??_init_UART^(0+256)+1),f
  2090  15AF  0DB5               	rlf	(??_init_UART^(0+256)+2),f
  2091  15B0  0DB6               	rlf	(??_init_UART^(0+256)+3),f
  2092  15B1  0B89               	decfsz	9,f
  2093  15B2  2DAD               	goto	u5345
  2094  15B3  0836               	movf	(??_init_UART+3)^(0+256),w
  2095  15B4  00A3               	movwf	(___aldiv@divisor+3)^(0+256)
  2096  15B5  0835               	movf	(??_init_UART+2)^(0+256),w
  2097  15B6  00A2               	movwf	(___aldiv@divisor+2)^(0+256)
  2098  15B7  0834               	movf	(??_init_UART+1)^(0+256),w
  2099  15B8  00A1               	movwf	(___aldiv@divisor+1)^(0+256)
  2100  15B9  0833               	movf	??_init_UART^(0+256),w
  2101  15BA  00A0               	movwf	___aldiv@divisor^(0+256)
  2102  15BB  082F               	movf	init_UART@baud_rate^(0+256),w
  2103  15BC  00B7               	movwf	(??_init_UART+4)^(0+256)
  2104  15BD  0830               	movf	(init_UART@baud_rate+1)^(0+256),w
  2105  15BE  00B8               	movwf	((??_init_UART+4)^(0+256)+1)
  2106  15BF  0831               	movf	(init_UART@baud_rate+2)^(0+256),w
  2107  15C0  00B9               	movwf	((??_init_UART+4)^(0+256)+2)
  2108  15C1  0832               	movf	(init_UART@baud_rate+3)^(0+256),w
  2109  15C2  00BA               	movwf	((??_init_UART+4)^(0+256)+3)
  2110  15C3  3004               	movlw	4
  2111  15C4                     u5355:	
  2112  15C4  35B7               	lslf	(??_init_UART+4)^(0+256),f
  2113  15C5  0DB8               	rlf	((??_init_UART+4)^(0+256)+1),f
  2114  15C6  0DB9               	rlf	((??_init_UART+4)^(0+256)+2),f
  2115  15C7  0DBA               	rlf	((??_init_UART+4)^(0+256)+3),f
  2116  15C8  0B89               	decfsz	9,f
  2117  15C9  2DC4               	goto	u5355
  2118  15CA  3000               	movlw	0
  2119  15CB  00BB               	movwf	(??_init_UART+8)^(0+256)
  2120  15CC  3048               	movlw	72
  2121  15CD  00BC               	movwf	((??_init_UART+8)^(0+256)+1)
  2122  15CE  30E8               	movlw	232
  2123  15CF  00BD               	movwf	((??_init_UART+8)^(0+256)+2)
  2124  15D0  3001               	movlw	1
  2125  15D1  00BE               	movwf	((??_init_UART+8)^(0+256)+3)
  2126  15D2  0837               	movf	(??_init_UART+4)^(0+256),w
  2127  15D3  02BB               	subwf	(??_init_UART+8)^(0+256),f
  2128  15D4  0838               	movf	(??_init_UART+5)^(0+256),w
  2129  15D5  3BBC               	subwfb	((??_init_UART+8)^(0+256)+1),f
  2130  15D6  0839               	movf	(??_init_UART+6)^(0+256),w
  2131  15D7  3BBD               	subwfb	((??_init_UART+8)^(0+256)+2),f
  2132  15D8  083A               	movf	(??_init_UART+7)^(0+256),w
  2133  15D9  3BBE               	subwfb	((??_init_UART+8)^(0+256)+3),f
  2134  15DA  083E               	movf	(??_init_UART+11)^(0+256),w
  2135  15DB  00A7               	movwf	(___aldiv@dividend+3)^(0+256)
  2136  15DC  083D               	movf	(??_init_UART+10)^(0+256),w
  2137  15DD  00A6               	movwf	(___aldiv@dividend+2)^(0+256)
  2138  15DE  083C               	movf	(??_init_UART+9)^(0+256),w
  2139  15DF  00A5               	movwf	(___aldiv@dividend+1)^(0+256)
  2140  15E0  083B               	movf	(??_init_UART+8)^(0+256),w
  2141  15E1  00A4               	movwf	___aldiv@dividend^(0+256)
  2142  15E2  3196  26E9         	fcall	___aldiv
  2143  15E4  0142               	movlb	2	; select bank2
  2144  15E5  0821               	movf	(?___aldiv+1)^(0+256),w
  2145  15E6  00C4               	movwf	(init_UART@spbrgVal+1)^(0+256)
  2146  15E7  0820               	movf	?___aldiv^(0+256),w
  2147  15E8  00C3               	movwf	init_UART@spbrgVal^(0+256)
  2148                           
  2149                           ;UART_funcs.c: 15:     SPBRG = spbrgVal;
  2150  15E9  0843               	movf	init_UART@spbrgVal^(0+256),w
  2151  15EA  009B               	movwf	27	;volatile
  2152                           
  2153                           ;UART_funcs.c: 18:     PEIE = 1;
  2154  15EB  170B               	bsf	11,6	;volatile
  2155                           
  2156                           ;UART_funcs.c: 19:     INTCONbits.GIE =1;
  2157  15EC  178B               	bsf	11,7	;volatile
  2158                           
  2159                           ;UART_funcs.c: 22:     TX1STA = 0b10100110;
  2160  15ED  30A6               	movlw	166
  2161  15EE  009E               	movwf	30	;volatile
  2162                           
  2163                           ;UART_funcs.c: 23:     RC1STA = 0b10010000;
  2164  15EF  3090               	movlw	144
  2165  15F0  009D               	movwf	29	;volatile
  2166                           
  2167                           ;UART_funcs.c: 24:     BAUD1CON = 0b00000000;
  2168  15F1  019F               	clrf	31	;volatile
  2169                           
  2170                           ;UART_funcs.c: 26:     RC1IE = 1;
  2171  15F2  014E               	movlb	14	; select bank14
  2172  15F3  1699               	bsf	25,5	;volatile
  2173  15F4  0008               	return
  2174  15F5                     __end_of_init_UART:	
  2175                           
  2176                           	psect	text2
  2177  16E9                     __ptext2:	
  2178 ;; *************** function ___aldiv *****************
  2179 ;; Defined at:
  2180 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aldiv.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  divisor         4    0[BANK2 ] long 
  2183 ;;  dividend        4    4[BANK2 ] long 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  quotient        4   11[BANK2 ] long 
  2186 ;;  sign            1   10[BANK2 ] unsigned char 
  2187 ;;  counter         1    9[BANK2 ] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  4    0[BANK2 ] long 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2197 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  2198 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  2199 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;Total ram usage:       15 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    9
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_init_UART
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function ___aldiv
  2213  16E9                     ___aldiv:	
  2214                           
  2215                           ;incstack = 0
  2216                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2217  16E9  0142               	movlb	2	; select bank2
  2218  16EA  01AA               	clrf	___aldiv@sign^(0+256)
  2219  16EB  1FA3               	btfss	(___aldiv@divisor+3)^(0+256),7
  2220  16EC  2EFA               	goto	l409
  2221  16ED  09A0               	comf	___aldiv@divisor^(0+256),f
  2222  16EE  09A1               	comf	(___aldiv@divisor+1)^(0+256),f
  2223  16EF  09A2               	comf	(___aldiv@divisor+2)^(0+256),f
  2224  16F0  09A3               	comf	(___aldiv@divisor+3)^(0+256),f
  2225  16F1  0AA0               	incf	___aldiv@divisor^(0+256),f
  2226  16F2  1903               	skipnz
  2227  16F3  0AA1               	incf	(___aldiv@divisor+1)^(0+256),f
  2228  16F4  1903               	skipnz
  2229  16F5  0AA2               	incf	(___aldiv@divisor+2)^(0+256),f
  2230  16F6  1903               	skipnz
  2231  16F7  0AA3               	incf	(___aldiv@divisor+3)^(0+256),f
  2232  16F8  01AA               	clrf	___aldiv@sign^(0+256)
  2233  16F9  0AAA               	incf	___aldiv@sign^(0+256),f
  2234  16FA                     l409:	
  2235  16FA  1FA7               	btfss	(___aldiv@dividend+3)^(0+256),7
  2236  16FB  2F0B               	goto	l3499
  2237  16FC  09A4               	comf	___aldiv@dividend^(0+256),f
  2238  16FD  09A5               	comf	(___aldiv@dividend+1)^(0+256),f
  2239  16FE  09A6               	comf	(___aldiv@dividend+2)^(0+256),f
  2240  16FF  09A7               	comf	(___aldiv@dividend+3)^(0+256),f
  2241  1700  0AA4               	incf	___aldiv@dividend^(0+256),f
  2242  1701  1903               	skipnz
  2243  1702  0AA5               	incf	(___aldiv@dividend+1)^(0+256),f
  2244  1703  1903               	skipnz
  2245  1704  0AA6               	incf	(___aldiv@dividend+2)^(0+256),f
  2246  1705  1903               	skipnz
  2247  1706  0AA7               	incf	(___aldiv@dividend+3)^(0+256),f
  2248  1707  3001               	movlw	1
  2249  1708  00A8               	movwf	??___aldiv^(0+256)
  2250  1709  0828               	movf	??___aldiv^(0+256),w
  2251  170A  06AA               	xorwf	___aldiv@sign^(0+256),f
  2252  170B                     l3499:	
  2253  170B  3000               	movlw	0
  2254  170C  00AE               	movwf	(___aldiv@quotient+3)^(0+256)
  2255  170D  3000               	movlw	0
  2256  170E  00AD               	movwf	(___aldiv@quotient+2)^(0+256)
  2257  170F  3000               	movlw	0
  2258  1710  00AC               	movwf	(___aldiv@quotient+1)^(0+256)
  2259  1711  3000               	movlw	0
  2260  1712  00AB               	movwf	___aldiv@quotient^(0+256)
  2261  1713  0823               	movf	(___aldiv@divisor+3)^(0+256),w
  2262  1714  0422               	iorwf	(___aldiv@divisor+2)^(0+256),w
  2263  1715  0421               	iorwf	(___aldiv@divisor+1)^(0+256),w
  2264  1716  0420               	iorwf	___aldiv@divisor^(0+256),w
  2265  1717  1903               	skipnz
  2266  1718  2F54               	goto	l3521
  2267  1719  01A9               	clrf	___aldiv@counter^(0+256)
  2268  171A  0AA9               	incf	___aldiv@counter^(0+256),f
  2269  171B                     l3507:	
  2270  171B  1BA3               	btfsc	(___aldiv@divisor+3)^(0+256),7
  2271  171C  2F29               	goto	l3509
  2272  171D  3001               	movlw	1
  2273  171E                     u5265:	
  2274  171E  35A0               	lslf	___aldiv@divisor^(0+256),f
  2275  171F  0DA1               	rlf	(___aldiv@divisor+1)^(0+256),f
  2276  1720  0DA2               	rlf	(___aldiv@divisor+2)^(0+256),f
  2277  1721  0DA3               	rlf	(___aldiv@divisor+3)^(0+256),f
  2278  1722  0B89               	decfsz	9,f
  2279  1723  2F1E               	goto	u5265
  2280  1724  3001               	movlw	1
  2281  1725  00A8               	movwf	??___aldiv^(0+256)
  2282  1726  0828               	movf	??___aldiv^(0+256),w
  2283  1727  07A9               	addwf	___aldiv@counter^(0+256),f
  2284  1728  2F1B               	goto	l3507
  2285  1729                     l3509:	
  2286  1729  3001               	movlw	1
  2287  172A                     u5285:	
  2288  172A  35AB               	lslf	___aldiv@quotient^(0+256),f
  2289  172B  0DAC               	rlf	(___aldiv@quotient+1)^(0+256),f
  2290  172C  0DAD               	rlf	(___aldiv@quotient+2)^(0+256),f
  2291  172D  0DAE               	rlf	(___aldiv@quotient+3)^(0+256),f
  2292  172E  0B89               	decfsz	9,f
  2293  172F  2F2A               	goto	u5285
  2294  1730  0823               	movf	(___aldiv@divisor+3)^(0+256),w
  2295  1731  0227               	subwf	(___aldiv@dividend+3)^(0+256),w
  2296  1732  1D03               	skipz
  2297  1733  2F3E               	goto	u5295
  2298  1734  0822               	movf	(___aldiv@divisor+2)^(0+256),w
  2299  1735  0226               	subwf	(___aldiv@dividend+2)^(0+256),w
  2300  1736  1D03               	skipz
  2301  1737  2F3E               	goto	u5295
  2302  1738  0821               	movf	(___aldiv@divisor+1)^(0+256),w
  2303  1739  0225               	subwf	(___aldiv@dividend+1)^(0+256),w
  2304  173A  1D03               	skipz
  2305  173B  2F3E               	goto	u5295
  2306  173C  0820               	movf	___aldiv@divisor^(0+256),w
  2307  173D  0224               	subwf	___aldiv@dividend^(0+256),w
  2308  173E                     u5295:	
  2309  173E  1C03               	skipc
  2310  173F  2F49               	goto	l3517
  2311  1740  0820               	movf	___aldiv@divisor^(0+256),w
  2312  1741  02A4               	subwf	___aldiv@dividend^(0+256),f
  2313  1742  0821               	movf	(___aldiv@divisor+1)^(0+256),w
  2314  1743  3BA5               	subwfb	(___aldiv@dividend+1)^(0+256),f
  2315  1744  0822               	movf	(___aldiv@divisor+2)^(0+256),w
  2316  1745  3BA6               	subwfb	(___aldiv@dividend+2)^(0+256),f
  2317  1746  0823               	movf	(___aldiv@divisor+3)^(0+256),w
  2318  1747  3BA7               	subwfb	(___aldiv@dividend+3)^(0+256),f
  2319  1748  142B               	bsf	___aldiv@quotient^(0+256),0
  2320  1749                     l3517:	
  2321  1749  3001               	movlw	1
  2322  174A                     u5305:	
  2323  174A  36A3               	lsrf	(___aldiv@divisor+3)^(0+256),f
  2324  174B  0CA2               	rrf	(___aldiv@divisor+2)^(0+256),f
  2325  174C  0CA1               	rrf	(___aldiv@divisor+1)^(0+256),f
  2326  174D  0CA0               	rrf	___aldiv@divisor^(0+256),f
  2327  174E  0B89               	decfsz	9,f
  2328  174F  2F4A               	goto	u5305
  2329  1750  3001               	movlw	1
  2330  1751  02A9               	subwf	___aldiv@counter^(0+256),f
  2331  1752  1D03               	btfss	3,2
  2332  1753  2F29               	goto	l3509
  2333  1754                     l3521:	
  2334  1754  082A               	movf	___aldiv@sign^(0+256),w
  2335  1755  1903               	btfsc	3,2
  2336  1756  2F62               	goto	l3525
  2337  1757  09AB               	comf	___aldiv@quotient^(0+256),f
  2338  1758  09AC               	comf	(___aldiv@quotient+1)^(0+256),f
  2339  1759  09AD               	comf	(___aldiv@quotient+2)^(0+256),f
  2340  175A  09AE               	comf	(___aldiv@quotient+3)^(0+256),f
  2341  175B  0AAB               	incf	___aldiv@quotient^(0+256),f
  2342  175C  1903               	skipnz
  2343  175D  0AAC               	incf	(___aldiv@quotient+1)^(0+256),f
  2344  175E  1903               	skipnz
  2345  175F  0AAD               	incf	(___aldiv@quotient+2)^(0+256),f
  2346  1760  1903               	skipnz
  2347  1761  0AAE               	incf	(___aldiv@quotient+3)^(0+256),f
  2348  1762                     l3525:	
  2349  1762  082E               	movf	(___aldiv@quotient+3)^(0+256),w
  2350  1763  00A3               	movwf	(?___aldiv+3)^(0+256)
  2351  1764  082D               	movf	(___aldiv@quotient+2)^(0+256),w
  2352  1765  00A2               	movwf	(?___aldiv+2)^(0+256)
  2353  1766  082C               	movf	(___aldiv@quotient+1)^(0+256),w
  2354  1767  00A1               	movwf	(?___aldiv+1)^(0+256)
  2355  1768  082B               	movf	___aldiv@quotient^(0+256),w
  2356  1769  00A0               	movwf	?___aldiv^(0+256)
  2357  176A  0008               	return
  2358  176B                     __end_of___aldiv:	
  2359                           
  2360                           	psect	text3
  2361  080D                     __ptext3:	
  2362 ;; *************** function _ADC_init *****************
  2363 ;; Defined at:
  2364 ;;		line 5 in file "ADC_funcs.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  pin             2    0[BANK2 ] PTR unsigned char 
  2367 ;;		 -> STR_2(3), 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  pinNum          2    6[BANK2 ] int 
  2370 ;;  chan            1    5[BANK2 ] unsigned char 
  2371 ;;  block           1    4[BANK2 ] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      unsigned char 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2381 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2382 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2383 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  2385 ;;Total ram usage:        8 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    9
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _ADC_init
  2397  080D                     _ADC_init:	
  2398                           
  2399                           ;ADC_funcs.c: 6:     char block = pin[0];
  2400                           
  2401                           ;incstack = 0
  2402                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0+pclath]
  2403  080D  0142               	movlb	2	; select bank2
  2404  080E  0820               	movf	ADC_init@pin^(0+256),w
  2405  080F  0084               	movwf	4
  2406  0810  0821               	movf	(ADC_init@pin+1)^(0+256),w
  2407  0811  0085               	movwf	5
  2408  0812  0800               	movf	0,w	;code access
  2409  0813  00A2               	movwf	??_ADC_init^(0+256)
  2410  0814  0822               	movf	??_ADC_init^(0+256),w
  2411  0815  00A4               	movwf	ADC_init@block^(0+256)
  2412                           
  2413                           ;ADC_funcs.c: 7:     int pinNum = pin[1] - '0';
  2414  0816  0821               	movf	(ADC_init@pin+1)^(0+256),w
  2415  0817  00A3               	movwf	(??_ADC_init^(0+256)+1)
  2416  0818  0820               	movf	ADC_init@pin^(0+256),w
  2417  0819  00A2               	movwf	??_ADC_init^(0+256)
  2418  081A  3001               	movlw	1
  2419  081B  0722               	addwf	??_ADC_init^(0+256),w
  2420  081C  0084               	movwf	4
  2421  081D  0823               	movf	(??_ADC_init^(0+256)+1),w
  2422  081E  1803               	skipnc
  2423  081F  0A23               	incf	(??_ADC_init^(0+256)+1),w
  2424  0820  0085               	movwf	5
  2425  0821  0800               	movf	0,w	;code access
  2426  0822  3ED0               	addlw	208
  2427  0823  00A6               	movwf	ADC_init@pinNum^(0+256)
  2428  0824  30FF               	movlw	255
  2429  0825  1803               	skipnc
  2430  0826  3000               	movlw	0
  2431  0827  00A7               	movwf	(ADC_init@pinNum^(0+256)+1)
  2432                           
  2433                           ;ADC_funcs.c: 8:     char chan ;;ADC_funcs.c: 11:     PIR1bits.ADIF = 0;
  2434  0828  014E               	movlb	14	; select bank14
  2435  0829  100D               	bcf	13,0	;volatile
  2436                           
  2437                           ;ADC_funcs.c: 14:     PIE1bits.ADIE = 1;
  2438  082A  1417               	bsf	23,0	;volatile
  2439                           
  2440                           ;ADC_funcs.c: 17:     PEIE = 1;
  2441  082B  170B               	bsf	11,6	;volatile
  2442                           
  2443                           ;ADC_funcs.c: 18:     INTCONbits.GIE =1;
  2444  082C  178B               	bsf	11,7	;volatile
  2445                           
  2446                           ;ADC_funcs.c: 21:      switch(block){
  2447  082D  2882               	goto	l3595
  2448  082E                     l3579:	
  2449  082E  3001               	movlw	1
  2450  082F  00A2               	movwf	??_ADC_init^(0+256)
  2451  0830  0A26               	incf	ADC_init@pinNum^(0+256),w
  2452  0831  2833               	goto	u5364
  2453  0832                     u5365:	
  2454  0832  35A2               	lslf	??_ADC_init^(0+256),f
  2455  0833                     u5364:	
  2456  0833  0B89               	decfsz	9,f
  2457  0834  2832               	goto	u5365
  2458  0835  0822               	movf	??_ADC_init^(0+256),w
  2459  0836  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2460  0837  0823               	movf	(??_ADC_init+1)^(0+256),w
  2461  0838  0140               	movlb	0	; select bank0
  2462  0839  0492               	iorwf	18,f	;volatile
  2463                           
  2464                           ;ADC_funcs.c: 23:                    ANSELA |= 1 << pinNum;
  2465  083A  3001               	movlw	1
  2466  083B  0142               	movlb	2	; select bank2
  2467  083C  00A2               	movwf	??_ADC_init^(0+256)
  2468  083D  0A26               	incf	ADC_init@pinNum^(0+256),w
  2469  083E  2840               	goto	u5374
  2470  083F                     u5375:	
  2471  083F  35A2               	lslf	??_ADC_init^(0+256),f
  2472  0840                     u5374:	
  2473  0840  0B89               	decfsz	9,f
  2474  0841  283F               	goto	u5375
  2475  0842  0822               	movf	??_ADC_init^(0+256),w
  2476  0843  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2477  0844  0823               	movf	(??_ADC_init+1)^(0+256),w
  2478  0845  017E               	movlb	62	; select bank62
  2479  0846  04B8               	iorwf	56,f	;volatile
  2480  0847                     l3583:	
  2481  0847  3001               	movlw	1
  2482  0848  0142               	movlb	2	; select bank2
  2483  0849  00A2               	movwf	??_ADC_init^(0+256)
  2484  084A  0A26               	incf	ADC_init@pinNum^(0+256),w
  2485  084B  284D               	goto	u5384
  2486  084C                     u5385:	
  2487  084C  35A2               	lslf	??_ADC_init^(0+256),f
  2488  084D                     u5384:	
  2489  084D  0B89               	decfsz	9,f
  2490  084E  284C               	goto	u5385
  2491  084F  0822               	movf	??_ADC_init^(0+256),w
  2492  0850  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2493  0851  0823               	movf	(??_ADC_init+1)^(0+256),w
  2494  0852  0140               	movlb	0	; select bank0
  2495  0853  0493               	iorwf	19,f	;volatile
  2496                           
  2497                           ;ADC_funcs.c: 27:                    ANSELB |= 1 << pinNum;
  2498  0854  3001               	movlw	1
  2499  0855  0142               	movlb	2	; select bank2
  2500  0856  00A2               	movwf	??_ADC_init^(0+256)
  2501  0857  0A26               	incf	ADC_init@pinNum^(0+256),w
  2502  0858  285A               	goto	u5394
  2503  0859                     u5395:	
  2504  0859  35A2               	lslf	??_ADC_init^(0+256),f
  2505  085A                     u5394:	
  2506  085A  0B89               	decfsz	9,f
  2507  085B  2859               	goto	u5395
  2508  085C  0822               	movf	??_ADC_init^(0+256),w
  2509  085D  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2510  085E  0823               	movf	(??_ADC_init+1)^(0+256),w
  2511  085F  017E               	movlb	62	; select bank62
  2512  0860  04C3               	iorwf	67,f	;volatile
  2513  0861                     l3589:	
  2514  0861  3001               	movlw	1
  2515  0862  0142               	movlb	2	; select bank2
  2516  0863  00A2               	movwf	??_ADC_init^(0+256)
  2517  0864  0A26               	incf	ADC_init@pinNum^(0+256),w
  2518  0865  2867               	goto	u5404
  2519  0866                     u5405:	
  2520  0866  35A2               	lslf	??_ADC_init^(0+256),f
  2521  0867                     u5404:	
  2522  0867  0B89               	decfsz	9,f
  2523  0868  2866               	goto	u5405
  2524  0869  0822               	movf	??_ADC_init^(0+256),w
  2525  086A  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2526  086B  0823               	movf	(??_ADC_init+1)^(0+256),w
  2527  086C  0140               	movlb	0	; select bank0
  2528  086D  0494               	iorwf	20,f	;volatile
  2529                           
  2530                           ;ADC_funcs.c: 31:                    ANSELC |= 1 << pinNum;
  2531  086E  3001               	movlw	1
  2532  086F  0142               	movlb	2	; select bank2
  2533  0870  00A2               	movwf	??_ADC_init^(0+256)
  2534  0871  0A26               	incf	ADC_init@pinNum^(0+256),w
  2535  0872  2874               	goto	u5414
  2536  0873                     u5415:	
  2537  0873  35A2               	lslf	??_ADC_init^(0+256),f
  2538  0874                     u5414:	
  2539  0874  0B89               	decfsz	9,f
  2540  0875  2873               	goto	u5415
  2541  0876  0822               	movf	??_ADC_init^(0+256),w
  2542  0877  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2543  0878  0823               	movf	(??_ADC_init+1)^(0+256),w
  2544  0879  017E               	movlb	62	; select bank62
  2545  087A  04CE               	iorwf	78,f	;volatile
  2546                           
  2547                           ;ADC_funcs.c: 32:                    chan = 16 + pinNum ;
  2548  087B  0142               	movlb	2	; select bank2
  2549  087C  0826               	movf	ADC_init@pinNum^(0+256),w
  2550  087D  3E10               	addlw	16
  2551  087E  00A2               	movwf	??_ADC_init^(0+256)
  2552  087F  0822               	movf	??_ADC_init^(0+256),w
  2553  0880  00A5               	movwf	ADC_init@chan^(0+256)
  2554                           
  2555                           ;ADC_funcs.c: 33:     }
  2556  0881  2896               	goto	l3597
  2557  0882                     l3595:	
  2558  0882  0142               	movlb	2	; select bank2
  2559  0883  0824               	movf	ADC_init@block^(0+256),w
  2560  0884  00A2               	movwf	??_ADC_init^(0+256)
  2561  0885  01A3               	clrf	(??_ADC_init^(0+256)+1)
  2562                           
  2563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2564                           ; Switch size 1, requested type "simple"
  2565                           ; Number of cases is 1, Range of values is 0 to 0
  2566                           ; switch strategies available:
  2567                           ; Name         Instructions Cycles
  2568                           ; simple_byte            4     3 (average)
  2569                           ; direct_byte            8     6 (fixed)
  2570                           ; jumptable            260     6 (fixed)
  2571                           ;	Chosen strategy is simple_byte
  2572  0886  0823               	movf	(??_ADC_init+1)^(0+256),w
  2573  0887  3A00               	xorlw	0	; case 0
  2574  0888  1903               	skipnz
  2575  0889  288B               	goto	l3697
  2576  088A  2896               	goto	l3597
  2577  088B                     l3697:	
  2578                           
  2579                           ; Switch size 1, requested type "simple"
  2580                           ; Number of cases is 3, Range of values is 65 to 67
  2581                           ; switch strategies available:
  2582                           ; Name         Instructions Cycles
  2583                           ; simple_byte           10     6 (average)
  2584                           ; direct_byte           15     9 (fixed)
  2585                           ; jumptable            263     9 (fixed)
  2586                           ;	Chosen strategy is simple_byte
  2587  088B  0822               	movf	??_ADC_init^(0+256),w
  2588  088C  3A41               	xorlw	65	; case 65
  2589  088D  1903               	skipnz
  2590  088E  282E               	goto	l3579
  2591  088F  3A03               	xorlw	3	; case 66
  2592  0890  1903               	skipnz
  2593  0891  2847               	goto	l3583
  2594  0892  3A01               	xorlw	1	; case 67
  2595  0893  1903               	skipnz
  2596  0894  2861               	goto	l3589
  2597  0895  2896               	goto	l3597
  2598  0896                     l3597:	
  2599                           
  2600                           ;ADC_funcs.c: 36:     ADCON0 |= chan << 2;
  2601  0896  0825               	movf	ADC_init@chan^(0+256),w	;volatile
  2602  0897  00A2               	movwf	??_ADC_init^(0+256)
  2603  0898  3001               	movlw	1
  2604  0899                     u5425:	
  2605  0899  35A2               	lslf	??_ADC_init^(0+256),f
  2606  089A  3EFF               	addlw	-1
  2607  089B  1D03               	skipz
  2608  089C  2899               	goto	u5425
  2609  089D  3522               	lslf	??_ADC_init^(0+256),w
  2610  089E  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2611  089F  0823               	movf	(??_ADC_init+1)^(0+256),w
  2612  08A0  0141               	movlb	1	; select bank1
  2613  08A1  049D               	iorwf	29,f	;volatile
  2614                           
  2615                           ;ADC_funcs.c: 39:     ADCON1 = 0b10100000;
  2616  08A2  30A0               	movlw	160
  2617  08A3  009E               	movwf	30	;volatile
  2618                           
  2619                           ;ADC_funcs.c: 42:     ADCON0bits.ADON = 1;
  2620  08A4  141D               	bsf	29,0	;volatile
  2621                           
  2622                           ;ADC_funcs.c: 43:     _delay((unsigned long)((50)*(32000000/4000000.0)));
  2623  08A5  3085               	movlw	133
  2624  08A6                     u5597:	
  2625  08A6  0B89               	decfsz	9,f
  2626  08A7  28A6               	goto	u5597
  2627  08A8  0000               	nop
  2628                           
  2629                           ;ADC_funcs.c: 44:     ADCON0bits.GOnDONE = 1;
  2630  08A9  0141               	movlb	1	; select bank1
  2631  08AA  149D               	bsf	29,1	;volatile
  2632  08AB  0008               	return
  2633  08AC                     __end_of_ADC_init:	
  2634                           
  2635                           	psect	intentry
  2636  0004                     __pintentry:	
  2637 ;; *************** function _ISR *****************
  2638 ;; Defined at:
  2639 ;;		line 54 in file "main.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  decimalADC      4   65[BANK1 ] float 
  2644 ;;  adc_out         2   69[BANK1 ] unsigned int 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2655 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;Total ram usage:        8 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    8
  2661 ;; This function calls:
  2662 ;;		_ADC_read
  2663 ;;		___flmul
  2664 ;;		___xxtofl
  2665 ;;		_printf
  2666 ;;		_readSerial
  2667 ;; This function is called by:
  2668 ;;		Interrupt level 1
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672  0004                     _ISR:	
  2673                           
  2674                           ;incstack = 0
  2675  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2676                           
  2677                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2678  0005  3180               	pagesel	$
  2679                           
  2680                           ;main.c: 55:     if(PIR1bits.ADIF == 1){
  2681  0006  014E               	movlb	14	; select bank14
  2682  0007  1C0D               	btfss	13,0	;volatile
  2683  0008  2852               	goto	i1l3665
  2684                           
  2685                           ;main.c: 56:        unsigned int adc_out = ADC_read();
  2686  0009  3192  22B2  3180   	fcall	_ADC_read
  2687  000C  0871               	movf	?_ADC_read+1,w
  2688  000D  0141               	movlb	1	; select bank1
  2689  000E  00E6               	movwf	(ISR@adc_out+1)^(0+128)
  2690  000F  0870               	movf	?_ADC_read,w
  2691  0010  00E5               	movwf	ISR@adc_out^(0+128)
  2692                           
  2693                           ;main.c: 57:         float decimalADC = 0.004887586 * adc_out;
  2694  0011  303B               	movlw	59
  2695  0012  0140               	movlb	0	; select bank0
  2696  0013  00A3               	movwf	___flmul@b+3
  2697  0014  30A0               	movlw	160
  2698  0015  00A2               	movwf	___flmul@b+2
  2699  0016  3028               	movlw	40
  2700  0017  00A1               	movwf	___flmul@b+1
  2701  0018  300B               	movlw	11
  2702  0019  00A0               	movwf	___flmul@b
  2703  001A  0141               	movlb	1	; select bank1
  2704  001B  0865               	movf	ISR@adc_out^(0+128),w
  2705  001C  00F0               	movwf	___xxtofl@val
  2706  001D  0866               	movf	(ISR@adc_out+1)^(0+128),w
  2707  001E  00F1               	movwf	___xxtofl@val+1
  2708  001F  01F2               	clrf	___xxtofl@val+2
  2709  0020  01F3               	clrf	___xxtofl@val+3
  2710  0021  3000               	movlw	0
  2711  0022  3197  276B  3180   	fcall	___xxtofl
  2712  0025  0873               	movf	?___xxtofl+3,w
  2713  0026  0140               	movlb	0	; select bank0
  2714  0027  00A7               	movwf	___flmul@a+3
  2715  0028  0872               	movf	?___xxtofl+2,w
  2716  0029  00A6               	movwf	___flmul@a+2
  2717  002A  0871               	movf	?___xxtofl+1,w
  2718  002B  00A5               	movwf	___flmul@a+1
  2719  002C  0870               	movf	?___xxtofl,w
  2720  002D  00A4               	movwf	___flmul@a
  2721  002E  318D  25D4  3180   	fcall	___flmul
  2722  0031  0140               	movlb	0	; select bank0
  2723  0032  0823               	movf	?___flmul+3,w
  2724  0033  0141               	movlb	1	; select bank1
  2725  0034  00E4               	movwf	(ISR@decimalADC+3)^(0+128)
  2726  0035  0140               	movlb	0	; select bank0
  2727  0036  0822               	movf	?___flmul+2,w
  2728  0037  0141               	movlb	1	; select bank1
  2729  0038  00E3               	movwf	(ISR@decimalADC+2)^(0+128)
  2730  0039  0140               	movlb	0	; select bank0
  2731  003A  0821               	movf	?___flmul+1,w
  2732  003B  0141               	movlb	1	; select bank1
  2733  003C  00E2               	movwf	(ISR@decimalADC+1)^(0+128)
  2734  003D  0140               	movlb	0	; select bank0
  2735  003E  0820               	movf	?___flmul,w
  2736  003F  0141               	movlb	1	; select bank1
  2737  0040  00E1               	movwf	ISR@decimalADC^(0+128)
  2738                           
  2739                           ;main.c: 59:         printf("%f \n\r ", decimalADC);
  2740  0041  3000               	movlw	low (STR_1| (0+32768))
  2741  0042  00D9               	movwf	printf@fmt^(0+128)
  2742  0043  3098               	movlw	high (STR_1| (0+32768))
  2743  0044  00DA               	movwf	(printf@fmt^(0+128)+1)
  2744  0045  0864               	movf	(ISR@decimalADC+3)^(0+128),w
  2745  0046  00DE               	movwf	((?_printf+3)^(0+128)+2)
  2746  0047  0863               	movf	(ISR@decimalADC+2)^(0+128),w
  2747  0048  00DD               	movwf	((?_printf+2)^(0+128)+2)
  2748  0049  0862               	movf	(ISR@decimalADC+1)^(0+128),w
  2749  004A  00DC               	movwf	((?_printf+1)^(0+128)+2)
  2750  004B  0861               	movf	ISR@decimalADC^(0+128),w
  2751  004C  00DB               	movwf	(?_printf^(0+128)+2)
  2752  004D  3192  22BA  3180   	fcall	_printf
  2753                           
  2754                           ;main.c: 60:         PIR1bits.ADIF = 0;
  2755  0050  014E               	movlb	14	; select bank14
  2756  0051  100D               	bcf	13,0	;volatile
  2757  0052                     i1l3665:	
  2758                           
  2759                           ;main.c: 63:     if(PIR3bits.RC1IF == 1){
  2760  0052  1E8F               	btfss	15,5	;volatile
  2761  0053  2860               	goto	i1l25
  2762                           
  2763                           ;main.c: 64:         printf(readSerial());
  2764  0054  3187  27FC  3180   	fcall	_readSerial
  2765  0057  0141               	movlb	1	; select bank1
  2766  0058  00DF               	movwf	??_ISR^(0+128)
  2767  0059  01E0               	clrf	(??_ISR^(0+128)+1)
  2768  005A  085F               	movf	??_ISR^(0+128),w
  2769  005B  00D9               	movwf	printf@fmt^(0+128)
  2770  005C  0860               	movf	(??_ISR+1)^(0+128),w
  2771  005D  00DA               	movwf	(printf@fmt+1)^(0+128)
  2772  005E  3192  22BA         	fcall	_printf
  2773  0060                     i1l25:	
  2774  0060  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2775  0061  0009               	retfie
  2776  0062                     __end_of_ISR:	
  2777                           
  2778                           	psect	text5
  2779  07FC                     __ptext5:	
  2780 ;; *************** function _readSerial *****************
  2781 ;; Defined at:
  2782 ;;		line 41 in file "UART_funcs.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      unsigned char 
  2789 ;; Registers used:
  2790 ;;		wreg
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_ISR
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           
  2810                           ;psect for function _readSerial
  2811  07FC                     _readSerial:	
  2812                           
  2813                           ;UART_funcs.c: 43:     return RC1REG;
  2814                           
  2815                           ;incstack = 0
  2816                           ; Regs used in _readSerial: [wreg]
  2817  07FC  0142               	movlb	2	; select bank2
  2818  07FD  0819               	movf	25,w	;volatile
  2819  07FE  0008               	return
  2820  07FF                     __end_of_readSerial:	
  2821                           
  2822                           	psect	text6
  2823  12BA                     __ptext6:	
  2824 ;; *************** function _printf *****************
  2825 ;; Defined at:
  2826 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  fmt             2   57[BANK1 ] PTR const unsigned char 
  2829 ;;		 -> ROM(8192), STR_1(7), 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  ret             2    0        int 
  2832 ;;  ap              1   78[BANK0 ] PTR void [1]
  2833 ;;		 -> ?_printf(2), 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2   57[BANK1 ] int 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2843 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;Total ram usage:       10 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    7
  2850 ;; This function calls:
  2851 ;;		_vfprintf
  2852 ;; This function is called by:
  2853 ;;		_ISR
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function _printf
  2859  12BA                     _printf:	
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2863  12BA  30DB               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2864  12BB  0140               	movlb	0	; select bank0
  2865  12BC  00EB               	movwf	??_printf
  2866  12BD  086B               	movf	??_printf,w
  2867  12BE  00EE               	movwf	printf@ap
  2868  12BF  0141               	movlb	1	; select bank1
  2869  12C0  085A               	movf	(printf@fmt+1)^(0+128),w
  2870  12C1  0140               	movlb	0	; select bank0
  2871  12C2  00E4               	movwf	vfprintf@fmt+1
  2872  12C3  0141               	movlb	1	; select bank1
  2873  12C4  0859               	movf	printf@fmt^(0+128),w
  2874  12C5  0140               	movlb	0	; select bank0
  2875  12C6  00E3               	movwf	vfprintf@fmt
  2876  12C7  306E               	movlw	(low (printf@ap| 0))& (0+255)
  2877  12C8  00EB               	movwf	??_printf
  2878  12C9  086B               	movf	??_printf,w
  2879  12CA  00E5               	movwf	vfprintf@ap
  2880  12CB  3000               	movlw	0
  2881  12CC  3193  23BB         	fcall	_vfprintf
  2882  12CE  0008               	return
  2883  12CF                     __end_of_printf:	
  2884                           
  2885                           	psect	text7
  2886  13BB                     __ptext7:	
  2887 ;; *************** function _vfprintf *****************
  2888 ;; Defined at:
  2889 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  fp              1    wreg     PTR struct _IO_FILE
  2892 ;;		 -> NULL(0), 
  2893 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  2894 ;;		 -> ROM(8192), STR_1(7), 
  2895 ;;  ap              1   69[BANK0 ] PTR PTR void 
  2896 ;;		 -> printf@ap(1), 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
  2899 ;;		 -> NULL(0), 
  2900 ;;  cfmt            2   73[BANK0 ] PTR unsigned char 
  2901 ;;		 -> ROM(8192), STR_1(7), 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  2   67[BANK0 ] int 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2911 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2912 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2913 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2914 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2915 ;;Total ram usage:        8 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    6
  2918 ;; This function calls:
  2919 ;;		_vfpfcnvrt
  2920 ;; This function is called by:
  2921 ;;		_printf
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           
  2926                           ;psect for function _vfprintf
  2927  13BB                     _vfprintf:	
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2931                           ;vfprintf@fp stored from wreg
  2932  13BB  0140               	movlb	0	; select bank0
  2933  13BC  00E8               	movwf	vfprintf@fp
  2934                           
  2935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2936  13BD  0864               	movf	vfprintf@fmt+1,w
  2937  13BE  00EA               	movwf	vfprintf@cfmt+1
  2938  13BF  0863               	movf	vfprintf@fmt,w
  2939  13C0  00E9               	movwf	vfprintf@cfmt
  2940                           
  2941                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2942  13C1  0141               	movlb	1	; select bank1
  2943  13C2  01E7               	clrf	_nout^(0+128)
  2944  13C3  01E8               	clrf	(_nout+1)^(0+128)
  2945  13C4                     i1l3483:	
  2946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2947                           
  2948                           
  2949                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2950  13C4  0140               	movlb	0	; select bank0
  2951  13C5  0869               	movf	vfprintf@cfmt,w
  2952  13C6  0084               	movwf	4
  2953  13C7  086A               	movf	vfprintf@cfmt+1,w
  2954  13C8  0085               	movwf	5
  2955  13C9  0012               	moviw fsr0++
  2956  13CA  1903               	btfsc	3,2
  2957  13CB  2BE1               	goto	i1l3485
  2958                           
  2959                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2960  13CC  3069               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2961  13CD  00E6               	movwf	??_vfprintf
  2962  13CE  0866               	movf	??_vfprintf,w
  2963  13CF  00CF               	movwf	vfpfcnvrt@fmt
  2964  13D0  0865               	movf	vfprintf@ap,w
  2965  13D1  00E7               	movwf	??_vfprintf+1
  2966  13D2  0867               	movf	??_vfprintf+1,w
  2967  13D3  00D0               	movwf	vfpfcnvrt@ap
  2968  13D4  0868               	movf	vfprintf@fp,w
  2969  13D5  318A  2226  3193   	fcall	_vfpfcnvrt
  2970  13D8  0140               	movlb	0	; select bank0
  2971  13D9  084F               	movf	?_vfpfcnvrt,w
  2972  13DA  0141               	movlb	1	; select bank1
  2973  13DB  07E7               	addwf	_nout^(0+128),f
  2974  13DC  0140               	movlb	0	; select bank0
  2975  13DD  0850               	movf	?_vfpfcnvrt+1,w
  2976  13DE  0141               	movlb	1	; select bank1
  2977  13DF  3DE8               	addwfc	(_nout+1)^(0+128),f
  2978  13E0  2BC4               	goto	i1l3483
  2979  13E1                     i1l3485:	
  2980                           
  2981                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2982  13E1  0141               	movlb	1	; select bank1
  2983  13E2  0868               	movf	(_nout+1)^(0+128),w
  2984  13E3  0140               	movlb	0	; select bank0
  2985  13E4  00E4               	movwf	?_vfprintf+1
  2986  13E5  0141               	movlb	1	; select bank1
  2987  13E6  0867               	movf	_nout^(0+128),w
  2988  13E7  0140               	movlb	0	; select bank0
  2989  13E8  00E3               	movwf	?_vfprintf
  2990  13E9  0008               	return
  2991  13EA                     __end_of_vfprintf:	
  2992                           
  2993                           	psect	text8
  2994  0A26                     __ptext8:	
  2995 ;; *************** function _vfpfcnvrt *****************
  2996 ;; Defined at:
  2997 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  fp              1    wreg     PTR struct _IO_FILE
  3000 ;;		 -> NULL(0), 
  3001 ;;  fmt             1   47[BANK0 ] PTR PTR unsigned char 
  3002 ;;		 -> vfprintf@cfmt(2), 
  3003 ;;  ap              1   48[BANK0 ] PTR PTR void 
  3004 ;;		 -> printf@ap(1), 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
  3007 ;;		 -> NULL(0), 
  3008 ;;  llu             8    0        unsigned long long 
  3009 ;;  ll              8    0        long long 
  3010 ;;  f               4   58[BANK0 ] long long 
  3011 ;;  ct              3   62[BANK0 ] unsigned char [3]
  3012 ;;  i               2    0        int 
  3013 ;;  done            2    0        int 
  3014 ;;  cp              2    0        PTR unsigned char 
  3015 ;;  c               1   65[BANK0 ] unsigned char 
  3016 ;;  vp              1   57[BANK0 ] PTR void 
  3017 ;;		 -> ?_printf(2), ISR@adc_out(2), 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  2   47[BANK0 ] int 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3028 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;Total ram usage:       20 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    5
  3034 ;; This function calls:
  3035 ;;		_efgtoa
  3036 ;;		_fputc
  3037 ;;		_isupper
  3038 ;;		_strncmp
  3039 ;;		_tolower
  3040 ;; This function is called by:
  3041 ;;		_vfprintf
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function _vfpfcnvrt
  3047  0A26                     _vfpfcnvrt:	
  3048                           
  3049                           ;incstack = 0
  3050                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3051                           ;vfpfcnvrt@fp stored from wreg
  3052  0A26  0140               	movlb	0	; select bank0
  3053  0A27  00E2               	movwf	vfpfcnvrt@fp
  3054                           
  3055                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  3056  0A28  084F               	movf	vfpfcnvrt@fmt,w
  3057  0A29  0086               	movwf	6
  3058  0A2A  0187               	clrf	7
  3059  0A2B  3F40               	moviw [0]fsr1
  3060  0A2C  00D1               	movwf	??_vfpfcnvrt
  3061  0A2D  3F41               	moviw [1]fsr1
  3062  0A2E  00D2               	movwf	??_vfpfcnvrt+1
  3063  0A2F  0851               	movf	??_vfpfcnvrt,w
  3064  0A30  0084               	movwf	4
  3065  0A31  0852               	movf	??_vfpfcnvrt+1,w
  3066  0A32  0085               	movwf	5
  3067  0A33  0012               	moviw fsr0++
  3068  0A34  3A25               	xorlw	37
  3069  0A35  1D03               	btfss	3,2
  3070  0A36  2BC8               	goto	i1l3469
  3071                           
  3072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  3073  0A37  084F               	movf	vfpfcnvrt@fmt,w
  3074  0A38  0086               	movwf	6
  3075  0A39  0187               	clrf	7
  3076  0A3A  3001               	movlw	1
  3077  0A3B  0781               	addwf	1,f
  3078  0A3C  3141               	addfsr 1,1
  3079  0A3D  1803               	skipnc
  3080  0A3E  0A81               	incf	1,f
  3081                           
  3082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  3083  0A3F  0141               	movlb	1	; select bank1
  3084  0A40  01E9               	clrf	_width^(0+128)
  3085  0A41  01EA               	clrf	(_width+1)^(0+128)
  3086  0A42  01ED               	clrf	_flags^(0+128)
  3087  0A43  01EE               	clrf	(_flags+1)^(0+128)
  3088                           
  3089                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  3090  0A44  30FF               	movlw	255
  3091  0A45  00EB               	movwf	_prec^(0+128)
  3092  0A46  30FF               	movlw	255
  3093  0A47  00EC               	movwf	(_prec^(0+128)+1)
  3094                           
  3095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  3096  0A48  0140               	movlb	0	; select bank0
  3097  0A49  084F               	movf	vfpfcnvrt@fmt,w
  3098  0A4A  0086               	movwf	6
  3099  0A4B  0187               	clrf	7
  3100  0A4C  3F40               	moviw [0]fsr1
  3101  0A4D  00D1               	movwf	??_vfpfcnvrt
  3102  0A4E  3F41               	moviw [1]fsr1
  3103  0A4F  00D2               	movwf	??_vfpfcnvrt+1
  3104  0A50  0851               	movf	??_vfpfcnvrt,w
  3105  0A51  0084               	movwf	4
  3106  0A52  0852               	movf	??_vfpfcnvrt+1,w
  3107  0A53  0085               	movwf	5
  3108  0A54  0800               	movf	0,w	;code access
  3109  0A55  00D3               	movwf	??_vfpfcnvrt+2
  3110  0A56  01D4               	clrf	??_vfpfcnvrt+3
  3111  0A57  0853               	movf	??_vfpfcnvrt+2,w
  3112  0A58  00F6               	movwf	tolower@c
  3113  0A59  0854               	movf	??_vfpfcnvrt+3,w
  3114  0A5A  00F7               	movwf	tolower@c+1
  3115  0A5B  3193  2374  318A   	fcall	_tolower
  3116  0A5E  0876               	movf	?_tolower,w
  3117  0A5F  0140               	movlb	0	; select bank0
  3118  0A60  00D5               	movwf	??_vfpfcnvrt+4
  3119  0A61  0855               	movf	??_vfpfcnvrt+4,w
  3120  0A62  00DE               	movwf	vfpfcnvrt@ct
  3121                           
  3122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  3123  0A63  085E               	movf	vfpfcnvrt@ct,w
  3124  0A64  1903               	btfsc	3,2
  3125  0A65  2AA3               	goto	i1l3411
  3126                           
  3127                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  3128  0A66  084F               	movf	vfpfcnvrt@fmt,w
  3129  0A67  0086               	movwf	6
  3130  0A68  0187               	clrf	7
  3131  0A69  3F40               	moviw [0]fsr1
  3132  0A6A  00D1               	movwf	??_vfpfcnvrt
  3133  0A6B  3F41               	moviw [1]fsr1
  3134  0A6C  00D2               	movwf	??_vfpfcnvrt+1
  3135  0A6D  3001               	movlw	1
  3136  0A6E  0751               	addwf	??_vfpfcnvrt,w
  3137  0A6F  0084               	movwf	4
  3138  0A70  0852               	movf	??_vfpfcnvrt+1,w
  3139  0A71  1803               	skipnc
  3140  0A72  0A52               	incf	??_vfpfcnvrt+1,w
  3141  0A73  0085               	movwf	5
  3142  0A74  0800               	movf	0,w	;code access
  3143  0A75  00D3               	movwf	??_vfpfcnvrt+2
  3144  0A76  01D4               	clrf	??_vfpfcnvrt+3
  3145  0A77  0853               	movf	??_vfpfcnvrt+2,w
  3146  0A78  00F6               	movwf	tolower@c
  3147  0A79  0854               	movf	??_vfpfcnvrt+3,w
  3148  0A7A  00F7               	movwf	tolower@c+1
  3149  0A7B  3193  2374  318A   	fcall	_tolower
  3150  0A7E  0876               	movf	?_tolower,w
  3151  0A7F  0140               	movlb	0	; select bank0
  3152  0A80  00D5               	movwf	??_vfpfcnvrt+4
  3153  0A81  0855               	movf	??_vfpfcnvrt+4,w
  3154  0A82  00DF               	movwf	vfpfcnvrt@ct+1
  3155                           
  3156                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  3157  0A83  085F               	movf	vfpfcnvrt@ct+1,w
  3158  0A84  1903               	btfsc	3,2
  3159  0A85  2AA3               	goto	i1l3411
  3160                           
  3161                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  3162  0A86  084F               	movf	vfpfcnvrt@fmt,w
  3163  0A87  0086               	movwf	6
  3164  0A88  0187               	clrf	7
  3165  0A89  3F40               	moviw [0]fsr1
  3166  0A8A  00D1               	movwf	??_vfpfcnvrt
  3167  0A8B  3F41               	moviw [1]fsr1
  3168  0A8C  00D2               	movwf	??_vfpfcnvrt+1
  3169  0A8D  3002               	movlw	2
  3170  0A8E  0751               	addwf	??_vfpfcnvrt,w
  3171  0A8F  0084               	movwf	4
  3172  0A90  0852               	movf	??_vfpfcnvrt+1,w
  3173  0A91  1803               	skipnc
  3174  0A92  0A52               	incf	??_vfpfcnvrt+1,w
  3175  0A93  0085               	movwf	5
  3176  0A94  0800               	movf	0,w	;code access
  3177  0A95  00D3               	movwf	??_vfpfcnvrt+2
  3178  0A96  01D4               	clrf	??_vfpfcnvrt+3
  3179  0A97  0853               	movf	??_vfpfcnvrt+2,w
  3180  0A98  00F6               	movwf	tolower@c
  3181  0A99  0854               	movf	??_vfpfcnvrt+3,w
  3182  0A9A  00F7               	movwf	tolower@c+1
  3183  0A9B  3193  2374  318A   	fcall	_tolower
  3184  0A9E  0876               	movf	?_tolower,w
  3185  0A9F  0140               	movlb	0	; select bank0
  3186  0AA0  00D5               	movwf	??_vfpfcnvrt+4
  3187  0AA1  0855               	movf	??_vfpfcnvrt+4,w
  3188  0AA2  00E0               	movwf	vfpfcnvrt@ct+2
  3189  0AA3                     i1l3411:	
  3190                           
  3191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  3192  0AA3  3066               	movlw	102
  3193  0AA4  065E               	xorwf	vfpfcnvrt@ct,w
  3194  0AA5  1D03               	btfss	3,2
  3195  0AA6  2AE3               	goto	i1l3423
  3196                           
  3197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  3198  0AA7  084F               	movf	vfpfcnvrt@fmt,w
  3199  0AA8  0086               	movwf	6
  3200  0AA9  0187               	clrf	7
  3201  0AAA  3F40               	moviw [0]fsr1
  3202  0AAB  00D1               	movwf	??_vfpfcnvrt
  3203  0AAC  3F41               	moviw [1]fsr1
  3204  0AAD  00D2               	movwf	??_vfpfcnvrt+1
  3205  0AAE  0851               	movf	??_vfpfcnvrt,w
  3206  0AAF  0084               	movwf	4
  3207  0AB0  0852               	movf	??_vfpfcnvrt+1,w
  3208  0AB1  0085               	movwf	5
  3209  0AB2  0800               	movf	0,w	;code access
  3210  0AB3  00D3               	movwf	??_vfpfcnvrt+2
  3211  0AB4  0853               	movf	??_vfpfcnvrt+2,w
  3212  0AB5  00E1               	movwf	vfpfcnvrt@c
  3213                           
  3214                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  3215  0AB6  084F               	movf	vfpfcnvrt@fmt,w
  3216  0AB7  0086               	movwf	6
  3217  0AB8  0187               	clrf	7
  3218  0AB9  3001               	movlw	1
  3219  0ABA  0781               	addwf	1,f
  3220  0ABB  3141               	addfsr 1,1
  3221  0ABC  1803               	skipnc
  3222  0ABD  0A81               	incf	1,f
  3223                           
  3224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  3225  0ABE  0850               	movf	vfpfcnvrt@ap,w
  3226  0ABF  0086               	movwf	6
  3227  0AC0  0187               	clrf	7
  3228  0AC1  0801               	movf	1,w
  3229  0AC2  0084               	movwf	4
  3230  0AC3  0185               	clrf	5
  3231  0AC4  3004               	movlw	4
  3232  0AC5  0781               	addwf	1,f
  3233  0AC6  3F00               	moviw [0]fsr0
  3234  0AC7  00DA               	movwf	vfpfcnvrt@f
  3235  0AC8  3F01               	moviw [1]fsr0
  3236  0AC9  00DB               	movwf	vfpfcnvrt@f+1
  3237  0ACA  3F02               	moviw [2]fsr0
  3238  0ACB  00DC               	movwf	vfpfcnvrt@f+2
  3239  0ACC  3F03               	moviw [3]fsr0
  3240  0ACD  00DD               	movwf	vfpfcnvrt@f+3
  3241                           
  3242                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  3243  0ACE  085D               	movf	vfpfcnvrt@f+3,w
  3244  0ACF  00C9               	movwf	efgtoa@f+3
  3245  0AD0  085C               	movf	vfpfcnvrt@f+2,w
  3246  0AD1  00C8               	movwf	efgtoa@f+2
  3247  0AD2  085B               	movf	vfpfcnvrt@f+1,w
  3248  0AD3  00C7               	movwf	efgtoa@f+1
  3249  0AD4  085A               	movf	vfpfcnvrt@f,w
  3250  0AD5  00C6               	movwf	efgtoa@f
  3251  0AD6  0861               	movf	vfpfcnvrt@c,w
  3252  0AD7  00D1               	movwf	??_vfpfcnvrt
  3253  0AD8  0851               	movf	??_vfpfcnvrt,w
  3254  0AD9  00CA               	movwf	efgtoa@c
  3255  0ADA  0862               	movf	vfpfcnvrt@fp,w
  3256  0ADB  3180  207F         	fcall	_efgtoa
  3257  0ADD  0140               	movlb	0	; select bank0
  3258  0ADE  0847               	movf	?_efgtoa+1,w
  3259  0ADF  00D0               	movwf	?_vfpfcnvrt+1
  3260  0AE0  0846               	movf	?_efgtoa,w
  3261  0AE1  00CF               	movwf	?_vfpfcnvrt
  3262  0AE2  0008               	return
  3263  0AE3                     i1l3423:	
  3264                           
  3265                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3266  0AE3  3017               	movlw	low (STR_11| (0+32768))
  3267  0AE4  00F0               	movwf	strncmp@_r
  3268  0AE5  3098               	movlw	high (STR_11| (0+32768))
  3269  0AE6  00F1               	movwf	strncmp@_r+1
  3270  0AE7  3002               	movlw	2
  3271  0AE8  00F2               	movwf	strncmp@n
  3272  0AE9  3000               	movlw	0
  3273  0AEA  00F3               	movwf	strncmp@n+1
  3274  0AEB  305E               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  3275  0AEC  3194  24AC  318A   	fcall	_strncmp
  3276  0AEF  0870               	movf	?_strncmp,w
  3277  0AF0  0471               	iorwf	?_strncmp+1,w
  3278  0AF1  1D03               	btfss	3,2
  3279  0AF2  2B69               	goto	i1l3441
  3280                           
  3281                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3282  0AF3  0140               	movlb	0	; select bank0
  3283  0AF4  084F               	movf	vfpfcnvrt@fmt,w
  3284  0AF5  0086               	movwf	6
  3285  0AF6  0187               	clrf	7
  3286  0AF7  3F40               	moviw [0]fsr1
  3287  0AF8  00D1               	movwf	??_vfpfcnvrt
  3288  0AF9  3F41               	moviw [1]fsr1
  3289  0AFA  00D2               	movwf	??_vfpfcnvrt+1
  3290  0AFB  3001               	movlw	1
  3291  0AFC  0751               	addwf	??_vfpfcnvrt,w
  3292  0AFD  0084               	movwf	4
  3293  0AFE  0852               	movf	??_vfpfcnvrt+1,w
  3294  0AFF  1803               	skipnc
  3295  0B00  0A52               	incf	??_vfpfcnvrt+1,w
  3296  0B01  0085               	movwf	5
  3297  0B02  0800               	movf	0,w	;code access
  3298  0B03  00D3               	movwf	??_vfpfcnvrt+2
  3299  0B04  0853               	movf	??_vfpfcnvrt+2,w
  3300  0B05  00E1               	movwf	vfpfcnvrt@c
  3301  0B06  084F               	movf	vfpfcnvrt@fmt,w
  3302  0B07  0086               	movwf	6
  3303  0B08  0187               	clrf	7
  3304  0B09  3F40               	moviw [0]fsr1
  3305  0B0A  00D1               	movwf	??_vfpfcnvrt
  3306  0B0B  3F41               	moviw [1]fsr1
  3307  0B0C  00D2               	movwf	??_vfpfcnvrt+1
  3308  0B0D  0851               	movf	??_vfpfcnvrt,w
  3309  0B0E  0084               	movwf	4
  3310  0B0F  0852               	movf	??_vfpfcnvrt+1,w
  3311  0B10  0085               	movwf	5
  3312  0B11  0800               	movf	0,w	;code access
  3313  0B12  3EBF               	addlw	191
  3314  0B13  00D3               	movwf	??_vfpfcnvrt+2
  3315  0B14  30FF               	movlw	255
  3316  0B15  1803               	skipnc
  3317  0B16  3000               	movlw	0
  3318  0B17  00D4               	movwf	??_vfpfcnvrt+3
  3319  0B18  3000               	movlw	0
  3320  0B19  0254               	subwf	??_vfpfcnvrt+3,w
  3321  0B1A  301A               	movlw	26
  3322  0B1B  1903               	skipnz
  3323  0B1C  0253               	subwf	??_vfpfcnvrt+2,w
  3324  0B1D  1803               	btfsc	3,0
  3325  0B1E  2B21               	goto	u517_20
  3326  0B1F  3001               	movlw	1
  3327  0B20  2B22               	goto	u518_20
  3328  0B21                     u517_20:	
  3329  0B21  3000               	movlw	0
  3330  0B22                     u518_20:	
  3331  0B22  00D5               	movwf	??_vfpfcnvrt+4
  3332  0B23  01D6               	clrf	??_vfpfcnvrt+5
  3333  0B24  0855               	movf	??_vfpfcnvrt+4,w
  3334  0B25  00D7               	movwf	_vfpfcnvrt$445
  3335  0B26  0856               	movf	??_vfpfcnvrt+5,w
  3336  0B27  00D8               	movwf	_vfpfcnvrt$445+1
  3337  0B28  0857               	movf	_vfpfcnvrt$445,w
  3338  0B29  0458               	iorwf	_vfpfcnvrt$445+1,w
  3339  0B2A  1903               	btfsc	3,2
  3340  0B2B  2B3C               	goto	i1l3433
  3341                           
  3342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  3343  0B2C  0850               	movf	vfpfcnvrt@ap,w
  3344  0B2D  0086               	movwf	6
  3345  0B2E  0187               	clrf	7
  3346  0B2F  0801               	movf	1,w
  3347  0B30  0084               	movwf	4
  3348  0B31  0185               	clrf	5
  3349  0B32  3004               	movlw	4
  3350  0B33  0781               	addwf	1,f
  3351  0B34  3F00               	moviw [0]fsr0
  3352  0B35  00DA               	movwf	vfpfcnvrt@f
  3353  0B36  3F01               	moviw [1]fsr0
  3354  0B37  00DB               	movwf	vfpfcnvrt@f+1
  3355  0B38  3F02               	moviw [2]fsr0
  3356  0B39  00DC               	movwf	vfpfcnvrt@f+2
  3357  0B3A  3F03               	moviw [3]fsr0
  3358  0B3B  2B4B               	goto	L1
  3359  0B3C                     i1l3433:	
  3360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  3361                           
  3362                           
  3363                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3364  0B3C  0850               	movf	vfpfcnvrt@ap,w
  3365  0B3D  0086               	movwf	6
  3366  0B3E  0187               	clrf	7
  3367  0B3F  0801               	movf	1,w
  3368  0B40  0084               	movwf	4
  3369  0B41  0185               	clrf	5
  3370  0B42  3004               	movlw	4
  3371  0B43  0781               	addwf	1,f
  3372  0B44  3F00               	moviw [0]fsr0
  3373  0B45  00DA               	movwf	vfpfcnvrt@f
  3374  0B46  3F01               	moviw [1]fsr0
  3375  0B47  00DB               	movwf	vfpfcnvrt@f+1
  3376  0B48  3F02               	moviw [2]fsr0
  3377  0B49  00DC               	movwf	vfpfcnvrt@f+2
  3378  0B4A  3F03               	moviw [3]fsr0
  3379  0B4B                     L1:	
  3380  0B4B  00DD               	movwf	vfpfcnvrt@f+3
  3381                           
  3382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  3383  0B4C  084F               	movf	vfpfcnvrt@fmt,w
  3384  0B4D  0086               	movwf	6
  3385  0B4E  0187               	clrf	7
  3386  0B4F  3002               	movlw	2
  3387  0B50  0781               	addwf	1,f
  3388  0B51  3141               	addfsr 1,1
  3389  0B52  1803               	skipnc
  3390  0B53  0A81               	incf	1,f
  3391                           
  3392                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 938:             return efgto
      +                          a(fp, f, c);
  3393  0B54  085D               	movf	vfpfcnvrt@f+3,w
  3394  0B55  00C9               	movwf	efgtoa@f+3
  3395  0B56  085C               	movf	vfpfcnvrt@f+2,w
  3396  0B57  00C8               	movwf	efgtoa@f+2
  3397  0B58  085B               	movf	vfpfcnvrt@f+1,w
  3398  0B59  00C7               	movwf	efgtoa@f+1
  3399  0B5A  085A               	movf	vfpfcnvrt@f,w
  3400  0B5B  00C6               	movwf	efgtoa@f
  3401  0B5C  0861               	movf	vfpfcnvrt@c,w
  3402  0B5D  00D1               	movwf	??_vfpfcnvrt
  3403  0B5E  0851               	movf	??_vfpfcnvrt,w
  3404  0B5F  00CA               	movwf	efgtoa@c
  3405  0B60  0862               	movf	vfpfcnvrt@fp,w
  3406  0B61  3180  207F         	fcall	_efgtoa
  3407  0B63  0140               	movlb	0	; select bank0
  3408  0B64  0847               	movf	?_efgtoa+1,w
  3409  0B65  00D0               	movwf	?_vfpfcnvrt+1
  3410  0B66  0846               	movf	?_efgtoa,w
  3411  0B67  00CF               	movwf	?_vfpfcnvrt
  3412  0B68  0008               	return
  3413  0B69                     i1l3441:	
  3414                           
  3415                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  3416  0B69  0140               	movlb	0	; select bank0
  3417  0B6A  084F               	movf	vfpfcnvrt@fmt,w
  3418  0B6B  0086               	movwf	6
  3419  0B6C  0187               	clrf	7
  3420  0B6D  3F40               	moviw [0]fsr1
  3421  0B6E  00D1               	movwf	??_vfpfcnvrt
  3422  0B6F  3F41               	moviw [1]fsr1
  3423  0B70  00D2               	movwf	??_vfpfcnvrt+1
  3424  0B71  0851               	movf	??_vfpfcnvrt,w
  3425  0B72  0084               	movwf	4
  3426  0B73  0852               	movf	??_vfpfcnvrt+1,w
  3427  0B74  0085               	movwf	5
  3428  0B75  0012               	moviw fsr0++
  3429  0B76  3A6E               	xorlw	110
  3430  0B77  1D03               	btfss	3,2
  3431  0B78  2B98               	goto	i1l3453
  3432                           
  3433                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  3434  0B79  084F               	movf	vfpfcnvrt@fmt,w
  3435  0B7A  0086               	movwf	6
  3436  0B7B  0187               	clrf	7
  3437  0B7C  3001               	movlw	1
  3438  0B7D  0781               	addwf	1,f
  3439  0B7E  3141               	addfsr 1,1
  3440  0B7F  1803               	skipnc
  3441  0B80  0A81               	incf	1,f
  3442                           
  3443                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1079:             vp = (void 
      +                          *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  3444  0B81  0850               	movf	vfpfcnvrt@ap,w
  3445  0B82  0086               	movwf	6
  3446  0B83  0187               	clrf	7
  3447  0B84  3F40               	moviw [0]fsr1
  3448  0B85  0084               	movwf	4
  3449  0B86  0185               	clrf	5
  3450  0B87  0A81               	incf	1,f
  3451  0B88  0800               	movf	0,w
  3452  0B89  00D1               	movwf	??_vfpfcnvrt
  3453  0B8A  0851               	movf	??_vfpfcnvrt,w
  3454  0B8B  00D9               	movwf	vfpfcnvrt@vp
  3455                           
  3456                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1080:             *(int *)vp 
      +                          = nout;
  3457  0B8C  0859               	movf	vfpfcnvrt@vp,w
  3458  0B8D  0086               	movwf	6
  3459  0B8E  0187               	clrf	7
  3460  0B8F  0141               	movlb	1	; select bank1
  3461  0B90  0867               	movf	_nout^(0+128),w
  3462  0B91  3FC0               	movwi [0]fsr1
  3463  0B92  0868               	movf	(_nout+1)^(0+128),w
  3464  0B93  3FC1               	movwi [1]fsr1
  3465  0B94                     i1l3449:	
  3466                           
  3467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1081:             return 0;
  3468  0B94  0140               	movlb	0	; select bank0
  3469  0B95  01CF               	clrf	?_vfpfcnvrt
  3470  0B96  01D0               	clrf	?_vfpfcnvrt+1
  3471  0B97  0008               	return
  3472  0B98                     i1l3453:	
  3473                           
  3474                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3475  0B98  084F               	movf	vfpfcnvrt@fmt,w
  3476  0B99  0086               	movwf	6
  3477  0B9A  0187               	clrf	7
  3478  0B9B  3F40               	moviw [0]fsr1
  3479  0B9C  00D1               	movwf	??_vfpfcnvrt
  3480  0B9D  3F41               	moviw [1]fsr1
  3481  0B9E  00D2               	movwf	??_vfpfcnvrt+1
  3482  0B9F  0851               	movf	??_vfpfcnvrt,w
  3483  0BA0  0084               	movwf	4
  3484  0BA1  0852               	movf	??_vfpfcnvrt+1,w
  3485  0BA2  0085               	movwf	5
  3486  0BA3  0012               	moviw fsr0++
  3487  0BA4  3A25               	xorlw	37
  3488  0BA5  1D03               	btfss	3,2
  3489  0BA6  2BBF               	goto	i1l3463
  3490                           
  3491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  3492  0BA7  084F               	movf	vfpfcnvrt@fmt,w
  3493  0BA8  0086               	movwf	6
  3494  0BA9  0187               	clrf	7
  3495  0BAA  3001               	movlw	1
  3496  0BAB  0781               	addwf	1,f
  3497  0BAC  3141               	addfsr 1,1
  3498  0BAD  1803               	skipnc
  3499  0BAE  0A81               	incf	1,f
  3500                           
  3501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  3502  0BAF  3025               	movlw	37
  3503  0BB0  00F1               	movwf	fputc@c
  3504  0BB1  3000               	movlw	0
  3505  0BB2  00F2               	movwf	fputc@c+1
  3506  0BB3  0862               	movf	vfpfcnvrt@fp,w
  3507  0BB4  00D1               	movwf	??_vfpfcnvrt
  3508  0BB5  0851               	movf	??_vfpfcnvrt,w
  3509  0BB6  00F3               	movwf	fputc@fp
  3510  0BB7  3193  23EA         	fcall	_fputc
  3511  0BB9                     i1l3459:	
  3512                           
  3513                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  3514  0BB9  3001               	movlw	1
  3515  0BBA  0140               	movlb	0	; select bank0
  3516  0BBB  00CF               	movwf	?_vfpfcnvrt
  3517  0BBC  3000               	movlw	0
  3518  0BBD  00D0               	movwf	?_vfpfcnvrt+1
  3519  0BBE  0008               	return
  3520  0BBF                     i1l3463:	
  3521                           
  3522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  3523  0BBF  084F               	movf	vfpfcnvrt@fmt,w
  3524  0BC0  0086               	movwf	6
  3525  0BC1  0187               	clrf	7
  3526  0BC2  3001               	movlw	1
  3527  0BC3  0781               	addwf	1,f
  3528  0BC4  3141               	addfsr 1,1
  3529  0BC5  1803               	skipnc
  3530  0BC6  0A81               	incf	1,f
  3531  0BC7  2B94               	goto	i1l3449
  3532  0BC8                     i1l3469:	
  3533                           
  3534                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3535  0BC8  084F               	movf	vfpfcnvrt@fmt,w
  3536  0BC9  0086               	movwf	6
  3537  0BCA  0187               	clrf	7
  3538  0BCB  3F40               	moviw [0]fsr1
  3539  0BCC  00D1               	movwf	??_vfpfcnvrt
  3540  0BCD  3F41               	moviw [1]fsr1
  3541  0BCE  00D2               	movwf	??_vfpfcnvrt+1
  3542  0BCF  0851               	movf	??_vfpfcnvrt,w
  3543  0BD0  0084               	movwf	4
  3544  0BD1  0852               	movf	??_vfpfcnvrt+1,w
  3545  0BD2  0085               	movwf	5
  3546  0BD3  0800               	movf	0,w	;code access
  3547  0BD4  00D3               	movwf	??_vfpfcnvrt+2
  3548  0BD5  01D4               	clrf	??_vfpfcnvrt+3
  3549  0BD6  0853               	movf	??_vfpfcnvrt+2,w
  3550  0BD7  00F1               	movwf	fputc@c
  3551  0BD8  0854               	movf	??_vfpfcnvrt+3,w
  3552  0BD9  00F2               	movwf	fputc@c+1
  3553  0BDA  0862               	movf	vfpfcnvrt@fp,w
  3554  0BDB  00D5               	movwf	??_vfpfcnvrt+4
  3555  0BDC  0855               	movf	??_vfpfcnvrt+4,w
  3556  0BDD  00F3               	movwf	fputc@fp
  3557  0BDE  3193  23EA  318A   	fcall	_fputc
  3558                           
  3559                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3560  0BE1  0140               	movlb	0	; select bank0
  3561  0BE2  084F               	movf	vfpfcnvrt@fmt,w
  3562  0BE3  0086               	movwf	6
  3563  0BE4  0187               	clrf	7
  3564  0BE5  3001               	movlw	1
  3565  0BE6  0781               	addwf	1,f
  3566  0BE7  3141               	addfsr 1,1
  3567  0BE8  1803               	skipnc
  3568  0BE9  0A81               	incf	1,f
  3569  0BEA  2BB9               	goto	i1l3459
  3570  0BEB                     __end_of_vfpfcnvrt:	
  3571                           
  3572                           	psect	text9
  3573  14AC                     __ptext9:	
  3574 ;; *************** function _strncmp *****************
  3575 ;; Defined at:
  3576 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  _l              1    wreg     PTR const unsigned char 
  3579 ;;		 -> vfpfcnvrt@ct(3), 
  3580 ;;  _r              2    0[COMMON] PTR const unsigned char 
  3581 ;;		 -> STR_13(3), 
  3582 ;;  n               2    2[COMMON] unsigned int 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  _l              1    5[COMMON] PTR const unsigned char 
  3585 ;;		 -> vfpfcnvrt@ct(3), 
  3586 ;;  r               2    6[COMMON] PTR const unsigned char 
  3587 ;;		 -> STR_13(3), 
  3588 ;;  l               1    8[COMMON] PTR const unsigned char 
  3589 ;;		 -> vfpfcnvrt@ct(3), 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  2    0[COMMON] int 
  3592 ;; Registers used:
  3593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3600 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3602 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3603 ;;Total ram usage:        9 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_vfpfcnvrt
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           
  3613                           ;psect for function _strncmp
  3614  14AC                     _strncmp:	
  3615                           
  3616                           ;incstack = 0
  3617                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  3618                           ;strncmp@_l stored from wreg
  3619  14AC  00F5               	movwf	strncmp@_l
  3620  14AD  0875               	movf	strncmp@_l,w
  3621  14AE  00F4               	movwf	??_strncmp
  3622  14AF  0874               	movf	??_strncmp,w
  3623  14B0  00F8               	movwf	strncmp@l
  3624  14B1  0871               	movf	strncmp@_r+1,w
  3625  14B2  00F7               	movwf	strncmp@r+1
  3626  14B3  0870               	movf	strncmp@_r,w
  3627  14B4  00F6               	movwf	strncmp@r
  3628  14B5  3001               	movlw	1
  3629  14B6  02F2               	subwf	strncmp@n,f
  3630  14B7  3000               	movlw	0
  3631  14B8  3BF3               	subwfb	strncmp@n+1,f
  3632  14B9  0A72               	incf	strncmp@n,w
  3633  14BA  1D03               	skipz
  3634  14BB  2CE6               	goto	i1l3381
  3635  14BC  0A73               	incf	strncmp@n+1,w
  3636  14BD  1D03               	btfss	3,2
  3637  14BE  2CE6               	goto	i1l3381
  3638  14BF  01F0               	clrf	?_strncmp
  3639  14C0  01F1               	clrf	?_strncmp+1
  3640  14C1  0008               	return
  3641  14C2                     i1l3383:	
  3642  14C2  0876               	movf	strncmp@r,w
  3643  14C3  0084               	movwf	4
  3644  14C4  0877               	movf	strncmp@r+1,w
  3645  14C5  0085               	movwf	5
  3646  14C6  0012               	moviw fsr0++
  3647  14C7  1903               	btfsc	3,2
  3648  14C8  2CEC               	goto	i1l3389
  3649  14C9  0872               	movf	strncmp@n,w
  3650  14CA  0473               	iorwf	strncmp@n+1,w
  3651  14CB  1903               	btfsc	3,2
  3652  14CC  2CEC               	goto	i1l3389
  3653  14CD  0876               	movf	strncmp@r,w
  3654  14CE  0084               	movwf	4
  3655  14CF  0877               	movf	strncmp@r+1,w
  3656  14D0  0085               	movwf	5
  3657  14D1  0800               	movf	0,w	;code access
  3658  14D2  00F4               	movwf	??_strncmp
  3659  14D3  0878               	movf	strncmp@l,w
  3660  14D4  0086               	movwf	6
  3661  14D5  0187               	clrf	7
  3662  14D6  0801               	movf	1,w
  3663  14D7  0674               	xorwf	??_strncmp,w
  3664  14D8  1D03               	btfss	3,2
  3665  14D9  2CEC               	goto	i1l3389
  3666  14DA  3001               	movlw	1
  3667  14DB  00F4               	movwf	??_strncmp
  3668  14DC  0874               	movf	??_strncmp,w
  3669  14DD  07F8               	addwf	strncmp@l,f
  3670  14DE  3001               	movlw	1
  3671  14DF  07F6               	addwf	strncmp@r,f
  3672  14E0  3000               	movlw	0
  3673  14E1  3DF7               	addwfc	strncmp@r+1,f
  3674  14E2  3001               	movlw	1
  3675  14E3  02F2               	subwf	strncmp@n,f
  3676  14E4  3000               	movlw	0
  3677  14E5  3BF3               	subwfb	strncmp@n+1,f
  3678  14E6                     i1l3381:	
  3679  14E6  0878               	movf	strncmp@l,w
  3680  14E7  0086               	movwf	6
  3681  14E8  0187               	clrf	7
  3682  14E9  0801               	movf	1,w
  3683  14EA  1D03               	btfss	3,2
  3684  14EB  2CC2               	goto	i1l3383
  3685  14EC                     i1l3389:	
  3686  14EC  0878               	movf	strncmp@l,w
  3687  14ED  0086               	movwf	6
  3688  14EE  0187               	clrf	7
  3689  14EF  0876               	movf	strncmp@r,w
  3690  14F0  0084               	movwf	4
  3691  14F1  0877               	movf	strncmp@r+1,w
  3692  14F2  0085               	movwf	5
  3693  14F3  0800               	movf	0,w	;code access
  3694  14F4  0201               	subwf	1,w
  3695  14F5  00F0               	movwf	?_strncmp
  3696  14F6  01F1               	clrf	?_strncmp+1
  3697  14F7  1C03               	skipc
  3698  14F8  03F1               	decf	?_strncmp+1,f
  3699  14F9  0008               	return
  3700  14FA                     __end_of_strncmp:	
  3701                           
  3702                           	psect	text10
  3703  007F                     __ptext10:	
  3704 ;; *************** function _efgtoa *****************
  3705 ;; Defined at:
  3706 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  fp              1    wreg     PTR struct _IO_FILE
  3709 ;;		 -> NULL(0), 
  3710 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  3711 ;;  c               1   42[BANK0 ] unsigned char 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  fp              1   30[BANK1 ] PTR struct _IO_FILE
  3714 ;;		 -> NULL(0), 
  3715 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  3716 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  3717 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  3718 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  3719 ;;  ou              4    0[BANK1 ] PTR struct _IO_FILE
  3720 ;;  n               2   51[BANK1 ] int 
  3721 ;;  e               2   49[BANK1 ] int 
  3722 ;;  i               2   43[BANK1 ] int 
  3723 ;;  w               2   32[BANK1 ] int 
  3724 ;;  p               2   28[BANK1 ] int 
  3725 ;;  sign            2   26[BANK1 ] int 
  3726 ;;  d               2   24[BANK1 ] int 
  3727 ;;  ne              2   22[BANK1 ] int 
  3728 ;;  m               2   20[BANK1 ] int 
  3729 ;;  pp              2   18[BANK1 ] int 
  3730 ;;  t               2   16[BANK1 ] int 
  3731 ;;  mode            1   34[BANK1 ] unsigned char 
  3732 ;;  nmode           1   31[BANK1 ] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2   38[BANK0 ] int 
  3735 ;; Registers used:
  3736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3742 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3743 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  3744 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3745 ;;      Totals:         0       9      57       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;Total ram usage:       66 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    4
  3749 ;; This function calls:
  3750 ;;		___awdiv
  3751 ;;		___awmod
  3752 ;;		___fladd
  3753 ;;		___fldiv
  3754 ;;		___fleq
  3755 ;;		___flge
  3756 ;;		___flmul
  3757 ;;		___flneg
  3758 ;;		___flsub
  3759 ;;		___fltol
  3760 ;;		___fpclassifyf
  3761 ;;		_floorf
  3762 ;;		_isupper
  3763 ;;		_pad
  3764 ;;		_strcpy
  3765 ;;		_tolower
  3766 ;; This function is called by:
  3767 ;;		_vfpfcnvrt
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           
  3772                           ;psect for function _efgtoa
  3773  007F                     _efgtoa:	
  3774                           
  3775                           ;incstack = 0
  3776                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3777                           ;efgtoa@fp stored from wreg
  3778  007F  0141               	movlb	1	; select bank1
  3779  0080  00BE               	movwf	efgtoa@fp^(0+128)
  3780                           
  3781                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  3782  0081  01BA               	clrf	efgtoa@sign^(0+128)
  3783  0082  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  3784                           
  3785                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  3786  0083  0140               	movlb	0	; select bank0
  3787  0084  0849               	movf	efgtoa@f+3,w
  3788  0085  0141               	movlb	1	; select bank1
  3789  0086  00D0               	movwf	(efgtoa@g+3)^(0+128)
  3790  0087  0140               	movlb	0	; select bank0
  3791  0088  0848               	movf	efgtoa@f+2,w
  3792  0089  0141               	movlb	1	; select bank1
  3793  008A  00CF               	movwf	(efgtoa@g+2)^(0+128)
  3794  008B  0140               	movlb	0	; select bank0
  3795  008C  0847               	movf	efgtoa@f+1,w
  3796  008D  0141               	movlb	1	; select bank1
  3797  008E  00CE               	movwf	(efgtoa@g+1)^(0+128)
  3798  008F  0140               	movlb	0	; select bank0
  3799  0090  0846               	movf	efgtoa@f,w
  3800  0091  0141               	movlb	1	; select bank1
  3801  0092  00CD               	movwf	efgtoa@g^(0+128)
  3802                           
  3803                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  3804  0093  0850               	movf	(efgtoa@g+3)^(0+128),w
  3805  0094  0140               	movlb	0	; select bank0
  3806  0095  00BD               	movwf	___flge@ff1+3
  3807  0096  0141               	movlb	1	; select bank1
  3808  0097  084F               	movf	(efgtoa@g+2)^(0+128),w
  3809  0098  0140               	movlb	0	; select bank0
  3810  0099  00BC               	movwf	___flge@ff1+2
  3811  009A  0141               	movlb	1	; select bank1
  3812  009B  084E               	movf	(efgtoa@g+1)^(0+128),w
  3813  009C  0140               	movlb	0	; select bank0
  3814  009D  00BB               	movwf	___flge@ff1+1
  3815  009E  0141               	movlb	1	; select bank1
  3816  009F  084D               	movf	efgtoa@g^(0+128),w
  3817  00A0  0140               	movlb	0	; select bank0
  3818  00A1  00BA               	movwf	___flge@ff1
  3819  00A2  3000               	movlw	0
  3820  00A3  00C1               	movwf	___flge@ff2+3
  3821  00A4  3000               	movlw	0
  3822  00A5  00C0               	movwf	___flge@ff2+2
  3823  00A6  3000               	movlw	0
  3824  00A7  00BF               	movwf	___flge@ff2+1
  3825  00A8  3000               	movlw	0
  3826  00A9  00BE               	movwf	___flge@ff2
  3827  00AA  3196  266D  3180   	fcall	___flge
  3828  00AD  1803               	btfsc	3,0
  3829  00AE  28C8               	goto	i1l3085
  3830                           
  3831                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  3832  00AF  3001               	movlw	1
  3833  00B0  0141               	movlb	1	; select bank1
  3834  00B1  00BA               	movwf	efgtoa@sign^(0+128)
  3835  00B2  3000               	movlw	0
  3836  00B3  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  3837                           
  3838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  3839  00B4  0850               	movf	(efgtoa@g+3)^(0+128),w
  3840  00B5  00F3               	movwf	___flneg@f1+3
  3841  00B6  084F               	movf	(efgtoa@g+2)^(0+128),w
  3842  00B7  00F2               	movwf	___flneg@f1+2
  3843  00B8  084E               	movf	(efgtoa@g+1)^(0+128),w
  3844  00B9  00F1               	movwf	___flneg@f1+1
  3845  00BA  084D               	movf	efgtoa@g^(0+128),w
  3846  00BB  00F0               	movwf	___flneg@f1
  3847  00BC  3188  2004  3180   	fcall	___flneg
  3848  00BF  0873               	movf	?___flneg+3,w
  3849  00C0  0141               	movlb	1	; select bank1
  3850  00C1  00D0               	movwf	(efgtoa@g+3)^(0+128)
  3851  00C2  0872               	movf	?___flneg+2,w
  3852  00C3  00CF               	movwf	(efgtoa@g+2)^(0+128)
  3853  00C4  0871               	movf	?___flneg+1,w
  3854  00C5  00CE               	movwf	(efgtoa@g+1)^(0+128)
  3855  00C6  0870               	movf	?___flneg,w
  3856  00C7  00CD               	movwf	efgtoa@g^(0+128)
  3857  00C8                     i1l3085:	
  3858                           
  3859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  3860  00C8  0141               	movlb	1	; select bank1
  3861  00C9  01D3               	clrf	efgtoa@n^(0+128)
  3862  00CA  01D4               	clrf	(efgtoa@n+1)^(0+128)
  3863                           
  3864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  3865  00CB  086A               	movf	(_width+1)^(0+128),w
  3866  00CC  00C1               	movwf	(efgtoa@w+1)^(0+128)
  3867  00CD  0869               	movf	_width^(0+128),w
  3868  00CE  00C0               	movwf	efgtoa@w^(0+128)
  3869                           
  3870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  3871  00CF  083A               	movf	efgtoa@sign^(0+128),w
  3872  00D0  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  3873  00D1  1D03               	btfss	3,2
  3874  00D2  28D5               	goto	i1l3093
  3875  00D3  1D6D               	btfss	_flags^(0+128),2
  3876  00D4  28EE               	goto	i1l3105
  3877  00D5                     i1l3093:	
  3878                           
  3879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  3880  00D5  083A               	movf	efgtoa@sign^(0+128),w
  3881  00D6  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  3882  00D7  1D03               	btfss	3,2
  3883  00D8  28DB               	goto	i1l3097
  3884  00D9  302B               	movlw	43
  3885  00DA  28DC               	goto	L2
  3886  00DB                     i1l3097:	
  3887  00DB  302D               	movlw	45
  3888  00DC                     L2:	
  3889  00DC  00A4               	movwf	_efgtoa$416^(0+128)
  3890  00DD  3000               	movlw	0
  3891  00DE  00A5               	movwf	(_efgtoa$416^(0+128)+1)
  3892  00DF  0824               	movf	_efgtoa$416^(0+128),w
  3893  00E0  0140               	movlb	0	; select bank0
  3894  00E1  00CB               	movwf	??_efgtoa
  3895  00E2  084B               	movf	??_efgtoa,w
  3896  00E3  0143               	movlb	3	; select bank3
  3897  00E4  00A0               	movwf	_dbuf^(0+384)
  3898                           
  3899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  3900  00E5  3001               	movlw	1
  3901  00E6  0141               	movlb	1	; select bank1
  3902  00E7  07D3               	addwf	efgtoa@n^(0+128),f
  3903  00E8  3000               	movlw	0
  3904  00E9  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  3905                           
  3906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  3907  00EA  30FF               	movlw	255
  3908  00EB  07C0               	addwf	efgtoa@w^(0+128),f
  3909  00EC  30FF               	movlw	255
  3910  00ED  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  3911  00EE                     i1l3105:	
  3912                           
  3913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3914  00EE  0850               	movf	(efgtoa@g+3)^(0+128),w
  3915  00EF  00F3               	movwf	___fpclassifyf@x+3
  3916  00F0  084F               	movf	(efgtoa@g+2)^(0+128),w
  3917  00F1  00F2               	movwf	___fpclassifyf@x+2
  3918  00F2  084E               	movf	(efgtoa@g+1)^(0+128),w
  3919  00F3  00F1               	movwf	___fpclassifyf@x+1
  3920  00F4  084D               	movf	efgtoa@g^(0+128),w
  3921  00F5  00F0               	movwf	___fpclassifyf@x
  3922  00F6  3195  25F5  3180   	fcall	___fpclassifyf
  3923  00F9  0370               	decf	?___fpclassifyf,w
  3924  00FA  0471               	iorwf	?___fpclassifyf+1,w
  3925  00FB  1D03               	btfss	3,2
  3926  00FC  2945               	goto	i1l3123
  3927  00FD  0140               	movlb	0	; select bank0
  3928  00FE  084A               	movf	efgtoa@c,w
  3929  00FF  3EBF               	addlw	191
  3930  0100  00CB               	movwf	??_efgtoa
  3931  0101  30FF               	movlw	255
  3932  0102  1803               	skipnc
  3933  0103  3000               	movlw	0
  3934  0104  00CC               	movwf	??_efgtoa+1
  3935  0105  3000               	movlw	0
  3936  0106  024C               	subwf	??_efgtoa+1,w
  3937  0107  301A               	movlw	26
  3938  0108  1903               	skipnz
  3939  0109  024B               	subwf	??_efgtoa,w
  3940  010A  1803               	btfsc	3,0
  3941  010B  290E               	goto	u460_20
  3942  010C  3001               	movlw	1
  3943  010D  290F               	goto	u461_20
  3944  010E                     u460_20:	
  3945  010E  3000               	movlw	0
  3946  010F                     u461_20:	
  3947  010F  00CD               	movwf	??_efgtoa+2
  3948  0110  01CE               	clrf	??_efgtoa+3
  3949  0111  084D               	movf	??_efgtoa+2,w
  3950  0112  0141               	movlb	1	; select bank1
  3951  0113  00A6               	movwf	_efgtoa$417^(0+128)
  3952  0114  0140               	movlb	0	; select bank0
  3953  0115  084E               	movf	??_efgtoa+3,w
  3954  0116  0141               	movlb	1	; select bank1
  3955  0117  00A7               	movwf	(_efgtoa$417+1)^(0+128)
  3956  0118  0826               	movf	_efgtoa$417^(0+128),w
  3957  0119  0427               	iorwf	(_efgtoa$417+1)^(0+128),w
  3958  011A  1903               	btfsc	3,2
  3959  011B  2920               	goto	i1l3115
  3960                           
  3961                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  3962  011C  3007               	movlw	low (STR_3| (0+32768))
  3963  011D  00F0               	movwf	strcpy@src
  3964  011E  3098               	movlw	high (STR_3| (0+32768))
  3965  011F  2923               	goto	L3
  3966  0120                     i1l3115:	
  3967                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  3968                           
  3969                           
  3970                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  3971  0120  300F               	movlw	low (STR_4| (0+32768))
  3972  0121  00F0               	movwf	strcpy@src
  3973  0122  3098               	movlw	high (STR_4| (0+32768))
  3974  0123                     L3:	
  3975  0123  00F1               	movwf	strcpy@src+1
  3976  0124  0853               	movf	efgtoa@n^(0+128),w
  3977  0125  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3978  0126  3193  2355  3180   	fcall	_strcpy
  3979                           
  3980                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  3981  0129  30FD               	movlw	253
  3982  012A  0141               	movlb	1	; select bank1
  3983  012B  07C0               	addwf	efgtoa@w^(0+128),f
  3984  012C  30FF               	movlw	255
  3985  012D  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  3986                           
  3987                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  3988  012E  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3989  012F  0140               	movlb	0	; select bank0
  3990  0130  00CB               	movwf	??_efgtoa
  3991  0131  084B               	movf	??_efgtoa,w
  3992  0132  00A4               	movwf	pad@buf
  3993  0133  0141               	movlb	1	; select bank1
  3994  0134  0841               	movf	(efgtoa@w+1)^(0+128),w
  3995  0135  0140               	movlb	0	; select bank0
  3996  0136  00A6               	movwf	pad@p+1
  3997  0137  0141               	movlb	1	; select bank1
  3998  0138  0840               	movf	efgtoa@w^(0+128),w
  3999  0139  0140               	movlb	0	; select bank0
  4000  013A  00A5               	movwf	pad@p
  4001  013B  0141               	movlb	1	; select bank1
  4002  013C  083E               	movf	efgtoa@fp^(0+128),w
  4003  013D  3194  24FA         	fcall	_pad
  4004  013F  0140               	movlb	0	; select bank0
  4005  0140  0825               	movf	?_pad+1,w
  4006  0141  00C7               	movwf	?_efgtoa+1
  4007  0142  0824               	movf	?_pad,w
  4008  0143  00C6               	movwf	?_efgtoa
  4009  0144  0008               	return
  4010  0145                     i1l3123:	
  4011                           
  4012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4013  0145  0141               	movlb	1	; select bank1
  4014  0146  0850               	movf	(efgtoa@g+3)^(0+128),w
  4015  0147  00F3               	movwf	___fpclassifyf@x+3
  4016  0148  084F               	movf	(efgtoa@g+2)^(0+128),w
  4017  0149  00F2               	movwf	___fpclassifyf@x+2
  4018  014A  084E               	movf	(efgtoa@g+1)^(0+128),w
  4019  014B  00F1               	movwf	___fpclassifyf@x+1
  4020  014C  084D               	movf	efgtoa@g^(0+128),w
  4021  014D  00F0               	movwf	___fpclassifyf@x
  4022  014E  3195  25F5  3180   	fcall	___fpclassifyf
  4023  0151  0870               	movf	?___fpclassifyf,w
  4024  0152  0471               	iorwf	?___fpclassifyf+1,w
  4025  0153  1D03               	btfss	3,2
  4026  0154  299D               	goto	i1l3141
  4027  0155  0140               	movlb	0	; select bank0
  4028  0156  084A               	movf	efgtoa@c,w
  4029  0157  3EBF               	addlw	191
  4030  0158  00CB               	movwf	??_efgtoa
  4031  0159  30FF               	movlw	255
  4032  015A  1803               	skipnc
  4033  015B  3000               	movlw	0
  4034  015C  00CC               	movwf	??_efgtoa+1
  4035  015D  3000               	movlw	0
  4036  015E  024C               	subwf	??_efgtoa+1,w
  4037  015F  301A               	movlw	26
  4038  0160  1903               	skipnz
  4039  0161  024B               	subwf	??_efgtoa,w
  4040  0162  1803               	btfsc	3,0
  4041  0163  2966               	goto	u464_20
  4042  0164  3001               	movlw	1
  4043  0165  2967               	goto	u465_20
  4044  0166                     u464_20:	
  4045  0166  3000               	movlw	0
  4046  0167                     u465_20:	
  4047  0167  00CD               	movwf	??_efgtoa+2
  4048  0168  01CE               	clrf	??_efgtoa+3
  4049  0169  084D               	movf	??_efgtoa+2,w
  4050  016A  0141               	movlb	1	; select bank1
  4051  016B  00A8               	movwf	_efgtoa$422^(0+128)
  4052  016C  0140               	movlb	0	; select bank0
  4053  016D  084E               	movf	??_efgtoa+3,w
  4054  016E  0141               	movlb	1	; select bank1
  4055  016F  00A9               	movwf	(_efgtoa$422+1)^(0+128)
  4056  0170  0828               	movf	_efgtoa$422^(0+128),w
  4057  0171  0429               	iorwf	(_efgtoa$422+1)^(0+128),w
  4058  0172  1903               	btfsc	3,2
  4059  0173  2978               	goto	i1l3133
  4060                           
  4061                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  4062  0174  300B               	movlw	low (STR_7| (0+32768))
  4063  0175  00F0               	movwf	strcpy@src
  4064  0176  3098               	movlw	high (STR_7| (0+32768))
  4065  0177  297B               	goto	L4
  4066  0178                     i1l3133:	
  4067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  4068                           
  4069                           
  4070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  4071  0178  3013               	movlw	low (STR_8| (0+32768))
  4072  0179  00F0               	movwf	strcpy@src
  4073  017A  3098               	movlw	high (STR_8| (0+32768))
  4074  017B                     L4:	
  4075  017B  00F1               	movwf	strcpy@src+1
  4076  017C  0853               	movf	efgtoa@n^(0+128),w
  4077  017D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4078  017E  3193  2355  3180   	fcall	_strcpy
  4079                           
  4080                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 358:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  4081  0181  30FD               	movlw	253
  4082  0182  0141               	movlb	1	; select bank1
  4083  0183  07C0               	addwf	efgtoa@w^(0+128),f
  4084  0184  30FF               	movlw	255
  4085  0185  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  4086                           
  4087                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 359:         return pad(fp, &
      +                          dbuf[0], w);
  4088  0186  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  4089  0187  0140               	movlb	0	; select bank0
  4090  0188  00CB               	movwf	??_efgtoa
  4091  0189  084B               	movf	??_efgtoa,w
  4092  018A  00A4               	movwf	pad@buf
  4093  018B  0141               	movlb	1	; select bank1
  4094  018C  0841               	movf	(efgtoa@w+1)^(0+128),w
  4095  018D  0140               	movlb	0	; select bank0
  4096  018E  00A6               	movwf	pad@p+1
  4097  018F  0141               	movlb	1	; select bank1
  4098  0190  0840               	movf	efgtoa@w^(0+128),w
  4099  0191  0140               	movlb	0	; select bank0
  4100  0192  00A5               	movwf	pad@p
  4101  0193  0141               	movlb	1	; select bank1
  4102  0194  083E               	movf	efgtoa@fp^(0+128),w
  4103  0195  3194  24FA         	fcall	_pad
  4104  0197  0140               	movlb	0	; select bank0
  4105  0198  0825               	movf	?_pad+1,w
  4106  0199  00C7               	movwf	?_efgtoa+1
  4107  019A  0824               	movf	?_pad,w
  4108  019B  00C6               	movwf	?_efgtoa
  4109  019C  0008               	return
  4110  019D                     i1l3141:	
  4111                           
  4112                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  4113  019D  303F               	movlw	63
  4114  019E  0141               	movlb	1	; select bank1
  4115  019F  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4116  01A0  3080               	movlw	128
  4117  01A1  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4118  01A2  3000               	movlw	0
  4119  01A3  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4120  01A4  3000               	movlw	0
  4121  01A5  00D5               	movwf	efgtoa@u^(0+128)
  4122                           
  4123                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  4124  01A6  01D1               	clrf	efgtoa@e^(0+128)
  4125  01A7  01D2               	clrf	(efgtoa@e+1)^(0+128)
  4126                           
  4127                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  4128  01A8  0850               	movf	(efgtoa@g+3)^(0+128),w
  4129  01A9  00F3               	movwf	___fleq@ff1+3
  4130  01AA  084F               	movf	(efgtoa@g+2)^(0+128),w
  4131  01AB  00F2               	movwf	___fleq@ff1+2
  4132  01AC  084E               	movf	(efgtoa@g+1)^(0+128),w
  4133  01AD  00F1               	movwf	___fleq@ff1+1
  4134  01AE  084D               	movf	efgtoa@g^(0+128),w
  4135  01AF  00F0               	movwf	___fleq@ff1
  4136  01B0  3000               	movlw	0
  4137  01B1  00F7               	movwf	___fleq@ff2+3
  4138  01B2  3000               	movlw	0
  4139  01B3  00F6               	movwf	___fleq@ff2+2
  4140  01B4  3000               	movlw	0
  4141  01B5  00F5               	movwf	___fleq@ff2+1
  4142  01B6  3000               	movlw	0
  4143  01B7  00F4               	movwf	___fleq@ff2
  4144  01B8  3194  2464  3180   	fcall	___fleq
  4145  01BB  1C03               	btfss	3,0
  4146  01BC  29EE               	goto	i1l3153
  4147  01BD  2A6E               	goto	i1l3161
  4148  01BE                     i1l3149:	
  4149                           
  4150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  4151  01BE  3041               	movlw	65
  4152  01BF  0140               	movlb	0	; select bank0
  4153  01C0  00A3               	movwf	___flmul@b+3
  4154  01C1  3020               	movlw	32
  4155  01C2  00A2               	movwf	___flmul@b+2
  4156  01C3  3000               	movlw	0
  4157  01C4  00A1               	movwf	___flmul@b+1
  4158  01C5  3000               	movlw	0
  4159  01C6  00A0               	movwf	___flmul@b
  4160  01C7  0141               	movlb	1	; select bank1
  4161  01C8  0858               	movf	(efgtoa@u+3)^(0+128),w
  4162  01C9  0140               	movlb	0	; select bank0
  4163  01CA  00A7               	movwf	___flmul@a+3
  4164  01CB  0141               	movlb	1	; select bank1
  4165  01CC  0857               	movf	(efgtoa@u+2)^(0+128),w
  4166  01CD  0140               	movlb	0	; select bank0
  4167  01CE  00A6               	movwf	___flmul@a+2
  4168  01CF  0141               	movlb	1	; select bank1
  4169  01D0  0856               	movf	(efgtoa@u+1)^(0+128),w
  4170  01D1  0140               	movlb	0	; select bank0
  4171  01D2  00A5               	movwf	___flmul@a+1
  4172  01D3  0141               	movlb	1	; select bank1
  4173  01D4  0855               	movf	efgtoa@u^(0+128),w
  4174  01D5  0140               	movlb	0	; select bank0
  4175  01D6  00A4               	movwf	___flmul@a
  4176  01D7  318D  25D4  3180   	fcall	___flmul
  4177  01DA  0140               	movlb	0	; select bank0
  4178  01DB  0823               	movf	?___flmul+3,w
  4179  01DC  0141               	movlb	1	; select bank1
  4180  01DD  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4181  01DE  0140               	movlb	0	; select bank0
  4182  01DF  0822               	movf	?___flmul+2,w
  4183  01E0  0141               	movlb	1	; select bank1
  4184  01E1  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4185  01E2  0140               	movlb	0	; select bank0
  4186  01E3  0821               	movf	?___flmul+1,w
  4187  01E4  0141               	movlb	1	; select bank1
  4188  01E5  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4189  01E6  0140               	movlb	0	; select bank0
  4190  01E7  0820               	movf	?___flmul,w
  4191  01E8  0141               	movlb	1	; select bank1
  4192  01E9  00D5               	movwf	efgtoa@u^(0+128)
  4193                           
  4194                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  4195  01EA  3001               	movlw	1
  4196  01EB  07D1               	addwf	efgtoa@e^(0+128),f
  4197  01EC  3000               	movlw	0
  4198  01ED  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  4199  01EE                     i1l3153:	
  4200                           
  4201                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  4202  01EE  0141               	movlb	1	; select bank1
  4203  01EF  0850               	movf	(efgtoa@g+3)^(0+128),w
  4204  01F0  0140               	movlb	0	; select bank0
  4205  01F1  00BD               	movwf	___flge@ff1+3
  4206  01F2  0141               	movlb	1	; select bank1
  4207  01F3  084F               	movf	(efgtoa@g+2)^(0+128),w
  4208  01F4  0140               	movlb	0	; select bank0
  4209  01F5  00BC               	movwf	___flge@ff1+2
  4210  01F6  0141               	movlb	1	; select bank1
  4211  01F7  084E               	movf	(efgtoa@g+1)^(0+128),w
  4212  01F8  0140               	movlb	0	; select bank0
  4213  01F9  00BB               	movwf	___flge@ff1+1
  4214  01FA  0141               	movlb	1	; select bank1
  4215  01FB  084D               	movf	efgtoa@g^(0+128),w
  4216  01FC  0140               	movlb	0	; select bank0
  4217  01FD  00BA               	movwf	___flge@ff1
  4218  01FE  3041               	movlw	65
  4219  01FF  00A3               	movwf	___flmul@b+3
  4220  0200  3020               	movlw	32
  4221  0201  00A2               	movwf	___flmul@b+2
  4222  0202  3000               	movlw	0
  4223  0203  00A1               	movwf	___flmul@b+1
  4224  0204  3000               	movlw	0
  4225  0205  00A0               	movwf	___flmul@b
  4226  0206  0141               	movlb	1	; select bank1
  4227  0207  0858               	movf	(efgtoa@u+3)^(0+128),w
  4228  0208  0140               	movlb	0	; select bank0
  4229  0209  00A7               	movwf	___flmul@a+3
  4230  020A  0141               	movlb	1	; select bank1
  4231  020B  0857               	movf	(efgtoa@u+2)^(0+128),w
  4232  020C  0140               	movlb	0	; select bank0
  4233  020D  00A6               	movwf	___flmul@a+2
  4234  020E  0141               	movlb	1	; select bank1
  4235  020F  0856               	movf	(efgtoa@u+1)^(0+128),w
  4236  0210  0140               	movlb	0	; select bank0
  4237  0211  00A5               	movwf	___flmul@a+1
  4238  0212  0141               	movlb	1	; select bank1
  4239  0213  0855               	movf	efgtoa@u^(0+128),w
  4240  0214  0140               	movlb	0	; select bank0
  4241  0215  00A4               	movwf	___flmul@a
  4242  0216  318D  25D4  3180   	fcall	___flmul
  4243  0219  0140               	movlb	0	; select bank0
  4244  021A  0823               	movf	?___flmul+3,w
  4245  021B  00C1               	movwf	___flge@ff2+3
  4246  021C  0822               	movf	?___flmul+2,w
  4247  021D  00C0               	movwf	___flge@ff2+2
  4248  021E  0821               	movf	?___flmul+1,w
  4249  021F  00BF               	movwf	___flge@ff2+1
  4250  0220  0820               	movf	?___flmul,w
  4251  0221  00BE               	movwf	___flge@ff2
  4252  0222  3196  266D  3180   	fcall	___flge
  4253  0225  1C03               	btfss	3,0
  4254  0226  2A49               	goto	i1l3159
  4255  0227  29BE               	goto	i1l3149
  4256  0228                     i1l3155:	
  4257                           
  4258                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  4259  0228  3041               	movlw	65
  4260  0229  00F3               	movwf	___fldiv@a+3
  4261  022A  3020               	movlw	32
  4262  022B  00F2               	movwf	___fldiv@a+2
  4263  022C  3000               	movlw	0
  4264  022D  00F1               	movwf	___fldiv@a+1
  4265  022E  3000               	movlw	0
  4266  022F  00F0               	movwf	___fldiv@a
  4267  0230  0141               	movlb	1	; select bank1
  4268  0231  0858               	movf	(efgtoa@u+3)^(0+128),w
  4269  0232  00F7               	movwf	___fldiv@b+3
  4270  0233  0857               	movf	(efgtoa@u+2)^(0+128),w
  4271  0234  00F6               	movwf	___fldiv@b+2
  4272  0235  0856               	movf	(efgtoa@u+1)^(0+128),w
  4273  0236  00F5               	movwf	___fldiv@b+1
  4274  0237  0855               	movf	efgtoa@u^(0+128),w
  4275  0238  00F4               	movwf	___fldiv@b
  4276  0239  3188  20AC  3180   	fcall	___fldiv
  4277  023C  0873               	movf	?___fldiv+3,w
  4278  023D  0141               	movlb	1	; select bank1
  4279  023E  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4280  023F  0872               	movf	?___fldiv+2,w
  4281  0240  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4282  0241  0871               	movf	?___fldiv+1,w
  4283  0242  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4284  0243  0870               	movf	?___fldiv,w
  4285  0244  00D5               	movwf	efgtoa@u^(0+128)
  4286                           
  4287                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  4288  0245  30FF               	movlw	255
  4289  0246  07D1               	addwf	efgtoa@e^(0+128),f
  4290  0247  30FF               	movlw	255
  4291  0248  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  4292  0249                     i1l3159:	
  4293                           
  4294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  4295  0249  0141               	movlb	1	; select bank1
  4296  024A  0850               	movf	(efgtoa@g+3)^(0+128),w
  4297  024B  0140               	movlb	0	; select bank0
  4298  024C  00BD               	movwf	___flge@ff1+3
  4299  024D  0141               	movlb	1	; select bank1
  4300  024E  084F               	movf	(efgtoa@g+2)^(0+128),w
  4301  024F  0140               	movlb	0	; select bank0
  4302  0250  00BC               	movwf	___flge@ff1+2
  4303  0251  0141               	movlb	1	; select bank1
  4304  0252  084E               	movf	(efgtoa@g+1)^(0+128),w
  4305  0253  0140               	movlb	0	; select bank0
  4306  0254  00BB               	movwf	___flge@ff1+1
  4307  0255  0141               	movlb	1	; select bank1
  4308  0256  084D               	movf	efgtoa@g^(0+128),w
  4309  0257  0140               	movlb	0	; select bank0
  4310  0258  00BA               	movwf	___flge@ff1
  4311  0259  0141               	movlb	1	; select bank1
  4312  025A  0858               	movf	(efgtoa@u+3)^(0+128),w
  4313  025B  0140               	movlb	0	; select bank0
  4314  025C  00C1               	movwf	___flge@ff2+3
  4315  025D  0141               	movlb	1	; select bank1
  4316  025E  0857               	movf	(efgtoa@u+2)^(0+128),w
  4317  025F  0140               	movlb	0	; select bank0
  4318  0260  00C0               	movwf	___flge@ff2+2
  4319  0261  0141               	movlb	1	; select bank1
  4320  0262  0856               	movf	(efgtoa@u+1)^(0+128),w
  4321  0263  0140               	movlb	0	; select bank0
  4322  0264  00BF               	movwf	___flge@ff2+1
  4323  0265  0141               	movlb	1	; select bank1
  4324  0266  0855               	movf	efgtoa@u^(0+128),w
  4325  0267  0140               	movlb	0	; select bank0
  4326  0268  00BE               	movwf	___flge@ff2
  4327  0269  3196  266D  3180   	fcall	___flge
  4328  026C  1C03               	btfss	3,0
  4329  026D  2A28               	goto	i1l3155
  4330  026E                     i1l3161:	
  4331                           
  4332                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  4333  026E  0140               	movlb	0	; select bank0
  4334  026F  084A               	movf	efgtoa@c,w
  4335  0270  00CB               	movwf	??_efgtoa
  4336  0271  01CC               	clrf	??_efgtoa+1
  4337  0272  084B               	movf	??_efgtoa,w
  4338  0273  00F6               	movwf	tolower@c
  4339  0274  084C               	movf	??_efgtoa+1,w
  4340  0275  00F7               	movwf	tolower@c+1
  4341  0276  3193  2374  3180   	fcall	_tolower
  4342  0279  0876               	movf	?_tolower,w
  4343  027A  0140               	movlb	0	; select bank0
  4344  027B  00CD               	movwf	??_efgtoa+2
  4345  027C  084D               	movf	??_efgtoa+2,w
  4346  027D  0141               	movlb	1	; select bank1
  4347  027E  00C2               	movwf	efgtoa@mode^(0+128)
  4348                           
  4349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  4350  027F  0842               	movf	efgtoa@mode^(0+128),w
  4351  0280  0140               	movlb	0	; select bank0
  4352  0281  00CB               	movwf	??_efgtoa
  4353  0282  084B               	movf	??_efgtoa,w
  4354  0283  0141               	movlb	1	; select bank1
  4355  0284  00BF               	movwf	efgtoa@nmode^(0+128)
  4356                           
  4357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  4358  0285  3067               	movlw	103
  4359  0286  0642               	xorwf	efgtoa@mode^(0+128),w
  4360  0287  1D03               	btfss	3,2
  4361  0288  2AA4               	goto	i1l260
  4362                           
  4363                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  4364  0289  086B               	movf	_prec^(0+128),w
  4365  028A  046C               	iorwf	(_prec+1)^(0+128),w
  4366  028B  1D03               	btfss	3,2
  4367  028C  2A91               	goto	i1l261
  4368                           
  4369                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  4370  028D  3001               	movlw	1
  4371  028E  00EB               	movwf	_prec^(0+128)
  4372  028F  3000               	movlw	0
  4373  0290  00EC               	movwf	(_prec^(0+128)+1)
  4374  0291                     i1l261:	
  4375                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 382:   }
  4376                           
  4377                           
  4378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  4379  0291  086C               	movf	(_prec+1)^(0+128),w
  4380  0292  3A80               	xorlw	128
  4381  0293  0140               	movlb	0	; select bank0
  4382  0294  00CB               	movwf	??_efgtoa
  4383  0295  3080               	movlw	128
  4384  0296  024B               	subwf	??_efgtoa,w
  4385  0297  1D03               	skipz
  4386  0298  2A9C               	goto	u472_25
  4387  0299  3001               	movlw	1
  4388  029A  0141               	movlb	1	; select bank1
  4389  029B  026B               	subwf	_prec^(0+128),w
  4390  029C                     u472_25:	
  4391  029C  1803               	skipnc
  4392  029D  2AA6               	goto	i1l3173
  4393  029E                     i1l3171:	
  4394  029E  3006               	movlw	6
  4395  029F  0141               	movlb	1	; select bank1
  4396  02A0  00BC               	movwf	efgtoa@p^(0+128)
  4397  02A1  3000               	movlw	0
  4398  02A2  00BD               	movwf	(efgtoa@p^(0+128)+1)
  4399  02A3  2AAB               	goto	i1l3179
  4400  02A4                     i1l260:	
  4401                           
  4402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  4403  02A4  1BEC               	btfsc	(_prec+1)^(0+128),7
  4404  02A5  2A9E               	goto	i1l3171
  4405  02A6                     i1l3173:	
  4406  02A6  0141               	movlb	1	; select bank1
  4407  02A7  086C               	movf	(_prec+1)^(0+128),w
  4408  02A8  00BD               	movwf	(efgtoa@p+1)^(0+128)
  4409  02A9  086B               	movf	_prec^(0+128),w
  4410  02AA  00BC               	movwf	efgtoa@p^(0+128)
  4411  02AB                     i1l3179:	
  4412                           
  4413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  4414  02AB  3067               	movlw	103
  4415  02AC  0642               	xorwf	efgtoa@mode^(0+128),w
  4416  02AD  1D03               	btfss	3,2
  4417  02AE  2ADE               	goto	i1l271
  4418                           
  4419                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  4420  02AF  0852               	movf	(efgtoa@e+1)^(0+128),w
  4421  02B0  3A80               	xorlw	128
  4422  02B1  0140               	movlb	0	; select bank0
  4423  02B2  00CB               	movwf	??_efgtoa
  4424  02B3  307F               	movlw	127
  4425  02B4  024B               	subwf	??_efgtoa,w
  4426  02B5  1D03               	skipz
  4427  02B6  2ABA               	goto	u475_25
  4428  02B7  30FC               	movlw	252
  4429  02B8  0141               	movlb	1	; select bank1
  4430  02B9  0251               	subwf	efgtoa@e^(0+128),w
  4431  02BA                     u475_25:	
  4432  02BA  1C03               	skipc
  4433  02BB  2AD8               	goto	i1l3187
  4434  02BC  0141               	movlb	1	; select bank1
  4435  02BD  083C               	movf	efgtoa@p^(0+128),w
  4436  02BE  3EFF               	addlw	255
  4437  02BF  0140               	movlb	0	; select bank0
  4438  02C0  00CB               	movwf	??_efgtoa
  4439  02C1  30FF               	movlw	255
  4440  02C2  0141               	movlb	1	; select bank1
  4441  02C3  3D3D               	addwfc	(efgtoa@p+1)^(0+128),w
  4442  02C4  0140               	movlb	0	; select bank0
  4443  02C5  00CC               	movwf	??_efgtoa+1
  4444  02C6  084C               	movf	??_efgtoa+1,w
  4445  02C7  3A80               	xorlw	128
  4446  02C8  00CD               	movwf	??_efgtoa+2
  4447  02C9  0141               	movlb	1	; select bank1
  4448  02CA  0852               	movf	(efgtoa@e+1)^(0+128),w
  4449  02CB  3A80               	xorlw	128
  4450  02CC  0140               	movlb	0	; select bank0
  4451  02CD  024D               	subwf	??_efgtoa+2,w
  4452  02CE  1D03               	skipz
  4453  02CF  2AD4               	goto	u476_25
  4454  02D0  0141               	movlb	1	; select bank1
  4455  02D1  0851               	movf	efgtoa@e^(0+128),w
  4456  02D2  0140               	movlb	0	; select bank0
  4457  02D3  024B               	subwf	??_efgtoa,w
  4458  02D4                     u476_25:	
  4459  02D4  1C03               	skipc
  4460  02D5  2AD8               	goto	i1l3187
  4461                           
  4462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  4463  02D6  3066               	movlw	102
  4464  02D7  2AD9               	goto	L5
  4465  02D8                     i1l3187:	
  4466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 392:         } else {
  4467                           
  4468                           
  4469                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  4470  02D8  3065               	movlw	101
  4471  02D9                     L5:	
  4472  02D9  0140               	movlb	0	; select bank0
  4473  02DA  00CB               	movwf	??_efgtoa
  4474  02DB  084B               	movf	??_efgtoa,w
  4475  02DC  0141               	movlb	1	; select bank1
  4476  02DD  00BF               	movwf	efgtoa@nmode^(0+128)
  4477  02DE                     i1l271:	
  4478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 395:     }
  4479                           
  4480                           
  4481                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  4482  02DE  083D               	movf	(efgtoa@p+1)^(0+128),w
  4483  02DF  00B5               	movwf	(efgtoa@m+1)^(0+128)
  4484  02E0  083C               	movf	efgtoa@p^(0+128),w
  4485  02E1  00B4               	movwf	efgtoa@m^(0+128)
  4486                           
  4487                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  4488  02E2  3067               	movlw	103
  4489  02E3  0642               	xorwf	efgtoa@mode^(0+128),w
  4490  02E4  1D03               	btfss	3,2
  4491  02E5  2AEB               	goto	i1l3195
  4492  02E6  3066               	movlw	102
  4493  02E7  063F               	xorwf	efgtoa@nmode^(0+128),w
  4494  02E8  1903               	btfsc	3,2
  4495  02E9  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  4496  02EA  2AEF               	goto	i1l3197
  4497  02EB                     i1l3195:	
  4498                           
  4499                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  4500  02EB  3001               	movlw	1
  4501  02EC  07B4               	addwf	efgtoa@m^(0+128),f
  4502  02ED  3000               	movlw	0
  4503  02EE  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  4504  02EF                     i1l3197:	
  4505                           
  4506                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  4507  02EF  3066               	movlw	102
  4508  02F0  063F               	xorwf	efgtoa@nmode^(0+128),w
  4509  02F1  1D03               	btfss	3,2
  4510  02F2  2B07               	goto	i1l3209
  4511                           
  4512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  4513  02F3  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  4514  02F4  2AFF               	goto	i1l3205
  4515                           
  4516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  4517  02F5  303F               	movlw	63
  4518  02F6  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4519  02F7  3080               	movlw	128
  4520  02F8  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4521  02F9  3000               	movlw	0
  4522  02FA  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4523  02FB  3000               	movlw	0
  4524  02FC  00D5               	movwf	efgtoa@u^(0+128)
  4525                           
  4526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  4527  02FD  01D1               	clrf	efgtoa@e^(0+128)
  4528  02FE  01D2               	clrf	(efgtoa@e+1)^(0+128)
  4529  02FF                     i1l3205:	
  4530                           
  4531                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  4532  02FF  3067               	movlw	103
  4533  0300  0642               	xorwf	efgtoa@mode^(0+128),w
  4534  0301  1903               	btfsc	3,2
  4535  0302  2B07               	goto	i1l3209
  4536                           
  4537                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  4538  0303  0851               	movf	efgtoa@e^(0+128),w
  4539  0304  07B4               	addwf	efgtoa@m^(0+128),f
  4540  0305  0852               	movf	(efgtoa@e+1)^(0+128),w
  4541  0306  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  4542  0307                     i1l3209:	
  4543                           
  4544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  4545  0307  01CB               	clrf	efgtoa@i^(0+128)
  4546  0308  01CC               	clrf	(efgtoa@i+1)^(0+128)
  4547                           
  4548                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  4549  0309  0850               	movf	(efgtoa@g+3)^(0+128),w
  4550  030A  00C6               	movwf	(efgtoa@h+3)^(0+128)
  4551  030B  084F               	movf	(efgtoa@g+2)^(0+128),w
  4552  030C  00C5               	movwf	(efgtoa@h+2)^(0+128)
  4553  030D  084E               	movf	(efgtoa@g+1)^(0+128),w
  4554  030E  00C4               	movwf	(efgtoa@h+1)^(0+128)
  4555  030F  084D               	movf	efgtoa@g^(0+128),w
  4556  0310  00C3               	movwf	efgtoa@h^(0+128)
  4557                           
  4558                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  4559  0311  0858               	movf	(efgtoa@u+3)^(0+128),w
  4560  0312  00A3               	movwf	(efgtoa@ou+3)^(0+128)
  4561  0313  0857               	movf	(efgtoa@u+2)^(0+128),w
  4562  0314  00A2               	movwf	(efgtoa@ou+2)^(0+128)
  4563  0315  0856               	movf	(efgtoa@u+1)^(0+128),w
  4564  0316  00A1               	movwf	(efgtoa@ou+1)^(0+128)
  4565  0317  0855               	movf	efgtoa@u^(0+128),w
  4566  0318  00A0               	movwf	efgtoa@ou^(0+128)
  4567  0319                     i1l3219:	
  4568                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  4569                           
  4570                           
  4571                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  4572  0319  084C               	movf	(efgtoa@i+1)^(0+128),w
  4573  031A  3A80               	xorlw	128
  4574  031B  0140               	movlb	0	; select bank0
  4575  031C  00CB               	movwf	??_efgtoa
  4576  031D  0141               	movlb	1	; select bank1
  4577  031E  0835               	movf	(efgtoa@m+1)^(0+128),w
  4578  031F  3A80               	xorlw	128
  4579  0320  0140               	movlb	0	; select bank0
  4580  0321  024B               	subwf	??_efgtoa,w
  4581  0322  1D03               	skipz
  4582  0323  2B27               	goto	u483_25
  4583  0324  0141               	movlb	1	; select bank1
  4584  0325  0834               	movf	efgtoa@m^(0+128),w
  4585  0326  024B               	subwf	efgtoa@i^(0+128),w
  4586  0327                     u483_25:	
  4587  0327  1803               	btfsc	3,0
  4588  0328  2BD8               	goto	i1l3221
  4589                           
  4590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  4591  0329  0141               	movlb	1	; select bank1
  4592  032A  0858               	movf	(efgtoa@u+3)^(0+128),w
  4593  032B  00F3               	movwf	___fldiv@a+3
  4594  032C  0857               	movf	(efgtoa@u+2)^(0+128),w
  4595  032D  00F2               	movwf	___fldiv@a+2
  4596  032E  0856               	movf	(efgtoa@u+1)^(0+128),w
  4597  032F  00F1               	movwf	___fldiv@a+1
  4598  0330  0855               	movf	efgtoa@u^(0+128),w
  4599  0331  00F0               	movwf	___fldiv@a
  4600  0332  0846               	movf	(efgtoa@h+3)^(0+128),w
  4601  0333  00F7               	movwf	___fldiv@b+3
  4602  0334  0845               	movf	(efgtoa@h+2)^(0+128),w
  4603  0335  00F6               	movwf	___fldiv@b+2
  4604  0336  0844               	movf	(efgtoa@h+1)^(0+128),w
  4605  0337  00F5               	movwf	___fldiv@b+1
  4606  0338  0843               	movf	efgtoa@h^(0+128),w
  4607  0339  00F4               	movwf	___fldiv@b
  4608  033A  3188  20AC  3180   	fcall	___fldiv
  4609  033D  0873               	movf	?___fldiv+3,w
  4610  033E  0140               	movlb	0	; select bank0
  4611  033F  00B0               	movwf	floorf@x+3
  4612  0340  0872               	movf	?___fldiv+2,w
  4613  0341  00AF               	movwf	floorf@x+2
  4614  0342  0871               	movf	?___fldiv+1,w
  4615  0343  00AE               	movwf	floorf@x+1
  4616  0344  0870               	movf	?___fldiv,w
  4617  0345  00AD               	movwf	floorf@x
  4618  0346  3186  26B4  3180   	fcall	_floorf
  4619  0349  0140               	movlb	0	; select bank0
  4620  034A  0830               	movf	?_floorf+3,w
  4621  034B  0141               	movlb	1	; select bank1
  4622  034C  00CA               	movwf	(efgtoa@l+3)^(0+128)
  4623  034D  0140               	movlb	0	; select bank0
  4624  034E  082F               	movf	?_floorf+2,w
  4625  034F  0141               	movlb	1	; select bank1
  4626  0350  00C9               	movwf	(efgtoa@l+2)^(0+128)
  4627  0351  0140               	movlb	0	; select bank0
  4628  0352  082E               	movf	?_floorf+1,w
  4629  0353  0141               	movlb	1	; select bank1
  4630  0354  00C8               	movwf	(efgtoa@l+1)^(0+128)
  4631  0355  0140               	movlb	0	; select bank0
  4632  0356  082D               	movf	?_floorf,w
  4633  0357  0141               	movlb	1	; select bank1
  4634  0358  00C7               	movwf	efgtoa@l^(0+128)
  4635                           
  4636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  4637  0359  084A               	movf	(efgtoa@l+3)^(0+128),w
  4638  035A  00F3               	movwf	___fltol@f1+3
  4639  035B  0849               	movf	(efgtoa@l+2)^(0+128),w
  4640  035C  00F2               	movwf	___fltol@f1+2
  4641  035D  0848               	movf	(efgtoa@l+1)^(0+128),w
  4642  035E  00F1               	movwf	___fltol@f1+1
  4643  035F  0847               	movf	efgtoa@l^(0+128),w
  4644  0360  00F0               	movwf	___fltol@f1
  4645  0361  3187  278C  3180   	fcall	___fltol
  4646  0364  0871               	movf	?___fltol+1,w
  4647  0365  0141               	movlb	1	; select bank1
  4648  0366  00B9               	movwf	(efgtoa@d+1)^(0+128)
  4649  0367  0870               	movf	?___fltol,w
  4650  0368  00B8               	movwf	efgtoa@d^(0+128)
  4651                           
  4652                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  4653  0369  084A               	movf	(efgtoa@l+3)^(0+128),w
  4654  036A  0140               	movlb	0	; select bank0
  4655  036B  00A7               	movwf	___flmul@a+3
  4656  036C  0141               	movlb	1	; select bank1
  4657  036D  0849               	movf	(efgtoa@l+2)^(0+128),w
  4658  036E  0140               	movlb	0	; select bank0
  4659  036F  00A6               	movwf	___flmul@a+2
  4660  0370  0141               	movlb	1	; select bank1
  4661  0371  0848               	movf	(efgtoa@l+1)^(0+128),w
  4662  0372  0140               	movlb	0	; select bank0
  4663  0373  00A5               	movwf	___flmul@a+1
  4664  0374  0141               	movlb	1	; select bank1
  4665  0375  0847               	movf	efgtoa@l^(0+128),w
  4666  0376  0140               	movlb	0	; select bank0
  4667  0377  00A4               	movwf	___flmul@a
  4668  0378  0141               	movlb	1	; select bank1
  4669  0379  0858               	movf	(efgtoa@u+3)^(0+128),w
  4670  037A  0140               	movlb	0	; select bank0
  4671  037B  00A3               	movwf	___flmul@b+3
  4672  037C  0141               	movlb	1	; select bank1
  4673  037D  0857               	movf	(efgtoa@u+2)^(0+128),w
  4674  037E  0140               	movlb	0	; select bank0
  4675  037F  00A2               	movwf	___flmul@b+2
  4676  0380  0141               	movlb	1	; select bank1
  4677  0381  0856               	movf	(efgtoa@u+1)^(0+128),w
  4678  0382  0140               	movlb	0	; select bank0
  4679  0383  00A1               	movwf	___flmul@b+1
  4680  0384  0141               	movlb	1	; select bank1
  4681  0385  0855               	movf	efgtoa@u^(0+128),w
  4682  0386  0140               	movlb	0	; select bank0
  4683  0387  00A0               	movwf	___flmul@b
  4684  0388  318D  25D4  3180   	fcall	___flmul
  4685  038B  0140               	movlb	0	; select bank0
  4686  038C  0823               	movf	?___flmul+3,w
  4687  038D  00BD               	movwf	___flsub@a+3
  4688  038E  0822               	movf	?___flmul+2,w
  4689  038F  00BC               	movwf	___flsub@a+2
  4690  0390  0821               	movf	?___flmul+1,w
  4691  0391  00BB               	movwf	___flsub@a+1
  4692  0392  0820               	movf	?___flmul,w
  4693  0393  00BA               	movwf	___flsub@a
  4694  0394  0141               	movlb	1	; select bank1
  4695  0395  0846               	movf	(efgtoa@h+3)^(0+128),w
  4696  0396  0140               	movlb	0	; select bank0
  4697  0397  00C1               	movwf	___flsub@b+3
  4698  0398  0141               	movlb	1	; select bank1
  4699  0399  0845               	movf	(efgtoa@h+2)^(0+128),w
  4700  039A  0140               	movlb	0	; select bank0
  4701  039B  00C0               	movwf	___flsub@b+2
  4702  039C  0141               	movlb	1	; select bank1
  4703  039D  0844               	movf	(efgtoa@h+1)^(0+128),w
  4704  039E  0140               	movlb	0	; select bank0
  4705  039F  00BF               	movwf	___flsub@b+1
  4706  03A0  0141               	movlb	1	; select bank1
  4707  03A1  0843               	movf	efgtoa@h^(0+128),w
  4708  03A2  0140               	movlb	0	; select bank0
  4709  03A3  00BE               	movwf	___flsub@b
  4710  03A4  3193  2336  3180   	fcall	___flsub
  4711  03A7  0140               	movlb	0	; select bank0
  4712  03A8  083D               	movf	?___flsub+3,w
  4713  03A9  0141               	movlb	1	; select bank1
  4714  03AA  00C6               	movwf	(efgtoa@h+3)^(0+128)
  4715  03AB  0140               	movlb	0	; select bank0
  4716  03AC  083C               	movf	?___flsub+2,w
  4717  03AD  0141               	movlb	1	; select bank1
  4718  03AE  00C5               	movwf	(efgtoa@h+2)^(0+128)
  4719  03AF  0140               	movlb	0	; select bank0
  4720  03B0  083B               	movf	?___flsub+1,w
  4721  03B1  0141               	movlb	1	; select bank1
  4722  03B2  00C4               	movwf	(efgtoa@h+1)^(0+128)
  4723  03B3  0140               	movlb	0	; select bank0
  4724  03B4  083A               	movf	?___flsub,w
  4725  03B5  0141               	movlb	1	; select bank1
  4726  03B6  00C3               	movwf	efgtoa@h^(0+128)
  4727                           
  4728                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  4729  03B7  3041               	movlw	65
  4730  03B8  00F3               	movwf	___fldiv@a+3
  4731  03B9  3020               	movlw	32
  4732  03BA  00F2               	movwf	___fldiv@a+2
  4733  03BB  3000               	movlw	0
  4734  03BC  00F1               	movwf	___fldiv@a+1
  4735  03BD  3000               	movlw	0
  4736  03BE  00F0               	movwf	___fldiv@a
  4737  03BF  0858               	movf	(efgtoa@u+3)^(0+128),w
  4738  03C0  00F7               	movwf	___fldiv@b+3
  4739  03C1  0857               	movf	(efgtoa@u+2)^(0+128),w
  4740  03C2  00F6               	movwf	___fldiv@b+2
  4741  03C3  0856               	movf	(efgtoa@u+1)^(0+128),w
  4742  03C4  00F5               	movwf	___fldiv@b+1
  4743  03C5  0855               	movf	efgtoa@u^(0+128),w
  4744  03C6  00F4               	movwf	___fldiv@b
  4745  03C7  3188  20AC  3180   	fcall	___fldiv
  4746  03CA  0873               	movf	?___fldiv+3,w
  4747  03CB  0141               	movlb	1	; select bank1
  4748  03CC  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4749  03CD  0872               	movf	?___fldiv+2,w
  4750  03CE  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4751  03CF  0871               	movf	?___fldiv+1,w
  4752  03D0  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4753  03D1  0870               	movf	?___fldiv,w
  4754  03D2  00D5               	movwf	efgtoa@u^(0+128)
  4755                           
  4756                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  4757  03D3  3001               	movlw	1
  4758  03D4  07CB               	addwf	efgtoa@i^(0+128),f
  4759  03D5  3000               	movlw	0
  4760  03D6  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  4761  03D7  2B19               	goto	i1l3219
  4762  03D8                     i1l3221:	
  4763                           
  4764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  4765  03D8  3040               	movlw	64
  4766  03D9  0140               	movlb	0	; select bank0
  4767  03DA  00A3               	movwf	___flmul@b+3
  4768  03DB  30A0               	movlw	160
  4769  03DC  00A2               	movwf	___flmul@b+2
  4770  03DD  3000               	movlw	0
  4771  03DE  00A1               	movwf	___flmul@b+1
  4772  03DF  3000               	movlw	0
  4773  03E0  00A0               	movwf	___flmul@b
  4774  03E1  0141               	movlb	1	; select bank1
  4775  03E2  0858               	movf	(efgtoa@u+3)^(0+128),w
  4776  03E3  0140               	movlb	0	; select bank0
  4777  03E4  00A7               	movwf	___flmul@a+3
  4778  03E5  0141               	movlb	1	; select bank1
  4779  03E6  0857               	movf	(efgtoa@u+2)^(0+128),w
  4780  03E7  0140               	movlb	0	; select bank0
  4781  03E8  00A6               	movwf	___flmul@a+2
  4782  03E9  0141               	movlb	1	; select bank1
  4783  03EA  0856               	movf	(efgtoa@u+1)^(0+128),w
  4784  03EB  0140               	movlb	0	; select bank0
  4785  03EC  00A5               	movwf	___flmul@a+1
  4786  03ED  0141               	movlb	1	; select bank1
  4787  03EE  0855               	movf	efgtoa@u^(0+128),w
  4788  03EF  0140               	movlb	0	; select bank0
  4789  03F0  00A4               	movwf	___flmul@a
  4790  03F1  318D  25D4  3180   	fcall	___flmul
  4791  03F4  0140               	movlb	0	; select bank0
  4792  03F5  0823               	movf	?___flmul+3,w
  4793  03F6  0141               	movlb	1	; select bank1
  4794  03F7  00CA               	movwf	(efgtoa@l+3)^(0+128)
  4795  03F8  0140               	movlb	0	; select bank0
  4796  03F9  0822               	movf	?___flmul+2,w
  4797  03FA  0141               	movlb	1	; select bank1
  4798  03FB  00C9               	movwf	(efgtoa@l+2)^(0+128)
  4799  03FC  0140               	movlb	0	; select bank0
  4800  03FD  0821               	movf	?___flmul+1,w
  4801  03FE  0141               	movlb	1	; select bank1
  4802  03FF  00C8               	movwf	(efgtoa@l+1)^(0+128)
  4803  0400  0140               	movlb	0	; select bank0
  4804  0401  0820               	movf	?___flmul,w
  4805  0402  0141               	movlb	1	; select bank1
  4806  0403  00C7               	movwf	efgtoa@l^(0+128)
  4807                           
  4808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  4809  0404  0846               	movf	(efgtoa@h+3)^(0+128),w
  4810  0405  0140               	movlb	0	; select bank0
  4811  0406  00BD               	movwf	___flge@ff1+3
  4812  0407  0141               	movlb	1	; select bank1
  4813  0408  0845               	movf	(efgtoa@h+2)^(0+128),w
  4814  0409  0140               	movlb	0	; select bank0
  4815  040A  00BC               	movwf	___flge@ff1+2
  4816  040B  0141               	movlb	1	; select bank1
  4817  040C  0844               	movf	(efgtoa@h+1)^(0+128),w
  4818  040D  0140               	movlb	0	; select bank0
  4819  040E  00BB               	movwf	___flge@ff1+1
  4820  040F  0141               	movlb	1	; select bank1
  4821  0410  0843               	movf	efgtoa@h^(0+128),w
  4822  0411  0140               	movlb	0	; select bank0
  4823  0412  00BA               	movwf	___flge@ff1
  4824  0413  0141               	movlb	1	; select bank1
  4825  0414  084A               	movf	(efgtoa@l+3)^(0+128),w
  4826  0415  0140               	movlb	0	; select bank0
  4827  0416  00C1               	movwf	___flge@ff2+3
  4828  0417  0141               	movlb	1	; select bank1
  4829  0418  0849               	movf	(efgtoa@l+2)^(0+128),w
  4830  0419  0140               	movlb	0	; select bank0
  4831  041A  00C0               	movwf	___flge@ff2+2
  4832  041B  0141               	movlb	1	; select bank1
  4833  041C  0848               	movf	(efgtoa@l+1)^(0+128),w
  4834  041D  0140               	movlb	0	; select bank0
  4835  041E  00BF               	movwf	___flge@ff2+1
  4836  041F  0141               	movlb	1	; select bank1
  4837  0420  0847               	movf	efgtoa@l^(0+128),w
  4838  0421  0140               	movlb	0	; select bank0
  4839  0422  00BE               	movwf	___flge@ff2
  4840  0423  3196  266D  3180   	fcall	___flge
  4841  0426  1803               	btfsc	3,0
  4842  0427  2C2B               	goto	i1l3225
  4843                           
  4844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  4845  0428  3000               	movlw	0
  4846  0429  0141               	movlb	1	; select bank1
  4847  042A  2C45               	goto	L6
  4848  042B                     i1l3225:	
  4849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 430:     } else {
  4850                           
  4851                           
  4852                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  4853  042B  0141               	movlb	1	; select bank1
  4854  042C  0846               	movf	(efgtoa@h+3)^(0+128),w
  4855  042D  00F3               	movwf	___fleq@ff1+3
  4856  042E  0845               	movf	(efgtoa@h+2)^(0+128),w
  4857  042F  00F2               	movwf	___fleq@ff1+2
  4858  0430  0844               	movf	(efgtoa@h+1)^(0+128),w
  4859  0431  00F1               	movwf	___fleq@ff1+1
  4860  0432  0843               	movf	efgtoa@h^(0+128),w
  4861  0433  00F0               	movwf	___fleq@ff1
  4862  0434  084A               	movf	(efgtoa@l+3)^(0+128),w
  4863  0435  00F7               	movwf	___fleq@ff2+3
  4864  0436  0849               	movf	(efgtoa@l+2)^(0+128),w
  4865  0437  00F6               	movwf	___fleq@ff2+2
  4866  0438  0848               	movf	(efgtoa@l+1)^(0+128),w
  4867  0439  00F5               	movwf	___fleq@ff2+1
  4868  043A  0847               	movf	efgtoa@l^(0+128),w
  4869  043B  00F4               	movwf	___fleq@ff2
  4870  043C  3194  2464  3180   	fcall	___fleq
  4871  043F  1C03               	btfss	3,0
  4872  0440  2C4C               	goto	i1l3231
  4873  0441  0141               	movlb	1	; select bank1
  4874  0442  1838               	btfsc	efgtoa@d^(0+128),0
  4875  0443  2C4C               	goto	i1l3231
  4876                           
  4877                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  4878  0444  3000               	movlw	0
  4879  0445                     L6:	
  4880  0445  00CA               	movwf	(efgtoa@l+3)^(0+128)
  4881  0446  3000               	movlw	0
  4882  0447  00C9               	movwf	(efgtoa@l+2)^(0+128)
  4883  0448  3000               	movlw	0
  4884  0449  00C8               	movwf	(efgtoa@l+1)^(0+128)
  4885  044A  3000               	movlw	0
  4886  044B  00C7               	movwf	efgtoa@l^(0+128)
  4887  044C                     i1l3231:	
  4888                           
  4889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  4890  044C  0141               	movlb	1	; select bank1
  4891  044D  084A               	movf	(efgtoa@l+3)^(0+128),w
  4892  044E  00F3               	movwf	___fladd@b+3
  4893  044F  0849               	movf	(efgtoa@l+2)^(0+128),w
  4894  0450  00F2               	movwf	___fladd@b+2
  4895  0451  0848               	movf	(efgtoa@l+1)^(0+128),w
  4896  0452  00F1               	movwf	___fladd@b+1
  4897  0453  0847               	movf	efgtoa@l^(0+128),w
  4898  0454  00F0               	movwf	___fladd@b
  4899  0455  0850               	movf	(efgtoa@g+3)^(0+128),w
  4900  0456  00F7               	movwf	___fladd@a+3
  4901  0457  084F               	movf	(efgtoa@g+2)^(0+128),w
  4902  0458  00F6               	movwf	___fladd@a+2
  4903  0459  084E               	movf	(efgtoa@g+1)^(0+128),w
  4904  045A  00F5               	movwf	___fladd@a+1
  4905  045B  084D               	movf	efgtoa@g^(0+128),w
  4906  045C  00F4               	movwf	___fladd@a
  4907  045D  318B  23EB  3180   	fcall	___fladd
  4908  0460  0873               	movf	?___fladd+3,w
  4909  0461  0141               	movlb	1	; select bank1
  4910  0462  00C6               	movwf	(efgtoa@h+3)^(0+128)
  4911  0463  0872               	movf	?___fladd+2,w
  4912  0464  00C5               	movwf	(efgtoa@h+2)^(0+128)
  4913  0465  0871               	movf	?___fladd+1,w
  4914  0466  00C4               	movwf	(efgtoa@h+1)^(0+128)
  4915  0467  0870               	movf	?___fladd,w
  4916  0468  00C3               	movwf	efgtoa@h^(0+128)
  4917                           
  4918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  4919  0469  0823               	movf	(efgtoa@ou+3)^(0+128),w
  4920  046A  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4921  046B  0822               	movf	(efgtoa@ou+2)^(0+128),w
  4922  046C  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4923  046D  0821               	movf	(efgtoa@ou+1)^(0+128),w
  4924  046E  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4925  046F  0820               	movf	efgtoa@ou^(0+128),w
  4926  0470  00D5               	movwf	efgtoa@u^(0+128)
  4927                           
  4928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  4929  0471  3065               	movlw	101
  4930  0472  063F               	xorwf	efgtoa@nmode^(0+128),w
  4931  0473  1903               	btfsc	3,2
  4932  0474  2C7A               	goto	i1l3239
  4933  0475  0852               	movf	(efgtoa@e+1)^(0+128),w
  4934  0476  00B7               	movwf	(efgtoa@ne+1)^(0+128)
  4935  0477  0851               	movf	efgtoa@e^(0+128),w
  4936  0478  00B6               	movwf	efgtoa@ne^(0+128)
  4937  0479  2C7C               	goto	i1l289
  4938  047A                     i1l3239:	
  4939  047A  01B6               	clrf	efgtoa@ne^(0+128)
  4940  047B  01B7               	clrf	(efgtoa@ne+1)^(0+128)
  4941  047C                     i1l289:	
  4942                           
  4943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  4944  047C  01B2               	clrf	efgtoa@pp^(0+128)
  4945  047D  01B3               	clrf	(efgtoa@pp+1)^(0+128)
  4946                           
  4947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  4948  047E  01B0               	clrf	efgtoa@t^(0+128)
  4949  047F  01B1               	clrf	(efgtoa@t+1)^(0+128)
  4950                           
  4951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  4952  0480  01CB               	clrf	efgtoa@i^(0+128)
  4953  0481  01CC               	clrf	(efgtoa@i+1)^(0+128)
  4954                           
  4955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  4956  0482  2D97               	goto	i1l3289
  4957  0483                     i1l3241:	
  4958                           
  4959                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  4960  0483  0141               	movlb	1	; select bank1
  4961  0484  0858               	movf	(efgtoa@u+3)^(0+128),w
  4962  0485  00F3               	movwf	___fldiv@a+3
  4963  0486  0857               	movf	(efgtoa@u+2)^(0+128),w
  4964  0487  00F2               	movwf	___fldiv@a+2
  4965  0488  0856               	movf	(efgtoa@u+1)^(0+128),w
  4966  0489  00F1               	movwf	___fldiv@a+1
  4967  048A  0855               	movf	efgtoa@u^(0+128),w
  4968  048B  00F0               	movwf	___fldiv@a
  4969  048C  0846               	movf	(efgtoa@h+3)^(0+128),w
  4970  048D  00F7               	movwf	___fldiv@b+3
  4971  048E  0845               	movf	(efgtoa@h+2)^(0+128),w
  4972  048F  00F6               	movwf	___fldiv@b+2
  4973  0490  0844               	movf	(efgtoa@h+1)^(0+128),w
  4974  0491  00F5               	movwf	___fldiv@b+1
  4975  0492  0843               	movf	efgtoa@h^(0+128),w
  4976  0493  00F4               	movwf	___fldiv@b
  4977  0494  3188  20AC  3180   	fcall	___fldiv
  4978  0497  0873               	movf	?___fldiv+3,w
  4979  0498  0140               	movlb	0	; select bank0
  4980  0499  00B0               	movwf	floorf@x+3
  4981  049A  0872               	movf	?___fldiv+2,w
  4982  049B  00AF               	movwf	floorf@x+2
  4983  049C  0871               	movf	?___fldiv+1,w
  4984  049D  00AE               	movwf	floorf@x+1
  4985  049E  0870               	movf	?___fldiv,w
  4986  049F  00AD               	movwf	floorf@x
  4987  04A0  3186  26B4  3180   	fcall	_floorf
  4988  04A3  0140               	movlb	0	; select bank0
  4989  04A4  0830               	movf	?_floorf+3,w
  4990  04A5  0141               	movlb	1	; select bank1
  4991  04A6  00CA               	movwf	(efgtoa@l+3)^(0+128)
  4992  04A7  0140               	movlb	0	; select bank0
  4993  04A8  082F               	movf	?_floorf+2,w
  4994  04A9  0141               	movlb	1	; select bank1
  4995  04AA  00C9               	movwf	(efgtoa@l+2)^(0+128)
  4996  04AB  0140               	movlb	0	; select bank0
  4997  04AC  082E               	movf	?_floorf+1,w
  4998  04AD  0141               	movlb	1	; select bank1
  4999  04AE  00C8               	movwf	(efgtoa@l+1)^(0+128)
  5000  04AF  0140               	movlb	0	; select bank0
  5001  04B0  082D               	movf	?_floorf,w
  5002  04B1  0141               	movlb	1	; select bank1
  5003  04B2  00C7               	movwf	efgtoa@l^(0+128)
  5004                           
  5005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  5006  04B3  084A               	movf	(efgtoa@l+3)^(0+128),w
  5007  04B4  00F3               	movwf	___fltol@f1+3
  5008  04B5  0849               	movf	(efgtoa@l+2)^(0+128),w
  5009  04B6  00F2               	movwf	___fltol@f1+2
  5010  04B7  0848               	movf	(efgtoa@l+1)^(0+128),w
  5011  04B8  00F1               	movwf	___fltol@f1+1
  5012  04B9  0847               	movf	efgtoa@l^(0+128),w
  5013  04BA  00F0               	movwf	___fltol@f1
  5014  04BB  3187  278C  3180   	fcall	___fltol
  5015  04BE  0871               	movf	?___fltol+1,w
  5016  04BF  0141               	movlb	1	; select bank1
  5017  04C0  00B9               	movwf	(efgtoa@d+1)^(0+128)
  5018  04C1  0870               	movf	?___fltol,w
  5019  04C2  00B8               	movwf	efgtoa@d^(0+128)
  5020                           
  5021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5022  04C3  1A6D               	btfsc	_flags^(0+128),4
  5023  04C4  2CD3               	goto	i1l3253
  5024  04C5  0838               	movf	efgtoa@d^(0+128),w
  5025  04C6  0439               	iorwf	(efgtoa@d+1)^(0+128),w
  5026  04C7  1D03               	btfss	3,2
  5027  04C8  2CD3               	goto	i1l3253
  5028  04C9  3067               	movlw	103
  5029  04CA  0642               	xorwf	efgtoa@mode^(0+128),w
  5030  04CB  1903               	btfsc	3,2
  5031  04CC  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  5032  04CD  2CD3               	goto	i1l3253
  5033                           
  5034                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  5035  04CE  3001               	movlw	1
  5036  04CF  07B0               	addwf	efgtoa@t^(0+128),f
  5037  04D0  3000               	movlw	0
  5038  04D1  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  5039                           
  5040                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  5041  04D2  2D25               	goto	i1l3281
  5042  04D3                     i1l3253:	
  5043                           
  5044                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  5045  04D3  0832               	movf	efgtoa@pp^(0+128),w
  5046  04D4  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  5047  04D5  1903               	btfsc	3,2
  5048  04D6  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  5049  04D7  2CF1               	goto	i1l3273
  5050                           
  5051                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  5052  04D8  302E               	movlw	46
  5053  04D9  0140               	movlb	0	; select bank0
  5054  04DA  00CB               	movwf	??_efgtoa
  5055  04DB  0141               	movlb	1	; select bank1
  5056  04DC  0853               	movf	efgtoa@n^(0+128),w
  5057  04DD  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5058  04DE  0086               	movwf	6
  5059  04DF  3001               	movlw	1	; select bank3/4
  5060  04E0  0087               	movwf	7
  5061  04E1  0140               	movlb	0	; select bank0
  5062  04E2  084B               	movf	??_efgtoa,w
  5063  04E3  0081               	movwf	1
  5064  04E4  3001               	movlw	1
  5065  04E5  0141               	movlb	1	; select bank1
  5066  04E6  07D3               	addwf	efgtoa@n^(0+128),f
  5067  04E7  3000               	movlw	0
  5068  04E8  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  5069                           
  5070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  5071  04E9  30FF               	movlw	255
  5072  04EA  07C0               	addwf	efgtoa@w^(0+128),f
  5073  04EB  30FF               	movlw	255
  5074  04EC  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5075                           
  5076                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  5077  04ED  3001               	movlw	1
  5078  04EE  00B2               	movwf	efgtoa@pp^(0+128)
  5079  04EF  3000               	movlw	0
  5080  04F0  00B3               	movwf	(efgtoa@pp^(0+128)+1)
  5081  04F1                     i1l3273:	
  5082                           
  5083                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  5084  04F1  0830               	movf	efgtoa@t^(0+128),w
  5085  04F2  0431               	iorwf	(efgtoa@t+1)^(0+128),w
  5086  04F3  1903               	btfsc	3,2
  5087  04F4  2D0F               	goto	i1l3275
  5088                           
  5089                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  5090  04F5  3030               	movlw	48
  5091  04F6  0140               	movlb	0	; select bank0
  5092  04F7  00CB               	movwf	??_efgtoa
  5093  04F8  0141               	movlb	1	; select bank1
  5094  04F9  0853               	movf	efgtoa@n^(0+128),w
  5095  04FA  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5096  04FB  0086               	movwf	6
  5097  04FC  3001               	movlw	1	; select bank3/4
  5098  04FD  0087               	movwf	7
  5099  04FE  0140               	movlb	0	; select bank0
  5100  04FF  084B               	movf	??_efgtoa,w
  5101  0500  0081               	movwf	1
  5102  0501  3001               	movlw	1
  5103  0502  0141               	movlb	1	; select bank1
  5104  0503  07D3               	addwf	efgtoa@n^(0+128),f
  5105  0504  3000               	movlw	0
  5106  0505  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  5107                           
  5108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  5109  0506  30FF               	movlw	255
  5110  0507  07C0               	addwf	efgtoa@w^(0+128),f
  5111  0508  30FF               	movlw	255
  5112  0509  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5113                           
  5114                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  5115  050A  30FF               	movlw	255
  5116  050B  07B0               	addwf	efgtoa@t^(0+128),f
  5117  050C  30FF               	movlw	255
  5118  050D  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  5119  050E  2CF1               	goto	i1l3273
  5120  050F                     i1l3275:	
  5121                           
  5122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  5123  050F  0838               	movf	efgtoa@d^(0+128),w
  5124  0510  3E30               	addlw	48
  5125  0511  0140               	movlb	0	; select bank0
  5126  0512  00CB               	movwf	??_efgtoa
  5127  0513  0141               	movlb	1	; select bank1
  5128  0514  0853               	movf	efgtoa@n^(0+128),w
  5129  0515  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5130  0516  0086               	movwf	6
  5131  0517  3001               	movlw	1	; select bank3/4
  5132  0518  0087               	movwf	7
  5133  0519  0140               	movlb	0	; select bank0
  5134  051A  084B               	movf	??_efgtoa,w
  5135  051B  0081               	movwf	1
  5136  051C  3001               	movlw	1
  5137  051D  0141               	movlb	1	; select bank1
  5138  051E  07D3               	addwf	efgtoa@n^(0+128),f
  5139  051F  3000               	movlw	0
  5140  0520  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  5141                           
  5142                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  5143  0521  30FF               	movlw	255
  5144  0522  07C0               	addwf	efgtoa@w^(0+128),f
  5145  0523  30FF               	movlw	255
  5146  0524  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5147  0525                     i1l3281:	
  5148                           
  5149                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  5150  0525  084A               	movf	(efgtoa@l+3)^(0+128),w
  5151  0526  0140               	movlb	0	; select bank0
  5152  0527  00A7               	movwf	___flmul@a+3
  5153  0528  0141               	movlb	1	; select bank1
  5154  0529  0849               	movf	(efgtoa@l+2)^(0+128),w
  5155  052A  0140               	movlb	0	; select bank0
  5156  052B  00A6               	movwf	___flmul@a+2
  5157  052C  0141               	movlb	1	; select bank1
  5158  052D  0848               	movf	(efgtoa@l+1)^(0+128),w
  5159  052E  0140               	movlb	0	; select bank0
  5160  052F  00A5               	movwf	___flmul@a+1
  5161  0530  0141               	movlb	1	; select bank1
  5162  0531  0847               	movf	efgtoa@l^(0+128),w
  5163  0532  0140               	movlb	0	; select bank0
  5164  0533  00A4               	movwf	___flmul@a
  5165  0534  0141               	movlb	1	; select bank1
  5166  0535  0858               	movf	(efgtoa@u+3)^(0+128),w
  5167  0536  0140               	movlb	0	; select bank0
  5168  0537  00A3               	movwf	___flmul@b+3
  5169  0538  0141               	movlb	1	; select bank1
  5170  0539  0857               	movf	(efgtoa@u+2)^(0+128),w
  5171  053A  0140               	movlb	0	; select bank0
  5172  053B  00A2               	movwf	___flmul@b+2
  5173  053C  0141               	movlb	1	; select bank1
  5174  053D  0856               	movf	(efgtoa@u+1)^(0+128),w
  5175  053E  0140               	movlb	0	; select bank0
  5176  053F  00A1               	movwf	___flmul@b+1
  5177  0540  0141               	movlb	1	; select bank1
  5178  0541  0855               	movf	efgtoa@u^(0+128),w
  5179  0542  0140               	movlb	0	; select bank0
  5180  0543  00A0               	movwf	___flmul@b
  5181  0544  318D  25D4  3180   	fcall	___flmul
  5182  0547  0140               	movlb	0	; select bank0
  5183  0548  0823               	movf	?___flmul+3,w
  5184  0549  00BD               	movwf	___flsub@a+3
  5185  054A  0822               	movf	?___flmul+2,w
  5186  054B  00BC               	movwf	___flsub@a+2
  5187  054C  0821               	movf	?___flmul+1,w
  5188  054D  00BB               	movwf	___flsub@a+1
  5189  054E  0820               	movf	?___flmul,w
  5190  054F  00BA               	movwf	___flsub@a
  5191  0550  0141               	movlb	1	; select bank1
  5192  0551  0846               	movf	(efgtoa@h+3)^(0+128),w
  5193  0552  0140               	movlb	0	; select bank0
  5194  0553  00C1               	movwf	___flsub@b+3
  5195  0554  0141               	movlb	1	; select bank1
  5196  0555  0845               	movf	(efgtoa@h+2)^(0+128),w
  5197  0556  0140               	movlb	0	; select bank0
  5198  0557  00C0               	movwf	___flsub@b+2
  5199  0558  0141               	movlb	1	; select bank1
  5200  0559  0844               	movf	(efgtoa@h+1)^(0+128),w
  5201  055A  0140               	movlb	0	; select bank0
  5202  055B  00BF               	movwf	___flsub@b+1
  5203  055C  0141               	movlb	1	; select bank1
  5204  055D  0843               	movf	efgtoa@h^(0+128),w
  5205  055E  0140               	movlb	0	; select bank0
  5206  055F  00BE               	movwf	___flsub@b
  5207  0560  3193  2336  3180   	fcall	___flsub
  5208  0563  0140               	movlb	0	; select bank0
  5209  0564  083D               	movf	?___flsub+3,w
  5210  0565  0141               	movlb	1	; select bank1
  5211  0566  00C6               	movwf	(efgtoa@h+3)^(0+128)
  5212  0567  0140               	movlb	0	; select bank0
  5213  0568  083C               	movf	?___flsub+2,w
  5214  0569  0141               	movlb	1	; select bank1
  5215  056A  00C5               	movwf	(efgtoa@h+2)^(0+128)
  5216  056B  0140               	movlb	0	; select bank0
  5217  056C  083B               	movf	?___flsub+1,w
  5218  056D  0141               	movlb	1	; select bank1
  5219  056E  00C4               	movwf	(efgtoa@h+1)^(0+128)
  5220  056F  0140               	movlb	0	; select bank0
  5221  0570  083A               	movf	?___flsub,w
  5222  0571  0141               	movlb	1	; select bank1
  5223  0572  00C3               	movwf	efgtoa@h^(0+128)
  5224                           
  5225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  5226  0573  3041               	movlw	65
  5227  0574  00F3               	movwf	___fldiv@a+3
  5228  0575  3020               	movlw	32
  5229  0576  00F2               	movwf	___fldiv@a+2
  5230  0577  3000               	movlw	0
  5231  0578  00F1               	movwf	___fldiv@a+1
  5232  0579  3000               	movlw	0
  5233  057A  00F0               	movwf	___fldiv@a
  5234  057B  0858               	movf	(efgtoa@u+3)^(0+128),w
  5235  057C  00F7               	movwf	___fldiv@b+3
  5236  057D  0857               	movf	(efgtoa@u+2)^(0+128),w
  5237  057E  00F6               	movwf	___fldiv@b+2
  5238  057F  0856               	movf	(efgtoa@u+1)^(0+128),w
  5239  0580  00F5               	movwf	___fldiv@b+1
  5240  0581  0855               	movf	efgtoa@u^(0+128),w
  5241  0582  00F4               	movwf	___fldiv@b
  5242  0583  3188  20AC  3180   	fcall	___fldiv
  5243  0586  0873               	movf	?___fldiv+3,w
  5244  0587  0141               	movlb	1	; select bank1
  5245  0588  00D8               	movwf	(efgtoa@u+3)^(0+128)
  5246  0589  0872               	movf	?___fldiv+2,w
  5247  058A  00D7               	movwf	(efgtoa@u+2)^(0+128)
  5248  058B  0871               	movf	?___fldiv+1,w
  5249  058C  00D6               	movwf	(efgtoa@u+1)^(0+128)
  5250  058D  0870               	movf	?___fldiv,w
  5251  058E  00D5               	movwf	efgtoa@u^(0+128)
  5252                           
  5253                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  5254  058F  30FF               	movlw	255
  5255  0590  07B6               	addwf	efgtoa@ne^(0+128),f
  5256  0591  30FF               	movlw	255
  5257  0592  3DB7               	addwfc	(efgtoa@ne+1)^(0+128),f
  5258                           
  5259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  5260  0593  3001               	movlw	1
  5261  0594  07CB               	addwf	efgtoa@i^(0+128),f
  5262  0595  3000               	movlw	0
  5263  0596  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  5264  0597                     i1l3289:	
  5265                           
  5266                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5267  0597  084C               	movf	(efgtoa@i+1)^(0+128),w
  5268  0598  3A80               	xorlw	128
  5269  0599  0140               	movlb	0	; select bank0
  5270  059A  00CB               	movwf	??_efgtoa
  5271  059B  0141               	movlb	1	; select bank1
  5272  059C  0835               	movf	(efgtoa@m+1)^(0+128),w
  5273  059D  3A80               	xorlw	128
  5274  059E  0140               	movlb	0	; select bank0
  5275  059F  024B               	subwf	??_efgtoa,w
  5276  05A0  1D03               	skipz
  5277  05A1  2DA5               	goto	u495_25
  5278  05A2  0141               	movlb	1	; select bank1
  5279  05A3  0834               	movf	efgtoa@m^(0+128),w
  5280  05A4  024B               	subwf	efgtoa@i^(0+128),w
  5281  05A5                     u495_25:	
  5282  05A5  1803               	skipnc
  5283  05A6  2DB5               	goto	i1l3293
  5284  05A7  0141               	movlb	1	; select bank1
  5285  05A8  0854               	movf	(efgtoa@n+1)^(0+128),w
  5286  05A9  3A80               	xorlw	128
  5287  05AA  0140               	movlb	0	; select bank0
  5288  05AB  00CB               	movwf	??_efgtoa
  5289  05AC  3080               	movlw	128
  5290  05AD  024B               	subwf	??_efgtoa,w
  5291  05AE  1D03               	skipz
  5292  05AF  2DB3               	goto	u496_25
  5293  05B0  304B               	movlw	75
  5294  05B1  0141               	movlb	1	; select bank1
  5295  05B2  0253               	subwf	efgtoa@n^(0+128),w
  5296  05B3                     u496_25:	
  5297  05B3  1C03               	skipc
  5298  05B4  2C83               	goto	i1l3241
  5299  05B5                     i1l3293:	
  5300                           
  5301                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  5302  05B5  0141               	movlb	1	; select bank1
  5303  05B6  0832               	movf	efgtoa@pp^(0+128),w
  5304  05B7  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  5305  05B8  1903               	btfsc	3,2
  5306  05B9  1E6D               	btfss	_flags^(0+128),4
  5307  05BA  2DCC               	goto	i1l3301
  5308                           
  5309                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  5310  05BB  302E               	movlw	46
  5311  05BC  0140               	movlb	0	; select bank0
  5312  05BD  00CB               	movwf	??_efgtoa
  5313  05BE  0141               	movlb	1	; select bank1
  5314  05BF  0853               	movf	efgtoa@n^(0+128),w
  5315  05C0  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5316  05C1  0086               	movwf	6
  5317  05C2  3001               	movlw	1	; select bank3/4
  5318  05C3  0087               	movwf	7
  5319  05C4  0140               	movlb	0	; select bank0
  5320  05C5  084B               	movf	??_efgtoa,w
  5321  05C6  0081               	movwf	1
  5322  05C7  3001               	movlw	1
  5323  05C8  0141               	movlb	1	; select bank1
  5324  05C9  07D3               	addwf	efgtoa@n^(0+128),f
  5325  05CA  3000               	movlw	0
  5326  05CB  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  5327  05CC                     i1l3301:	
  5328                           
  5329                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  5330  05CC  0853               	movf	efgtoa@n^(0+128),w
  5331  05CD  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5332  05CE  0086               	movwf	6
  5333  05CF  3001               	movlw	1	; select bank3/4
  5334  05D0  0087               	movwf	7
  5335  05D1  0181               	clrf	1
  5336                           
  5337                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  5338  05D2  3065               	movlw	101
  5339  05D3  063F               	xorwf	efgtoa@nmode^(0+128),w
  5340  05D4  1D03               	btfss	3,2
  5341  05D5  2E9D               	goto	i1l3363
  5342                           
  5343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  5344  05D6  304F               	movlw	79
  5345  05D7  00CB               	movwf	efgtoa@i^(0+128)
  5346  05D8  3000               	movlw	0
  5347  05D9  00CC               	movwf	(efgtoa@i^(0+128)+1)
  5348                           
  5349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  5350  05DA  084B               	movf	efgtoa@i^(0+128),w
  5351  05DB  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5352  05DC  0086               	movwf	6
  5353  05DD  3001               	movlw	1	; select bank3/4
  5354  05DE  0087               	movwf	7
  5355  05DF  0181               	clrf	1
  5356                           
  5357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  5358  05E0  01BA               	clrf	efgtoa@sign^(0+128)
  5359  05E1  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  5360                           
  5361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  5362  05E2  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  5363  05E3  2DED               	goto	i1l3317
  5364                           
  5365                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  5366  05E4  3001               	movlw	1
  5367  05E5  00BA               	movwf	efgtoa@sign^(0+128)
  5368  05E6  3000               	movlw	0
  5369  05E7  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  5370                           
  5371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  5372  05E8  09D1               	comf	efgtoa@e^(0+128),f
  5373  05E9  09D2               	comf	(efgtoa@e+1)^(0+128),f
  5374  05EA  0AD1               	incf	efgtoa@e^(0+128),f
  5375  05EB  1903               	skipnz
  5376  05EC  0AD2               	incf	(efgtoa@e+1)^(0+128),f
  5377  05ED                     i1l3317:	
  5378                           
  5379                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  5380  05ED  3002               	movlw	2
  5381  05EE  00BC               	movwf	efgtoa@p^(0+128)
  5382  05EF  3000               	movlw	0
  5383  05F0  00BD               	movwf	(efgtoa@p^(0+128)+1)
  5384  05F1                     i1l3329:	
  5385                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  5386                           
  5387                           
  5388                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  5389  05F1  0851               	movf	efgtoa@e^(0+128),w
  5390  05F2  0452               	iorwf	(efgtoa@e+1)^(0+128),w
  5391  05F3  1903               	btfsc	3,2
  5392  05F4  2E2C               	goto	i1l3331
  5393  05F5                     i1l3319:	
  5394                           
  5395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  5396  05F5  30FF               	movlw	255
  5397  05F6  0141               	movlb	1	; select bank1
  5398  05F7  07CB               	addwf	efgtoa@i^(0+128),f
  5399  05F8  30FF               	movlw	255
  5400  05F9  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  5401                           
  5402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  5403  05FA  300A               	movlw	10
  5404  05FB  00F0               	movwf	___awmod@divisor
  5405  05FC  3000               	movlw	0
  5406  05FD  00F1               	movwf	___awmod@divisor+1
  5407  05FE  0852               	movf	(efgtoa@e+1)^(0+128),w
  5408  05FF  00F3               	movwf	___awmod@dividend+1
  5409  0600  0851               	movf	efgtoa@e^(0+128),w
  5410  0601  00F2               	movwf	___awmod@dividend
  5411  0602  3194  241F  3180   	fcall	___awmod
  5412  0605  0870               	movf	?___awmod,w
  5413  0606  3E30               	addlw	48
  5414  0607  0140               	movlb	0	; select bank0
  5415  0608  00CB               	movwf	??_efgtoa
  5416  0609  0141               	movlb	1	; select bank1
  5417  060A  084B               	movf	efgtoa@i^(0+128),w
  5418  060B  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5419  060C  0086               	movwf	6
  5420  060D  3001               	movlw	1	; select bank3/4
  5421  060E  0087               	movwf	7
  5422  060F  0140               	movlb	0	; select bank0
  5423  0610  084B               	movf	??_efgtoa,w
  5424  0611  0081               	movwf	1
  5425                           
  5426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  5427  0612  300A               	movlw	10
  5428  0613  00F0               	movwf	___awdiv@divisor
  5429  0614  3000               	movlw	0
  5430  0615  00F1               	movwf	___awdiv@divisor+1
  5431  0616  0141               	movlb	1	; select bank1
  5432  0617  0852               	movf	(efgtoa@e+1)^(0+128),w
  5433  0618  00F3               	movwf	___awdiv@dividend+1
  5434  0619  0851               	movf	efgtoa@e^(0+128),w
  5435  061A  00F2               	movwf	___awdiv@dividend
  5436  061B  3195  254A  3180   	fcall	___awdiv
  5437  061E  0871               	movf	?___awdiv+1,w
  5438  061F  0141               	movlb	1	; select bank1
  5439  0620  00D2               	movwf	(efgtoa@e+1)^(0+128)
  5440  0621  0870               	movf	?___awdiv,w
  5441  0622  00D1               	movwf	efgtoa@e^(0+128)
  5442                           
  5443                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  5444  0623  30FF               	movlw	255
  5445  0624  07BC               	addwf	efgtoa@p^(0+128),f
  5446  0625  30FF               	movlw	255
  5447  0626  3DBD               	addwfc	(efgtoa@p+1)^(0+128),f
  5448                           
  5449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  5450  0627  30FF               	movlw	255
  5451  0628  07C0               	addwf	efgtoa@w^(0+128),f
  5452  0629  30FF               	movlw	255
  5453  062A  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5454  062B  2DF1               	goto	i1l3329
  5455  062C                     i1l3331:	
  5456  062C  083D               	movf	(efgtoa@p+1)^(0+128),w
  5457  062D  3A80               	xorlw	128
  5458  062E  0140               	movlb	0	; select bank0
  5459  062F  00CB               	movwf	??_efgtoa
  5460  0630  3080               	movlw	128
  5461  0631  024B               	subwf	??_efgtoa,w
  5462  0632  1D03               	skipz
  5463  0633  2E37               	goto	u502_25
  5464  0634  3001               	movlw	1
  5465  0635  0141               	movlb	1	; select bank1
  5466  0636  023C               	subwf	efgtoa@p^(0+128),w
  5467  0637                     u502_25:	
  5468  0637  1803               	skipnc
  5469  0638  2DF5               	goto	i1l3319
  5470                           
  5471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  5472  0639  30FF               	movlw	255
  5473  063A  0141               	movlb	1	; select bank1
  5474  063B  07CB               	addwf	efgtoa@i^(0+128),f
  5475  063C  30FF               	movlw	255
  5476  063D  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  5477                           
  5478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  5479  063E  083A               	movf	efgtoa@sign^(0+128),w
  5480  063F  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  5481  0640  1D03               	btfss	3,2
  5482  0641  2E44               	goto	i1l3339
  5483  0642  302B               	movlw	43
  5484  0643  2E45               	goto	L7
  5485  0644                     i1l3339:	
  5486  0644  302D               	movlw	45
  5487  0645                     L7:	
  5488  0645  00AA               	movwf	_efgtoa$426^(0+128)
  5489  0646  3000               	movlw	0
  5490  0647  00AB               	movwf	(_efgtoa$426^(0+128)+1)
  5491  0648  082A               	movf	_efgtoa$426^(0+128),w
  5492  0649  0140               	movlb	0	; select bank0
  5493  064A  00CB               	movwf	??_efgtoa
  5494  064B  0141               	movlb	1	; select bank1
  5495  064C  084B               	movf	efgtoa@i^(0+128),w
  5496  064D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5497  064E  0086               	movwf	6
  5498  064F  3001               	movlw	1	; select bank3/4
  5499  0650  0087               	movwf	7
  5500  0651  0140               	movlb	0	; select bank0
  5501  0652  084B               	movf	??_efgtoa,w
  5502  0653  0081               	movwf	1
  5503                           
  5504                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  5505  0654  30FF               	movlw	255
  5506  0655  0141               	movlb	1	; select bank1
  5507  0656  07C0               	addwf	efgtoa@w^(0+128),f
  5508  0657  30FF               	movlw	255
  5509  0658  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5510                           
  5511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5512  0659  30FF               	movlw	255
  5513  065A  07CB               	addwf	efgtoa@i^(0+128),f
  5514  065B  30FF               	movlw	255
  5515  065C  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  5516  065D  0140               	movlb	0	; select bank0
  5517  065E  084A               	movf	efgtoa@c,w
  5518  065F  3EBF               	addlw	191
  5519  0660  00CB               	movwf	??_efgtoa
  5520  0661  30FF               	movlw	255
  5521  0662  1803               	skipnc
  5522  0663  3000               	movlw	0
  5523  0664  00CC               	movwf	??_efgtoa+1
  5524  0665  3000               	movlw	0
  5525  0666  024C               	subwf	??_efgtoa+1,w
  5526  0667  301A               	movlw	26
  5527  0668  1903               	skipnz
  5528  0669  024B               	subwf	??_efgtoa,w
  5529  066A  1803               	btfsc	3,0
  5530  066B  2E6E               	goto	u504_20
  5531  066C  3001               	movlw	1
  5532  066D  2E6F               	goto	u505_20
  5533  066E                     u504_20:	
  5534  066E  3000               	movlw	0
  5535  066F                     u505_20:	
  5536  066F  00CD               	movwf	??_efgtoa+2
  5537  0670  01CE               	clrf	??_efgtoa+3
  5538  0671  084D               	movf	??_efgtoa+2,w
  5539  0672  0141               	movlb	1	; select bank1
  5540  0673  00AE               	movwf	_efgtoa$428^(0+128)
  5541  0674  0140               	movlb	0	; select bank0
  5542  0675  084E               	movf	??_efgtoa+3,w
  5543  0676  0141               	movlb	1	; select bank1
  5544  0677  00AF               	movwf	(_efgtoa$428+1)^(0+128)
  5545  0678  082E               	movf	_efgtoa$428^(0+128),w
  5546  0679  042F               	iorwf	(_efgtoa$428+1)^(0+128),w
  5547  067A  1D03               	btfss	3,2
  5548  067B  2E7E               	goto	i1l3355
  5549  067C  3065               	movlw	101
  5550  067D  2E7F               	goto	L8
  5551  067E                     i1l3355:	
  5552  067E  3045               	movlw	69
  5553  067F                     L8:	
  5554  067F  00AC               	movwf	_efgtoa$427^(0+128)
  5555  0680  3000               	movlw	0
  5556  0681  00AD               	movwf	(_efgtoa$427^(0+128)+1)
  5557  0682  082C               	movf	_efgtoa$427^(0+128),w
  5558  0683  0140               	movlb	0	; select bank0
  5559  0684  00CB               	movwf	??_efgtoa
  5560  0685  0141               	movlb	1	; select bank1
  5561  0686  084B               	movf	efgtoa@i^(0+128),w
  5562  0687  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5563  0688  0086               	movwf	6
  5564  0689  3001               	movlw	1	; select bank3/4
  5565  068A  0087               	movwf	7
  5566  068B  0140               	movlb	0	; select bank0
  5567  068C  084B               	movf	??_efgtoa,w
  5568  068D  0081               	movwf	1
  5569                           
  5570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  5571  068E  30FF               	movlw	255
  5572  068F  0141               	movlb	1	; select bank1
  5573  0690  07C0               	addwf	efgtoa@w^(0+128),f
  5574  0691  30FF               	movlw	255
  5575  0692  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5576                           
  5577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  5578  0693  084B               	movf	efgtoa@i^(0+128),w
  5579  0694  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5580  0695  00F0               	movwf	strcpy@src
  5581  0696  3001               	movlw	1
  5582  0697  00F1               	movwf	strcpy@src+1
  5583  0698  0853               	movf	efgtoa@n^(0+128),w
  5584  0699  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5585  069A  3193  2355  3180   	fcall	_strcpy
  5586  069D                     i1l3363:	
  5587                           
  5588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 502:     return pad(fp, &dbuf
      +                          [0], w);
  5589  069D  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  5590  069E  0140               	movlb	0	; select bank0
  5591  069F  00CB               	movwf	??_efgtoa
  5592  06A0  084B               	movf	??_efgtoa,w
  5593  06A1  00A4               	movwf	pad@buf
  5594  06A2  0141               	movlb	1	; select bank1
  5595  06A3  0841               	movf	(efgtoa@w+1)^(0+128),w
  5596  06A4  0140               	movlb	0	; select bank0
  5597  06A5  00A6               	movwf	pad@p+1
  5598  06A6  0141               	movlb	1	; select bank1
  5599  06A7  0840               	movf	efgtoa@w^(0+128),w
  5600  06A8  0140               	movlb	0	; select bank0
  5601  06A9  00A5               	movwf	pad@p
  5602  06AA  0141               	movlb	1	; select bank1
  5603  06AB  083E               	movf	efgtoa@fp^(0+128),w
  5604  06AC  3194  24FA         	fcall	_pad
  5605  06AE  0140               	movlb	0	; select bank0
  5606  06AF  0825               	movf	?_pad+1,w
  5607  06B0  00C7               	movwf	?_efgtoa+1
  5608  06B1  0824               	movf	?_pad,w
  5609  06B2  00C6               	movwf	?_efgtoa
  5610  06B3  0008               	return
  5611  06B4                     __end_of_efgtoa:	
  5612                           
  5613                           	psect	text11
  5614  1374                     __ptext11:	
  5615 ;; *************** function _tolower *****************
  5616 ;; Defined at:
  5617 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  c               2    6[COMMON] int 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  2    6[COMMON] int 
  5624 ;; Registers used:
  5625 ;;		wreg, status,2, status,0
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;Total ram usage:        8 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    1
  5638 ;; This function calls:
  5639 ;;		_isupper
  5640 ;; This function is called by:
  5641 ;;		_efgtoa
  5642 ;;		_vfpfcnvrt
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           
  5647                           ;psect for function _tolower
  5648  1374                     _tolower:	
  5649                           
  5650                           ;incstack = 0
  5651                           ; Regs used in _tolower: [wreg+status,2+status,0]
  5652  1374  0876               	movf	tolower@c,w
  5653  1375  3EBF               	addlw	191
  5654  1376  00F8               	movwf	??_tolower
  5655  1377  30FF               	movlw	255
  5656  1378  3D77               	addwfc	tolower@c+1,w
  5657  1379  00F9               	movwf	??_tolower+1
  5658  137A  3000               	movlw	0
  5659  137B  0279               	subwf	??_tolower+1,w
  5660  137C  301A               	movlw	26
  5661  137D  1903               	skipnz
  5662  137E  0278               	subwf	??_tolower,w
  5663  137F  1803               	btfsc	3,0
  5664  1380  2B83               	goto	u348_20
  5665  1381  3001               	movlw	1
  5666  1382  2B84               	goto	u349_20
  5667  1383                     u348_20:	
  5668  1383  3000               	movlw	0
  5669  1384                     u349_20:	
  5670  1384  00FA               	movwf	??_tolower+2
  5671  1385  01FB               	clrf	??_tolower+3
  5672  1386  087A               	movf	??_tolower+2,w
  5673  1387  00FC               	movwf	_tolower$827
  5674  1388  087B               	movf	??_tolower+3,w
  5675  1389  00FD               	movwf	_tolower$827+1
  5676  138A  087C               	movf	_tolower$827,w
  5677  138B  047D               	iorwf	_tolower$827+1,w
  5678  138C  1903               	btfsc	3,2
  5679  138D  0008               	return
  5680  138E  3020               	movlw	32
  5681  138F  0476               	iorwf	tolower@c,w
  5682  1390  00F6               	movwf	?_tolower
  5683  1391  3000               	movlw	0
  5684  1392  0477               	iorwf	tolower@c+1,w
  5685  1393  00F7               	movwf	?_tolower+1
  5686  1394  0008               	return
  5687  1395                     __end_of_tolower:	
  5688                           
  5689                           	psect	text12
  5690  12CF                     __ptext12:	
  5691 ;; *************** function _isupper *****************
  5692 ;; Defined at:
  5693 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  c               2    0[COMMON] int 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;		None
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  2    0[COMMON] int 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;Total ram usage:        6 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_efgtoa
  5717 ;;		_vfpfcnvrt
  5718 ;;		_tolower
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           
  5723                           ;psect for function _isupper
  5724  12CF                     _isupper:	
  5725                           
  5726                           ;incstack = 0
  5727                           ; Regs used in _isupper: [wreg+status,2+status,0]
  5728  12CF  0870               	movf	isupper@c,w
  5729  12D0  3EBF               	addlw	191
  5730  12D1  00F2               	movwf	??_isupper
  5731  12D2  30FF               	movlw	255
  5732  12D3  3D71               	addwfc	isupper@c+1,w
  5733  12D4  00F3               	movwf	??_isupper+1
  5734  12D5  3000               	movlw	0
  5735  12D6  0273               	subwf	??_isupper+1,w
  5736  12D7  301A               	movlw	26
  5737  12D8  1903               	skipnz
  5738  12D9  0272               	subwf	??_isupper,w
  5739  12DA  1803               	btfsc	3,0
  5740  12DB  2ADE               	goto	u287_20
  5741  12DC  3001               	movlw	1
  5742  12DD  2ADF               	goto	u288_20
  5743  12DE                     u287_20:	
  5744  12DE  3000               	movlw	0
  5745  12DF                     u288_20:	
  5746  12DF  00F4               	movwf	??_isupper+2
  5747  12E0  01F5               	clrf	??_isupper+3
  5748  12E1  0874               	movf	??_isupper+2,w
  5749  12E2  00F0               	movwf	?_isupper
  5750  12E3  0875               	movf	??_isupper+3,w
  5751  12E4  00F1               	movwf	?_isupper+1
  5752  12E5  0008               	return
  5753  12E6                     __end_of_isupper:	
  5754                           
  5755                           	psect	text13
  5756  1355                     __ptext13:	
  5757 ;; *************** function _strcpy *****************
  5758 ;; Defined at:
  5759 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  dest            1    wreg     PTR unsigned char 
  5762 ;;		 -> dbuf(80), 
  5763 ;;  src             2    0[COMMON] PTR const unsigned char 
  5764 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5765 ;;		 -> dbuf(80), 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  dest            1    7[COMMON] PTR unsigned char 
  5768 ;;		 -> dbuf(80), 
  5769 ;;  s               2    4[COMMON] PTR const unsigned char 
  5770 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5771 ;;		 -> dbuf(80), 
  5772 ;;  d               1    6[COMMON] PTR unsigned char 
  5773 ;;		 -> dbuf(80), 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      PTR unsigned char 
  5776 ;; Registers used:
  5777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5785 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;Total ram usage:        8 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_efgtoa
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           
  5797                           ;psect for function _strcpy
  5798  1355                     _strcpy:	
  5799                           
  5800                           ;incstack = 0
  5801                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  5802                           ;strcpy@dest stored from wreg
  5803  1355  00F7               	movwf	strcpy@dest
  5804  1356  0871               	movf	strcpy@src+1,w
  5805  1357  00F5               	movwf	strcpy@s+1
  5806  1358  0870               	movf	strcpy@src,w
  5807  1359  00F4               	movwf	strcpy@s
  5808  135A  0877               	movf	strcpy@dest,w
  5809  135B  00F2               	movwf	??_strcpy
  5810  135C  0872               	movf	??_strcpy,w
  5811  135D  00F6               	movwf	strcpy@d
  5812  135E                     i1l2589:	
  5813  135E  0876               	movf	strcpy@d,w
  5814  135F  0086               	movwf	6
  5815  1360  3001               	movlw	1	; select bank2/3
  5816  1361  0087               	movwf	7
  5817  1362  0AF6               	incf	strcpy@d,f
  5818  1363  0875               	movf	strcpy@s+1,w
  5819  1364  00F3               	movwf	??_strcpy+1
  5820  1365  0874               	movf	strcpy@s,w
  5821  1366  00F2               	movwf	??_strcpy
  5822  1367  0AF4               	incf	strcpy@s,f
  5823  1368  1903               	skipnz
  5824  1369  0AF5               	incf	strcpy@s+1,f
  5825  136A  0872               	movf	??_strcpy,w
  5826  136B  0084               	movwf	4
  5827  136C  0873               	movf	??_strcpy+1,w
  5828  136D  0085               	movwf	5
  5829  136E  0800               	movf	0,w	;code access
  5830  136F  3FC0               	movwi [0]fsr1
  5831  1370  0889               	movf	9,f
  5832  1371  1903               	btfsc	3,2
  5833  1372  0008               	return
  5834  1373  2B5E               	goto	i1l2589
  5835  1374                     __end_of_strcpy:	
  5836                           
  5837                           	psect	text14
  5838  14FA                     __ptext14:	
  5839 ;; *************** function _pad *****************
  5840 ;; Defined at:
  5841 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;  fp              1    wreg     PTR struct _IO_FILE
  5844 ;;		 -> NULL(0), 
  5845 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5846 ;;		 -> dbuf(80), 
  5847 ;;  p               2    5[BANK0 ] int 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5850 ;;		 -> NULL(0), 
  5851 ;;  w               2    9[BANK0 ] int 
  5852 ;;  i               2    7[BANK0 ] int 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  2    4[BANK0 ] int 
  5855 ;; Registers used:
  5856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5862 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;Total ram usage:        9 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    3
  5869 ;; This function calls:
  5870 ;;		_fputc
  5871 ;;		_fputs
  5872 ;;		_strlen
  5873 ;; This function is called by:
  5874 ;;		_efgtoa
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           
  5879                           ;psect for function _pad
  5880  14FA                     _pad:	
  5881                           
  5882                           ;incstack = 0
  5883                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5884                           ;pad@fp stored from wreg
  5885  14FA  0140               	movlb	0	; select bank0
  5886  14FB  00AB               	movwf	pad@fp
  5887                           
  5888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  5889  14FC  0141               	movlb	1	; select bank1
  5890  14FD  1C6D               	btfss	_flags^(0+128),0
  5891  14FE  2D08               	goto	i1l2547
  5892                           
  5893                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  5894  14FF  0140               	movlb	0	; select bank0
  5895  1500  082B               	movf	pad@fp,w
  5896  1501  00FD               	movwf	??_pad
  5897  1502  087D               	movf	??_pad,w
  5898  1503  00F9               	movwf	fputs@fp
  5899  1504  0824               	movf	pad@buf,w
  5900  1505  3193  2395  3194   	fcall	_fputs
  5901  1508                     i1l2547:	
  5902                           
  5903                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  5904  1508  0140               	movlb	0	; select bank0
  5905  1509  1BA6               	btfsc	pad@p+1,7
  5906  150A  2D10               	goto	i1l2551
  5907  150B  0826               	movf	pad@p+1,w
  5908  150C  00AA               	movwf	pad@w+1
  5909  150D  0825               	movf	pad@p,w
  5910  150E  00A9               	movwf	pad@w
  5911  150F  2D12               	goto	i1l222
  5912  1510                     i1l2551:	
  5913  1510  01A9               	clrf	pad@w
  5914  1511  01AA               	clrf	pad@w+1
  5915  1512                     i1l222:	
  5916                           
  5917                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  5918  1512  01A7               	clrf	pad@i
  5919  1513  01A8               	clrf	pad@i+1
  5920  1514                     i1l2557:	
  5921                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  5922                           
  5923                           
  5924                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  5925  1514  0828               	movf	pad@i+1,w
  5926  1515  3A80               	xorlw	128
  5927  1516  00FD               	movwf	??_pad
  5928  1517  082A               	movf	pad@w+1,w
  5929  1518  3A80               	xorlw	128
  5930  1519  027D               	subwf	??_pad,w
  5931  151A  1D03               	skipz
  5932  151B  2D1E               	goto	u337_25
  5933  151C  0829               	movf	pad@w,w
  5934  151D  0227               	subwf	pad@i,w
  5935  151E                     u337_25:	
  5936  151E  1803               	btfsc	3,0
  5937  151F  2D32               	goto	i1l225
  5938                           
  5939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  5940  1520  3020               	movlw	32
  5941  1521  00F1               	movwf	fputc@c
  5942  1522  3000               	movlw	0
  5943  1523  00F2               	movwf	fputc@c+1
  5944  1524  0140               	movlb	0	; select bank0
  5945  1525  082B               	movf	pad@fp,w
  5946  1526  00FD               	movwf	??_pad
  5947  1527  087D               	movf	??_pad,w
  5948  1528  00F3               	movwf	fputc@fp
  5949  1529  3193  23EA  3194   	fcall	_fputc
  5950                           
  5951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  5952  152C  3001               	movlw	1
  5953  152D  0140               	movlb	0	; select bank0
  5954  152E  07A7               	addwf	pad@i,f
  5955  152F  3000               	movlw	0
  5956  1530  3DA8               	addwfc	pad@i+1,f
  5957  1531  2D14               	goto	i1l2557
  5958  1532                     i1l225:	
  5959                           
  5960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  5961  1532  0141               	movlb	1	; select bank1
  5962  1533  186D               	btfsc	_flags^(0+128),0
  5963  1534  2D3E               	goto	i1l226
  5964                           
  5965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  5966  1535  0140               	movlb	0	; select bank0
  5967  1536  082B               	movf	pad@fp,w
  5968  1537  00FD               	movwf	??_pad
  5969  1538  087D               	movf	??_pad,w
  5970  1539  00F9               	movwf	fputs@fp
  5971  153A  0824               	movf	pad@buf,w
  5972  153B  3193  2395  3194   	fcall	_fputs
  5973  153E                     i1l226:	
  5974                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 92:     }
  5975                           
  5976                           
  5977                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  5978  153E  0140               	movlb	0	; select bank0
  5979  153F  0824               	movf	pad@buf,w
  5980  1540  3192  22E6         	fcall	_strlen
  5981  1542  0140               	movlb	0	; select bank0
  5982  1543  0829               	movf	pad@w,w
  5983  1544  0770               	addwf	?_strlen,w
  5984  1545  00A4               	movwf	?_pad
  5985  1546  082A               	movf	pad@w+1,w
  5986  1547  3D71               	addwfc	?_strlen+1,w
  5987  1548  00A5               	movwf	?_pad+1
  5988  1549  0008               	return
  5989  154A                     __end_of_pad:	
  5990                           
  5991                           	psect	text15
  5992  12E6                     __ptext15:	
  5993 ;; *************** function _strlen *****************
  5994 ;; Defined at:
  5995 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  s               1    wreg     PTR const unsigned char 
  5998 ;;		 -> dbuf(80), 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;  s               1    4[COMMON] PTR const unsigned char 
  6001 ;;		 -> dbuf(80), 
  6002 ;;  a               1    3[COMMON] PTR const unsigned char 
  6003 ;;		 -> dbuf(80), 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  2    0[COMMON] unsigned int 
  6006 ;; Registers used:
  6007 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6016 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6017 ;;Total ram usage:        5 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; This function calls:
  6020 ;;		Nothing
  6021 ;; This function is called by:
  6022 ;;		_pad
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           
  6027                           ;psect for function _strlen
  6028  12E6                     _strlen:	
  6029                           
  6030                           ;incstack = 0
  6031                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6032                           ;strlen@s stored from wreg
  6033  12E6  00F4               	movwf	strlen@s
  6034  12E7  0874               	movf	strlen@s,w
  6035  12E8  00F2               	movwf	??_strlen
  6036  12E9  0872               	movf	??_strlen,w
  6037  12EA  00F3               	movwf	strlen@a
  6038  12EB                     i1l2325:	
  6039  12EB  0874               	movf	strlen@s,w
  6040  12EC  0086               	movwf	6
  6041  12ED  3001               	movlw	1	; select bank2/3
  6042  12EE  0087               	movwf	7
  6043  12EF  0801               	movf	1,w
  6044  12F0  1903               	btfsc	3,2
  6045  12F1  2AF7               	goto	i1l2327
  6046  12F2  3001               	movlw	1
  6047  12F3  00F2               	movwf	??_strlen
  6048  12F4  0872               	movf	??_strlen,w
  6049  12F5  07F4               	addwf	strlen@s,f
  6050  12F6  2AEB               	goto	i1l2325
  6051  12F7                     i1l2327:	
  6052  12F7  0873               	movf	strlen@a,w
  6053  12F8  0274               	subwf	strlen@s,w
  6054  12F9  00F0               	movwf	?_strlen
  6055  12FA  01F1               	clrf	?_strlen+1
  6056  12FB  1BF0               	btfsc	?_strlen,7
  6057  12FC  03F1               	decf	?_strlen+1,f
  6058  12FD  0008               	return
  6059  12FE                     __end_of_strlen:	
  6060                           
  6061                           	psect	text16
  6062  1395                     __ptext16:	
  6063 ;; *************** function _fputs *****************
  6064 ;; Defined at:
  6065 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  s               1    wreg     PTR const unsigned char 
  6068 ;;		 -> dbuf(80), 
  6069 ;;  fp              1    9[COMMON] PTR struct _IO_FILE
  6070 ;;		 -> NULL(0), 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6073 ;;		 -> dbuf(80), 
  6074 ;;  i               2    1[BANK0 ] int 
  6075 ;;  c               1    0[BANK0 ] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  2    9[COMMON] int 
  6078 ;; Registers used:
  6079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6085 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;Total ram usage:        8 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    2
  6092 ;; This function calls:
  6093 ;;		_fputc
  6094 ;; This function is called by:
  6095 ;;		_pad
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           
  6100                           ;psect for function _fputs
  6101  1395                     _fputs:	
  6102                           
  6103                           ;incstack = 0
  6104                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6105                           ;fputs@s stored from wreg
  6106  1395  0140               	movlb	0	; select bank0
  6107  1396  00A3               	movwf	fputs@s
  6108  1397  01A1               	clrf	fputs@i
  6109  1398  01A2               	clrf	fputs@i+1
  6110  1399                     i1l2319:	
  6111  1399  0821               	movf	fputs@i,w
  6112  139A  0723               	addwf	fputs@s,w
  6113  139B  00FA               	movwf	??_fputs
  6114  139C  087A               	movf	??_fputs,w
  6115  139D  0086               	movwf	6
  6116  139E  3001               	movlw	1	; select bank2/3
  6117  139F  0087               	movwf	7
  6118  13A0  0801               	movf	1,w
  6119  13A1  00FB               	movwf	??_fputs+1
  6120  13A2  087B               	movf	??_fputs+1,w
  6121  13A3  00A0               	movwf	fputs@c
  6122  13A4  0820               	movf	fputs@c,w
  6123  13A5  1903               	btfsc	3,2
  6124  13A6  0008               	return
  6125  13A7  0820               	movf	fputs@c,w
  6126  13A8  00FA               	movwf	??_fputs
  6127  13A9  01FB               	clrf	??_fputs+1
  6128  13AA  087A               	movf	??_fputs,w
  6129  13AB  00F1               	movwf	fputc@c
  6130  13AC  087B               	movf	??_fputs+1,w
  6131  13AD  00F2               	movwf	fputc@c+1
  6132  13AE  0879               	movf	fputs@fp,w
  6133  13AF  00FC               	movwf	??_fputs+2
  6134  13B0  087C               	movf	??_fputs+2,w
  6135  13B1  00F3               	movwf	fputc@fp
  6136  13B2  3193  23EA  3193   	fcall	_fputc
  6137  13B5  3001               	movlw	1
  6138  13B6  0140               	movlb	0	; select bank0
  6139  13B7  07A1               	addwf	fputs@i,f
  6140  13B8  3000               	movlw	0
  6141  13B9  3DA2               	addwfc	fputs@i+1,f
  6142  13BA  2B99               	goto	i1l2319
  6143  13BB                     __end_of_fputs:	
  6144                           
  6145                           	psect	text17
  6146  13EA                     __ptext17:	
  6147 ;; *************** function _fputc *****************
  6148 ;; Defined at:
  6149 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  c               2    1[COMMON] int 
  6152 ;;  fp              1    3[COMMON] PTR struct _IO_FILE
  6153 ;;		 -> NULL(0), 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;		None
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  2    1[COMMON] int 
  6158 ;; Registers used:
  6159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6165 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6168 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6169 ;;Total ram usage:        8 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    1
  6172 ;; This function calls:
  6173 ;;		_putch
  6174 ;; This function is called by:
  6175 ;;		_pad
  6176 ;;		_vfpfcnvrt
  6177 ;;		_fputs
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           
  6182                           ;psect for function _fputc
  6183  13EA                     _fputc:	
  6184                           
  6185                           ;incstack = 0
  6186                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6187  13EA  0873               	movf	fputc@fp,w
  6188  13EB  1D03               	btfss	3,2
  6189  13EC  0873               	movf	fputc@fp,w
  6190  13ED  1D03               	btfss	3,2
  6191  13EE  2BF3               	goto	i1l2305
  6192  13EF  0871               	movf	fputc@c,w
  6193  13F0  3187  27F1         	fcall	_putch
  6194  13F2  0008               	return
  6195  13F3                     i1l2305:	
  6196  13F3  0873               	movf	fputc@fp,w
  6197  13F4  3E03               	addlw	3
  6198  13F5  0086               	movwf	6
  6199  13F6  0187               	clrf	7
  6200  13F7  0016               	moviw fsr1++
  6201  13F8  0401               	iorwf	1,w
  6202  13F9  1903               	btfsc	3,2
  6203  13FA  2C16               	goto	i1l2309
  6204  13FB  0873               	movf	fputc@fp,w
  6205  13FC  3E03               	addlw	3
  6206  13FD  0086               	movwf	6
  6207  13FE  0187               	clrf	7
  6208  13FF  3F40               	moviw [0]fsr1
  6209  1400  00F4               	movwf	??_fputc
  6210  1401  3F41               	moviw [1]fsr1
  6211  1402  00F5               	movwf	??_fputc+1
  6212  1403  0A73               	incf	fputc@fp,w
  6213  1404  0086               	movwf	6
  6214  1405  0187               	clrf	7
  6215  1406  3F40               	moviw [0]fsr1
  6216  1407  00F6               	movwf	??_fputc+2
  6217  1408  3F41               	moviw [1]fsr1
  6218  1409  00F7               	movwf	??_fputc+3
  6219  140A  0877               	movf	??_fputc+3,w
  6220  140B  3A80               	xorlw	128
  6221  140C  00F8               	movwf	??_fputc+4
  6222  140D  0875               	movf	??_fputc+1,w
  6223  140E  3A80               	xorlw	128
  6224  140F  0278               	subwf	??_fputc+4,w
  6225  1410  1D03               	skipz
  6226  1411  2C14               	goto	u284_25
  6227  1412  0874               	movf	??_fputc,w
  6228  1413  0276               	subwf	??_fputc+2,w
  6229  1414                     u284_25:	
  6230  1414  1803               	skipnc
  6231  1415  0008               	return
  6232  1416                     i1l2309:	
  6233  1416  0A73               	incf	fputc@fp,w
  6234  1417  0086               	movwf	6
  6235  1418  0187               	clrf	7
  6236  1419  3001               	movlw	1
  6237  141A  0781               	addwf	1,f
  6238  141B  3141               	addfsr 1,1
  6239  141C  1803               	skipnc
  6240  141D  0A81               	incf	1,f
  6241  141E  0008               	return
  6242  141F                     __end_of_fputc:	
  6243                           
  6244                           	psect	text18
  6245  07F1                     __ptext18:	
  6246 ;; *************** function _putch *****************
  6247 ;; Defined at:
  6248 ;;		line 31 in file "UART_funcs.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  byte            1    wreg     unsigned char 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  byte            1    0[COMMON] unsigned char 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		wreg
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6265 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6266 ;;Total ram usage:        1 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_fputc
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           
  6276                           ;psect for function _putch
  6277  07F1                     _putch:	
  6278                           
  6279                           ;incstack = 0
  6280                           ; Regs used in _putch: [wreg]
  6281                           ;putch@byte stored from wreg
  6282  07F1  00F0               	movwf	putch@byte
  6283                           
  6284                           ;UART_funcs.c: 31: void putch(unsigned char byte);UART_funcs.c: 32: {;UART_funcs.c: 33: 
      +                              TXSTA=0x26;
  6285  07F2  3026               	movlw	38
  6286  07F3  0142               	movlb	2	; select bank2
  6287  07F4  009E               	movwf	30	;volatile
  6288                           
  6289                           ;UART_funcs.c: 34:     RCSTAbits.SPEN=1;
  6290  07F5  179D               	bsf	29,7	;volatile
  6291                           
  6292                           ;UART_funcs.c: 35:     TXREG=byte;
  6293  07F6  0870               	movf	putch@byte,w
  6294  07F7  009A               	movwf	26	;volatile
  6295  07F8                     i1l115:	
  6296                           ;UART_funcs.c: 36:     while(TX1STAbits.TRMT == 0)continue;
  6297                           
  6298  07F8  1C9E               	btfss	30,1	;volatile
  6299  07F9  2FF8               	goto	i1l115
  6300                           
  6301                           ;UART_funcs.c: 37:     TX1STAbits.TRMT = 0;
  6302  07FA  109E               	bcf	30,1	;volatile
  6303  07FB  0008               	return
  6304  07FC                     __end_of_putch:	
  6305                           
  6306                           	psect	text19
  6307  06B4                     __ptext19:	
  6308 ;; *************** function _floorf *****************
  6309 ;; Defined at:
  6310 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  x               4   13[BANK0 ] float 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  u               4   29[BANK0 ] struct .
  6315 ;;  m               4   23[BANK0 ] unsigned long 
  6316 ;;  e               2   27[BANK0 ] int 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  4   13[BANK0 ] float 
  6319 ;; Registers used:
  6320 ;;		wreg, status,2, status,0
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6326 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6327 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;Total ram usage:       20 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_efgtoa
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           
  6340                           ;psect for function _floorf
  6341  06B4                     _floorf:	
  6342                           
  6343                           ;incstack = 0
  6344                           ; Regs used in _floorf: [wreg+status,2+status,0]
  6345  06B4  0142               	movlb	2	; select bank2
  6346  06B5  0848               	movf	(floorf@F524+3)^(0+256),w
  6347  06B6  0140               	movlb	0	; select bank0
  6348  06B7  00C0               	movwf	floorf@u+3
  6349  06B8  0142               	movlb	2	; select bank2
  6350  06B9  0847               	movf	(floorf@F524+2)^(0+256),w
  6351  06BA  0140               	movlb	0	; select bank0
  6352  06BB  00BF               	movwf	floorf@u+2
  6353  06BC  0142               	movlb	2	; select bank2
  6354  06BD  0846               	movf	(floorf@F524+1)^(0+256),w
  6355  06BE  0140               	movlb	0	; select bank0
  6356  06BF  00BE               	movwf	floorf@u+1
  6357  06C0  0142               	movlb	2	; select bank2
  6358  06C1  0845               	movf	floorf@F524^(0+256),w
  6359  06C2  0140               	movlb	0	; select bank0
  6360  06C3  00BD               	movwf	floorf@u
  6361  06C4  0830               	movf	floorf@x+3,w
  6362  06C5  00C0               	movwf	floorf@u+3
  6363  06C6  082F               	movf	floorf@x+2,w
  6364  06C7  00BF               	movwf	floorf@u+2
  6365  06C8  082E               	movf	floorf@x+1,w
  6366  06C9  00BE               	movwf	floorf@u+1
  6367  06CA  082D               	movf	floorf@x,w
  6368  06CB  00BD               	movwf	floorf@u
  6369  06CC  083D               	movf	floorf@u,w
  6370  06CD  00B1               	movwf	??_floorf
  6371  06CE  083E               	movf	floorf@u+1,w
  6372  06CF  00B2               	movwf	??_floorf+1
  6373  06D0  083F               	movf	floorf@u+2,w
  6374  06D1  00B3               	movwf	??_floorf+2
  6375  06D2  0840               	movf	floorf@u+3,w
  6376  06D3  00B4               	movwf	??_floorf+3
  6377  06D4  3017               	movlw	23
  6378  06D5                     u351_25:	
  6379  06D5  36B4               	lsrf	??_floorf+3,f
  6380  06D6  0CB3               	rrf	??_floorf+2,f
  6381  06D7  0CB2               	rrf	??_floorf+1,f
  6382  06D8  0CB1               	rrf	??_floorf,f
  6383  06D9  0B89               	decfsz	9,f
  6384  06DA  2ED5               	goto	u351_25
  6385  06DB  30FF               	movlw	255
  6386  06DC  0531               	andwf	??_floorf,w
  6387  06DD  00B5               	movwf	??_floorf+4
  6388  06DE  3000               	movlw	0
  6389  06DF  0532               	andwf	??_floorf+1,w
  6390  06E0  00B6               	movwf	??_floorf+5
  6391  06E1  0835               	movf	??_floorf+4,w
  6392  06E2  3E81               	addlw	129
  6393  06E3  00BB               	movwf	floorf@e
  6394  06E4  30FF               	movlw	255
  6395  06E5  3D36               	addwfc	??_floorf+5,w
  6396  06E6  00BC               	movwf	floorf@e+1
  6397  06E7  083C               	movf	floorf@e+1,w
  6398  06E8  3A80               	xorlw	128
  6399  06E9  00B1               	movwf	??_floorf
  6400  06EA  3080               	movlw	128
  6401  06EB  0231               	subwf	??_floorf,w
  6402  06EC  1D03               	skipz
  6403  06ED  2EF0               	goto	u352_25
  6404  06EE  3017               	movlw	23
  6405  06EF  023B               	subwf	floorf@e,w
  6406  06F0                     u352_25:	
  6407  06F0  1803               	btfsc	3,0
  6408  06F1  0008               	return
  6409  06F2  0140               	movlb	0	; select bank0
  6410  06F3  1BBC               	btfsc	floorf@e+1,7
  6411  06F4  2F4D               	goto	i1l2621
  6412  06F5  30FF               	movlw	255
  6413  06F6  00B1               	movwf	??_floorf
  6414  06F7  30FF               	movlw	255
  6415  06F8  00B2               	movwf	??_floorf+1
  6416  06F9  307F               	movlw	127
  6417  06FA  00B3               	movwf	??_floorf+2
  6418  06FB  3000               	movlw	0
  6419  06FC  00B4               	movwf	??_floorf+3
  6420  06FD  0A3B               	incf	floorf@e,w
  6421  06FE  2F03               	goto	u354_20
  6422  06FF                     u354_25:	
  6423  06FF  37B4               	asrf	??_floorf+3,f
  6424  0700  0CB3               	rrf	??_floorf+2,f
  6425  0701  0CB2               	rrf	??_floorf+1,f
  6426  0702  0CB1               	rrf	??_floorf,f
  6427  0703                     u354_20:	
  6428  0703  0B89               	decfsz	9,f
  6429  0704  2EFF               	goto	u354_25
  6430  0705  0834               	movf	??_floorf+3,w
  6431  0706  00BA               	movwf	floorf@m+3
  6432  0707  0833               	movf	??_floorf+2,w
  6433  0708  00B9               	movwf	floorf@m+2
  6434  0709  0832               	movf	??_floorf+1,w
  6435  070A  00B8               	movwf	floorf@m+1
  6436  070B  0831               	movf	??_floorf,w
  6437  070C  00B7               	movwf	floorf@m
  6438  070D  083D               	movf	floorf@u,w
  6439  070E  0537               	andwf	floorf@m,w
  6440  070F  00B1               	movwf	??_floorf
  6441  0710  083E               	movf	floorf@u+1,w
  6442  0711  0538               	andwf	floorf@m+1,w
  6443  0712  00B2               	movwf	??_floorf+1
  6444  0713  083F               	movf	floorf@u+2,w
  6445  0714  0539               	andwf	floorf@m+2,w
  6446  0715  00B3               	movwf	??_floorf+2
  6447  0716  0840               	movf	floorf@u+3,w
  6448  0717  053A               	andwf	floorf@m+3,w
  6449  0718  00B4               	movwf	??_floorf+3
  6450  0719  0834               	movf	??_floorf+3,w
  6451  071A  0433               	iorwf	??_floorf+2,w
  6452  071B  0432               	iorwf	??_floorf+1,w
  6453  071C  0431               	iorwf	??_floorf,w
  6454  071D  1903               	btfsc	3,2
  6455  071E  0008               	return
  6456  071F  083D               	movf	floorf@u,w
  6457  0720  00B1               	movwf	??_floorf
  6458  0721  083E               	movf	floorf@u+1,w
  6459  0722  00B2               	movwf	??_floorf+1
  6460  0723  083F               	movf	floorf@u+2,w
  6461  0724  00B3               	movwf	??_floorf+2
  6462  0725  0840               	movf	floorf@u+3,w
  6463  0726  00B4               	movwf	??_floorf+3
  6464  0727  301F               	movlw	31
  6465  0728                     u356_25:	
  6466  0728  36B4               	lsrf	??_floorf+3,f
  6467  0729  0CB3               	rrf	??_floorf+2,f
  6468  072A  0CB2               	rrf	??_floorf+1,f
  6469  072B  0CB1               	rrf	??_floorf,f
  6470  072C  0B89               	decfsz	9,f
  6471  072D  2F28               	goto	u356_25
  6472  072E  0834               	movf	??_floorf+3,w
  6473  072F  0433               	iorwf	??_floorf+2,w
  6474  0730  0432               	iorwf	??_floorf+1,w
  6475  0731  0431               	iorwf	??_floorf,w
  6476  0732  1903               	skipnz
  6477  0733  2F3C               	goto	i1l2619
  6478  0734  0837               	movf	floorf@m,w
  6479  0735  07BD               	addwf	floorf@u,f
  6480  0736  0838               	movf	floorf@m+1,w
  6481  0737  3DBE               	addwfc	floorf@u+1,f
  6482  0738  0839               	movf	floorf@m+2,w
  6483  0739  3DBF               	addwfc	floorf@u+2,f
  6484  073A  083A               	movf	floorf@m+3,w
  6485  073B  3DC0               	addwfc	floorf@u+3,f
  6486  073C                     i1l2619:	
  6487  073C  0937               	comf	floorf@m,w
  6488  073D  00B1               	movwf	??_floorf
  6489  073E  0938               	comf	floorf@m+1,w
  6490  073F  00B2               	movwf	??_floorf+1
  6491  0740  0939               	comf	floorf@m+2,w
  6492  0741  00B3               	movwf	??_floorf+2
  6493  0742  093A               	comf	floorf@m+3,w
  6494  0743  00B4               	movwf	??_floorf+3
  6495  0744  0831               	movf	??_floorf,w
  6496  0745  05BD               	andwf	floorf@u,f
  6497  0746  0832               	movf	??_floorf+1,w
  6498  0747  05BE               	andwf	floorf@u+1,f
  6499  0748  0833               	movf	??_floorf+2,w
  6500  0749  05BF               	andwf	floorf@u+2,f
  6501  074A  0834               	movf	??_floorf+3,w
  6502  074B  05C0               	andwf	floorf@u+3,f
  6503  074C  2F83               	goto	i1l815
  6504  074D                     i1l2621:	
  6505  074D  083D               	movf	floorf@u,w
  6506  074E  00B1               	movwf	??_floorf
  6507  074F  083E               	movf	floorf@u+1,w
  6508  0750  00B2               	movwf	??_floorf+1
  6509  0751  083F               	movf	floorf@u+2,w
  6510  0752  00B3               	movwf	??_floorf+2
  6511  0753  0840               	movf	floorf@u+3,w
  6512  0754  00B4               	movwf	??_floorf+3
  6513  0755  301F               	movlw	31
  6514  0756                     u358_25:	
  6515  0756  36B4               	lsrf	??_floorf+3,f
  6516  0757  0CB3               	rrf	??_floorf+2,f
  6517  0758  0CB2               	rrf	??_floorf+1,f
  6518  0759  0CB1               	rrf	??_floorf,f
  6519  075A  0B89               	decfsz	9,f
  6520  075B  2F56               	goto	u358_25
  6521  075C  0834               	movf	??_floorf+3,w
  6522  075D  0433               	iorwf	??_floorf+2,w
  6523  075E  0432               	iorwf	??_floorf+1,w
  6524  075F  0431               	iorwf	??_floorf,w
  6525  0760  1D03               	skipz
  6526  0761  2F66               	goto	i1l2625
  6527  0762  3000               	movlw	0
  6528  0763  00C0               	movwf	floorf@u+3
  6529  0764  3000               	movlw	0
  6530  0765  2F7E               	goto	L9
  6531  0766                     i1l2625:	
  6532  0766  083D               	movf	floorf@u,w
  6533  0767  00B1               	movwf	??_floorf
  6534  0768  083E               	movf	floorf@u+1,w
  6535  0769  00B2               	movwf	??_floorf+1
  6536  076A  083F               	movf	floorf@u+2,w
  6537  076B  00B3               	movwf	??_floorf+2
  6538  076C  0840               	movf	floorf@u+3,w
  6539  076D  00B4               	movwf	??_floorf+3
  6540  076E  3001               	movlw	1
  6541  076F                     u360_25:	
  6542  076F  35B1               	lslf	??_floorf,f
  6543  0770  0DB2               	rlf	??_floorf+1,f
  6544  0771  0DB3               	rlf	??_floorf+2,f
  6545  0772  0DB4               	rlf	??_floorf+3,f
  6546  0773  0B89               	decfsz	9,f
  6547  0774  2F6F               	goto	u360_25
  6548  0775  0834               	movf	??_floorf+3,w
  6549  0776  0433               	iorwf	??_floorf+2,w
  6550  0777  0432               	iorwf	??_floorf+1,w
  6551  0778  0431               	iorwf	??_floorf,w
  6552  0779  1903               	skipnz
  6553  077A  2F83               	goto	i1l815
  6554  077B  30BF               	movlw	191
  6555  077C  00C0               	movwf	floorf@u+3
  6556  077D  3080               	movlw	128
  6557  077E                     L9:	
  6558  077E  00BF               	movwf	floorf@u+2
  6559  077F  3000               	movlw	0
  6560  0780  00BE               	movwf	floorf@u+1
  6561  0781  3000               	movlw	0
  6562  0782  00BD               	movwf	floorf@u
  6563  0783                     i1l815:	
  6564  0783  0840               	movf	floorf@u+3,w
  6565  0784  00B0               	movwf	?_floorf+3
  6566  0785  083F               	movf	floorf@u+2,w
  6567  0786  00AF               	movwf	?_floorf+2
  6568  0787  083E               	movf	floorf@u+1,w
  6569  0788  00AE               	movwf	?_floorf+1
  6570  0789  083D               	movf	floorf@u,w
  6571  078A  00AD               	movwf	?_floorf
  6572  078B  0008               	return
  6573  078C                     __end_of_floorf:	
  6574                           
  6575                           	psect	text20
  6576  15F5                     __ptext20:	
  6577 ;; *************** function ___fpclassifyf *****************
  6578 ;; Defined at:
  6579 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  x               4    0[COMMON] float 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;  u               4    2[BANK0 ] struct .
  6584 ;;  e               2    0[BANK0 ] int 
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  2    0[COMMON] int 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;Total ram usage:       16 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; This function calls:
  6601 ;;		Nothing
  6602 ;; This function is called by:
  6603 ;;		_efgtoa
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607                           
  6608                           ;psect for function ___fpclassifyf
  6609  15F5                     ___fpclassifyf:	
  6610                           
  6611                           ;incstack = 0
  6612                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  6613  15F5  0142               	movlb	2	; select bank2
  6614  15F6  084C               	movf	(___fpclassifyf@F463+3)^(0+256),w
  6615  15F7  0140               	movlb	0	; select bank0
  6616  15F8  00A5               	movwf	___fpclassifyf@u+3
  6617  15F9  0142               	movlb	2	; select bank2
  6618  15FA  084B               	movf	(___fpclassifyf@F463+2)^(0+256),w
  6619  15FB  0140               	movlb	0	; select bank0
  6620  15FC  00A4               	movwf	___fpclassifyf@u+2
  6621  15FD  0142               	movlb	2	; select bank2
  6622  15FE  084A               	movf	(___fpclassifyf@F463+1)^(0+256),w
  6623  15FF  0140               	movlb	0	; select bank0
  6624  1600  00A3               	movwf	___fpclassifyf@u+1
  6625  1601  0142               	movlb	2	; select bank2
  6626  1602  0849               	movf	___fpclassifyf@F463^(0+256),w
  6627  1603  0140               	movlb	0	; select bank0
  6628  1604  00A2               	movwf	___fpclassifyf@u
  6629  1605  0873               	movf	___fpclassifyf@x+3,w
  6630  1606  00A5               	movwf	___fpclassifyf@u+3
  6631  1607  0872               	movf	___fpclassifyf@x+2,w
  6632  1608  00A4               	movwf	___fpclassifyf@u+2
  6633  1609  0871               	movf	___fpclassifyf@x+1,w
  6634  160A  00A3               	movwf	___fpclassifyf@u+1
  6635  160B  0870               	movf	___fpclassifyf@x,w
  6636  160C  00A2               	movwf	___fpclassifyf@u
  6637  160D  0822               	movf	___fpclassifyf@u,w
  6638  160E  00F4               	movwf	??___fpclassifyf
  6639  160F  0823               	movf	___fpclassifyf@u+1,w
  6640  1610  00F5               	movwf	??___fpclassifyf+1
  6641  1611  0824               	movf	___fpclassifyf@u+2,w
  6642  1612  00F6               	movwf	??___fpclassifyf+2
  6643  1613  0825               	movf	___fpclassifyf@u+3,w
  6644  1614  00F7               	movwf	??___fpclassifyf+3
  6645  1615  3017               	movlw	23
  6646  1616                     u339_25:	
  6647  1616  36F7               	lsrf	??___fpclassifyf+3,f
  6648  1617  0CF6               	rrf	??___fpclassifyf+2,f
  6649  1618  0CF5               	rrf	??___fpclassifyf+1,f
  6650  1619  0CF4               	rrf	??___fpclassifyf,f
  6651  161A  0B89               	decfsz	9,f
  6652  161B  2E16               	goto	u339_25
  6653  161C  30FF               	movlw	255
  6654  161D  0574               	andwf	??___fpclassifyf,w
  6655  161E  00A0               	movwf	___fpclassifyf@e
  6656  161F  3000               	movlw	0
  6657  1620  0575               	andwf	??___fpclassifyf+1,w
  6658  1621  00A1               	movwf	___fpclassifyf@e+1
  6659  1622  0820               	movf	___fpclassifyf@e,w
  6660  1623  0421               	iorwf	___fpclassifyf@e+1,w
  6661  1624  1D03               	btfss	3,2
  6662  1625  2E45               	goto	i1l2577
  6663  1626  0822               	movf	___fpclassifyf@u,w
  6664  1627  00F4               	movwf	??___fpclassifyf
  6665  1628  0823               	movf	___fpclassifyf@u+1,w
  6666  1629  00F5               	movwf	??___fpclassifyf+1
  6667  162A  0824               	movf	___fpclassifyf@u+2,w
  6668  162B  00F6               	movwf	??___fpclassifyf+2
  6669  162C  0825               	movf	___fpclassifyf@u+3,w
  6670  162D  00F7               	movwf	??___fpclassifyf+3
  6671  162E  3001               	movlw	1
  6672  162F                     u341_25:	
  6673  162F  35F4               	lslf	??___fpclassifyf,f
  6674  1630  0DF5               	rlf	??___fpclassifyf+1,f
  6675  1631  0DF6               	rlf	??___fpclassifyf+2,f
  6676  1632  0DF7               	rlf	??___fpclassifyf+3,f
  6677  1633  0B89               	decfsz	9,f
  6678  1634  2E2F               	goto	u341_25
  6679  1635  0877               	movf	??___fpclassifyf+3,w
  6680  1636  0476               	iorwf	??___fpclassifyf+2,w
  6681  1637  0475               	iorwf	??___fpclassifyf+1,w
  6682  1638  0474               	iorwf	??___fpclassifyf,w
  6683  1639  1D03               	skipz
  6684  163A  2E40               	goto	i1l2573
  6685  163B  3002               	movlw	2
  6686  163C  00F0               	movwf	?___fpclassifyf
  6687  163D  3000               	movlw	0
  6688  163E  00F1               	movwf	?___fpclassifyf+1
  6689  163F  0008               	return
  6690  1640                     i1l2573:	
  6691  1640  3003               	movlw	3
  6692  1641  00F0               	movwf	?___fpclassifyf
  6693  1642  3000               	movlw	0
  6694  1643  00F1               	movwf	?___fpclassifyf+1
  6695  1644  0008               	return
  6696  1645                     i1l2577:	
  6697  1645  0A20               	incf	___fpclassifyf@e,w
  6698  1646  0421               	iorwf	___fpclassifyf@e+1,w
  6699  1647  1D03               	btfss	3,2
  6700  1648  2E68               	goto	i1l2583
  6701  1649  0822               	movf	___fpclassifyf@u,w
  6702  164A  00F4               	movwf	??___fpclassifyf
  6703  164B  0823               	movf	___fpclassifyf@u+1,w
  6704  164C  00F5               	movwf	??___fpclassifyf+1
  6705  164D  0824               	movf	___fpclassifyf@u+2,w
  6706  164E  00F6               	movwf	??___fpclassifyf+2
  6707  164F  0825               	movf	___fpclassifyf@u+3,w
  6708  1650  00F7               	movwf	??___fpclassifyf+3
  6709  1651  3009               	movlw	9
  6710  1652                     u344_25:	
  6711  1652  35F4               	lslf	??___fpclassifyf,f
  6712  1653  0DF5               	rlf	??___fpclassifyf+1,f
  6713  1654  0DF6               	rlf	??___fpclassifyf+2,f
  6714  1655  0DF7               	rlf	??___fpclassifyf+3,f
  6715  1656  0B89               	decfsz	9,f
  6716  1657  2E52               	goto	u344_25
  6717  1658  0877               	movf	??___fpclassifyf+3,w
  6718  1659  0476               	iorwf	??___fpclassifyf+2,w
  6719  165A  0475               	iorwf	??___fpclassifyf+1,w
  6720  165B  0474               	iorwf	??___fpclassifyf,w
  6721  165C  1D03               	btfss	3,2
  6722  165D  2E60               	goto	u345_20
  6723  165E  3001               	movlw	1
  6724  165F  2E61               	goto	u346_20
  6725  1660                     u345_20:	
  6726  1660  3000               	movlw	0
  6727  1661                     u346_20:	
  6728  1661  00F8               	movwf	??___fpclassifyf+4
  6729  1662  01F9               	clrf	??___fpclassifyf+5
  6730  1663  0878               	movf	??___fpclassifyf+4,w
  6731  1664  00F0               	movwf	?___fpclassifyf
  6732  1665  0879               	movf	??___fpclassifyf+5,w
  6733  1666  00F1               	movwf	?___fpclassifyf+1
  6734  1667  0008               	return
  6735  1668                     i1l2583:	
  6736  1668  3004               	movlw	4
  6737  1669  00F0               	movwf	?___fpclassifyf
  6738  166A  3000               	movlw	0
  6739  166B  00F1               	movwf	?___fpclassifyf+1
  6740  166C  0008               	return
  6741  166D                     __end_of___fpclassifyf:	
  6742                           
  6743                           	psect	text21
  6744  078C                     __ptext21:	
  6745 ;; *************** function ___fltol *****************
  6746 ;; Defined at:
  6747 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  f1              4    0[COMMON] int 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  exp1            1   10[COMMON] unsigned char 
  6752 ;;  sign1           1    9[COMMON] unsigned char 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  4    0[COMMON] long 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6763 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6764 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6765 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6766 ;;Total ram usage:       11 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; This function calls:
  6769 ;;		Nothing
  6770 ;; This function is called by:
  6771 ;;		_efgtoa
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           
  6776                           ;psect for function ___fltol
  6777  078C                     ___fltol:	
  6778                           
  6779                           ;incstack = 0
  6780                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6781  078C  1003               	clrc
  6782  078D  0D72               	rlf	___fltol@f1+2,w
  6783  078E  0D73               	rlf	___fltol@f1+3,w
  6784  078F  00F4               	movwf	??___fltol
  6785  0790  0874               	movf	??___fltol,w
  6786  0791  00FA               	movwf	___fltol@exp1
  6787  0792  087A               	movf	___fltol@exp1,w
  6788  0793  1D03               	btfss	3,2
  6789  0794  2F9E               	goto	i1l2759
  6790  0795                     i1l2755:	
  6791  0795  3000               	movlw	0
  6792  0796  00F3               	movwf	?___fltol+3
  6793  0797  3000               	movlw	0
  6794  0798  00F2               	movwf	?___fltol+2
  6795  0799  3000               	movlw	0
  6796  079A  00F1               	movwf	?___fltol+1
  6797  079B  3000               	movlw	0
  6798  079C  00F0               	movwf	?___fltol
  6799  079D  0008               	return
  6800  079E                     i1l2759:	
  6801  079E  0870               	movf	___fltol@f1,w
  6802  079F  00F4               	movwf	??___fltol
  6803  07A0  0871               	movf	___fltol@f1+1,w
  6804  07A1  00F5               	movwf	??___fltol+1
  6805  07A2  0872               	movf	___fltol@f1+2,w
  6806  07A3  00F6               	movwf	??___fltol+2
  6807  07A4  0873               	movf	___fltol@f1+3,w
  6808  07A5  00F7               	movwf	??___fltol+3
  6809  07A6  301F               	movlw	31
  6810  07A7                     u391_25:	
  6811  07A7  36F7               	lsrf	??___fltol+3,f
  6812  07A8  0CF6               	rrf	??___fltol+2,f
  6813  07A9  0CF5               	rrf	??___fltol+1,f
  6814  07AA  0CF4               	rrf	??___fltol,f
  6815  07AB  0B89               	decfsz	9,f
  6816  07AC  2FA7               	goto	u391_25
  6817  07AD  0874               	movf	??___fltol,w
  6818  07AE  00F8               	movwf	??___fltol+4
  6819  07AF  0878               	movf	??___fltol+4,w
  6820  07B0  00F9               	movwf	___fltol@sign1
  6821  07B1  17F2               	bsf	___fltol@f1+2,7
  6822  07B2  30FF               	movlw	255
  6823  07B3  05F0               	andwf	___fltol@f1,f
  6824  07B4  30FF               	movlw	255
  6825  07B5  05F1               	andwf	___fltol@f1+1,f
  6826  07B6  30FF               	movlw	255
  6827  07B7  05F2               	andwf	___fltol@f1+2,f
  6828  07B8  3000               	movlw	0
  6829  07B9  05F3               	andwf	___fltol@f1+3,f
  6830  07BA  3096               	movlw	150
  6831  07BB  02FA               	subwf	___fltol@exp1,f
  6832  07BC  1FFA               	btfss	___fltol@exp1,7
  6833  07BD  2FD1               	goto	i1l2777
  6834  07BE  087A               	movf	___fltol@exp1,w
  6835  07BF  3A80               	xorlw	128
  6836  07C0  3E97               	addlw	151
  6837  07C1  1C03               	btfss	3,0
  6838  07C2  2F95               	goto	i1l2755
  6839  07C3                     i1l2775:	
  6840  07C3  3001               	movlw	1
  6841  07C4                     u394_25:	
  6842  07C4  36F3               	lsrf	___fltol@f1+3,f
  6843  07C5  0CF2               	rrf	___fltol@f1+2,f
  6844  07C6  0CF1               	rrf	___fltol@f1+1,f
  6845  07C7  0CF0               	rrf	___fltol@f1,f
  6846  07C8  0B89               	decfsz	9,f
  6847  07C9  2FC4               	goto	u394_25
  6848  07CA  3001               	movlw	1
  6849  07CB  00F4               	movwf	??___fltol
  6850  07CC  0874               	movf	??___fltol,w
  6851  07CD  07FA               	addwf	___fltol@exp1,f
  6852  07CE  1903               	btfsc	3,2
  6853  07CF  2FE2               	goto	i1l2785
  6854  07D0  2FC3               	goto	i1l2775
  6855  07D1                     i1l2777:	
  6856  07D1  3020               	movlw	32
  6857  07D2  027A               	subwf	___fltol@exp1,w
  6858  07D3  1803               	btfsc	3,0
  6859  07D4  2F95               	goto	i1l2755
  6860  07D5                     i1l545:	
  6861  07D5  087A               	movf	___fltol@exp1,w
  6862  07D6  1903               	btfsc	3,2
  6863  07D7  2FE2               	goto	i1l2785
  6864  07D8  3001               	movlw	1
  6865  07D9                     u397_25:	
  6866  07D9  35F0               	lslf	___fltol@f1,f
  6867  07DA  0DF1               	rlf	___fltol@f1+1,f
  6868  07DB  0DF2               	rlf	___fltol@f1+2,f
  6869  07DC  0DF3               	rlf	___fltol@f1+3,f
  6870  07DD  0B89               	decfsz	9,f
  6871  07DE  2FD9               	goto	u397_25
  6872  07DF  3001               	movlw	1
  6873  07E0  02FA               	subwf	___fltol@exp1,f
  6874  07E1  2FD5               	goto	i1l545
  6875  07E2                     i1l2785:	
  6876  07E2  0879               	movf	___fltol@sign1,w
  6877  07E3  1903               	btfsc	3,2
  6878  07E4  0008               	return
  6879  07E5  09F0               	comf	___fltol@f1,f
  6880  07E6  09F1               	comf	___fltol@f1+1,f
  6881  07E7  09F2               	comf	___fltol@f1+2,f
  6882  07E8  09F3               	comf	___fltol@f1+3,f
  6883  07E9  0AF0               	incf	___fltol@f1,f
  6884  07EA  1903               	skipnz
  6885  07EB  0AF1               	incf	___fltol@f1+1,f
  6886  07EC  1903               	skipnz
  6887  07ED  0AF2               	incf	___fltol@f1+2,f
  6888  07EE  1903               	skipnz
  6889  07EF  0AF3               	incf	___fltol@f1+3,f
  6890  07F0  0008               	return
  6891  07F1                     __end_of___fltol:	
  6892                           
  6893                           	psect	text22
  6894  1336                     __ptext22:	
  6895 ;; *************** function ___flsub *****************
  6896 ;; Defined at:
  6897 ;;		line 242 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  a               4   26[BANK0 ] long 
  6900 ;;  b               4   30[BANK0 ] long 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;		None
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  4   26[BANK0 ] long 
  6905 ;; Registers used:
  6906 ;;		wreg, status,2, status,0, pclath, cstack
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6912 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6915 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;Total ram usage:        8 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:    1
  6919 ;; This function calls:
  6920 ;;		___fladd
  6921 ;; This function is called by:
  6922 ;;		_efgtoa
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           
  6927                           ;psect for function ___flsub
  6928  1336                     ___flsub:	
  6929                           
  6930                           ;incstack = 0
  6931                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  6932  1336  3080               	movlw	128
  6933  1337  0140               	movlb	0	; select bank0
  6934  1338  06BD               	xorwf	___flsub@a+3,f
  6935  1339  0841               	movf	___flsub@b+3,w
  6936  133A  00F3               	movwf	___fladd@b+3
  6937  133B  0840               	movf	___flsub@b+2,w
  6938  133C  00F2               	movwf	___fladd@b+2
  6939  133D  083F               	movf	___flsub@b+1,w
  6940  133E  00F1               	movwf	___fladd@b+1
  6941  133F  083E               	movf	___flsub@b,w
  6942  1340  00F0               	movwf	___fladd@b
  6943  1341  083D               	movf	___flsub@a+3,w
  6944  1342  00F7               	movwf	___fladd@a+3
  6945  1343  083C               	movf	___flsub@a+2,w
  6946  1344  00F6               	movwf	___fladd@a+2
  6947  1345  083B               	movf	___flsub@a+1,w
  6948  1346  00F5               	movwf	___fladd@a+1
  6949  1347  083A               	movf	___flsub@a,w
  6950  1348  00F4               	movwf	___fladd@a
  6951  1349  318B  23EB         	fcall	___fladd
  6952  134B  0873               	movf	?___fladd+3,w
  6953  134C  0140               	movlb	0	; select bank0
  6954  134D  00BD               	movwf	?___flsub+3
  6955  134E  0872               	movf	?___fladd+2,w
  6956  134F  00BC               	movwf	?___flsub+2
  6957  1350  0871               	movf	?___fladd+1,w
  6958  1351  00BB               	movwf	?___flsub+1
  6959  1352  0870               	movf	?___fladd,w
  6960  1353  00BA               	movwf	?___flsub
  6961  1354  0008               	return
  6962  1355                     __end_of___flsub:	
  6963                           
  6964                           	psect	text23
  6965  0BEB                     __ptext23:	
  6966 ;; *************** function ___fladd *****************
  6967 ;; Defined at:
  6968 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  b               4    0[COMMON] long 
  6971 ;;  a               4    4[COMMON] long 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;  grs             1   11[COMMON] unsigned char 
  6974 ;;  bexp            1   10[COMMON] unsigned char 
  6975 ;;  aexp            1    9[COMMON] unsigned char 
  6976 ;;  signs           1    8[COMMON] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  4    0[COMMON] unsigned char 
  6979 ;; Registers used:
  6980 ;;		wreg, status,2, status,0
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6986 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6988 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;Total ram usage:       20 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_efgtoa
  6996 ;;		___flsub
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           
  7001                           ;psect for function ___fladd
  7002  0BEB                     ___fladd:	
  7003                           
  7004                           ;incstack = 0
  7005                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7006  0BEB  0873               	movf	___fladd@b+3,w
  7007  0BEC  3980               	andlw	128
  7008  0BED  0140               	movlb	0	; select bank0
  7009  0BEE  00A0               	movwf	??___fladd
  7010  0BEF  0820               	movf	??___fladd,w
  7011  0BF0  00F8               	movwf	___fladd@signs
  7012  0BF1  3573               	lslf	___fladd@b+3,w
  7013  0BF2  00A0               	movwf	??___fladd
  7014  0BF3  0820               	movf	??___fladd,w
  7015  0BF4  00FA               	movwf	___fladd@bexp
  7016  0BF5  1BF2               	btfsc	___fladd@b+2,7
  7017  0BF6  147A               	bsf	___fladd@bexp,0
  7018  0BF7  087A               	movf	___fladd@bexp,w
  7019  0BF8  1903               	btfsc	3,2
  7020  0BF9  2C08               	goto	i1l2353
  7021  0BFA  0A7A               	incf	___fladd@bexp,w
  7022  0BFB  1D03               	btfss	3,2
  7023  0BFC  2C05               	goto	i1l2349
  7024  0BFD  3000               	movlw	0
  7025  0BFE  00F3               	movwf	___fladd@b+3
  7026  0BFF  3000               	movlw	0
  7027  0C00  00F2               	movwf	___fladd@b+2
  7028  0C01  3000               	movlw	0
  7029  0C02  00F1               	movwf	___fladd@b+1
  7030  0C03  3000               	movlw	0
  7031  0C04  00F0               	movwf	___fladd@b
  7032  0C05                     i1l2349:	
  7033  0C05  17F2               	bsf	___fladd@b+2,7
  7034  0C06  01F3               	clrf	___fladd@b+3
  7035  0C07  2C10               	goto	i1l2355
  7036  0C08                     i1l2353:	
  7037  0C08  3000               	movlw	0
  7038  0C09  00F3               	movwf	___fladd@b+3
  7039  0C0A  3000               	movlw	0
  7040  0C0B  00F2               	movwf	___fladd@b+2
  7041  0C0C  3000               	movlw	0
  7042  0C0D  00F1               	movwf	___fladd@b+1
  7043  0C0E  3000               	movlw	0
  7044  0C0F  00F0               	movwf	___fladd@b
  7045  0C10                     i1l2355:	
  7046  0C10  0877               	movf	___fladd@a+3,w
  7047  0C11  3980               	andlw	128
  7048  0C12  00A0               	movwf	??___fladd
  7049  0C13  0820               	movf	??___fladd,w
  7050  0C14  00F9               	movwf	___fladd@aexp
  7051  0C15  0879               	movf	___fladd@aexp,w
  7052  0C16  0678               	xorwf	___fladd@signs,w
  7053  0C17  1D03               	btfss	3,2
  7054  0C18  1778               	bsf	___fladd@signs,6
  7055  0C19  3577               	lslf	___fladd@a+3,w
  7056  0C1A  00A0               	movwf	??___fladd
  7057  0C1B  0820               	movf	??___fladd,w
  7058  0C1C  00F9               	movwf	___fladd@aexp
  7059  0C1D  1BF6               	btfsc	___fladd@a+2,7
  7060  0C1E  1479               	bsf	___fladd@aexp,0
  7061  0C1F  0879               	movf	___fladd@aexp,w
  7062  0C20  1903               	btfsc	3,2
  7063  0C21  2C30               	goto	i1l2377
  7064  0C22  0A79               	incf	___fladd@aexp,w
  7065  0C23  1D03               	btfss	3,2
  7066  0C24  2C2D               	goto	i1l2373
  7067  0C25  3000               	movlw	0
  7068  0C26  00F7               	movwf	___fladd@a+3
  7069  0C27  3000               	movlw	0
  7070  0C28  00F6               	movwf	___fladd@a+2
  7071  0C29  3000               	movlw	0
  7072  0C2A  00F5               	movwf	___fladd@a+1
  7073  0C2B  3000               	movlw	0
  7074  0C2C  00F4               	movwf	___fladd@a
  7075  0C2D                     i1l2373:	
  7076  0C2D  17F6               	bsf	___fladd@a+2,7
  7077  0C2E  01F7               	clrf	___fladd@a+3
  7078  0C2F  2C38               	goto	i1l645
  7079  0C30                     i1l2377:	
  7080  0C30  3000               	movlw	0
  7081  0C31  00F7               	movwf	___fladd@a+3
  7082  0C32  3000               	movlw	0
  7083  0C33  00F6               	movwf	___fladd@a+2
  7084  0C34  3000               	movlw	0
  7085  0C35  00F5               	movwf	___fladd@a+1
  7086  0C36  3000               	movlw	0
  7087  0C37  00F4               	movwf	___fladd@a
  7088  0C38                     i1l645:	
  7089  0C38  087A               	movf	___fladd@bexp,w
  7090  0C39  0279               	subwf	___fladd@aexp,w
  7091  0C3A  1803               	skipnc
  7092  0C3B  2C7E               	goto	i1l2413
  7093  0C3C  1F78               	btfss	___fladd@signs,6
  7094  0C3D  2C42               	goto	i1l2383
  7095  0C3E  3080               	movlw	128
  7096  0C3F  00A0               	movwf	??___fladd
  7097  0C40  0820               	movf	??___fladd,w
  7098  0C41  06F8               	xorwf	___fladd@signs,f
  7099  0C42                     i1l2383:	
  7100  0C42  087A               	movf	___fladd@bexp,w
  7101  0C43  00A0               	movwf	??___fladd
  7102  0C44  0820               	movf	??___fladd,w
  7103  0C45  00FB               	movwf	___fladd@grs
  7104  0C46  0879               	movf	___fladd@aexp,w
  7105  0C47  00A0               	movwf	??___fladd
  7106  0C48  0820               	movf	??___fladd,w
  7107  0C49  00FA               	movwf	___fladd@bexp
  7108  0C4A  087B               	movf	___fladd@grs,w
  7109  0C4B  00A0               	movwf	??___fladd
  7110  0C4C  0820               	movf	??___fladd,w
  7111  0C4D  00F9               	movwf	___fladd@aexp
  7112  0C4E  0870               	movf	___fladd@b,w
  7113  0C4F  00A0               	movwf	??___fladd
  7114  0C50  0820               	movf	??___fladd,w
  7115  0C51  00FB               	movwf	___fladd@grs
  7116  0C52  0874               	movf	___fladd@a,w
  7117  0C53  00A0               	movwf	??___fladd
  7118  0C54  0820               	movf	??___fladd,w
  7119  0C55  00F0               	movwf	___fladd@b
  7120  0C56  087B               	movf	___fladd@grs,w
  7121  0C57  00A0               	movwf	??___fladd
  7122  0C58  0820               	movf	??___fladd,w
  7123  0C59  00F4               	movwf	___fladd@a
  7124  0C5A  0871               	movf	___fladd@b+1,w
  7125  0C5B  00A0               	movwf	??___fladd
  7126  0C5C  0820               	movf	??___fladd,w
  7127  0C5D  00FB               	movwf	___fladd@grs
  7128  0C5E  0875               	movf	___fladd@a+1,w
  7129  0C5F  00A0               	movwf	??___fladd
  7130  0C60  0820               	movf	??___fladd,w
  7131  0C61  00F1               	movwf	___fladd@b+1
  7132  0C62  087B               	movf	___fladd@grs,w
  7133  0C63  00A0               	movwf	??___fladd
  7134  0C64  0820               	movf	??___fladd,w
  7135  0C65  00F5               	movwf	___fladd@a+1
  7136  0C66  0872               	movf	___fladd@b+2,w
  7137  0C67  00A0               	movwf	??___fladd
  7138  0C68  0820               	movf	??___fladd,w
  7139  0C69  00FB               	movwf	___fladd@grs
  7140  0C6A  0876               	movf	___fladd@a+2,w
  7141  0C6B  00A0               	movwf	??___fladd
  7142  0C6C  0820               	movf	??___fladd,w
  7143  0C6D  00F2               	movwf	___fladd@b+2
  7144  0C6E  087B               	movf	___fladd@grs,w
  7145  0C6F  00A0               	movwf	??___fladd
  7146  0C70  0820               	movf	??___fladd,w
  7147  0C71  00F6               	movwf	___fladd@a+2
  7148  0C72  0873               	movf	___fladd@b+3,w
  7149  0C73  00A0               	movwf	??___fladd
  7150  0C74  0820               	movf	??___fladd,w
  7151  0C75  00FB               	movwf	___fladd@grs
  7152  0C76  0877               	movf	___fladd@a+3,w
  7153  0C77  00A0               	movwf	??___fladd
  7154  0C78  0820               	movf	??___fladd,w
  7155  0C79  00F3               	movwf	___fladd@b+3
  7156  0C7A  087B               	movf	___fladd@grs,w
  7157  0C7B  00A0               	movwf	??___fladd
  7158  0C7C  0820               	movf	??___fladd,w
  7159  0C7D  00F7               	movwf	___fladd@a+3
  7160  0C7E                     i1l2413:	
  7161  0C7E  01FB               	clrf	___fladd@grs
  7162  0C7F  0879               	movf	___fladd@aexp,w
  7163  0C80  00A0               	movwf	??___fladd
  7164  0C81  01A1               	clrf	??___fladd+1
  7165  0C82  0821               	movf	??___fladd+1,w
  7166  0C83  00A3               	movwf	??___fladd+3
  7167  0C84  087A               	movf	___fladd@bexp,w
  7168  0C85  0220               	subwf	??___fladd,w
  7169  0C86  00A2               	movwf	??___fladd+2
  7170  0C87  1C03               	skipc
  7171  0C88  03A3               	decf	??___fladd+3,f
  7172  0C89  0823               	movf	??___fladd+3,w
  7173  0C8A  3A80               	xorlw	128
  7174  0C8B  00A4               	movwf	??___fladd+4
  7175  0C8C  3080               	movlw	128
  7176  0C8D  0224               	subwf	??___fladd+4,w
  7177  0C8E  1D03               	skipz
  7178  0C8F  2C92               	goto	u298_25
  7179  0C90  301A               	movlw	26
  7180  0C91  0222               	subwf	??___fladd+2,w
  7181  0C92                     u298_25:	
  7182  0C92  1C03               	skipc
  7183  0C93  2CC8               	goto	i1l2431
  7184  0C94  0873               	movf	___fladd@b+3,w
  7185  0C95  0472               	iorwf	___fladd@b+2,w
  7186  0C96  0471               	iorwf	___fladd@b+1,w
  7187  0C97  0470               	iorwf	___fladd@b,w
  7188  0C98  1903               	btfsc	3,2
  7189  0C99  2C9C               	goto	u299_20
  7190  0C9A  3001               	movlw	1
  7191  0C9B  2C9D               	goto	u300_20
  7192  0C9C                     u299_20:	
  7193  0C9C  3000               	movlw	0
  7194  0C9D                     u300_20:	
  7195  0C9D  0140               	movlb	0	; select bank0
  7196  0C9E  00A0               	movwf	??___fladd
  7197  0C9F  0820               	movf	??___fladd,w
  7198  0CA0  00FB               	movwf	___fladd@grs
  7199  0CA1  3000               	movlw	0
  7200  0CA2  00F3               	movwf	___fladd@b+3
  7201  0CA3  3000               	movlw	0
  7202  0CA4  00F2               	movwf	___fladd@b+2
  7203  0CA5  3000               	movlw	0
  7204  0CA6  00F1               	movwf	___fladd@b+1
  7205  0CA7  3000               	movlw	0
  7206  0CA8  00F0               	movwf	___fladd@b
  7207  0CA9  0879               	movf	___fladd@aexp,w
  7208  0CAA  00A0               	movwf	??___fladd
  7209  0CAB  0820               	movf	??___fladd,w
  7210  0CAC  00FA               	movwf	___fladd@bexp
  7211  0CAD  2CCC               	goto	i1l649
  7212  0CAE                     i1l651:	
  7213  0CAE  1C7B               	btfss	___fladd@grs,0
  7214  0CAF  2CB7               	goto	i1l2421
  7215  0CB0  367B               	lsrf	___fladd@grs,w
  7216  0CB1  3801               	iorlw	1
  7217  0CB2  0140               	movlb	0	; select bank0
  7218  0CB3  00A0               	movwf	??___fladd
  7219  0CB4  0820               	movf	??___fladd,w
  7220  0CB5  00FB               	movwf	___fladd@grs
  7221  0CB6  2CB9               	goto	i1l2423
  7222  0CB7                     i1l2421:	
  7223  0CB7  1003               	clrc
  7224  0CB8  0CFB               	rrf	___fladd@grs,f
  7225  0CB9                     i1l2423:	
  7226  0CB9  1870               	btfsc	___fladd@b,0
  7227  0CBA  17FB               	bsf	___fladd@grs,7
  7228  0CBB  3001               	movlw	1
  7229  0CBC  0140               	movlb	0	; select bank0
  7230  0CBD  00A0               	movwf	??___fladd
  7231  0CBE                     u303_25:	
  7232  0CBE  37F3               	asrf	___fladd@b+3,f
  7233  0CBF  0CF2               	rrf	___fladd@b+2,f
  7234  0CC0  0CF1               	rrf	___fladd@b+1,f
  7235  0CC1  0CF0               	rrf	___fladd@b,f
  7236  0CC2  0BA0               	decfsz	??___fladd& (0+127),f
  7237  0CC3  2CBE               	goto	u303_25
  7238  0CC4  3001               	movlw	1
  7239  0CC5  00A0               	movwf	??___fladd
  7240  0CC6  0820               	movf	??___fladd,w
  7241  0CC7  07FA               	addwf	___fladd@bexp,f
  7242  0CC8                     i1l2431:	
  7243  0CC8  0879               	movf	___fladd@aexp,w
  7244  0CC9  027A               	subwf	___fladd@bexp,w
  7245  0CCA  1C03               	skipc
  7246  0CCB  2CAE               	goto	i1l651
  7247  0CCC                     i1l649:	
  7248  0CCC  1B78               	btfsc	___fladd@signs,6
  7249  0CCD  2CFF               	goto	i1l2457
  7250  0CCE  087A               	movf	___fladd@bexp,w
  7251  0CCF  1D03               	btfss	3,2
  7252  0CD0  2CDA               	goto	i1l2439
  7253  0CD1  3000               	movlw	0
  7254  0CD2  00F3               	movwf	?___fladd+3
  7255  0CD3  3000               	movlw	0
  7256  0CD4  00F2               	movwf	?___fladd+2
  7257  0CD5  3000               	movlw	0
  7258  0CD6  00F1               	movwf	?___fladd+1
  7259  0CD7  3000               	movlw	0
  7260  0CD8  00F0               	movwf	?___fladd
  7261  0CD9  0008               	return
  7262  0CDA                     i1l2439:	
  7263  0CDA  0874               	movf	___fladd@a,w
  7264  0CDB  07F0               	addwf	___fladd@b,f
  7265  0CDC  0875               	movf	___fladd@a+1,w
  7266  0CDD  3DF1               	addwfc	___fladd@b+1,f
  7267  0CDE  0876               	movf	___fladd@a+2,w
  7268  0CDF  3DF2               	addwfc	___fladd@b+2,f
  7269  0CE0  0877               	movf	___fladd@a+3,w
  7270  0CE1  3DF3               	addwfc	___fladd@b+3,f
  7271  0CE2  1C73               	btfss	___fladd@b+3,0
  7272  0CE3  2D7A               	goto	i1l2491
  7273  0CE4  1C7B               	btfss	___fladd@grs,0
  7274  0CE5  2CED               	goto	i1l2447
  7275  0CE6  367B               	lsrf	___fladd@grs,w
  7276  0CE7  3801               	iorlw	1
  7277  0CE8  0140               	movlb	0	; select bank0
  7278  0CE9  00A0               	movwf	??___fladd
  7279  0CEA  0820               	movf	??___fladd,w
  7280  0CEB  00FB               	movwf	___fladd@grs
  7281  0CEC  2CEF               	goto	i1l2449
  7282  0CED                     i1l2447:	
  7283  0CED  1003               	clrc
  7284  0CEE  0CFB               	rrf	___fladd@grs,f
  7285  0CEF                     i1l2449:	
  7286  0CEF  1870               	btfsc	___fladd@b,0
  7287  0CF0  17FB               	bsf	___fladd@grs,7
  7288  0CF1  3001               	movlw	1
  7289  0CF2  0140               	movlb	0	; select bank0
  7290  0CF3  00A0               	movwf	??___fladd
  7291  0CF4                     u310_25:	
  7292  0CF4  37F3               	asrf	___fladd@b+3,f
  7293  0CF5  0CF2               	rrf	___fladd@b+2,f
  7294  0CF6  0CF1               	rrf	___fladd@b+1,f
  7295  0CF7  0CF0               	rrf	___fladd@b,f
  7296  0CF8  0BA0               	decfsz	??___fladd& (0+127),f
  7297  0CF9  2CF4               	goto	u310_25
  7298  0CFA  3001               	movlw	1
  7299  0CFB  00A0               	movwf	??___fladd
  7300  0CFC  0820               	movf	??___fladd,w
  7301  0CFD  07FA               	addwf	___fladd@bexp,f
  7302  0CFE  2D7A               	goto	i1l2491
  7303  0CFF                     i1l2457:	
  7304  0CFF  0873               	movf	___fladd@b+3,w
  7305  0D00  3A80               	xorlw	128
  7306  0D01  0140               	movlb	0	; select bank0
  7307  0D02  00A0               	movwf	??___fladd
  7308  0D03  0877               	movf	___fladd@a+3,w
  7309  0D04  3A80               	xorlw	128
  7310  0D05  0220               	subwf	??___fladd,w
  7311  0D06  1D03               	skipz
  7312  0D07  2D12               	goto	u311_23
  7313  0D08  0876               	movf	___fladd@a+2,w
  7314  0D09  0272               	subwf	___fladd@b+2,w
  7315  0D0A  1D03               	skipz
  7316  0D0B  2D12               	goto	u311_23
  7317  0D0C  0875               	movf	___fladd@a+1,w
  7318  0D0D  0271               	subwf	___fladd@b+1,w
  7319  0D0E  1D03               	skipz
  7320  0D0F  2D12               	goto	u311_23
  7321  0D10  0874               	movf	___fladd@a,w
  7322  0D11  0270               	subwf	___fladd@b,w
  7323  0D12                     u311_23:	
  7324  0D12  1803               	skipnc
  7325  0D13  2D4A               	goto	i1l2467
  7326  0D14  30FF               	movlw	255
  7327  0D15  00A0               	movwf	??___fladd
  7328  0D16  30FF               	movlw	255
  7329  0D17  00A1               	movwf	??___fladd+1
  7330  0D18  30FF               	movlw	255
  7331  0D19  00A2               	movwf	??___fladd+2
  7332  0D1A  30FF               	movlw	255
  7333  0D1B  00A3               	movwf	??___fladd+3
  7334  0D1C  0870               	movf	___fladd@b,w
  7335  0D1D  0274               	subwf	___fladd@a,w
  7336  0D1E  00A4               	movwf	??___fladd+4
  7337  0D1F  0871               	movf	___fladd@b+1,w
  7338  0D20  3B75               	subwfb	___fladd@a+1,w
  7339  0D21  00A5               	movwf	??___fladd+5
  7340  0D22  0872               	movf	___fladd@b+2,w
  7341  0D23  3B76               	subwfb	___fladd@a+2,w
  7342  0D24  00A6               	movwf	??___fladd+6
  7343  0D25  0873               	movf	___fladd@b+3,w
  7344  0D26  3B77               	subwfb	___fladd@a+3,w
  7345  0D27  00A7               	movwf	??___fladd+7
  7346  0D28  0824               	movf	??___fladd+4,w
  7347  0D29  07A0               	addwf	??___fladd,f
  7348  0D2A  0825               	movf	??___fladd+5,w
  7349  0D2B  3DA1               	addwfc	??___fladd+1,f
  7350  0D2C  0826               	movf	??___fladd+6,w
  7351  0D2D  3DA2               	addwfc	??___fladd+2,f
  7352  0D2E  0827               	movf	??___fladd+7,w
  7353  0D2F  3DA3               	addwfc	??___fladd+3,f
  7354  0D30  0823               	movf	??___fladd+3,w
  7355  0D31  00F3               	movwf	___fladd@b+3
  7356  0D32  0822               	movf	??___fladd+2,w
  7357  0D33  00F2               	movwf	___fladd@b+2
  7358  0D34  0821               	movf	??___fladd+1,w
  7359  0D35  00F1               	movwf	___fladd@b+1
  7360  0D36  0820               	movf	??___fladd,w
  7361  0D37  00F0               	movwf	___fladd@b
  7362  0D38  3080               	movlw	128
  7363  0D39  00A0               	movwf	??___fladd
  7364  0D3A  0820               	movf	??___fladd,w
  7365  0D3B  06F8               	xorwf	___fladd@signs,f
  7366  0D3C  09FB               	comf	___fladd@grs,f
  7367  0D3D  0AFB               	incf	___fladd@grs,f
  7368  0D3E  087B               	movf	___fladd@grs,w
  7369  0D3F  1D03               	btfss	3,2
  7370  0D40  2D52               	goto	i1l666
  7371  0D41  3001               	movlw	1
  7372  0D42  07F0               	addwf	___fladd@b,f
  7373  0D43  3000               	movlw	0
  7374  0D44  3DF1               	addwfc	___fladd@b+1,f
  7375  0D45  3000               	movlw	0
  7376  0D46  3DF2               	addwfc	___fladd@b+2,f
  7377  0D47  3000               	movlw	0
  7378  0D48  3DF3               	addwfc	___fladd@b+3,f
  7379  0D49  2D52               	goto	i1l666
  7380  0D4A                     i1l2467:	
  7381  0D4A  0874               	movf	___fladd@a,w
  7382  0D4B  02F0               	subwf	___fladd@b,f
  7383  0D4C  0875               	movf	___fladd@a+1,w
  7384  0D4D  3BF1               	subwfb	___fladd@b+1,f
  7385  0D4E  0876               	movf	___fladd@a+2,w
  7386  0D4F  3BF2               	subwfb	___fladd@b+2,f
  7387  0D50  0877               	movf	___fladd@a+3,w
  7388  0D51  3BF3               	subwfb	___fladd@b+3,f
  7389  0D52                     i1l666:	
  7390  0D52  0873               	movf	___fladd@b+3,w
  7391  0D53  0472               	iorwf	___fladd@b+2,w
  7392  0D54  0471               	iorwf	___fladd@b+1,w
  7393  0D55  0470               	iorwf	___fladd@b,w
  7394  0D56  1D03               	skipz
  7395  0D57  2D78               	goto	i1l2489
  7396  0D58  087B               	movf	___fladd@grs,w
  7397  0D59  1D03               	btfss	3,2
  7398  0D5A  2D78               	goto	i1l2489
  7399  0D5B  3000               	movlw	0
  7400  0D5C  00F3               	movwf	?___fladd+3
  7401  0D5D  3000               	movlw	0
  7402  0D5E  00F2               	movwf	?___fladd+2
  7403  0D5F  3000               	movlw	0
  7404  0D60  00F1               	movwf	?___fladd+1
  7405  0D61  3000               	movlw	0
  7406  0D62  00F0               	movwf	?___fladd
  7407  0D63  0008               	return
  7408  0D64                     i1l2475:	
  7409  0D64  3001               	movlw	1
  7410  0D65                     u315_25:	
  7411  0D65  35F0               	lslf	___fladd@b,f
  7412  0D66  0DF1               	rlf	___fladd@b+1,f
  7413  0D67  0DF2               	rlf	___fladd@b+2,f
  7414  0D68  0DF3               	rlf	___fladd@b+3,f
  7415  0D69  0B89               	decfsz	9,f
  7416  0D6A  2D65               	goto	u315_25
  7417  0D6B  1BFB               	btfsc	___fladd@grs,7
  7418  0D6C  1470               	bsf	___fladd@b,0
  7419  0D6D  1C7B               	btfss	___fladd@grs,0
  7420  0D6E  2D71               	goto	i1l2483
  7421  0D6F  1403               	setc
  7422  0D70  2D72               	goto	L10
  7423  0D71                     i1l2483:	
  7424  0D71  1003               	clrc
  7425  0D72                     L10:	
  7426  0D72  0DFB               	rlf	___fladd@grs,f
  7427  0D73  087A               	movf	___fladd@bexp,w
  7428  0D74  1903               	btfsc	3,2
  7429  0D75  2D78               	goto	i1l2489
  7430  0D76  3001               	movlw	1
  7431  0D77  02FA               	subwf	___fladd@bexp,f
  7432  0D78                     i1l2489:	
  7433  0D78  1FF2               	btfss	___fladd@b+2,7
  7434  0D79  2D64               	goto	i1l2475
  7435  0D7A                     i1l2491:	
  7436  0D7A  01F9               	clrf	___fladd@aexp
  7437  0D7B  1FFB               	btfss	___fladd@grs,7
  7438  0D7C  2D85               	goto	i1l2501
  7439  0D7D  087B               	movf	___fladd@grs,w
  7440  0D7E  397F               	andlw	127
  7441  0D7F  1903               	btfsc	3,2
  7442  0D80  1870               	btfsc	___fladd@b,0
  7443  0D81  2D83               	goto	i1l2497
  7444  0D82  2D85               	goto	i1l2501
  7445  0D83                     i1l2497:	
  7446  0D83  01F9               	clrf	___fladd@aexp
  7447  0D84  0AF9               	incf	___fladd@aexp,f
  7448  0D85                     i1l2501:	
  7449  0D85  0879               	movf	___fladd@aexp,w
  7450  0D86  1903               	btfsc	3,2
  7451  0D87  2DB2               	goto	i1l679
  7452  0D88  3001               	movlw	1
  7453  0D89  07F0               	addwf	___fladd@b,f
  7454  0D8A  3000               	movlw	0
  7455  0D8B  3DF1               	addwfc	___fladd@b+1,f
  7456  0D8C  3000               	movlw	0
  7457  0D8D  3DF2               	addwfc	___fladd@b+2,f
  7458  0D8E  3000               	movlw	0
  7459  0D8F  3DF3               	addwfc	___fladd@b+3,f
  7460  0D90  1C73               	btfss	___fladd@b+3,0
  7461  0D91  2DB2               	goto	i1l679
  7462  0D92  0870               	movf	___fladd@b,w
  7463  0D93  0140               	movlb	0	; select bank0
  7464  0D94  00A0               	movwf	??___fladd
  7465  0D95  0871               	movf	___fladd@b+1,w
  7466  0D96  00A1               	movwf	??___fladd+1
  7467  0D97  0872               	movf	___fladd@b+2,w
  7468  0D98  00A2               	movwf	??___fladd+2
  7469  0D99  0873               	movf	___fladd@b+3,w
  7470  0D9A  00A3               	movwf	??___fladd+3
  7471  0D9B  3001               	movlw	1
  7472  0D9C  00A4               	movwf	??___fladd+4
  7473  0D9D                     u325_25:	
  7474  0D9D  37A3               	asrf	??___fladd+3,f
  7475  0D9E  0CA2               	rrf	??___fladd+2,f
  7476  0D9F  0CA1               	rrf	??___fladd+1,f
  7477  0DA0  0CA0               	rrf	??___fladd,f
  7478  0DA1  0BA4               	decfsz	??___fladd+4,f
  7479  0DA2  2D9D               	goto	u325_25
  7480  0DA3  0823               	movf	??___fladd+3,w
  7481  0DA4  00F3               	movwf	___fladd@b+3
  7482  0DA5  0822               	movf	??___fladd+2,w
  7483  0DA6  00F2               	movwf	___fladd@b+2
  7484  0DA7  0821               	movf	??___fladd+1,w
  7485  0DA8  00F1               	movwf	___fladd@b+1
  7486  0DA9  0820               	movf	??___fladd,w
  7487  0DAA  00F0               	movwf	___fladd@b
  7488  0DAB  0A7A               	incf	___fladd@bexp,w
  7489  0DAC  1903               	btfsc	3,2
  7490  0DAD  2DB2               	goto	i1l679
  7491  0DAE  3001               	movlw	1
  7492  0DAF  00A0               	movwf	??___fladd
  7493  0DB0  0820               	movf	??___fladd,w
  7494  0DB1  07FA               	addwf	___fladd@bexp,f
  7495  0DB2                     i1l679:	
  7496  0DB2  0A7A               	incf	___fladd@bexp,w
  7497  0DB3  1D03               	btfss	3,2
  7498  0DB4  087A               	movf	___fladd@bexp,w
  7499  0DB5  1D03               	btfss	3,2
  7500  0DB6  2DC2               	goto	i1l2519
  7501  0DB7  3000               	movlw	0
  7502  0DB8  00F3               	movwf	___fladd@b+3
  7503  0DB9  3000               	movlw	0
  7504  0DBA  00F2               	movwf	___fladd@b+2
  7505  0DBB  3000               	movlw	0
  7506  0DBC  00F1               	movwf	___fladd@b+1
  7507  0DBD  3000               	movlw	0
  7508  0DBE  00F0               	movwf	___fladd@b
  7509  0DBF  087A               	movf	___fladd@bexp,w
  7510  0DC0  1903               	btfsc	3,2
  7511  0DC1  01F8               	clrf	___fladd@signs
  7512  0DC2                     i1l2519:	
  7513  0DC2  1C7A               	btfss	___fladd@bexp,0
  7514  0DC3  2DC6               	goto	i1l2523
  7515  0DC4  17F2               	bsf	___fladd@b+2,7
  7516  0DC5  2DCB               	goto	i1l687
  7517  0DC6                     i1l2523:	
  7518  0DC6  307F               	movlw	127
  7519  0DC7  0140               	movlb	0	; select bank0
  7520  0DC8  00A0               	movwf	??___fladd
  7521  0DC9  0820               	movf	??___fladd,w
  7522  0DCA  05F2               	andwf	___fladd@b+2,f
  7523  0DCB                     i1l687:	
  7524  0DCB  367A               	lsrf	___fladd@bexp,w
  7525  0DCC  0140               	movlb	0	; select bank0
  7526  0DCD  00A0               	movwf	??___fladd
  7527  0DCE  0820               	movf	??___fladd,w
  7528  0DCF  00F3               	movwf	___fladd@b+3
  7529  0DD0  1FF8               	btfss	___fladd@signs,7
  7530  0DD1  0008               	return
  7531  0DD2  17F3               	bsf	___fladd@b+3,7
  7532  0DD3  0008               	return
  7533  0DD4                     __end_of___fladd:	
  7534                           
  7535                           	psect	text24
  7536  0804                     __ptext24:	
  7537 ;; *************** function ___flneg *****************
  7538 ;; Defined at:
  7539 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  f1              4    0[COMMON] unsigned char 
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;		None
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  4    0[COMMON] unsigned char 
  7546 ;; Registers used:
  7547 ;;		wreg
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7553 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;Total ram usage:        4 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; This function calls:
  7560 ;;		Nothing
  7561 ;; This function is called by:
  7562 ;;		_efgtoa
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           
  7567                           ;psect for function ___flneg
  7568  0804                     ___flneg:	
  7569                           
  7570                           ;incstack = 0
  7571                           ; Regs used in ___flneg: [wreg]
  7572  0804  0873               	movf	___flneg@f1+3,w
  7573  0805  0472               	iorwf	___flneg@f1+2,w
  7574  0806  0471               	iorwf	___flneg@f1+1,w
  7575  0807  0470               	iorwf	___flneg@f1,w
  7576  0808  1903               	skipnz
  7577  0809  0008               	return
  7578  080A  3080               	movlw	128
  7579  080B  06F3               	xorwf	___flneg@f1+3,f
  7580  080C  0008               	return
  7581  080D                     __end_of___flneg:	
  7582                           
  7583                           	psect	text25
  7584  0DD4                     __ptext25:	
  7585 ;; *************** function ___flmul *****************
  7586 ;; Defined at:
  7587 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  b               4    0[BANK0 ] unsigned char 
  7590 ;;  a               4    4[BANK0 ] unsigned char 
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;  prod            4   20[BANK0 ] struct .
  7593 ;;  grs             4   14[BANK0 ] unsigned long 
  7594 ;;  temp            2   24[BANK0 ] struct .
  7595 ;;  bexp            1   19[BANK0 ] unsigned char 
  7596 ;;  aexp            1   18[BANK0 ] unsigned char 
  7597 ;;  sign            1   13[BANK0 ] unsigned char 
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  4    0[BANK0 ] unsigned char 
  7600 ;; Registers used:
  7601 ;;		wreg, status,2, status,0, pclath, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7607 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7608 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7609 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;Total ram usage:       26 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    1
  7614 ;; This function calls:
  7615 ;;		__Umul8_16
  7616 ;; This function is called by:
  7617 ;;		_ISR
  7618 ;;		_efgtoa
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           
  7623                           ;psect for function ___flmul
  7624  0DD4                     ___flmul:	
  7625                           
  7626                           ;incstack = 0
  7627                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  7628  0DD4  0140               	movlb	0	; select bank0
  7629  0DD5  0823               	movf	___flmul@b+3,w
  7630  0DD6  3980               	andlw	128
  7631  0DD7  00A8               	movwf	??___flmul
  7632  0DD8  0828               	movf	??___flmul,w
  7633  0DD9  00AD               	movwf	___flmul@sign
  7634  0DDA  3523               	lslf	___flmul@b+3,w
  7635  0DDB  00A8               	movwf	??___flmul
  7636  0DDC  0828               	movf	??___flmul,w
  7637  0DDD  00B3               	movwf	___flmul@bexp
  7638  0DDE  1BA2               	btfsc	___flmul@b+2,7
  7639  0DDF  1433               	bsf	___flmul@bexp,0
  7640  0DE0  0833               	movf	___flmul@bexp,w
  7641  0DE1  1903               	btfsc	3,2
  7642  0DE2  2DF0               	goto	i1l2951
  7643  0DE3  0A33               	incf	___flmul@bexp,w
  7644  0DE4  1D03               	btfss	3,2
  7645  0DE5  2DEE               	goto	i1l2949
  7646  0DE6  3000               	movlw	0
  7647  0DE7  00A3               	movwf	___flmul@b+3
  7648  0DE8  3000               	movlw	0
  7649  0DE9  00A2               	movwf	___flmul@b+2
  7650  0DEA  3000               	movlw	0
  7651  0DEB  00A1               	movwf	___flmul@b+1
  7652  0DEC  3000               	movlw	0
  7653  0DED  00A0               	movwf	___flmul@b
  7654  0DEE                     i1l2949:	
  7655  0DEE  17A2               	bsf	___flmul@b+2,7
  7656  0DEF  2DF8               	goto	i1l2953
  7657  0DF0                     i1l2951:	
  7658  0DF0  3000               	movlw	0
  7659  0DF1  00A3               	movwf	___flmul@b+3
  7660  0DF2  3000               	movlw	0
  7661  0DF3  00A2               	movwf	___flmul@b+2
  7662  0DF4  3000               	movlw	0
  7663  0DF5  00A1               	movwf	___flmul@b+1
  7664  0DF6  3000               	movlw	0
  7665  0DF7  00A0               	movwf	___flmul@b
  7666  0DF8                     i1l2953:	
  7667  0DF8  0827               	movf	___flmul@a+3,w
  7668  0DF9  3980               	andlw	128
  7669  0DFA  00A8               	movwf	??___flmul
  7670  0DFB  0828               	movf	??___flmul,w
  7671  0DFC  06AD               	xorwf	___flmul@sign,f
  7672  0DFD  3527               	lslf	___flmul@a+3,w
  7673  0DFE  00A8               	movwf	??___flmul
  7674  0DFF  0828               	movf	??___flmul,w
  7675  0E00  00B2               	movwf	___flmul@aexp
  7676  0E01  1BA6               	btfsc	___flmul@a+2,7
  7677  0E02  1432               	bsf	___flmul@aexp,0
  7678  0E03  0832               	movf	___flmul@aexp,w
  7679  0E04  1903               	btfsc	3,2
  7680  0E05  2E13               	goto	i1l2969
  7681  0E06  0A32               	incf	___flmul@aexp,w
  7682  0E07  1D03               	btfss	3,2
  7683  0E08  2E11               	goto	i1l2967
  7684  0E09  3000               	movlw	0
  7685  0E0A  00A7               	movwf	___flmul@a+3
  7686  0E0B  3000               	movlw	0
  7687  0E0C  00A6               	movwf	___flmul@a+2
  7688  0E0D  3000               	movlw	0
  7689  0E0E  00A5               	movwf	___flmul@a+1
  7690  0E0F  3000               	movlw	0
  7691  0E10  00A4               	movwf	___flmul@a
  7692  0E11                     i1l2967:	
  7693  0E11  17A6               	bsf	___flmul@a+2,7
  7694  0E12  2E1B               	goto	i1l2971
  7695  0E13                     i1l2969:	
  7696  0E13  3000               	movlw	0
  7697  0E14  00A7               	movwf	___flmul@a+3
  7698  0E15  3000               	movlw	0
  7699  0E16  00A6               	movwf	___flmul@a+2
  7700  0E17  3000               	movlw	0
  7701  0E18  00A5               	movwf	___flmul@a+1
  7702  0E19  3000               	movlw	0
  7703  0E1A  00A4               	movwf	___flmul@a
  7704  0E1B                     i1l2971:	
  7705  0E1B  0832               	movf	___flmul@aexp,w
  7706  0E1C  1D03               	btfss	3,2
  7707  0E1D  0833               	movf	___flmul@bexp,w
  7708  0E1E  1D03               	btfss	3,2
  7709  0E1F  2E29               	goto	i1l2979
  7710  0E20  3000               	movlw	0
  7711  0E21  00A3               	movwf	?___flmul+3
  7712  0E22  3000               	movlw	0
  7713  0E23  00A2               	movwf	?___flmul+2
  7714  0E24  3000               	movlw	0
  7715  0E25  00A1               	movwf	?___flmul+1
  7716  0E26  3000               	movlw	0
  7717  0E27  00A0               	movwf	?___flmul
  7718  0E28  0008               	return
  7719  0E29                     i1l2979:	
  7720  0E29  0820               	movf	___flmul@b,w
  7721  0E2A  00A8               	movwf	??___flmul
  7722  0E2B  0828               	movf	??___flmul,w
  7723  0E2C  00F0               	movwf	__Umul8_16@multiplicand
  7724  0E2D  0826               	movf	___flmul@a+2,w
  7725  0E2E  3193  2317  318D   	fcall	__Umul8_16
  7726  0E31  0871               	movf	?__Umul8_16+1,w
  7727  0E32  0140               	movlb	0	; select bank0
  7728  0E33  00B9               	movwf	___flmul@temp+1
  7729  0E34  0870               	movf	?__Umul8_16,w
  7730  0E35  00B8               	movwf	___flmul@temp
  7731  0E36  0838               	movf	___flmul@temp,w
  7732  0E37  00A8               	movwf	??___flmul
  7733  0E38  01A9               	clrf	??___flmul+1
  7734  0E39  01AA               	clrf	??___flmul+2
  7735  0E3A  01AB               	clrf	??___flmul+3
  7736  0E3B  082B               	movf	??___flmul+3,w
  7737  0E3C  00B1               	movwf	___flmul@grs+3
  7738  0E3D  082A               	movf	??___flmul+2,w
  7739  0E3E  00B0               	movwf	___flmul@grs+2
  7740  0E3F  0829               	movf	??___flmul+1,w
  7741  0E40  00AF               	movwf	___flmul@grs+1
  7742  0E41  0828               	movf	??___flmul,w
  7743  0E42  00AE               	movwf	___flmul@grs
  7744  0E43  0839               	movf	___flmul@temp+1,w
  7745  0E44  00A8               	movwf	??___flmul
  7746  0E45  01A9               	clrf	??___flmul+1
  7747  0E46  01AA               	clrf	??___flmul+2
  7748  0E47  01AB               	clrf	??___flmul+3
  7749  0E48  082B               	movf	??___flmul+3,w
  7750  0E49  00B7               	movwf	___flmul@prod+3
  7751  0E4A  082A               	movf	??___flmul+2,w
  7752  0E4B  00B6               	movwf	___flmul@prod+2
  7753  0E4C  0829               	movf	??___flmul+1,w
  7754  0E4D  00B5               	movwf	___flmul@prod+1
  7755  0E4E  0828               	movf	??___flmul,w
  7756  0E4F  00B4               	movwf	___flmul@prod
  7757  0E50  0821               	movf	___flmul@b+1,w
  7758  0E51  00A8               	movwf	??___flmul
  7759  0E52  0828               	movf	??___flmul,w
  7760  0E53  00F0               	movwf	__Umul8_16@multiplicand
  7761  0E54  0825               	movf	___flmul@a+1,w
  7762  0E55  3193  2317  318D   	fcall	__Umul8_16
  7763  0E58  0871               	movf	?__Umul8_16+1,w
  7764  0E59  0140               	movlb	0	; select bank0
  7765  0E5A  00B9               	movwf	___flmul@temp+1
  7766  0E5B  0870               	movf	?__Umul8_16,w
  7767  0E5C  00B8               	movwf	___flmul@temp
  7768  0E5D  0838               	movf	___flmul@temp,w
  7769  0E5E  00A8               	movwf	??___flmul
  7770  0E5F  01A9               	clrf	??___flmul+1
  7771  0E60  01AA               	clrf	??___flmul+2
  7772  0E61  01AB               	clrf	??___flmul+3
  7773  0E62  0828               	movf	??___flmul,w
  7774  0E63  07AE               	addwf	___flmul@grs,f
  7775  0E64  0829               	movf	??___flmul+1,w
  7776  0E65  3DAF               	addwfc	___flmul@grs+1,f
  7777  0E66  082A               	movf	??___flmul+2,w
  7778  0E67  3DB0               	addwfc	___flmul@grs+2,f
  7779  0E68  082B               	movf	??___flmul+3,w
  7780  0E69  3DB1               	addwfc	___flmul@grs+3,f
  7781  0E6A  0839               	movf	___flmul@temp+1,w
  7782  0E6B  00A8               	movwf	??___flmul
  7783  0E6C  01A9               	clrf	??___flmul+1
  7784  0E6D  01AA               	clrf	??___flmul+2
  7785  0E6E  01AB               	clrf	??___flmul+3
  7786  0E6F  0828               	movf	??___flmul,w
  7787  0E70  07B4               	addwf	___flmul@prod,f
  7788  0E71  0829               	movf	??___flmul+1,w
  7789  0E72  3DB5               	addwfc	___flmul@prod+1,f
  7790  0E73  082A               	movf	??___flmul+2,w
  7791  0E74  3DB6               	addwfc	___flmul@prod+2,f
  7792  0E75  082B               	movf	??___flmul+3,w
  7793  0E76  3DB7               	addwfc	___flmul@prod+3,f
  7794  0E77  0822               	movf	___flmul@b+2,w
  7795  0E78  00A8               	movwf	??___flmul
  7796  0E79  0828               	movf	??___flmul,w
  7797  0E7A  00F0               	movwf	__Umul8_16@multiplicand
  7798  0E7B  0824               	movf	___flmul@a,w
  7799  0E7C  3193  2317  318D   	fcall	__Umul8_16
  7800  0E7F  0871               	movf	?__Umul8_16+1,w
  7801  0E80  0140               	movlb	0	; select bank0
  7802  0E81  00B9               	movwf	___flmul@temp+1
  7803  0E82  0870               	movf	?__Umul8_16,w
  7804  0E83  00B8               	movwf	___flmul@temp
  7805  0E84  0838               	movf	___flmul@temp,w
  7806  0E85  00A8               	movwf	??___flmul
  7807  0E86  01A9               	clrf	??___flmul+1
  7808  0E87  01AA               	clrf	??___flmul+2
  7809  0E88  01AB               	clrf	??___flmul+3
  7810  0E89  0828               	movf	??___flmul,w
  7811  0E8A  07AE               	addwf	___flmul@grs,f
  7812  0E8B  0829               	movf	??___flmul+1,w
  7813  0E8C  3DAF               	addwfc	___flmul@grs+1,f
  7814  0E8D  082A               	movf	??___flmul+2,w
  7815  0E8E  3DB0               	addwfc	___flmul@grs+2,f
  7816  0E8F  082B               	movf	??___flmul+3,w
  7817  0E90  3DB1               	addwfc	___flmul@grs+3,f
  7818  0E91  0839               	movf	___flmul@temp+1,w
  7819  0E92  00A8               	movwf	??___flmul
  7820  0E93  01A9               	clrf	??___flmul+1
  7821  0E94  01AA               	clrf	??___flmul+2
  7822  0E95  01AB               	clrf	??___flmul+3
  7823  0E96  0828               	movf	??___flmul,w
  7824  0E97  07B4               	addwf	___flmul@prod,f
  7825  0E98  0829               	movf	??___flmul+1,w
  7826  0E99  3DB5               	addwfc	___flmul@prod+1,f
  7827  0E9A  082A               	movf	??___flmul+2,w
  7828  0E9B  3DB6               	addwfc	___flmul@prod+2,f
  7829  0E9C  082B               	movf	??___flmul+3,w
  7830  0E9D  3DB7               	addwfc	___flmul@prod+3,f
  7831  0E9E  3008               	movlw	8
  7832  0E9F                     u437_25:	
  7833  0E9F  35AE               	lslf	___flmul@grs,f
  7834  0EA0  0DAF               	rlf	___flmul@grs+1,f
  7835  0EA1  0DB0               	rlf	___flmul@grs+2,f
  7836  0EA2  0DB1               	rlf	___flmul@grs+3,f
  7837  0EA3  0B89               	decfsz	9,f
  7838  0EA4  2E9F               	goto	u437_25
  7839  0EA5  0821               	movf	___flmul@b+1,w
  7840  0EA6  00A8               	movwf	??___flmul
  7841  0EA7  0828               	movf	??___flmul,w
  7842  0EA8  00F0               	movwf	__Umul8_16@multiplicand
  7843  0EA9  0824               	movf	___flmul@a,w
  7844  0EAA  3193  2317  318D   	fcall	__Umul8_16
  7845  0EAD  0871               	movf	?__Umul8_16+1,w
  7846  0EAE  0140               	movlb	0	; select bank0
  7847  0EAF  00B9               	movwf	___flmul@temp+1
  7848  0EB0  0870               	movf	?__Umul8_16,w
  7849  0EB1  00B8               	movwf	___flmul@temp
  7850  0EB2  0838               	movf	___flmul@temp,w
  7851  0EB3  07AE               	addwf	___flmul@grs,f
  7852  0EB4  0839               	movf	___flmul@temp+1,w
  7853  0EB5  3DAF               	addwfc	___flmul@grs+1,f
  7854  0EB6  3000               	movlw	0
  7855  0EB7  3DB0               	addwfc	___flmul@grs+2,f
  7856  0EB8  3DB1               	addwfc	___flmul@grs+3,f
  7857  0EB9  0820               	movf	___flmul@b,w
  7858  0EBA  00A8               	movwf	??___flmul
  7859  0EBB  0828               	movf	??___flmul,w
  7860  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  7861  0EBD  0825               	movf	___flmul@a+1,w
  7862  0EBE  3193  2317  318D   	fcall	__Umul8_16
  7863  0EC1  0871               	movf	?__Umul8_16+1,w
  7864  0EC2  0140               	movlb	0	; select bank0
  7865  0EC3  00B9               	movwf	___flmul@temp+1
  7866  0EC4  0870               	movf	?__Umul8_16,w
  7867  0EC5  00B8               	movwf	___flmul@temp
  7868  0EC6  0838               	movf	___flmul@temp,w
  7869  0EC7  07AE               	addwf	___flmul@grs,f
  7870  0EC8  0839               	movf	___flmul@temp+1,w
  7871  0EC9  3DAF               	addwfc	___flmul@grs+1,f
  7872  0ECA  3000               	movlw	0
  7873  0ECB  3DB0               	addwfc	___flmul@grs+2,f
  7874  0ECC  3DB1               	addwfc	___flmul@grs+3,f
  7875  0ECD  3008               	movlw	8
  7876  0ECE                     u438_25:	
  7877  0ECE  35AE               	lslf	___flmul@grs,f
  7878  0ECF  0DAF               	rlf	___flmul@grs+1,f
  7879  0ED0  0DB0               	rlf	___flmul@grs+2,f
  7880  0ED1  0DB1               	rlf	___flmul@grs+3,f
  7881  0ED2  0B89               	decfsz	9,f
  7882  0ED3  2ECE               	goto	u438_25
  7883  0ED4  0820               	movf	___flmul@b,w
  7884  0ED5  00A8               	movwf	??___flmul
  7885  0ED6  0828               	movf	??___flmul,w
  7886  0ED7  00F0               	movwf	__Umul8_16@multiplicand
  7887  0ED8  0824               	movf	___flmul@a,w
  7888  0ED9  3193  2317  318D   	fcall	__Umul8_16
  7889  0EDC  0871               	movf	?__Umul8_16+1,w
  7890  0EDD  0140               	movlb	0	; select bank0
  7891  0EDE  00B9               	movwf	___flmul@temp+1
  7892  0EDF  0870               	movf	?__Umul8_16,w
  7893  0EE0  00B8               	movwf	___flmul@temp
  7894  0EE1  0838               	movf	___flmul@temp,w
  7895  0EE2  07AE               	addwf	___flmul@grs,f
  7896  0EE3  0839               	movf	___flmul@temp+1,w
  7897  0EE4  3DAF               	addwfc	___flmul@grs+1,f
  7898  0EE5  3000               	movlw	0
  7899  0EE6  3DB0               	addwfc	___flmul@grs+2,f
  7900  0EE7  3DB1               	addwfc	___flmul@grs+3,f
  7901  0EE8  0821               	movf	___flmul@b+1,w
  7902  0EE9  00A8               	movwf	??___flmul
  7903  0EEA  0828               	movf	??___flmul,w
  7904  0EEB  00F0               	movwf	__Umul8_16@multiplicand
  7905  0EEC  0826               	movf	___flmul@a+2,w
  7906  0EED  3193  2317  318D   	fcall	__Umul8_16
  7907  0EF0  0871               	movf	?__Umul8_16+1,w
  7908  0EF1  0140               	movlb	0	; select bank0
  7909  0EF2  00B9               	movwf	___flmul@temp+1
  7910  0EF3  0870               	movf	?__Umul8_16,w
  7911  0EF4  00B8               	movwf	___flmul@temp
  7912  0EF5  0838               	movf	___flmul@temp,w
  7913  0EF6  07B4               	addwf	___flmul@prod,f
  7914  0EF7  0839               	movf	___flmul@temp+1,w
  7915  0EF8  3DB5               	addwfc	___flmul@prod+1,f
  7916  0EF9  3000               	movlw	0
  7917  0EFA  3DB6               	addwfc	___flmul@prod+2,f
  7918  0EFB  3DB7               	addwfc	___flmul@prod+3,f
  7919  0EFC  0822               	movf	___flmul@b+2,w
  7920  0EFD  00A8               	movwf	??___flmul
  7921  0EFE  0828               	movf	??___flmul,w
  7922  0EFF  00F0               	movwf	__Umul8_16@multiplicand
  7923  0F00  0825               	movf	___flmul@a+1,w
  7924  0F01  3193  2317  318D   	fcall	__Umul8_16
  7925  0F04  0871               	movf	?__Umul8_16+1,w
  7926  0F05  0140               	movlb	0	; select bank0
  7927  0F06  00B9               	movwf	___flmul@temp+1
  7928  0F07  0870               	movf	?__Umul8_16,w
  7929  0F08  00B8               	movwf	___flmul@temp
  7930  0F09  0838               	movf	___flmul@temp,w
  7931  0F0A  07B4               	addwf	___flmul@prod,f
  7932  0F0B  0839               	movf	___flmul@temp+1,w
  7933  0F0C  3DB5               	addwfc	___flmul@prod+1,f
  7934  0F0D  3000               	movlw	0
  7935  0F0E  3DB6               	addwfc	___flmul@prod+2,f
  7936  0F0F  3DB7               	addwfc	___flmul@prod+3,f
  7937  0F10  0822               	movf	___flmul@b+2,w
  7938  0F11  00A8               	movwf	??___flmul
  7939  0F12  0828               	movf	??___flmul,w
  7940  0F13  00F0               	movwf	__Umul8_16@multiplicand
  7941  0F14  0826               	movf	___flmul@a+2,w
  7942  0F15  3193  2317  318D   	fcall	__Umul8_16
  7943  0F18  0871               	movf	?__Umul8_16+1,w
  7944  0F19  0140               	movlb	0	; select bank0
  7945  0F1A  00B9               	movwf	___flmul@temp+1
  7946  0F1B  0870               	movf	?__Umul8_16,w
  7947  0F1C  00B8               	movwf	___flmul@temp
  7948  0F1D  0838               	movf	___flmul@temp,w
  7949  0F1E  00A8               	movwf	??___flmul
  7950  0F1F  0839               	movf	___flmul@temp+1,w
  7951  0F20  00A9               	movwf	??___flmul+1
  7952  0F21  01AA               	clrf	??___flmul+2
  7953  0F22  01AB               	clrf	??___flmul+3
  7954  0F23  3008               	movlw	8
  7955  0F24                     u439_25:	
  7956  0F24  35A8               	lslf	??___flmul,f
  7957  0F25  0DA9               	rlf	??___flmul+1,f
  7958  0F26  0DAA               	rlf	??___flmul+2,f
  7959  0F27  0DAB               	rlf	??___flmul+3,f
  7960  0F28  0B89               	decfsz	9,f
  7961  0F29  2F24               	goto	u439_25
  7962  0F2A  0828               	movf	??___flmul,w
  7963  0F2B  07B4               	addwf	___flmul@prod,f
  7964  0F2C  0829               	movf	??___flmul+1,w
  7965  0F2D  3DB5               	addwfc	___flmul@prod+1,f
  7966  0F2E  082A               	movf	??___flmul+2,w
  7967  0F2F  3DB6               	addwfc	___flmul@prod+2,f
  7968  0F30  082B               	movf	??___flmul+3,w
  7969  0F31  3DB7               	addwfc	___flmul@prod+3,f
  7970  0F32  082E               	movf	___flmul@grs,w
  7971  0F33  00A8               	movwf	??___flmul
  7972  0F34  082F               	movf	___flmul@grs+1,w
  7973  0F35  00A9               	movwf	??___flmul+1
  7974  0F36  0830               	movf	___flmul@grs+2,w
  7975  0F37  00AA               	movwf	??___flmul+2
  7976  0F38  0831               	movf	___flmul@grs+3,w
  7977  0F39  00AB               	movwf	??___flmul+3
  7978  0F3A  3018               	movlw	24
  7979  0F3B                     u440_25:	
  7980  0F3B  36AB               	lsrf	??___flmul+3,f
  7981  0F3C  0CAA               	rrf	??___flmul+2,f
  7982  0F3D  0CA9               	rrf	??___flmul+1,f
  7983  0F3E  0CA8               	rrf	??___flmul,f
  7984  0F3F  0B89               	decfsz	9,f
  7985  0F40  2F3B               	goto	u440_25
  7986  0F41  0828               	movf	??___flmul,w
  7987  0F42  07B4               	addwf	___flmul@prod,f
  7988  0F43  0829               	movf	??___flmul+1,w
  7989  0F44  3DB5               	addwfc	___flmul@prod+1,f
  7990  0F45  082A               	movf	??___flmul+2,w
  7991  0F46  3DB6               	addwfc	___flmul@prod+2,f
  7992  0F47  082B               	movf	??___flmul+3,w
  7993  0F48  3DB7               	addwfc	___flmul@prod+3,f
  7994  0F49  3008               	movlw	8
  7995  0F4A                     u441_25:	
  7996  0F4A  35AE               	lslf	___flmul@grs,f
  7997  0F4B  0DAF               	rlf	___flmul@grs+1,f
  7998  0F4C  0DB0               	rlf	___flmul@grs+2,f
  7999  0F4D  0DB1               	rlf	___flmul@grs+3,f
  8000  0F4E  0B89               	decfsz	9,f
  8001  0F4F  2F4A               	goto	u441_25
  8002  0F50  0833               	movf	___flmul@bexp,w
  8003  0F51  0732               	addwf	___flmul@aexp,w
  8004  0F52  00A8               	movwf	??___flmul
  8005  0F53  01A9               	clrf	??___flmul+1
  8006  0F54  0DA9               	rlf	??___flmul+1,f
  8007  0F55  0828               	movf	??___flmul,w
  8008  0F56  3E82               	addlw	130
  8009  0F57  00B8               	movwf	___flmul@temp
  8010  0F58  30FF               	movlw	255
  8011  0F59  3D29               	addwfc	??___flmul+1,w
  8012  0F5A  00B9               	movwf	___flmul@temp+1
  8013  0F5B                     i1l3031:	
  8014  0F5B  1BB6               	btfsc	___flmul@prod+2,7
  8015  0F5C  2F72               	goto	i1l3033
  8016  0F5D  3001               	movlw	1
  8017  0F5E                     u442_25:	
  8018  0F5E  35B4               	lslf	___flmul@prod,f
  8019  0F5F  0DB5               	rlf	___flmul@prod+1,f
  8020  0F60  0DB6               	rlf	___flmul@prod+2,f
  8021  0F61  0DB7               	rlf	___flmul@prod+3,f
  8022  0F62  0B89               	decfsz	9,f
  8023  0F63  2F5E               	goto	u442_25
  8024  0F64  1BB1               	btfsc	___flmul@grs+3,7
  8025  0F65  1434               	bsf	___flmul@prod,0
  8026  0F66  3001               	movlw	1
  8027  0F67                     u444_25:	
  8028  0F67  35AE               	lslf	___flmul@grs,f
  8029  0F68  0DAF               	rlf	___flmul@grs+1,f
  8030  0F69  0DB0               	rlf	___flmul@grs+2,f
  8031  0F6A  0DB1               	rlf	___flmul@grs+3,f
  8032  0F6B  0B89               	decfsz	9,f
  8033  0F6C  2F67               	goto	u444_25
  8034  0F6D  30FF               	movlw	255
  8035  0F6E  07B8               	addwf	___flmul@temp,f
  8036  0F6F  30FF               	movlw	255
  8037  0F70  3DB9               	addwfc	___flmul@temp+1,f
  8038  0F71  2F5B               	goto	i1l3031
  8039  0F72                     i1l3033:	
  8040  0F72  01B2               	clrf	___flmul@aexp
  8041  0F73  1FB1               	btfss	___flmul@grs+3,7
  8042  0F74  2F8B               	goto	i1l3043
  8043  0F75  30FF               	movlw	255
  8044  0F76  052E               	andwf	___flmul@grs,w
  8045  0F77  00A8               	movwf	??___flmul
  8046  0F78  30FF               	movlw	255
  8047  0F79  052F               	andwf	___flmul@grs+1,w
  8048  0F7A  00A9               	movwf	??___flmul+1
  8049  0F7B  30FF               	movlw	255
  8050  0F7C  0530               	andwf	___flmul@grs+2,w
  8051  0F7D  00AA               	movwf	??___flmul+2
  8052  0F7E  307F               	movlw	127
  8053  0F7F  0531               	andwf	___flmul@grs+3,w
  8054  0F80  00AB               	movwf	??___flmul+3
  8055  0F81  082B               	movf	??___flmul+3,w
  8056  0F82  042A               	iorwf	??___flmul+2,w
  8057  0F83  0429               	iorwf	??___flmul+1,w
  8058  0F84  0428               	iorwf	??___flmul,w
  8059  0F85  1903               	skipnz
  8060  0F86  1834               	btfsc	___flmul@prod,0
  8061  0F87  2F89               	goto	i1l3039
  8062  0F88  2F8B               	goto	i1l3043
  8063  0F89                     i1l3039:	
  8064  0F89  01B2               	clrf	___flmul@aexp
  8065  0F8A  0AB2               	incf	___flmul@aexp,f
  8066  0F8B                     i1l3043:	
  8067  0F8B  0832               	movf	___flmul@aexp,w
  8068  0F8C  1903               	btfsc	3,2
  8069  0F8D  2FB4               	goto	i1l3053
  8070  0F8E  3001               	movlw	1
  8071  0F8F  07B4               	addwf	___flmul@prod,f
  8072  0F90  3000               	movlw	0
  8073  0F91  3DB5               	addwfc	___flmul@prod+1,f
  8074  0F92  3000               	movlw	0
  8075  0F93  3DB6               	addwfc	___flmul@prod+2,f
  8076  0F94  3000               	movlw	0
  8077  0F95  3DB7               	addwfc	___flmul@prod+3,f
  8078  0F96  1C37               	btfss	___flmul@prod+3,0
  8079  0F97  2FB4               	goto	i1l3053
  8080  0F98  0834               	movf	___flmul@prod,w
  8081  0F99  00A8               	movwf	??___flmul
  8082  0F9A  0835               	movf	___flmul@prod+1,w
  8083  0F9B  00A9               	movwf	??___flmul+1
  8084  0F9C  0836               	movf	___flmul@prod+2,w
  8085  0F9D  00AA               	movwf	??___flmul+2
  8086  0F9E  0837               	movf	___flmul@prod+3,w
  8087  0F9F  00AB               	movwf	??___flmul+3
  8088  0FA0  3001               	movlw	1
  8089  0FA1  00AC               	movwf	??___flmul+4
  8090  0FA2                     u451_25:	
  8091  0FA2  37AB               	asrf	??___flmul+3,f
  8092  0FA3  0CAA               	rrf	??___flmul+2,f
  8093  0FA4  0CA9               	rrf	??___flmul+1,f
  8094  0FA5  0CA8               	rrf	??___flmul,f
  8095  0FA6  0BAC               	decfsz	??___flmul+4,f
  8096  0FA7  2FA2               	goto	u451_25
  8097  0FA8  082B               	movf	??___flmul+3,w
  8098  0FA9  00B7               	movwf	___flmul@prod+3
  8099  0FAA  082A               	movf	??___flmul+2,w
  8100  0FAB  00B6               	movwf	___flmul@prod+2
  8101  0FAC  0829               	movf	??___flmul+1,w
  8102  0FAD  00B5               	movwf	___flmul@prod+1
  8103  0FAE  0828               	movf	??___flmul,w
  8104  0FAF  00B4               	movwf	___flmul@prod
  8105  0FB0  3001               	movlw	1
  8106  0FB1  07B8               	addwf	___flmul@temp,f
  8107  0FB2  3000               	movlw	0
  8108  0FB3  3DB9               	addwfc	___flmul@temp+1,f
  8109  0FB4                     i1l3053:	
  8110  0FB4  0839               	movf	___flmul@temp+1,w
  8111  0FB5  3A80               	xorlw	128
  8112  0FB6  00A8               	movwf	??___flmul
  8113  0FB7  3080               	movlw	128
  8114  0FB8  0228               	subwf	??___flmul,w
  8115  0FB9  1D03               	skipz
  8116  0FBA  2FBD               	goto	u452_25
  8117  0FBB  30FF               	movlw	255
  8118  0FBC  0238               	subwf	___flmul@temp,w
  8119  0FBD                     u452_25:	
  8120  0FBD  1C03               	skipc
  8121  0FBE  2FC9               	goto	i1l3057
  8122  0FBF  307F               	movlw	127
  8123  0FC0  0140               	movlb	0	; select bank0
  8124  0FC1  00B7               	movwf	___flmul@prod+3
  8125  0FC2  3080               	movlw	128
  8126  0FC3  00B6               	movwf	___flmul@prod+2
  8127  0FC4  3000               	movlw	0
  8128  0FC5  00B5               	movwf	___flmul@prod+1
  8129  0FC6  3000               	movlw	0
  8130  0FC7  00B4               	movwf	___flmul@prod
  8131  0FC8  2FF3               	goto	i1l753
  8132  0FC9                     i1l3057:	
  8133  0FC9  0140               	movlb	0	; select bank0
  8134  0FCA  0839               	movf	___flmul@temp+1,w
  8135  0FCB  3A80               	xorlw	128
  8136  0FCC  00A8               	movwf	??___flmul
  8137  0FCD  3080               	movlw	128
  8138  0FCE  0228               	subwf	??___flmul,w
  8139  0FCF  1D03               	skipz
  8140  0FD0  2FD3               	goto	u453_25
  8141  0FD1  3001               	movlw	1
  8142  0FD2  0238               	subwf	___flmul@temp,w
  8143  0FD3                     u453_25:	
  8144  0FD3  1803               	skipnc
  8145  0FD4  2FE0               	goto	i1l3063
  8146  0FD5  3000               	movlw	0
  8147  0FD6  0140               	movlb	0	; select bank0
  8148  0FD7  00B7               	movwf	___flmul@prod+3
  8149  0FD8  3000               	movlw	0
  8150  0FD9  00B6               	movwf	___flmul@prod+2
  8151  0FDA  3000               	movlw	0
  8152  0FDB  00B5               	movwf	___flmul@prod+1
  8153  0FDC  3000               	movlw	0
  8154  0FDD  00B4               	movwf	___flmul@prod
  8155  0FDE  01AD               	clrf	___flmul@sign
  8156  0FDF  2FF3               	goto	i1l753
  8157  0FE0                     i1l3063:	
  8158  0FE0  0140               	movlb	0	; select bank0
  8159  0FE1  0838               	movf	___flmul@temp,w
  8160  0FE2  00A8               	movwf	??___flmul
  8161  0FE3  0828               	movf	??___flmul,w
  8162  0FE4  00B3               	movwf	___flmul@bexp
  8163  0FE5  30FF               	movlw	255
  8164  0FE6  05B4               	andwf	___flmul@prod,f
  8165  0FE7  30FF               	movlw	255
  8166  0FE8  05B5               	andwf	___flmul@prod+1,f
  8167  0FE9  307F               	movlw	127
  8168  0FEA  05B6               	andwf	___flmul@prod+2,f
  8169  0FEB  3000               	movlw	0
  8170  0FEC  05B7               	andwf	___flmul@prod+3,f
  8171  0FED  1833               	btfsc	___flmul@bexp,0
  8172  0FEE  17B6               	bsf	___flmul@prod+2,7
  8173  0FEF  3633               	lsrf	___flmul@bexp,w
  8174  0FF0  00A8               	movwf	??___flmul
  8175  0FF1  0828               	movf	??___flmul,w
  8176  0FF2  00B7               	movwf	___flmul@prod+3
  8177  0FF3                     i1l753:	
  8178  0FF3  082D               	movf	___flmul@sign,w
  8179  0FF4  00A8               	movwf	??___flmul
  8180  0FF5  0828               	movf	??___flmul,w
  8181  0FF6  04B7               	iorwf	___flmul@prod+3,f
  8182  0FF7  0837               	movf	___flmul@prod+3,w
  8183  0FF8  00A3               	movwf	?___flmul+3
  8184  0FF9  0836               	movf	___flmul@prod+2,w
  8185  0FFA  00A2               	movwf	?___flmul+2
  8186  0FFB  0835               	movf	___flmul@prod+1,w
  8187  0FFC  00A1               	movwf	?___flmul+1
  8188  0FFD  0834               	movf	___flmul@prod,w
  8189  0FFE  00A0               	movwf	?___flmul
  8190  0FFF  0008               	return
  8191  1000                     __end_of___flmul:	
  8192                           
  8193                           	psect	text26
  8194  1317                     __ptext26:	
  8195 ;; *************** function __Umul8_16 *****************
  8196 ;; Defined at:
  8197 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  multiplier      1    wreg     unsigned char 
  8200 ;;  multiplicand    1    0[COMMON] unsigned char 
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  multiplier      1    8[COMMON] unsigned char 
  8203 ;;  word_mpld       2    6[COMMON] unsigned int 
  8204 ;;  product         2    4[COMMON] unsigned int 
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  2    0[COMMON] unsigned int 
  8207 ;; Registers used:
  8208 ;;		wreg, status,2, status,0
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;Total ram usage:        9 bytes
  8219 ;; Hardware stack levels used:    1
  8220 ;; This function calls:
  8221 ;;		Nothing
  8222 ;; This function is called by:
  8223 ;;		___flmul
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           
  8228                           ;psect for function __Umul8_16
  8229  1317                     __Umul8_16:	
  8230                           
  8231                           ;incstack = 0
  8232                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8233                           ;__Umul8_16@multiplier stored from wreg
  8234  1317  00F8               	movwf	__Umul8_16@multiplier
  8235  1318  01F4               	clrf	__Umul8_16@product
  8236  1319  01F5               	clrf	__Umul8_16@product+1
  8237  131A  0870               	movf	__Umul8_16@multiplicand,w
  8238  131B  00F2               	movwf	??__Umul8_16
  8239  131C  01F3               	clrf	??__Umul8_16+1
  8240  131D  0872               	movf	??__Umul8_16,w
  8241  131E  00F6               	movwf	__Umul8_16@word_mpld
  8242  131F  0873               	movf	??__Umul8_16+1,w
  8243  1320  00F7               	movwf	__Umul8_16@word_mpld+1
  8244  1321                     i1l2533:	
  8245  1321  1C78               	btfss	__Umul8_16@multiplier,0
  8246  1322  2B27               	goto	i1l889
  8247  1323  0876               	movf	__Umul8_16@word_mpld,w
  8248  1324  07F4               	addwf	__Umul8_16@product,f
  8249  1325  0877               	movf	__Umul8_16@word_mpld+1,w
  8250  1326  3DF5               	addwfc	__Umul8_16@product+1,f
  8251  1327                     i1l889:	
  8252  1327  3001               	movlw	1
  8253  1328                     u333_25:	
  8254  1328  35F6               	lslf	__Umul8_16@word_mpld,f
  8255  1329  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8256  132A  0B89               	decfsz	9,f
  8257  132B  2B28               	goto	u333_25
  8258  132C  1003               	clrc
  8259  132D  0CF8               	rrf	__Umul8_16@multiplier,f
  8260  132E  0878               	movf	__Umul8_16@multiplier,w
  8261  132F  1D03               	btfss	3,2
  8262  1330  2B21               	goto	i1l2533
  8263  1331  0875               	movf	__Umul8_16@product+1,w
  8264  1332  00F1               	movwf	?__Umul8_16+1
  8265  1333  0874               	movf	__Umul8_16@product,w
  8266  1334  00F0               	movwf	?__Umul8_16
  8267  1335  0008               	return
  8268  1336                     __end_of__Umul8_16:	
  8269                           
  8270                           	psect	text27
  8271  166D                     __ptext27:	
  8272 ;; *************** function ___flge *****************
  8273 ;; Defined at:
  8274 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  ff1             4   26[BANK0 ] unsigned int 
  8277 ;;  ff2             4   30[BANK0 ] unsigned int 
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;		None
  8280 ;; Return value:  Size  Location     Type
  8281 ;;		None               void
  8282 ;; Registers used:
  8283 ;;		wreg, status,2, status,0
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8289 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;Total ram usage:       12 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; This function calls:
  8296 ;;		Nothing
  8297 ;; This function is called by:
  8298 ;;		_efgtoa
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           
  8303                           ;psect for function ___flge
  8304  166D                     ___flge:	
  8305                           
  8306                           ;incstack = 0
  8307                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8308  166D  3000               	movlw	0
  8309  166E  0140               	movlb	0	; select bank0
  8310  166F  053A               	andwf	___flge@ff1,w
  8311  1670  00C2               	movwf	??___flge
  8312  1671  3000               	movlw	0
  8313  1672  053B               	andwf	___flge@ff1+1,w
  8314  1673  00C3               	movwf	??___flge+1
  8315  1674  3080               	movlw	128
  8316  1675  053C               	andwf	___flge@ff1+2,w
  8317  1676  00C4               	movwf	??___flge+2
  8318  1677  307F               	movlw	127
  8319  1678  053D               	andwf	___flge@ff1+3,w
  8320  1679  00C5               	movwf	??___flge+3
  8321  167A  0845               	movf	??___flge+3,w
  8322  167B  0444               	iorwf	??___flge+2,w
  8323  167C  0443               	iorwf	??___flge+1,w
  8324  167D  0442               	iorwf	??___flge,w
  8325  167E  1D03               	skipz
  8326  167F  2E88               	goto	i1l522
  8327  1680  3000               	movlw	0
  8328  1681  00BD               	movwf	___flge@ff1+3
  8329  1682  3000               	movlw	0
  8330  1683  00BC               	movwf	___flge@ff1+2
  8331  1684  3000               	movlw	0
  8332  1685  00BB               	movwf	___flge@ff1+1
  8333  1686  3000               	movlw	0
  8334  1687  00BA               	movwf	___flge@ff1
  8335  1688                     i1l522:	
  8336  1688  3000               	movlw	0
  8337  1689  053E               	andwf	___flge@ff2,w
  8338  168A  00C2               	movwf	??___flge
  8339  168B  3000               	movlw	0
  8340  168C  053F               	andwf	___flge@ff2+1,w
  8341  168D  00C3               	movwf	??___flge+1
  8342  168E  3080               	movlw	128
  8343  168F  0540               	andwf	___flge@ff2+2,w
  8344  1690  00C4               	movwf	??___flge+2
  8345  1691  307F               	movlw	127
  8346  1692  0541               	andwf	___flge@ff2+3,w
  8347  1693  00C5               	movwf	??___flge+3
  8348  1694  0845               	movf	??___flge+3,w
  8349  1695  0444               	iorwf	??___flge+2,w
  8350  1696  0443               	iorwf	??___flge+1,w
  8351  1697  0442               	iorwf	??___flge,w
  8352  1698  1D03               	skipz
  8353  1699  2EA2               	goto	i1l2731
  8354  169A  3000               	movlw	0
  8355  169B  00C1               	movwf	___flge@ff2+3
  8356  169C  3000               	movlw	0
  8357  169D  00C0               	movwf	___flge@ff2+2
  8358  169E  3000               	movlw	0
  8359  169F  00BF               	movwf	___flge@ff2+1
  8360  16A0  3000               	movlw	0
  8361  16A1  00BE               	movwf	___flge@ff2
  8362  16A2                     i1l2731:	
  8363  16A2  1FBD               	btfss	___flge@ff1+3,7
  8364  16A3  2EBC               	goto	i1l2735
  8365  16A4  3000               	movlw	0
  8366  16A5  00C2               	movwf	??___flge
  8367  16A6  3000               	movlw	0
  8368  16A7  00C3               	movwf	??___flge+1
  8369  16A8  3000               	movlw	0
  8370  16A9  00C4               	movwf	??___flge+2
  8371  16AA  3080               	movlw	128
  8372  16AB  00C5               	movwf	??___flge+3
  8373  16AC  083A               	movf	___flge@ff1,w
  8374  16AD  02C2               	subwf	??___flge,f
  8375  16AE  083B               	movf	___flge@ff1+1,w
  8376  16AF  3BC3               	subwfb	??___flge+1,f
  8377  16B0  083C               	movf	___flge@ff1+2,w
  8378  16B1  3BC4               	subwfb	??___flge+2,f
  8379  16B2  083D               	movf	___flge@ff1+3,w
  8380  16B3  3BC5               	subwfb	??___flge+3,f
  8381  16B4  0845               	movf	??___flge+3,w
  8382  16B5  00BD               	movwf	___flge@ff1+3
  8383  16B6  0844               	movf	??___flge+2,w
  8384  16B7  00BC               	movwf	___flge@ff1+2
  8385  16B8  0843               	movf	??___flge+1,w
  8386  16B9  00BB               	movwf	___flge@ff1+1
  8387  16BA  0842               	movf	??___flge,w
  8388  16BB  00BA               	movwf	___flge@ff1
  8389  16BC                     i1l2735:	
  8390  16BC  1FC1               	btfss	___flge@ff2+3,7
  8391  16BD  2ED6               	goto	i1l525
  8392  16BE  3000               	movlw	0
  8393  16BF  00C2               	movwf	??___flge
  8394  16C0  3000               	movlw	0
  8395  16C1  00C3               	movwf	??___flge+1
  8396  16C2  3000               	movlw	0
  8397  16C3  00C4               	movwf	??___flge+2
  8398  16C4  3080               	movlw	128
  8399  16C5  00C5               	movwf	??___flge+3
  8400  16C6  083E               	movf	___flge@ff2,w
  8401  16C7  02C2               	subwf	??___flge,f
  8402  16C8  083F               	movf	___flge@ff2+1,w
  8403  16C9  3BC3               	subwfb	??___flge+1,f
  8404  16CA  0840               	movf	___flge@ff2+2,w
  8405  16CB  3BC4               	subwfb	??___flge+2,f
  8406  16CC  0841               	movf	___flge@ff2+3,w
  8407  16CD  3BC5               	subwfb	??___flge+3,f
  8408  16CE  0845               	movf	??___flge+3,w
  8409  16CF  00C1               	movwf	___flge@ff2+3
  8410  16D0  0844               	movf	??___flge+2,w
  8411  16D1  00C0               	movwf	___flge@ff2+2
  8412  16D2  0843               	movf	??___flge+1,w
  8413  16D3  00BF               	movwf	___flge@ff2+1
  8414  16D4  0842               	movf	??___flge,w
  8415  16D5  00BE               	movwf	___flge@ff2
  8416  16D6                     i1l525:	
  8417  16D6  3080               	movlw	128
  8418  16D7  06BD               	xorwf	___flge@ff1+3,f
  8419  16D8  3080               	movlw	128
  8420  16D9  06C1               	xorwf	___flge@ff2+3,f
  8421  16DA  0841               	movf	___flge@ff2+3,w
  8422  16DB  023D               	subwf	___flge@ff1+3,w
  8423  16DC  1D03               	skipz
  8424  16DD  0008               	return
  8425  16DE  0840               	movf	___flge@ff2+2,w
  8426  16DF  023C               	subwf	___flge@ff1+2,w
  8427  16E0  1D03               	skipz
  8428  16E1  0008               	return
  8429  16E2  083F               	movf	___flge@ff2+1,w
  8430  16E3  023B               	subwf	___flge@ff1+1,w
  8431  16E4  1D03               	skipz
  8432  16E5  0008               	return
  8433  16E6  083E               	movf	___flge@ff2,w
  8434  16E7  023A               	subwf	___flge@ff1,w
  8435  16E8  0008               	return
  8436  16E9                     __end_of___flge:	
  8437                           
  8438                           	psect	text28
  8439  1464                     __ptext28:	
  8440 ;; *************** function ___fleq *****************
  8441 ;; Defined at:
  8442 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  ff1             4    0[COMMON] unsigned int 
  8445 ;;  ff2             4    4[COMMON] unsigned int 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;		None
  8448 ;; Return value:  Size  Location     Type
  8449 ;;		None               void
  8450 ;; Registers used:
  8451 ;;		wreg, status,2, status,0
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8457 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;Total ram usage:       12 bytes
  8462 ;; Hardware stack levels used:    1
  8463 ;; This function calls:
  8464 ;;		Nothing
  8465 ;; This function is called by:
  8466 ;;		_efgtoa
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470                           
  8471                           ;psect for function ___fleq
  8472  1464                     ___fleq:	
  8473                           
  8474                           ;incstack = 0
  8475                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8476  1464  3000               	movlw	0
  8477  1465  0570               	andwf	___fleq@ff1,w
  8478  1466  00F8               	movwf	??___fleq
  8479  1467  3000               	movlw	0
  8480  1468  0571               	andwf	___fleq@ff1+1,w
  8481  1469  00F9               	movwf	??___fleq+1
  8482  146A  3080               	movlw	128
  8483  146B  0572               	andwf	___fleq@ff1+2,w
  8484  146C  00FA               	movwf	??___fleq+2
  8485  146D  307F               	movlw	127
  8486  146E  0573               	andwf	___fleq@ff1+3,w
  8487  146F  00FB               	movwf	??___fleq+3
  8488  1470  087B               	movf	??___fleq+3,w
  8489  1471  047A               	iorwf	??___fleq+2,w
  8490  1472  0479               	iorwf	??___fleq+1,w
  8491  1473  0478               	iorwf	??___fleq,w
  8492  1474  1D03               	skipz
  8493  1475  2C7E               	goto	i1l513
  8494  1476  3000               	movlw	0
  8495  1477  00F3               	movwf	___fleq@ff1+3
  8496  1478  3000               	movlw	0
  8497  1479  00F2               	movwf	___fleq@ff1+2
  8498  147A  3000               	movlw	0
  8499  147B  00F1               	movwf	___fleq@ff1+1
  8500  147C  3000               	movlw	0
  8501  147D  00F0               	movwf	___fleq@ff1
  8502  147E                     i1l513:	
  8503  147E  3000               	movlw	0
  8504  147F  0574               	andwf	___fleq@ff2,w
  8505  1480  00F8               	movwf	??___fleq
  8506  1481  3000               	movlw	0
  8507  1482  0575               	andwf	___fleq@ff2+1,w
  8508  1483  00F9               	movwf	??___fleq+1
  8509  1484  3080               	movlw	128
  8510  1485  0576               	andwf	___fleq@ff2+2,w
  8511  1486  00FA               	movwf	??___fleq+2
  8512  1487  307F               	movlw	127
  8513  1488  0577               	andwf	___fleq@ff2+3,w
  8514  1489  00FB               	movwf	??___fleq+3
  8515  148A  087B               	movf	??___fleq+3,w
  8516  148B  047A               	iorwf	??___fleq+2,w
  8517  148C  0479               	iorwf	??___fleq+1,w
  8518  148D  0478               	iorwf	??___fleq,w
  8519  148E  1D03               	skipz
  8520  148F  2C98               	goto	i1l514
  8521  1490  3000               	movlw	0
  8522  1491  00F7               	movwf	___fleq@ff2+3
  8523  1492  3000               	movlw	0
  8524  1493  00F6               	movwf	___fleq@ff2+2
  8525  1494  3000               	movlw	0
  8526  1495  00F5               	movwf	___fleq@ff2+1
  8527  1496  3000               	movlw	0
  8528  1497  00F4               	movwf	___fleq@ff2
  8529  1498                     i1l514:	
  8530  1498  0877               	movf	___fleq@ff2+3,w
  8531  1499  0673               	xorwf	___fleq@ff1+3,w
  8532  149A  1D03               	skipz
  8533  149B  2CA6               	goto	u383_25
  8534  149C  0876               	movf	___fleq@ff2+2,w
  8535  149D  0672               	xorwf	___fleq@ff1+2,w
  8536  149E  1D03               	skipz
  8537  149F  2CA6               	goto	u383_25
  8538  14A0  0875               	movf	___fleq@ff2+1,w
  8539  14A1  0671               	xorwf	___fleq@ff1+1,w
  8540  14A2  1D03               	skipz
  8541  14A3  2CA6               	goto	u383_25
  8542  14A4  0874               	movf	___fleq@ff2,w
  8543  14A5  0670               	xorwf	___fleq@ff1,w
  8544  14A6                     u383_25:	
  8545  14A6  1903               	skipnz
  8546  14A7  2CAA               	goto	i1l2721
  8547  14A8  1003               	clrc
  8548  14A9  0008               	return
  8549  14AA                     i1l2721:	
  8550  14AA  1403               	setc
  8551  14AB  0008               	return
  8552  14AC                     __end_of___fleq:	
  8553                           
  8554                           	psect	text29
  8555  08AC                     __ptext29:	
  8556 ;; *************** function ___fldiv *****************
  8557 ;; Defined at:
  8558 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  a               4    0[COMMON] unsigned int 
  8561 ;;  b               4    4[COMMON] unsigned int 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  grs             4    7[BANK0 ] unsigned long 
  8564 ;;  rem             4    0[BANK0 ] unsigned long 
  8565 ;;  new_exp         2    5[BANK0 ] int 
  8566 ;;  aexp            1   12[BANK0 ] unsigned char 
  8567 ;;  bexp            1   11[BANK0 ] unsigned char 
  8568 ;;  sign            1    4[BANK0 ] unsigned char 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  4    0[COMMON] unsigned char 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8578 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;Total ram usage:       26 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_efgtoa
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           
  8592                           ;psect for function ___fldiv
  8593  08AC                     ___fldiv:	
  8594                           
  8595                           ;incstack = 0
  8596                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8597  08AC  0877               	movf	___fldiv@b+3,w
  8598  08AD  3980               	andlw	128
  8599  08AE  00F8               	movwf	??___fldiv
  8600  08AF  0878               	movf	??___fldiv,w
  8601  08B0  0140               	movlb	0	; select bank0
  8602  08B1  00A4               	movwf	___fldiv@sign
  8603  08B2  3577               	lslf	___fldiv@b+3,w
  8604  08B3  00F8               	movwf	??___fldiv
  8605  08B4  0878               	movf	??___fldiv,w
  8606  08B5  00AB               	movwf	___fldiv@bexp
  8607  08B6  1BF6               	btfsc	___fldiv@b+2,7
  8608  08B7  142B               	bsf	___fldiv@bexp,0
  8609  08B8  082B               	movf	___fldiv@bexp,w
  8610  08B9  1903               	btfsc	3,2
  8611  08BA  28C9               	goto	i1l2813
  8612  08BB  0A2B               	incf	___fldiv@bexp,w
  8613  08BC  1D03               	btfss	3,2
  8614  08BD  28C6               	goto	i1l2809
  8615  08BE  3000               	movlw	0
  8616  08BF  00F7               	movwf	___fldiv@b+3
  8617  08C0  3000               	movlw	0
  8618  08C1  00F6               	movwf	___fldiv@b+2
  8619  08C2  3000               	movlw	0
  8620  08C3  00F5               	movwf	___fldiv@b+1
  8621  08C4  3000               	movlw	0
  8622  08C5  00F4               	movwf	___fldiv@b
  8623  08C6                     i1l2809:	
  8624  08C6  17F6               	bsf	___fldiv@b+2,7
  8625  08C7  01F7               	clrf	___fldiv@b+3
  8626  08C8  28D1               	goto	i1l2815
  8627  08C9                     i1l2813:	
  8628  08C9  3000               	movlw	0
  8629  08CA  00F7               	movwf	___fldiv@b+3
  8630  08CB  3000               	movlw	0
  8631  08CC  00F6               	movwf	___fldiv@b+2
  8632  08CD  3000               	movlw	0
  8633  08CE  00F5               	movwf	___fldiv@b+1
  8634  08CF  3000               	movlw	0
  8635  08D0  00F4               	movwf	___fldiv@b
  8636  08D1                     i1l2815:	
  8637  08D1  0873               	movf	___fldiv@a+3,w
  8638  08D2  3980               	andlw	128
  8639  08D3  00F8               	movwf	??___fldiv
  8640  08D4  0878               	movf	??___fldiv,w
  8641  08D5  06A4               	xorwf	___fldiv@sign,f
  8642  08D6  3573               	lslf	___fldiv@a+3,w
  8643  08D7  00F8               	movwf	??___fldiv
  8644  08D8  0878               	movf	??___fldiv,w
  8645  08D9  00AC               	movwf	___fldiv@aexp
  8646  08DA  1BF2               	btfsc	___fldiv@a+2,7
  8647  08DB  142C               	bsf	___fldiv@aexp,0
  8648  08DC  082C               	movf	___fldiv@aexp,w
  8649  08DD  1903               	btfsc	3,2
  8650  08DE  28ED               	goto	i1l2833
  8651  08DF  0A2C               	incf	___fldiv@aexp,w
  8652  08E0  1D03               	btfss	3,2
  8653  08E1  28EA               	goto	i1l2829
  8654  08E2  3000               	movlw	0
  8655  08E3  00F3               	movwf	___fldiv@a+3
  8656  08E4  3000               	movlw	0
  8657  08E5  00F2               	movwf	___fldiv@a+2
  8658  08E6  3000               	movlw	0
  8659  08E7  00F1               	movwf	___fldiv@a+1
  8660  08E8  3000               	movlw	0
  8661  08E9  00F0               	movwf	___fldiv@a
  8662  08EA                     i1l2829:	
  8663  08EA  17F2               	bsf	___fldiv@a+2,7
  8664  08EB  01F3               	clrf	___fldiv@a+3
  8665  08EC  28F5               	goto	i1l701
  8666  08ED                     i1l2833:	
  8667  08ED  3000               	movlw	0
  8668  08EE  00F3               	movwf	___fldiv@a+3
  8669  08EF  3000               	movlw	0
  8670  08F0  00F2               	movwf	___fldiv@a+2
  8671  08F1  3000               	movlw	0
  8672  08F2  00F1               	movwf	___fldiv@a+1
  8673  08F3  3000               	movlw	0
  8674  08F4  00F0               	movwf	___fldiv@a
  8675  08F5                     i1l701:	
  8676  08F5  0873               	movf	___fldiv@a+3,w
  8677  08F6  0472               	iorwf	___fldiv@a+2,w
  8678  08F7  0471               	iorwf	___fldiv@a+1,w
  8679  08F8  0470               	iorwf	___fldiv@a,w
  8680  08F9  1D03               	skipz
  8681  08FA  2914               	goto	i1l2843
  8682  08FB  3000               	movlw	0
  8683  08FC  00F7               	movwf	___fldiv@b+3
  8684  08FD  3000               	movlw	0
  8685  08FE  00F6               	movwf	___fldiv@b+2
  8686  08FF  3000               	movlw	0
  8687  0900  00F5               	movwf	___fldiv@b+1
  8688  0901  3000               	movlw	0
  8689  0902  00F4               	movwf	___fldiv@b
  8690  0903  3080               	movlw	128
  8691  0904  04F6               	iorwf	___fldiv@b+2,f
  8692  0905  307F               	movlw	127
  8693  0906  04F7               	iorwf	___fldiv@b+3,f
  8694  0907                     L12:	
  8695  0907  0824               	movf	___fldiv@sign,w
  8696  0908  00F8               	movwf	??___fldiv
  8697  0909  0878               	movf	??___fldiv,w
  8698  090A  04F7               	iorwf	___fldiv@b+3,f
  8699  090B  0877               	movf	___fldiv@b+3,w
  8700  090C  00F3               	movwf	?___fldiv+3
  8701  090D  0876               	movf	___fldiv@b+2,w
  8702  090E  00F2               	movwf	?___fldiv+2
  8703  090F  0875               	movf	___fldiv@b+1,w
  8704  0910  00F1               	movwf	?___fldiv+1
  8705  0911  0874               	movf	___fldiv@b,w
  8706  0912  00F0               	movwf	?___fldiv
  8707  0913  0008               	return
  8708  0914                     i1l2843:	
  8709  0914  082B               	movf	___fldiv@bexp,w
  8710  0915  1D03               	btfss	3,2
  8711  0916  2920               	goto	i1l2849
  8712  0917  3000               	movlw	0
  8713  0918  00F3               	movwf	?___fldiv+3
  8714  0919  3000               	movlw	0
  8715  091A  00F2               	movwf	?___fldiv+2
  8716  091B  3000               	movlw	0
  8717  091C  00F1               	movwf	?___fldiv+1
  8718  091D  3000               	movlw	0
  8719  091E  00F0               	movwf	?___fldiv
  8720  091F  0008               	return
  8721  0920                     i1l2849:	
  8722  0920  082B               	movf	___fldiv@bexp,w
  8723  0921  00F8               	movwf	??___fldiv
  8724  0922  01F9               	clrf	??___fldiv+1
  8725  0923  0879               	movf	??___fldiv+1,w
  8726  0924  00FB               	movwf	??___fldiv+3
  8727  0925  082C               	movf	___fldiv@aexp,w
  8728  0926  0278               	subwf	??___fldiv,w
  8729  0927  00FA               	movwf	??___fldiv+2
  8730  0928  1C03               	skipc
  8731  0929  03FB               	decf	??___fldiv+3,f
  8732  092A  087A               	movf	??___fldiv+2,w
  8733  092B  3E7F               	addlw	127
  8734  092C  00A5               	movwf	___fldiv@new_exp
  8735  092D  3000               	movlw	0
  8736  092E  3D7B               	addwfc	??___fldiv+3,w
  8737  092F  00A6               	movwf	___fldiv@new_exp+1
  8738  0930  0877               	movf	___fldiv@b+3,w
  8739  0931  00A3               	movwf	___fldiv@rem+3
  8740  0932  0876               	movf	___fldiv@b+2,w
  8741  0933  00A2               	movwf	___fldiv@rem+2
  8742  0934  0875               	movf	___fldiv@b+1,w
  8743  0935  00A1               	movwf	___fldiv@rem+1
  8744  0936  0874               	movf	___fldiv@b,w
  8745  0937  00A0               	movwf	___fldiv@rem
  8746  0938  3000               	movlw	0
  8747  0939  00F7               	movwf	___fldiv@b+3
  8748  093A  3000               	movlw	0
  8749  093B  00F6               	movwf	___fldiv@b+2
  8750  093C  3000               	movlw	0
  8751  093D  00F5               	movwf	___fldiv@b+1
  8752  093E  3000               	movlw	0
  8753  093F  00F4               	movwf	___fldiv@b
  8754  0940  3000               	movlw	0
  8755  0941  00AA               	movwf	___fldiv@grs+3
  8756  0942  3000               	movlw	0
  8757  0943  00A9               	movwf	___fldiv@grs+2
  8758  0944  3000               	movlw	0
  8759  0945  00A8               	movwf	___fldiv@grs+1
  8760  0946  3000               	movlw	0
  8761  0947  00A7               	movwf	___fldiv@grs
  8762  0948  01AC               	clrf	___fldiv@aexp
  8763  0949                     i1l2877:	
  8764  0949  301A               	movlw	26
  8765  094A  022C               	subwf	___fldiv@aexp,w
  8766  094B  1803               	btfsc	3,0
  8767  094C  2985               	goto	i1l2879
  8768  094D  082C               	movf	___fldiv@aexp,w
  8769  094E  1903               	btfsc	3,2
  8770  094F  2967               	goto	i1l2869
  8771  0950  3001               	movlw	1
  8772  0951                     u409_25:	
  8773  0951  35A0               	lslf	___fldiv@rem,f
  8774  0952  0DA1               	rlf	___fldiv@rem+1,f
  8775  0953  0DA2               	rlf	___fldiv@rem+2,f
  8776  0954  0DA3               	rlf	___fldiv@rem+3,f
  8777  0955  0B89               	decfsz	9,f
  8778  0956  2951               	goto	u409_25
  8779  0957  3001               	movlw	1
  8780  0958                     u410_25:	
  8781  0958  35F4               	lslf	___fldiv@b,f
  8782  0959  0DF5               	rlf	___fldiv@b+1,f
  8783  095A  0DF6               	rlf	___fldiv@b+2,f
  8784  095B  0DF7               	rlf	___fldiv@b+3,f
  8785  095C  0B89               	decfsz	9,f
  8786  095D  2958               	goto	u410_25
  8787  095E  1BAA               	btfsc	___fldiv@grs+3,7
  8788  095F  1474               	bsf	___fldiv@b,0
  8789  0960  3001               	movlw	1
  8790  0961                     u412_25:	
  8791  0961  35A7               	lslf	___fldiv@grs,f
  8792  0962  0DA8               	rlf	___fldiv@grs+1,f
  8793  0963  0DA9               	rlf	___fldiv@grs+2,f
  8794  0964  0DAA               	rlf	___fldiv@grs+3,f
  8795  0965  0B89               	decfsz	9,f
  8796  0966  2961               	goto	u412_25
  8797  0967                     i1l2869:	
  8798  0967  0873               	movf	___fldiv@a+3,w
  8799  0968  0223               	subwf	___fldiv@rem+3,w
  8800  0969  1D03               	skipz
  8801  096A  2975               	goto	u413_25
  8802  096B  0872               	movf	___fldiv@a+2,w
  8803  096C  0222               	subwf	___fldiv@rem+2,w
  8804  096D  1D03               	skipz
  8805  096E  2975               	goto	u413_25
  8806  096F  0871               	movf	___fldiv@a+1,w
  8807  0970  0221               	subwf	___fldiv@rem+1,w
  8808  0971  1D03               	skipz
  8809  0972  2975               	goto	u413_25
  8810  0973  0870               	movf	___fldiv@a,w
  8811  0974  0220               	subwf	___fldiv@rem,w
  8812  0975                     u413_25:	
  8813  0975  1C03               	skipc
  8814  0976  2980               	goto	i1l2875
  8815  0977  172A               	bsf	___fldiv@grs+3,6
  8816  0978  0870               	movf	___fldiv@a,w
  8817  0979  02A0               	subwf	___fldiv@rem,f
  8818  097A  0871               	movf	___fldiv@a+1,w
  8819  097B  3BA1               	subwfb	___fldiv@rem+1,f
  8820  097C  0872               	movf	___fldiv@a+2,w
  8821  097D  3BA2               	subwfb	___fldiv@rem+2,f
  8822  097E  0873               	movf	___fldiv@a+3,w
  8823  097F  3BA3               	subwfb	___fldiv@rem+3,f
  8824  0980                     i1l2875:	
  8825  0980  3001               	movlw	1
  8826  0981  00F8               	movwf	??___fldiv
  8827  0982  0878               	movf	??___fldiv,w
  8828  0983  07AC               	addwf	___fldiv@aexp,f
  8829  0984  2949               	goto	i1l2877
  8830  0985                     i1l2879:	
  8831  0985  0823               	movf	___fldiv@rem+3,w
  8832  0986  0422               	iorwf	___fldiv@rem+2,w
  8833  0987  0421               	iorwf	___fldiv@rem+1,w
  8834  0988  0420               	iorwf	___fldiv@rem,w
  8835  0989  1D03               	btfss	3,2
  8836  098A  1427               	bsf	___fldiv@grs,0
  8837  098B                     i1l2893:	
  8838  098B  1BF6               	btfsc	___fldiv@b+2,7
  8839  098C  29A2               	goto	i1l2895
  8840  098D  3001               	movlw	1
  8841  098E                     u416_25:	
  8842  098E  35F4               	lslf	___fldiv@b,f
  8843  098F  0DF5               	rlf	___fldiv@b+1,f
  8844  0990  0DF6               	rlf	___fldiv@b+2,f
  8845  0991  0DF7               	rlf	___fldiv@b+3,f
  8846  0992  0B89               	decfsz	9,f
  8847  0993  298E               	goto	u416_25
  8848  0994  1BAA               	btfsc	___fldiv@grs+3,7
  8849  0995  1474               	bsf	___fldiv@b,0
  8850  0996  3001               	movlw	1
  8851  0997                     u418_25:	
  8852  0997  35A7               	lslf	___fldiv@grs,f
  8853  0998  0DA8               	rlf	___fldiv@grs+1,f
  8854  0999  0DA9               	rlf	___fldiv@grs+2,f
  8855  099A  0DAA               	rlf	___fldiv@grs+3,f
  8856  099B  0B89               	decfsz	9,f
  8857  099C  2997               	goto	u418_25
  8858  099D  30FF               	movlw	255
  8859  099E  07A5               	addwf	___fldiv@new_exp,f
  8860  099F  30FF               	movlw	255
  8861  09A0  3DA6               	addwfc	___fldiv@new_exp+1,f
  8862  09A1  298B               	goto	i1l2893
  8863  09A2                     i1l2895:	
  8864  09A2  01AC               	clrf	___fldiv@aexp
  8865  09A3  1FAA               	btfss	___fldiv@grs+3,7
  8866  09A4  29BB               	goto	i1l2905
  8867  09A5  30FF               	movlw	255
  8868  09A6  0527               	andwf	___fldiv@grs,w
  8869  09A7  00F8               	movwf	??___fldiv
  8870  09A8  30FF               	movlw	255
  8871  09A9  0528               	andwf	___fldiv@grs+1,w
  8872  09AA  00F9               	movwf	??___fldiv+1
  8873  09AB  30FF               	movlw	255
  8874  09AC  0529               	andwf	___fldiv@grs+2,w
  8875  09AD  00FA               	movwf	??___fldiv+2
  8876  09AE  307F               	movlw	127
  8877  09AF  052A               	andwf	___fldiv@grs+3,w
  8878  09B0  00FB               	movwf	??___fldiv+3
  8879  09B1  087B               	movf	??___fldiv+3,w
  8880  09B2  047A               	iorwf	??___fldiv+2,w
  8881  09B3  0479               	iorwf	??___fldiv+1,w
  8882  09B4  0478               	iorwf	??___fldiv,w
  8883  09B5  1903               	skipnz
  8884  09B6  1874               	btfsc	___fldiv@b,0
  8885  09B7  29B9               	goto	i1l2901
  8886  09B8  29BB               	goto	i1l2905
  8887  09B9                     i1l2901:	
  8888  09B9  01AC               	clrf	___fldiv@aexp
  8889  09BA  0AAC               	incf	___fldiv@aexp,f
  8890  09BB                     i1l2905:	
  8891  09BB  082C               	movf	___fldiv@aexp,w
  8892  09BC  1903               	btfsc	3,2
  8893  09BD  29E4               	goto	i1l2915
  8894  09BE  3001               	movlw	1
  8895  09BF  07F4               	addwf	___fldiv@b,f
  8896  09C0  3000               	movlw	0
  8897  09C1  3DF5               	addwfc	___fldiv@b+1,f
  8898  09C2  3000               	movlw	0
  8899  09C3  3DF6               	addwfc	___fldiv@b+2,f
  8900  09C4  3000               	movlw	0
  8901  09C5  3DF7               	addwfc	___fldiv@b+3,f
  8902  09C6  1C77               	btfss	___fldiv@b+3,0
  8903  09C7  29E4               	goto	i1l2915
  8904  09C8  0874               	movf	___fldiv@b,w
  8905  09C9  00F8               	movwf	??___fldiv
  8906  09CA  0875               	movf	___fldiv@b+1,w
  8907  09CB  00F9               	movwf	??___fldiv+1
  8908  09CC  0876               	movf	___fldiv@b+2,w
  8909  09CD  00FA               	movwf	??___fldiv+2
  8910  09CE  0877               	movf	___fldiv@b+3,w
  8911  09CF  00FB               	movwf	??___fldiv+3
  8912  09D0  3001               	movlw	1
  8913  09D1  00FC               	movwf	??___fldiv+4
  8914  09D2                     u425_25:	
  8915  09D2  37FB               	asrf	??___fldiv+3,f
  8916  09D3  0CFA               	rrf	??___fldiv+2,f
  8917  09D4  0CF9               	rrf	??___fldiv+1,f
  8918  09D5  0CF8               	rrf	??___fldiv,f
  8919  09D6  0BFC               	decfsz	??___fldiv+4,f
  8920  09D7  29D2               	goto	u425_25
  8921  09D8  087B               	movf	??___fldiv+3,w
  8922  09D9  00F7               	movwf	___fldiv@b+3
  8923  09DA  087A               	movf	??___fldiv+2,w
  8924  09DB  00F6               	movwf	___fldiv@b+2
  8925  09DC  0879               	movf	??___fldiv+1,w
  8926  09DD  00F5               	movwf	___fldiv@b+1
  8927  09DE  0878               	movf	??___fldiv,w
  8928  09DF  00F4               	movwf	___fldiv@b
  8929  09E0  3001               	movlw	1
  8930  09E1  07A5               	addwf	___fldiv@new_exp,f
  8931  09E2  3000               	movlw	0
  8932  09E3  3DA6               	addwfc	___fldiv@new_exp+1,f
  8933  09E4                     i1l2915:	
  8934  09E4  0826               	movf	___fldiv@new_exp+1,w
  8935  09E5  3A80               	xorlw	128
  8936  09E6  00F8               	movwf	??___fldiv
  8937  09E7  3080               	movlw	128
  8938  09E8  0278               	subwf	??___fldiv,w
  8939  09E9  1D03               	skipz
  8940  09EA  29ED               	goto	u426_25
  8941  09EB  30FF               	movlw	255
  8942  09EC  0225               	subwf	___fldiv@new_exp,w
  8943  09ED                     u426_25:	
  8944  09ED  1C03               	skipc
  8945  09EE  29FC               	goto	i1l722
  8946  09EF  30FF               	movlw	255
  8947  09F0  0140               	movlb	0	; select bank0
  8948  09F1  00A5               	movwf	___fldiv@new_exp
  8949  09F2  3000               	movlw	0
  8950  09F3  00A6               	movwf	___fldiv@new_exp+1
  8951  09F4  3000               	movlw	0
  8952  09F5  00F7               	movwf	___fldiv@b+3
  8953  09F6  3000               	movlw	0
  8954  09F7  00F6               	movwf	___fldiv@b+2
  8955  09F8  3000               	movlw	0
  8956  09F9  00F5               	movwf	___fldiv@b+1
  8957  09FA  3000               	movlw	0
  8958  09FB  00F4               	movwf	___fldiv@b
  8959  09FC                     i1l722:	
  8960  09FC  0140               	movlb	0	; select bank0
  8961  09FD  0826               	movf	___fldiv@new_exp+1,w
  8962  09FE  3A80               	xorlw	128
  8963  09FF  00F8               	movwf	??___fldiv
  8964  0A00  3080               	movlw	128
  8965  0A01  0278               	subwf	??___fldiv,w
  8966  0A02  1D03               	skipz
  8967  0A03  2A06               	goto	u427_25
  8968  0A04  3001               	movlw	1
  8969  0A05  0225               	subwf	___fldiv@new_exp,w
  8970  0A06                     u427_25:	
  8971  0A06  1803               	skipnc
  8972  0A07  2A14               	goto	i1l723
  8973  0A08  0140               	movlb	0	; select bank0
  8974  0A09  01A5               	clrf	___fldiv@new_exp
  8975  0A0A  01A6               	clrf	___fldiv@new_exp+1
  8976  0A0B  3000               	movlw	0
  8977  0A0C  00F7               	movwf	___fldiv@b+3
  8978  0A0D  3000               	movlw	0
  8979  0A0E  00F6               	movwf	___fldiv@b+2
  8980  0A0F  3000               	movlw	0
  8981  0A10  00F5               	movwf	___fldiv@b+1
  8982  0A11  3000               	movlw	0
  8983  0A12  00F4               	movwf	___fldiv@b
  8984  0A13  01A4               	clrf	___fldiv@sign
  8985  0A14                     i1l723:	
  8986  0A14  0140               	movlb	0	; select bank0
  8987  0A15  0825               	movf	___fldiv@new_exp,w
  8988  0A16  00F8               	movwf	??___fldiv
  8989  0A17  0878               	movf	??___fldiv,w
  8990  0A18  00AB               	movwf	___fldiv@bexp
  8991  0A19  1C2B               	btfss	___fldiv@bexp,0
  8992  0A1A  2A1D               	goto	i1l2929
  8993  0A1B  17F6               	bsf	___fldiv@b+2,7
  8994  0A1C  2A21               	goto	i1l725
  8995  0A1D                     i1l2929:	
  8996  0A1D  307F               	movlw	127
  8997  0A1E  00F8               	movwf	??___fldiv
  8998  0A1F  0878               	movf	??___fldiv,w
  8999  0A20  05F6               	andwf	___fldiv@b+2,f
  9000  0A21                     i1l725:	
  9001  0A21  362B               	lsrf	___fldiv@bexp,w
  9002  0A22  00F8               	movwf	??___fldiv
  9003  0A23  0878               	movf	??___fldiv,w
  9004  0A24  00F7               	movwf	___fldiv@b+3
  9005  0A25  2907               	goto	L12
  9006  0A26                     __end_of___fldiv:	
  9007                           
  9008                           	psect	text30
  9009  141F                     __ptext30:	
  9010 ;; *************** function ___awmod *****************
  9011 ;; Defined at:
  9012 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  divisor         2    0[COMMON] int 
  9015 ;;  dividend        2    2[COMMON] int 
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;  sign            1    6[COMMON] unsigned char 
  9018 ;;  counter         1    5[COMMON] unsigned char 
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  2    0[COMMON] int 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9030 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9031 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9032 ;;Total ram usage:        7 bytes
  9033 ;; Hardware stack levels used:    1
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_efgtoa
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           
  9042                           ;psect for function ___awmod
  9043  141F                     ___awmod:	
  9044                           
  9045                           ;incstack = 0
  9046                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9047  141F  01F6               	clrf	___awmod@sign
  9048  1420  1FF3               	btfss	___awmod@dividend+1,7
  9049  1421  2C29               	goto	i1l2683
  9050  1422  09F2               	comf	___awmod@dividend,f
  9051  1423  09F3               	comf	___awmod@dividend+1,f
  9052  1424  0AF2               	incf	___awmod@dividend,f
  9053  1425  1903               	skipnz
  9054  1426  0AF3               	incf	___awmod@dividend+1,f
  9055  1427  01F6               	clrf	___awmod@sign
  9056  1428  0AF6               	incf	___awmod@sign,f
  9057  1429                     i1l2683:	
  9058  1429  1FF1               	btfss	___awmod@divisor+1,7
  9059  142A  2C30               	goto	i1l2687
  9060  142B  09F0               	comf	___awmod@divisor,f
  9061  142C  09F1               	comf	___awmod@divisor+1,f
  9062  142D  0AF0               	incf	___awmod@divisor,f
  9063  142E  1903               	skipnz
  9064  142F  0AF1               	incf	___awmod@divisor+1,f
  9065  1430                     i1l2687:	
  9066  1430  0870               	movf	___awmod@divisor,w
  9067  1431  0471               	iorwf	___awmod@divisor+1,w
  9068  1432  1903               	btfsc	3,2
  9069  1433  2C57               	goto	i1l2705
  9070  1434  01F5               	clrf	___awmod@counter
  9071  1435  0AF5               	incf	___awmod@counter,f
  9072  1436                     i1l2695:	
  9073  1436  1BF1               	btfsc	___awmod@divisor+1,7
  9074  1437  2C42               	goto	i1l2697
  9075  1438  3001               	movlw	1
  9076  1439                     u375_25:	
  9077  1439  35F0               	lslf	___awmod@divisor,f
  9078  143A  0DF1               	rlf	___awmod@divisor+1,f
  9079  143B  0B89               	decfsz	9,f
  9080  143C  2C39               	goto	u375_25
  9081  143D  3001               	movlw	1
  9082  143E  00F4               	movwf	??___awmod
  9083  143F  0874               	movf	??___awmod,w
  9084  1440  07F5               	addwf	___awmod@counter,f
  9085  1441  2C36               	goto	i1l2695
  9086  1442                     i1l2697:	
  9087  1442  0871               	movf	___awmod@divisor+1,w
  9088  1443  0273               	subwf	___awmod@dividend+1,w
  9089  1444  1D03               	skipz
  9090  1445  2C48               	goto	u377_25
  9091  1446  0870               	movf	___awmod@divisor,w
  9092  1447  0272               	subwf	___awmod@dividend,w
  9093  1448                     u377_25:	
  9094  1448  1C03               	skipc
  9095  1449  2C4E               	goto	i1l2701
  9096  144A  0870               	movf	___awmod@divisor,w
  9097  144B  02F2               	subwf	___awmod@dividend,f
  9098  144C  0871               	movf	___awmod@divisor+1,w
  9099  144D  3BF3               	subwfb	___awmod@dividend+1,f
  9100  144E                     i1l2701:	
  9101  144E  3001               	movlw	1
  9102  144F                     u378_25:	
  9103  144F  36F1               	lsrf	___awmod@divisor+1,f
  9104  1450  0CF0               	rrf	___awmod@divisor,f
  9105  1451  0B89               	decfsz	9,f
  9106  1452  2C4F               	goto	u378_25
  9107  1453  3001               	movlw	1
  9108  1454  02F5               	subwf	___awmod@counter,f
  9109  1455  1D03               	btfss	3,2
  9110  1456  2C42               	goto	i1l2697
  9111  1457                     i1l2705:	
  9112  1457  0876               	movf	___awmod@sign,w
  9113  1458  1903               	btfsc	3,2
  9114  1459  2C5F               	goto	i1l2709
  9115  145A  09F2               	comf	___awmod@dividend,f
  9116  145B  09F3               	comf	___awmod@dividend+1,f
  9117  145C  0AF2               	incf	___awmod@dividend,f
  9118  145D  1903               	skipnz
  9119  145E  0AF3               	incf	___awmod@dividend+1,f
  9120  145F                     i1l2709:	
  9121  145F  0873               	movf	___awmod@dividend+1,w
  9122  1460  00F1               	movwf	?___awmod+1
  9123  1461  0872               	movf	___awmod@dividend,w
  9124  1462  00F0               	movwf	?___awmod
  9125  1463  0008               	return
  9126  1464                     __end_of___awmod:	
  9127                           
  9128                           	psect	text31
  9129  154A                     __ptext31:	
  9130 ;; *************** function ___awdiv *****************
  9131 ;; Defined at:
  9132 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  divisor         2    0[COMMON] int 
  9135 ;;  dividend        2    2[COMMON] int 
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;  quotient        2    7[COMMON] int 
  9138 ;;  sign            1    6[COMMON] unsigned char 
  9139 ;;  counter         1    5[COMMON] unsigned char 
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  2    0[COMMON] int 
  9142 ;; Registers used:
  9143 ;;		wreg, status,2, status,0
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;Total ram usage:        9 bytes
  9154 ;; Hardware stack levels used:    1
  9155 ;; This function calls:
  9156 ;;		Nothing
  9157 ;; This function is called by:
  9158 ;;		_efgtoa
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           
  9163                           ;psect for function ___awdiv
  9164  154A                     ___awdiv:	
  9165                           
  9166                           ;incstack = 0
  9167                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9168  154A  01F6               	clrf	___awdiv@sign
  9169  154B  1FF1               	btfss	___awdiv@divisor+1,7
  9170  154C  2D54               	goto	i1l2639
  9171  154D  09F0               	comf	___awdiv@divisor,f
  9172  154E  09F1               	comf	___awdiv@divisor+1,f
  9173  154F  0AF0               	incf	___awdiv@divisor,f
  9174  1550  1903               	skipnz
  9175  1551  0AF1               	incf	___awdiv@divisor+1,f
  9176  1552  01F6               	clrf	___awdiv@sign
  9177  1553  0AF6               	incf	___awdiv@sign,f
  9178  1554                     i1l2639:	
  9179  1554  1FF3               	btfss	___awdiv@dividend+1,7
  9180  1555  2D5F               	goto	i1l2645
  9181  1556  09F2               	comf	___awdiv@dividend,f
  9182  1557  09F3               	comf	___awdiv@dividend+1,f
  9183  1558  0AF2               	incf	___awdiv@dividend,f
  9184  1559  1903               	skipnz
  9185  155A  0AF3               	incf	___awdiv@dividend+1,f
  9186  155B  3001               	movlw	1
  9187  155C  00F4               	movwf	??___awdiv
  9188  155D  0874               	movf	??___awdiv,w
  9189  155E  06F6               	xorwf	___awdiv@sign,f
  9190  155F                     i1l2645:	
  9191  155F  01F7               	clrf	___awdiv@quotient
  9192  1560  01F8               	clrf	___awdiv@quotient+1
  9193  1561  0870               	movf	___awdiv@divisor,w
  9194  1562  0471               	iorwf	___awdiv@divisor+1,w
  9195  1563  1903               	btfsc	3,2
  9196  1564  2D8E               	goto	i1l2667
  9197  1565  01F5               	clrf	___awdiv@counter
  9198  1566  0AF5               	incf	___awdiv@counter,f
  9199  1567                     i1l2655:	
  9200  1567  1BF1               	btfsc	___awdiv@divisor+1,7
  9201  1568  2D73               	goto	i1l2657
  9202  1569  3001               	movlw	1
  9203  156A                     u365_25:	
  9204  156A  35F0               	lslf	___awdiv@divisor,f
  9205  156B  0DF1               	rlf	___awdiv@divisor+1,f
  9206  156C  0B89               	decfsz	9,f
  9207  156D  2D6A               	goto	u365_25
  9208  156E  3001               	movlw	1
  9209  156F  00F4               	movwf	??___awdiv
  9210  1570  0874               	movf	??___awdiv,w
  9211  1571  07F5               	addwf	___awdiv@counter,f
  9212  1572  2D67               	goto	i1l2655
  9213  1573                     i1l2657:	
  9214  1573  3001               	movlw	1
  9215  1574                     u367_25:	
  9216  1574  35F7               	lslf	___awdiv@quotient,f
  9217  1575  0DF8               	rlf	___awdiv@quotient+1,f
  9218  1576  0B89               	decfsz	9,f
  9219  1577  2D74               	goto	u367_25
  9220  1578  0871               	movf	___awdiv@divisor+1,w
  9221  1579  0273               	subwf	___awdiv@dividend+1,w
  9222  157A  1D03               	skipz
  9223  157B  2D7E               	goto	u368_25
  9224  157C  0870               	movf	___awdiv@divisor,w
  9225  157D  0272               	subwf	___awdiv@dividend,w
  9226  157E                     u368_25:	
  9227  157E  1C03               	skipc
  9228  157F  2D85               	goto	i1l2663
  9229  1580  0870               	movf	___awdiv@divisor,w
  9230  1581  02F2               	subwf	___awdiv@dividend,f
  9231  1582  0871               	movf	___awdiv@divisor+1,w
  9232  1583  3BF3               	subwfb	___awdiv@dividend+1,f
  9233  1584  1477               	bsf	___awdiv@quotient,0
  9234  1585                     i1l2663:	
  9235  1585  3001               	movlw	1
  9236  1586                     u369_25:	
  9237  1586  36F1               	lsrf	___awdiv@divisor+1,f
  9238  1587  0CF0               	rrf	___awdiv@divisor,f
  9239  1588  0B89               	decfsz	9,f
  9240  1589  2D86               	goto	u369_25
  9241  158A  3001               	movlw	1
  9242  158B  02F5               	subwf	___awdiv@counter,f
  9243  158C  1D03               	btfss	3,2
  9244  158D  2D73               	goto	i1l2657
  9245  158E                     i1l2667:	
  9246  158E  0876               	movf	___awdiv@sign,w
  9247  158F  1903               	btfsc	3,2
  9248  1590  2D96               	goto	i1l2671
  9249  1591  09F7               	comf	___awdiv@quotient,f
  9250  1592  09F8               	comf	___awdiv@quotient+1,f
  9251  1593  0AF7               	incf	___awdiv@quotient,f
  9252  1594  1903               	skipnz
  9253  1595  0AF8               	incf	___awdiv@quotient+1,f
  9254  1596                     i1l2671:	
  9255  1596  0878               	movf	___awdiv@quotient+1,w
  9256  1597  00F1               	movwf	?___awdiv+1
  9257  1598  0877               	movf	___awdiv@quotient,w
  9258  1599  00F0               	movwf	?___awdiv
  9259  159A  0008               	return
  9260  159B                     __end_of___awdiv:	
  9261                           
  9262                           	psect	text32
  9263  176B                     __ptext32:	
  9264 ;; *************** function ___xxtofl *****************
  9265 ;; Defined at:
  9266 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  sign            1    wreg     unsigned char 
  9269 ;;  val             4    0[COMMON] long 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  sign            1    8[COMMON] unsigned char 
  9272 ;;  arg             4   10[COMMON] unsigned long 
  9273 ;;  exp             1    9[COMMON] unsigned char 
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  4    0[COMMON] unsigned char 
  9276 ;; Registers used:
  9277 ;;		wreg, status,2, status,0
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;Total ram usage:       14 bytes
  9288 ;; Hardware stack levels used:    1
  9289 ;; This function calls:
  9290 ;;		Nothing
  9291 ;; This function is called by:
  9292 ;;		_ISR
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           
  9297                           ;psect for function ___xxtofl
  9298  176B                     ___xxtofl:	
  9299                           
  9300                           ;incstack = 0
  9301                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9302                           ;___xxtofl@sign stored from wreg
  9303  176B  00F8               	movwf	___xxtofl@sign
  9304  176C  0878               	movf	___xxtofl@sign,w
  9305  176D  1D03               	btfss	3,2
  9306  176E  1FF3               	btfss	___xxtofl@val+3,7
  9307  176F  2F80               	goto	i1l3617
  9308  1770  0970               	comf	___xxtofl@val,w
  9309  1771  00FA               	movwf	___xxtofl@arg
  9310  1772  0971               	comf	___xxtofl@val+1,w
  9311  1773  00FB               	movwf	___xxtofl@arg+1
  9312  1774  0972               	comf	___xxtofl@val+2,w
  9313  1775  00FC               	movwf	___xxtofl@arg+2
  9314  1776  0973               	comf	___xxtofl@val+3,w
  9315  1777  00FD               	movwf	___xxtofl@arg+3
  9316  1778  0AFA               	incf	___xxtofl@arg,f
  9317  1779  1903               	skipnz
  9318  177A  0AFB               	incf	___xxtofl@arg+1,f
  9319  177B  1903               	skipnz
  9320  177C  0AFC               	incf	___xxtofl@arg+2,f
  9321  177D  1903               	skipnz
  9322  177E  0AFD               	incf	___xxtofl@arg+3,f
  9323  177F  2F88               	goto	i1l779
  9324  1780                     i1l3617:	
  9325  1780  0873               	movf	___xxtofl@val+3,w
  9326  1781  00FD               	movwf	___xxtofl@arg+3
  9327  1782  0872               	movf	___xxtofl@val+2,w
  9328  1783  00FC               	movwf	___xxtofl@arg+2
  9329  1784  0871               	movf	___xxtofl@val+1,w
  9330  1785  00FB               	movwf	___xxtofl@arg+1
  9331  1786  0870               	movf	___xxtofl@val,w
  9332  1787  00FA               	movwf	___xxtofl@arg
  9333  1788                     i1l779:	
  9334  1788  0873               	movf	___xxtofl@val+3,w
  9335  1789  0472               	iorwf	___xxtofl@val+2,w
  9336  178A  0471               	iorwf	___xxtofl@val+1,w
  9337  178B  0470               	iorwf	___xxtofl@val,w
  9338  178C  1D03               	skipz
  9339  178D  2F97               	goto	i1l3623
  9340  178E  3000               	movlw	0
  9341  178F  00F3               	movwf	?___xxtofl+3
  9342  1790  3000               	movlw	0
  9343  1791  00F2               	movwf	?___xxtofl+2
  9344  1792  3000               	movlw	0
  9345  1793  00F1               	movwf	?___xxtofl+1
  9346  1794  3000               	movlw	0
  9347  1795  00F0               	movwf	?___xxtofl
  9348  1796  0008               	return
  9349  1797                     i1l3623:	
  9350  1797  3096               	movlw	150
  9351  1798  00F4               	movwf	??___xxtofl
  9352  1799  0874               	movf	??___xxtofl,w
  9353  179A  00F9               	movwf	___xxtofl@exp
  9354  179B                     i1l3627:	
  9355  179B  30FE               	movlw	254
  9356  179C  057D               	andwf	___xxtofl@arg+3,w
  9357  179D  1903               	btfsc	3,2
  9358  179E  2FBE               	goto	i1l785
  9359  179F  3001               	movlw	1
  9360  17A0  00F4               	movwf	??___xxtofl
  9361  17A1  0874               	movf	??___xxtofl,w
  9362  17A2  07F9               	addwf	___xxtofl@exp,f
  9363  17A3  3001               	movlw	1
  9364  17A4                     u546_25:	
  9365  17A4  36FD               	lsrf	___xxtofl@arg+3,f
  9366  17A5  0CFC               	rrf	___xxtofl@arg+2,f
  9367  17A6  0CFB               	rrf	___xxtofl@arg+1,f
  9368  17A7  0CFA               	rrf	___xxtofl@arg,f
  9369  17A8  0B89               	decfsz	9,f
  9370  17A9  2FA4               	goto	u546_25
  9371  17AA  2F9B               	goto	i1l3627
  9372  17AB                     i1l3629:	
  9373  17AB  3001               	movlw	1
  9374  17AC  00F4               	movwf	??___xxtofl
  9375  17AD  0874               	movf	??___xxtofl,w
  9376  17AE  07F9               	addwf	___xxtofl@exp,f
  9377  17AF  3001               	movlw	1
  9378  17B0  07FA               	addwf	___xxtofl@arg,f
  9379  17B1  3000               	movlw	0
  9380  17B2  3DFB               	addwfc	___xxtofl@arg+1,f
  9381  17B3  3000               	movlw	0
  9382  17B4  3DFC               	addwfc	___xxtofl@arg+2,f
  9383  17B5  3000               	movlw	0
  9384  17B6  3DFD               	addwfc	___xxtofl@arg+3,f
  9385  17B7  3001               	movlw	1
  9386  17B8                     u548_25:	
  9387  17B8  36FD               	lsrf	___xxtofl@arg+3,f
  9388  17B9  0CFC               	rrf	___xxtofl@arg+2,f
  9389  17BA  0CFB               	rrf	___xxtofl@arg+1,f
  9390  17BB  0CFA               	rrf	___xxtofl@arg,f
  9391  17BC  0B89               	decfsz	9,f
  9392  17BD  2FB8               	goto	u548_25
  9393  17BE                     i1l785:	
  9394  17BE  30FF               	movlw	255
  9395  17BF  057D               	andwf	___xxtofl@arg+3,w
  9396  17C0  1903               	btfsc	3,2
  9397  17C1  2FD0               	goto	i1l3637
  9398  17C2  2FAB               	goto	i1l3629
  9399  17C3                     i1l3639:	
  9400  17C3  3002               	movlw	2
  9401  17C4  0279               	subwf	___xxtofl@exp,w
  9402  17C5  1C03               	btfss	3,0
  9403  17C6  2FD2               	goto	i1l792
  9404  17C7  3001               	movlw	1
  9405  17C8  02F9               	subwf	___xxtofl@exp,f
  9406  17C9  3001               	movlw	1
  9407  17CA                     u550_25:	
  9408  17CA  35FA               	lslf	___xxtofl@arg,f
  9409  17CB  0DFB               	rlf	___xxtofl@arg+1,f
  9410  17CC  0DFC               	rlf	___xxtofl@arg+2,f
  9411  17CD  0DFD               	rlf	___xxtofl@arg+3,f
  9412  17CE  0B89               	decfsz	9,f
  9413  17CF  2FCA               	goto	u550_25
  9414  17D0                     i1l3637:	
  9415  17D0  1FFC               	btfss	___xxtofl@arg+2,7
  9416  17D1  2FC3               	goto	i1l3639
  9417  17D2                     i1l792:	
  9418  17D2  1879               	btfsc	___xxtofl@exp,0
  9419  17D3  2FDC               	goto	i1l793
  9420  17D4  30FF               	movlw	255
  9421  17D5  05FA               	andwf	___xxtofl@arg,f
  9422  17D6  30FF               	movlw	255
  9423  17D7  05FB               	andwf	___xxtofl@arg+1,f
  9424  17D8  307F               	movlw	127
  9425  17D9  05FC               	andwf	___xxtofl@arg+2,f
  9426  17DA  30FF               	movlw	255
  9427  17DB  05FD               	andwf	___xxtofl@arg+3,f
  9428  17DC                     i1l793:	
  9429  17DC  1003               	clrc
  9430  17DD  0CF9               	rrf	___xxtofl@exp,f
  9431  17DE  0879               	movf	___xxtofl@exp,w
  9432  17DF  00F4               	movwf	??___xxtofl
  9433  17E0  01F5               	clrf	??___xxtofl+1
  9434  17E1  01F6               	clrf	??___xxtofl+2
  9435  17E2  01F7               	clrf	??___xxtofl+3
  9436  17E3  3018               	movlw	24
  9437  17E4                     u554_25:	
  9438  17E4  35F4               	lslf	??___xxtofl,f
  9439  17E5  0DF5               	rlf	??___xxtofl+1,f
  9440  17E6  0DF6               	rlf	??___xxtofl+2,f
  9441  17E7  0DF7               	rlf	??___xxtofl+3,f
  9442  17E8  0B89               	decfsz	9,f
  9443  17E9  2FE4               	goto	u554_25
  9444  17EA  0874               	movf	??___xxtofl,w
  9445  17EB  04FA               	iorwf	___xxtofl@arg,f
  9446  17EC  0875               	movf	??___xxtofl+1,w
  9447  17ED  04FB               	iorwf	___xxtofl@arg+1,f
  9448  17EE  0876               	movf	??___xxtofl+2,w
  9449  17EF  04FC               	iorwf	___xxtofl@arg+2,f
  9450  17F0  0877               	movf	??___xxtofl+3,w
  9451  17F1  04FD               	iorwf	___xxtofl@arg+3,f
  9452  17F2  0878               	movf	___xxtofl@sign,w
  9453  17F3  1D03               	btfss	3,2
  9454  17F4  1FF3               	btfss	___xxtofl@val+3,7
  9455  17F5  2FF7               	goto	i1l3651
  9456  17F6  17FD               	bsf	___xxtofl@arg+3,7
  9457  17F7                     i1l3651:	
  9458  17F7  087D               	movf	___xxtofl@arg+3,w
  9459  17F8  00F3               	movwf	?___xxtofl+3
  9460  17F9  087C               	movf	___xxtofl@arg+2,w
  9461  17FA  00F2               	movwf	?___xxtofl+2
  9462  17FB  087B               	movf	___xxtofl@arg+1,w
  9463  17FC  00F1               	movwf	?___xxtofl+1
  9464  17FD  087A               	movf	___xxtofl@arg,w
  9465  17FE  00F0               	movwf	?___xxtofl
  9466  17FF  0008               	return
  9467  1800                     __end_of___xxtofl:	
  9468                           
  9469                           	psect	text33
  9470  12B2                     __ptext33:	
  9471 ;; *************** function _ADC_read *****************
  9472 ;; Defined at:
  9473 ;;		line 47 in file "ADC_funcs.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;		None
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;		None
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  2    0[COMMON] unsigned int 
  9480 ;; Registers used:
  9481 ;;		wreg
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9487 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9490 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9491 ;;Total ram usage:        2 bytes
  9492 ;; Hardware stack levels used:    1
  9493 ;; This function calls:
  9494 ;;		Nothing
  9495 ;; This function is called by:
  9496 ;;		_ISR
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           
  9501                           ;psect for function _ADC_read
  9502  12B2                     _ADC_read:	
  9503  12B2                     i1l76:	
  9504                           ;ADC_funcs.c: 49:   while(ADCON0bits.GOnDONE == 1);
  9505                           
  9506                           ;incstack = 0
  9507                           ; Regs used in _ADC_read: [wreg]
  9508                           
  9509  12B2  0141               	movlb	1	; select bank1
  9510  12B3  189D               	btfsc	29,1	;volatile
  9511  12B4  2AB2               	goto	i1l76
  9512                           
  9513                           ;ADC_funcs.c: 50:   return ( (ADRESH<<8) + ADRESL);
  9514  12B5  081C               	movf	28,w	;volatile
  9515  12B6  00F1               	movwf	?_ADC_read+1
  9516  12B7  081B               	movf	27,w	;volatile
  9517  12B8  00F0               	movwf	?_ADC_read
  9518  12B9  0008               	return
  9519  12BA                     __end_of_ADC_read:	
  9520  007E                     btemp	set	126	;btemp
  9521  007E                     int$flags	set	126
  9522  007E                     wtemp0	set	126


Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         96
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     71      79
    BANK2            80     37      45
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S767_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_1(CODE[7]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), ISR@adc_out(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    ADC_init@pin	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___xxtofl
    _vfpfcnvrt->_tolower
    _efgtoa->_pad
    _efgtoa->_tolower
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _floorf->___fldiv
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_printf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_init_UART
    _init_UART->___aldiv

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     985
                           _ADC_init
                          _init_UART
 ---------------------------------------------------------------------------------
 (1) _init_UART                                           22    18      4     618
                                             15 BANK2     22    18      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 BANK2     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             8     6      2     367
                                              0 BANK2      8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  8     8      0   29037
                                             63 BANK1      8     8      0
                           _ADC_read
                            ___flmul
                           ___xxtofl
                             _printf
                         _readSerial
 ---------------------------------------------------------------------------------
 (4) _readSerial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _printf                                              10     4      6   25414
                                             75 BANK0      4     4      0
                                             57 BANK1      6     0      6
                         _readSerial (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     5      3   25202
                                             67 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           42    40      2   24864
                                             47 BANK0     20    18      2
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              66    61      5   21200
                                             38 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2     944
                                              6 COMMON     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (8) _pad                                                  9     6      3    2870
                                             13 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                8     7      1    1105
                                              9 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     790
                                              1 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2637
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    3177
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     790
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             26    18      8    1881
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (4) _ADC_read                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _init_UART
     ___aldiv

 _ISR (ROOT)
   _ADC_read
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___xxtofl
   _printf
     _readSerial (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isupper
         _strncmp
         _tolower
           _isupper
   _readSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     129       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     47      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     25      2D      10       56.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     129      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jun 16 06:57:53 2019

           ___fldiv@aexp 002C             ___fldiv@bexp 002B             ___fldiv@sign 0024  
            __CFG_CP$OFF 0000                       l30 1316             ___awdiv@sign 0076  
    __Umul8_16@word_mpld 0076              __CFG_LVP$ON 0000                      l409 16FA  
                    _ISR 0004                      _pad 14FA             ___awmod@sign 0076  
           __CFG_BORV$LO 0000                      wreg 0009             ___flmul@aexp 0032  
           ___flmul@bexp 0033              _tolower$827 007C             ___flmul@sign 002D  
           ___flmul@temp 0038             ___flmul@prod 0034            __CFG_BBEN$OFF 0000  
                   ?_ISR 0070             __CFG_ZCD$OFF 0000             ___fltol@exp1 007A  
                   l3521 1754                     l3507 171B                     l3525 1762  
                   l3517 1749                     l3509 1729                     ?_pad 0024  
                   l3583 0847                     l3579 082E                     l3595 0882  
                   l3499 170B                     l3597 0896                     l3589 0861  
                   l3697 088B                     STR_1 1800                     STR_2 181A  
                   STR_3 1807                     STR_4 180F                     STR_7 180B  
                   STR_8 1813                     u5305 174A                     _PEIE 005E  
                   u5404 0867                     u5405 0866                     u5414 0874  
                   u5415 0873                     i1l25 0060                     u5425 0899  
                   u5265 171E                     u5345 15AD                     u5355 15C4  
                   u5364 0833                     u5365 0832                     u5285 172A  
                   u5374 0840                     u5375 083F                     u5295 173E  
                   u5384 084D                     u5385 084C                     u5394 085A  
                   u5395 0859                     i1l76 12B2                     u5597 08A6  
          __CFG_FCMEN$ON 0000                     _dbuf 01A0                     _main 12FE  
                   _prec 00EB                     _nout 00E7                     pad@i 0027  
                   pad@p 0025                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     pad@w 0029                     btemp 007E  
          __CFG_BOREN$ON 0000            ___fpclassifyf 15F5                     start 0062  
       __end_of_ADC_init 08AC         __end_of_ADC_read 12BA          ___fldiv@new_exp 0025  
          __CFG_CSWEN$ON 0000            __CFG_MCLRE$ON 0000            ISR@decimalADC 00E1  
          ADC_init@block 0124                    ??_ISR 00DF                    ??_pad 007D  
          ___fltol@sign1 0079          __end_of___aldiv 176B          __end_of___fladd 0DD4  
                  ?_main 0070          __end_of___fldiv 0A26          __end_of___awdiv 159B  
        __end_of___flneg 080D                    STR_11 1817                    STR_13 1817  
        __end_of___awmod 1464          __end_of___flmul 1000          __end_of___flsub 1355  
        __end_of___fltol 07F1          ___awdiv@divisor 0070                    _RC1IE 38CD  
                  i1l115 07F8                    i1l222 1512                    i1l225 1532  
                  i1l226 153E                    i1l260 02A4                    i1l261 0291  
                  i1l271 02DE                    i1l513 147E                    i1l514 1498  
                  i1l522 1688                    i1l701 08F5                    i1l525 16D6  
                  i1l545 07D5                    i1l289 047C                    i1l722 09FC  
                  i1l723 0A14                    i1l651 0CAE                    i1l725 0A21  
                  i1l645 0C38                    i1l815 0783                    i1l753 0FF3  
                  i1l649 0CCC                    i1l666 0D52                    i1l687 0DCB  
                  i1l679 0DB2                    i1l792 17D2                    i1l793 17DC  
                  i1l785 17BE                    i1l779 1788                    i1l889 1327  
        ___awdiv@counter 0075             vfpfcnvrt@fmt 004F                    _SPBRG 011B  
                  _TRISA 0012                    _TRISB 0013                    _TRISC 0014  
                  _TXREG 011A                    _TXSTA 011E            __CFG_WRTB$OFF 0000  
          __CFG_WRTC$OFF 0000                    _flags 00ED                    _fputc 13EA  
                  _fputs 1395                    pad@fp 002B                    _width 00E9  
                  _putch 07F1          __end_of_isupper 12E6                    status 0003  
                  wtemp0 007E           ?___fpclassifyf 0070          __end_of_tolower 1395  
        __end_of_strncmp 14FA          __initialization 0064             __end_of_main 1317  
         __CFG_SAFEN$OFF 0000           ADC_init@pinNum 0126                   ??_main 0145  
                 _ADCON0 009D                   _ADCON1 009E                   ?_fputc 0071  
                 ?_fputs 0079                   _ADRESH 009C                   _ADRESL 009B  
     init_UART@baud_rate 012F         ___awdiv@dividend 0072                   _ANSELA 1F38  
                 ?_putch 0070                   _ANSELB 1F43                   _ANSELC 1F4E  
                 _RC1REG 0119                   _RC1STA 011D                   _RC5PPS 1F25  
                 i1l3031 0F5B                   i1l3033 0F72                   i1l2305 13F3  
                 i1l3105 00EE                   i1l3043 0F8B                   i1l3115 0120  
                 i1l3123 0145                   i1l3053 0FB4                   i1l2501 0D85  
                 i1l2421 0CB7                   i1l2413 0C7E                   i1l2309 1416  
                 i1l2325 12EB                   i1l3301 05CC                   i1l3221 03D8  
                 i1l3205 02FF                   i1l3133 0178                   i1l3141 019D  
                 i1l3063 0FE0                   i1l3039 0F89                   i1l2423 0CB9  
                 i1l2431 0CC8                   i1l2319 1399                   i1l2327 12F7  
                 i1l3231 044C                   i1l3057 0FC9                   i1l2353 0C08  
                 i1l3241 0483                   i1l3225 042B                   i1l3209 0307  
                 i1l3153 01EE                   i1l3161 026E                   i1l2523 0DC6  
                 i1l2355 0C10                   i1l3331 062C                   i1l3219 0319  
                 i1l3171 029E                   i1l3155 0228                   i1l3411 0AA3  
                 i1l2701 144E                   i1l2533 1321                   i1l2373 0C2D  
                 i1l2349 0C05                   i1l2621 074D                   i1l3317 05ED  
                 i1l3253 04D3                   i1l3173 02A6                   i1l3149 01BE  
                 i1l3093 00D5                   i1l3085 00C8                   i1l2519 0DC2  
                 i1l2447 0CED                   i1l2439 0CDA                   i1l2383 0C42  
                 i1l2551 1510                   i1l3319 05F5                   i1l3239 047A  
                 i1l3159 0249                   i1l3423 0AE3                   i1l2705 1457  
                 i1l2721 14AA                   i1l2449 0CEF                   i1l2457 0CFF  
                 i1l2377 0C30                   i1l2625 0766                   i1l3329 05F1  
                 i1l3273 04F1                   i1l3281 0525                   i1l3097 00DB  
                 i1l3433 0B3C                   i1l3441 0B69                   i1l2731 16A2  
                 i1l2483 0D71                   i1l2475 0D64                   i1l2467 0D4A  
                 i1l2491 0D7A                   i1l2619 073C                   i1l2547 1508  
                 i1l3355 067E                   i1l3339 0644                   i1l3363 069D  
                 i1l3275 050F                   i1l3195 02EB                   i1l3187 02D8  
                 i1l3179 02AB                   i1l2645 155F                   i1l2709 145F  
                 i1l2901 09B9                   i1l2813 08C9                   i1l2573 1640  
                 i1l2557 1514                   i1l3293 05B5                   i1l3197 02EF  
                 i1l3381 14E6                   i1l3453 0B98                   i1l3623 1797  
                 i1l2671 1596                   i1l2663 1585                   i1l2655 1567  
                 i1l2639 1554                   i1l2815 08D1                   i1l2735 16BC  
                 i1l2583 1668                   i1l3383 14C2                   i1l3463 0BBF  
                 i1l3617 1780                   i1l2657 1573                   i1l2905 09BB  
                 i1l2833 08ED                   i1l2809 08C6                   i1l2497 0D83  
                 i1l2489 0D78                   i1l2577 1645                   i1l3289 0597  
                 i1l3449 0B94                   i1l3651 17F7                   i1l3627 179B  
                 i1l2667 158E                   i1l2683 1429                   i1l2915 09E4  
                 i1l2843 0914                   i1l2755 0795                   i1l3459 0BB9  
                 i1l3483 13C4                   i1l3637 17D0                   i1l3629 17AB  
                 i1l2829 08EA                   i1l2589 135E                   i1l3389 14EC  
                 i1l3469 0BC8                   i1l3485 13E1                   i1l3639 17C3  
                 i1l2695 1436                   i1l2687 1430                   i1l2951 0DF0  
                 i1l2775 07C3                   i1l2759 079E                   u300_20 0C9D  
                 i1l2697 1442                   i1l2929 0A1D                   i1l2849 0920  
                 i1l2953 0DF8                   i1l2785 07E2                   i1l2777 07D1  
                 i1l3665 0052           __CFG_WDTCCS$SC 0000                   i1l2875 0980  
                 i1l2971 0E1B                   i1l2893 098B                   i1l2869 0967  
                 i1l2877 0949                   i1l2949 0DEE                   i1l2895 09A2  
                 i1l2879 0985                   i1l2967 0E11                   i1l2969 0E13  
                 i1l2979 0E29                   u310_25 0CF4                   u311_23 0D12  
                 u303_25 0CBE                   u410_25 0958                   u315_25 0D65  
                 u412_25 0961                   u413_25 0975                   u333_25 1328  
                 u325_25 0D9D                   u341_25 162F                   u502_25 0637  
                 u351_25 06D5                   u504_20 066E                   u416_25 098E  
                 u440_25 0F3B                   u344_25 1652                   u360_25 076F  
                 u352_25 06F0                   u345_20 1660                   u505_20 066F  
                 u425_25 09D2                   u409_25 0951                   u441_25 0F4A  
                 u337_25 151E                   u346_20 1661                   u354_20 0703  
                 u426_25 09ED                   u418_25 0997                   u442_25 0F5E  
                 u354_25 06FF                   u427_25 0A06                   u451_25 0FA2  
                 u339_25 1616                   u348_20 1383                   u460_20 010E  
                 u452_25 0FBD                   u444_25 0F67                   u356_25 0728  
                 u284_25 1414                   u349_20 1384                   u461_20 010F  
                 u517_20 0B21                   u365_25 156A                   u453_25 0FD3  
                 u437_25 0E9F                   u518_20 0B22                   u550_25 17CA  
                 u438_25 0ECE                   u358_25 0756                   u287_20 12DE  
                 u367_25 1574                   u375_25 1439                   u383_25 14A6  
                 u439_25 0F24                   u391_25 07A7                   u288_20 12DF  
                 u464_20 0166                   u368_25 157E                   u472_25 029C  
                 u465_20 0167                   u369_25 1586                   u377_25 1448  
                 u554_25 17E4                   u546_25 17A4                   u378_25 144F  
                 u298_25 0C92                   u394_25 07C4                   u299_20 0C9C  
                 u483_25 0327                   u475_25 02BA                   u548_25 17B8  
                 u476_25 02D4                   u397_25 07D9                   u495_25 05A5  
                 u496_25 05B3                   _TX1STA 011E         __end_of___xxtofl 1800  
         __CFG_PWRTE$OFF 0000             vfprintf@cfmt 0069                   ___flge 166D  
                 ___fleq 1464                ??___aldiv 0128                ??___fladd 0020  
              ??___fldiv 0078                ??___awdiv 0074                ??___flneg 0074  
         __CFG_STVREN$ON 0000                ??___awmod 0074                ??___flmul 0028  
              ??___flsub 007E                ??___fltol 0074                   _efgtoa 007F  
                 _floorf 06B4         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075                   _printf 12BA                   pad@buf 0024  
                 _strcpy 1355                   _strlen 12E6                   fputc@c 0071  
                 fputs@c 0020                   fputs@i 0021                   fputs@s 0023  
     __size_of__Umul8_16 001F          ___fpclassifyf@e 0020          ___fpclassifyf@u 0022  
        ___fpclassifyf@x 0070                ??_isupper 0072                ?_ADC_init 0120  
              ?_ADC_read 0070         __end_of_vfprintf 13EA                ??_tolower 0078  
              ??_strncmp 0074               ___flge@ff1 003A               ___flge@ff2 003E  
        ??___fpclassifyf 0074             ___xxtofl@arg 007A             ___xxtofl@exp 0079  
           ___xxtofl@val 0070               ___fleq@ff1 0070               ___fleq@ff2 0074  
__end_of__initialization 007B               ___flneg@f1 0070               ___fltol@f1 0070  
         __pcstackCOMMON 0070            __end_of_fputc 141F            __end_of_fputs 13BB  
          __end_of_putch 07FC               ??_ADC_init 0122               ??_ADC_read 0072  
                ??_fputc 0074                  ??_fputs 007A                  ??_putch 0070  
             __pbssBANK1 00E7               __pbssBANK2 0145               __pbssBANK3 01A0  
     __size_of_init_UART 005A        __end_of__Umul8_16 1336               _efgtoa$422 00A8  
             _efgtoa$416 00A4               _efgtoa$417 00A6               _efgtoa$426 00AA  
             _efgtoa$427 00AC               _efgtoa$428 00AE               __pmaintext 12FE  
                ?___flge 003A                  ?___fleq 0070          __CFG_PPS1WAY$ON 0000  
             __pintentry 0004                  ?_efgtoa 0046                  ?_floorf 002D  
                ?_printf 00D9      __CFG_RSTOSC$HFINT32 0000                  ?_strcpy 0070  
                ?_strlen 0070                ?___xxtofl 0070       __size_of_vfpfcnvrt 01C5  
                ___aldiv 16E9          __size_of___flge 007C          __size_of___fleq 0048  
                ___fladd 0BEB                  ___fldiv 08AC                  ___awdiv 154A  
                ___flneg 0804                  ___awmod 141F                  ___flmul 0DD4  
                ___flsub 1336                  ___fltol 078C                ?_vfprintf 0063  
             _readSerial 07FC          __size_of_efgtoa 0635          __size_of_floorf 00D8  
                __ptext1 159B                  __ptext2 16E9                  __ptext3 080D  
                __ptext5 07FC                  __ptext6 12BA                  __ptext7 13BB  
                __ptext8 0A26                  __ptext9 14AC          __size_of_printf 0015  
      __end_of_init_UART 15F5          __CFG_WRTAPP$OFF 0000          __size_of_strcpy 001F  
        __size_of_strlen 0018             __size_of_ISR 005E             __size_of_pad 0050  
             ??___xxtofl 0074         ___awmod@dividend 0072         ___aldiv@dividend 0124  
        __CFG_WRTSAF$OFF 0000                  _isupper 12CF                  efgtoa@c 004A  
                efgtoa@d 00B8                  efgtoa@e 00D1                  efgtoa@f 0046  
                efgtoa@g 00CD                  efgtoa@h 00C3                  efgtoa@i 00CB  
                efgtoa@l 00C7                  efgtoa@m 00B4                  efgtoa@n 00D3  
                efgtoa@p 00BC                  efgtoa@t 00B0                  efgtoa@u 00D5  
                efgtoa@w 00C0                  _tolower 1374                  clrloop0 12AD  
                _strncmp 14AC     end_of_initialization 007B                  floorf@e 003B  
                floorf@m 0037                  floorf@u 003D                  floorf@x 002D  
                fputc@fp 0073                  fputs@fp 0079        __end_of_vfpfcnvrt 0BEB  
             efgtoa@mode 00C2               efgtoa@sign 00BA                _RCSTAbits 011D  
       ___aldiv@quotient 012B               ??_vfprintf 0066    __CFG_WDTCPS$WDTCPS_31 0000  
                strcpy@d 0076                  strlen@a 0073                  strcpy@s 0074  
                strlen@s 0074              ___fladd@grs 007B            ___xxtofl@sign 0078  
            ___fldiv@grs 0027              ___fldiv@rem 0020         __CFG_FEXTOSC$OFF 0000  
      __size_of_ADC_init 009F        __size_of_ADC_read 0008              ___flmul@grs 002E  
           ADC_init@chan 0125           __end_of___flge 16E9           __end_of___fleq 14AC  
            ?_readSerial 0070              vfpfcnvrt@ap 0050              vfpfcnvrt@ct 005E  
            vfpfcnvrt@fp 0062              vfpfcnvrt@vp 0059           __end_of_efgtoa 06B4  
         __end_of_floorf 078C               floorf@F524 0145           __end_of_printf 12CF  
         __end_of_strcpy 1374           __end_of_strlen 12FE      start_initialization 0064  
            __end_of_ISR 0062              __end_of_pad 154A    __end_of___fpclassifyf 166D  
       __CFG_LPBOREN$OFF 0000              vfprintf@fmt 0063                 ??___flge 0042  
               ??___fleq 0078                 ??_efgtoa 004B                __Umul8_16 1317  
               ??_floorf 0031                 ??_printf 006B                 ??_strcpy 0072  
               ??_strlen 0072                ___fladd@a 0074                ___fladd@b 0070  
              ___fldiv@a 0070                ___fldiv@b 0074                ___flmul@a 0024  
              ___flmul@b 0020               ISR@adc_out 00E5                ___flsub@a 003A  
              ___flsub@b 003E                ___latbits 0002        init_UART@spbrgVal 0143  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK2 0120  
      __size_of___xxtofl 0095      __size_of_readSerial 0003                 ?___aldiv 0120  
               ?___fladd 0070                 ?___fldiv 0070                 ?___awdiv 0070  
               ?___flneg 0070                 ?___awmod 0070                 ?___flmul 0020  
               ?___flsub 003A                 ?___fltol 0070               ?__Umul8_16 0070  
      __size_of_vfprintf 002F                 _BAUD1CON 011F                 ?_isupper 0070  
       __CFG_WDTE$NSLEEP 0000                _init_UART 159B                 _ADC_init 080D  
               _ADC_read 12B2                 ?_tolower 0076           __size_of_fputc 0035  
         __size_of_fputs 0026                 ?_strncmp 0070           __size_of_putch 000B  
        ___aldiv@divisor 0120          ___aldiv@counter 0129                clear_ram0 12AC  
               _PIE1bits 0717                 _PIR1bits 070D                 _PIR3bits 070F  
               _RX1DTPPS 1ECB        __CFG_BBSIZE$BB512 0000                _vfpfcnvrt 0A26  
             _ADCON0bits 009D               ?_init_UART 012F              ADC_init@pin 0120  
             vfpfcnvrt@c 0061               vfpfcnvrt@f 005A               vfprintf@ap 0065  
             vfprintf@fp 0068              ??__Umul8_16 0072             ??_readSerial 0070  
       __size_of___aldiv 0082         __size_of___fladd 01E9         __size_of___fldiv 017A  
       __size_of___awdiv 0051         __size_of___flneg 0009         __size_of___awmod 0045  
       __size_of___flmul 022C         __size_of___flsub 001F         __size_of___fltol 0065  
             ?_vfpfcnvrt 004F       ___fpclassifyf@F463 0149                 ___xxtofl 176B  
               __ptext10 007F                 __ptext11 1374                 __ptext20 15F5  
               __ptext12 12CF                 __ptext21 078C                 __ptext13 1355  
               __ptext30 141F                 __ptext22 1336                 __ptext14 14FA  
               __ptext31 154A                 __ptext23 0BEB                 __ptext15 12E6  
               __ptext32 176B                 __ptext24 0804                 __ptext16 1395  
               __ptext33 12B2                 __ptext25 0DD4                 __ptext17 13EA  
               __ptext26 1317                 __ptext18 07F1                 __ptext27 166D  
               __ptext19 06B4                 __ptext28 1464                 __ptext29 08AC  
       __size_of_isupper 0017         __size_of_tolower 0021               strcpy@dest 0077  
       __size_of_strncmp 004E       __end_of_readSerial 07FF            __size_of_main 0019  
   __CFG_WDTCWS$WDTCWS_7 0000                 efgtoa@fp 00BE                 efgtoa@ne 00B6  
               efgtoa@pp 00B2                 efgtoa@ou 00A0                 int$flags 007E  
               _vfprintf 13BB                printf@fmt 00D9                putch@byte 0070  
             _INTCONbits 000B              ??_init_UART 0133                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000                strcpy@src 0070                 isupper@c 0070  
              strncmp@_l 0075                strncmp@_r 0070              efgtoa@nmode 00BF  
               printf@ap 006E              ??_vfpfcnvrt 0051            _vfpfcnvrt$445 0057  
          __pstringtext1 1800            __pstringtext2 1807            __pstringtext3 180B  
          __pstringtext4 180F            __pstringtext5 1813            __pstringtext6 1817  
          __pstringtext7 181A            __pstringtext8 0000   __Umul8_16@multiplicand 0070  
               tolower@c 0076   __size_of___fpclassifyf 0078                 strncmp@l 0078  
               strncmp@n 0072                 strncmp@r 0076             ___aldiv@sign 012A  
             _TX1STAbits 011E            ___fladd@signs 0078             ___fladd@aexp 0079  
           ___fladd@bexp 007A     __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
