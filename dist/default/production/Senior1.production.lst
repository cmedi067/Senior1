

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jun 16 06:39:17 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F15345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.05
    57                           ; Generated 20/12/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F15345 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0119                     	;# 
   118  0119                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011A                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011B                     	;# 
   125  011B                     	;# 
   126  011B                     	;# 
   127  011B                     	;# 
   128  011C                     	;# 
   129  011C                     	;# 
   130  011C                     	;# 
   131  011D                     	;# 
   132  011D                     	;# 
   133  011D                     	;# 
   134  011E                     	;# 
   135  011E                     	;# 
   136  011E                     	;# 
   137  011F                     	;# 
   138  011F                     	;# 
   139  011F                     	;# 
   140  011F                     	;# 
   141  011F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  018E                     	;# 
   145  018F                     	;# 
   146  0190                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  020C                     	;# 
   150  020C                     	;# 
   151  020D                     	;# 
   152  020E                     	;# 
   153  020F                     	;# 
   154  020F                     	;# 
   155  0210                     	;# 
   156  0210                     	;# 
   157  0211                     	;# 
   158  0211                     	;# 
   159  028C                     	;# 
   160  028C                     	;# 
   161  028D                     	;# 
   162  028D                     	;# 
   163  028E                     	;# 
   164  028F                     	;# 
   165  0290                     	;# 
   166  0291                     	;# 
   167  030C                     	;# 
   168  030C                     	;# 
   169  030D                     	;# 
   170  030E                     	;# 
   171  030F                     	;# 
   172  0310                     	;# 
   173  0310                     	;# 
   174  0311                     	;# 
   175  0312                     	;# 
   176  0313                     	;# 
   177  0314                     	;# 
   178  0314                     	;# 
   179  0315                     	;# 
   180  0316                     	;# 
   181  0318                     	;# 
   182  0318                     	;# 
   183  0319                     	;# 
   184  031A                     	;# 
   185  031C                     	;# 
   186  031C                     	;# 
   187  031D                     	;# 
   188  031E                     	;# 
   189  038C                     	;# 
   190  038C                     	;# 
   191  038D                     	;# 
   192  038E                     	;# 
   193  058C                     	;# 
   194  058C                     	;# 
   195  058D                     	;# 
   196  058E                     	;# 
   197  058F                     	;# 
   198  058F                     	;# 
   199  0590                     	;# 
   200  0591                     	;# 
   201  0592                     	;# 
   202  0593                     	;# 
   203  059C                     	;# 
   204  059C                     	;# 
   205  059D                     	;# 
   206  059D                     	;# 
   207  059E                     	;# 
   208  059F                     	;# 
   209  060C                     	;# 
   210  060D                     	;# 
   211  060E                     	;# 
   212  060F                     	;# 
   213  0610                     	;# 
   214  0611                     	;# 
   215  0612                     	;# 
   216  0613                     	;# 
   217  0614                     	;# 
   218  070C                     	;# 
   219  070D                     	;# 
   220  070E                     	;# 
   221  070F                     	;# 
   222  0710                     	;# 
   223  0711                     	;# 
   224  0712                     	;# 
   225  0713                     	;# 
   226  0716                     	;# 
   227  0717                     	;# 
   228  0718                     	;# 
   229  0719                     	;# 
   230  071A                     	;# 
   231  071B                     	;# 
   232  071C                     	;# 
   233  071D                     	;# 
   234  0796                     	;# 
   235  0797                     	;# 
   236  0798                     	;# 
   237  0799                     	;# 
   238  079A                     	;# 
   239  079B                     	;# 
   240  080C                     	;# 
   241  080D                     	;# 
   242  080E                     	;# 
   243  080F                     	;# 
   244  0810                     	;# 
   245  0811                     	;# 
   246  0812                     	;# 
   247  0813                     	;# 
   248  0814                     	;# 
   249  081A                     	;# 
   250  081A                     	;# 
   251  081B                     	;# 
   252  081C                     	;# 
   253  081C                     	;# 
   254  081D                     	;# 
   255  081E                     	;# 
   256  081F                     	;# 
   257  088C                     	;# 
   258  088D                     	;# 
   259  088E                     	;# 
   260  088F                     	;# 
   261  0890                     	;# 
   262  0891                     	;# 
   263  0892                     	;# 
   264  0893                     	;# 
   265  0895                     	;# 
   266  0896                     	;# 
   267  090C                     	;# 
   268  090E                     	;# 
   269  090F                     	;# 
   270  091F                     	;# 
   271  098F                     	;# 
   272  098F                     	;# 
   273  0990                     	;# 
   274  0991                     	;# 
   275  0992                     	;# 
   276  0993                     	;# 
   277  0994                     	;# 
   278  0995                     	;# 
   279  0996                     	;# 
   280  0997                     	;# 
   281  0A19                     	;# 
   282  0A19                     	;# 
   283  0A1A                     	;# 
   284  0A1A                     	;# 
   285  0A1B                     	;# 
   286  0A1B                     	;# 
   287  0A1B                     	;# 
   288  0A1C                     	;# 
   289  0A1C                     	;# 
   290  0A1D                     	;# 
   291  0A1D                     	;# 
   292  0A1E                     	;# 
   293  0A1E                     	;# 
   294  0A1F                     	;# 
   295  0A1F                     	;# 
   296  0A1F                     	;# 
   297  1E0F                     	;# 
   298  1E10                     	;# 
   299  1E11                     	;# 
   300  1E12                     	;# 
   301  1E13                     	;# 
   302  1E14                     	;# 
   303  1E15                     	;# 
   304  1E16                     	;# 
   305  1E17                     	;# 
   306  1E18                     	;# 
   307  1E19                     	;# 
   308  1E1A                     	;# 
   309  1E1B                     	;# 
   310  1E1C                     	;# 
   311  1E1D                     	;# 
   312  1E1E                     	;# 
   313  1E1F                     	;# 
   314  1E20                     	;# 
   315  1E21                     	;# 
   316  1E22                     	;# 
   317  1E23                     	;# 
   318  1E24                     	;# 
   319  1E25                     	;# 
   320  1E26                     	;# 
   321  1E27                     	;# 
   322  1E28                     	;# 
   323  1E29                     	;# 
   324  1E2A                     	;# 
   325  1E2B                     	;# 
   326  1E2C                     	;# 
   327  1E2D                     	;# 
   328  1E2E                     	;# 
   329  1E2F                     	;# 
   330  1E30                     	;# 
   331  1E31                     	;# 
   332  1E32                     	;# 
   333  1E33                     	;# 
   334  1E34                     	;# 
   335  1E35                     	;# 
   336  1E36                     	;# 
   337  1E37                     	;# 
   338  1E8F                     	;# 
   339  1E90                     	;# 
   340  1E91                     	;# 
   341  1E92                     	;# 
   342  1E93                     	;# 
   343  1E9C                     	;# 
   344  1EA1                     	;# 
   345  1EA2                     	;# 
   346  1EB1                     	;# 
   347  1EBB                     	;# 
   348  1EBC                     	;# 
   349  1EBD                     	;# 
   350  1EBE                     	;# 
   351  1EC3                     	;# 
   352  1EC5                     	;# 
   353  1EC6                     	;# 
   354  1EC7                     	;# 
   355  1ECB                     	;# 
   356  1ECC                     	;# 
   357  1ECD                     	;# 
   358  1ECE                     	;# 
   359  1F10                     	;# 
   360  1F11                     	;# 
   361  1F12                     	;# 
   362  1F13                     	;# 
   363  1F14                     	;# 
   364  1F15                     	;# 
   365  1F1C                     	;# 
   366  1F1D                     	;# 
   367  1F1E                     	;# 
   368  1F1F                     	;# 
   369  1F20                     	;# 
   370  1F21                     	;# 
   371  1F22                     	;# 
   372  1F23                     	;# 
   373  1F24                     	;# 
   374  1F25                     	;# 
   375  1F26                     	;# 
   376  1F27                     	;# 
   377  1F38                     	;# 
   378  1F39                     	;# 
   379  1F3A                     	;# 
   380  1F3B                     	;# 
   381  1F3C                     	;# 
   382  1F3D                     	;# 
   383  1F3E                     	;# 
   384  1F3F                     	;# 
   385  1F43                     	;# 
   386  1F44                     	;# 
   387  1F45                     	;# 
   388  1F46                     	;# 
   389  1F47                     	;# 
   390  1F48                     	;# 
   391  1F49                     	;# 
   392  1F4A                     	;# 
   393  1F4E                     	;# 
   394  1F4F                     	;# 
   395  1F50                     	;# 
   396  1F51                     	;# 
   397  1F52                     	;# 
   398  1F53                     	;# 
   399  1F54                     	;# 
   400  1F55                     	;# 
   401  1FE4                     	;# 
   402  1FE5                     	;# 
   403  1FE6                     	;# 
   404  1FE7                     	;# 
   405  1FE8                     	;# 
   406  1FE8                     	;# 
   407  1FE9                     	;# 
   408  1FEA                     	;# 
   409  1FEA                     	;# 
   410  1FEB                     	;# 
   411  1FED                     	;# 
   412  1FEE                     	;# 
   413  1FEF                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  0012                     	;# 
   430  0013                     	;# 
   431  0014                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  009B                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0119                     	;# 
   442  0119                     	;# 
   443  0119                     	;# 
   444  011A                     	;# 
   445  011A                     	;# 
   446  011A                     	;# 
   447  011B                     	;# 
   448  011B                     	;# 
   449  011B                     	;# 
   450  011B                     	;# 
   451  011B                     	;# 
   452  011C                     	;# 
   453  011C                     	;# 
   454  011C                     	;# 
   455  011D                     	;# 
   456  011D                     	;# 
   457  011D                     	;# 
   458  011E                     	;# 
   459  011E                     	;# 
   460  011E                     	;# 
   461  011F                     	;# 
   462  011F                     	;# 
   463  011F                     	;# 
   464  011F                     	;# 
   465  011F                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  018E                     	;# 
   469  018F                     	;# 
   470  0190                     	;# 
   471  0191                     	;# 
   472  0192                     	;# 
   473  020C                     	;# 
   474  020C                     	;# 
   475  020D                     	;# 
   476  020E                     	;# 
   477  020F                     	;# 
   478  020F                     	;# 
   479  0210                     	;# 
   480  0210                     	;# 
   481  0211                     	;# 
   482  0211                     	;# 
   483  028C                     	;# 
   484  028C                     	;# 
   485  028D                     	;# 
   486  028D                     	;# 
   487  028E                     	;# 
   488  028F                     	;# 
   489  0290                     	;# 
   490  0291                     	;# 
   491  030C                     	;# 
   492  030C                     	;# 
   493  030D                     	;# 
   494  030E                     	;# 
   495  030F                     	;# 
   496  0310                     	;# 
   497  0310                     	;# 
   498  0311                     	;# 
   499  0312                     	;# 
   500  0313                     	;# 
   501  0314                     	;# 
   502  0314                     	;# 
   503  0315                     	;# 
   504  0316                     	;# 
   505  0318                     	;# 
   506  0318                     	;# 
   507  0319                     	;# 
   508  031A                     	;# 
   509  031C                     	;# 
   510  031C                     	;# 
   511  031D                     	;# 
   512  031E                     	;# 
   513  038C                     	;# 
   514  038C                     	;# 
   515  038D                     	;# 
   516  038E                     	;# 
   517  058C                     	;# 
   518  058C                     	;# 
   519  058D                     	;# 
   520  058E                     	;# 
   521  058F                     	;# 
   522  058F                     	;# 
   523  0590                     	;# 
   524  0591                     	;# 
   525  0592                     	;# 
   526  0593                     	;# 
   527  059C                     	;# 
   528  059C                     	;# 
   529  059D                     	;# 
   530  059D                     	;# 
   531  059E                     	;# 
   532  059F                     	;# 
   533  060C                     	;# 
   534  060D                     	;# 
   535  060E                     	;# 
   536  060F                     	;# 
   537  0610                     	;# 
   538  0611                     	;# 
   539  0612                     	;# 
   540  0613                     	;# 
   541  0614                     	;# 
   542  070C                     	;# 
   543  070D                     	;# 
   544  070E                     	;# 
   545  070F                     	;# 
   546  0710                     	;# 
   547  0711                     	;# 
   548  0712                     	;# 
   549  0713                     	;# 
   550  0716                     	;# 
   551  0717                     	;# 
   552  0718                     	;# 
   553  0719                     	;# 
   554  071A                     	;# 
   555  071B                     	;# 
   556  071C                     	;# 
   557  071D                     	;# 
   558  0796                     	;# 
   559  0797                     	;# 
   560  0798                     	;# 
   561  0799                     	;# 
   562  079A                     	;# 
   563  079B                     	;# 
   564  080C                     	;# 
   565  080D                     	;# 
   566  080E                     	;# 
   567  080F                     	;# 
   568  0810                     	;# 
   569  0811                     	;# 
   570  0812                     	;# 
   571  0813                     	;# 
   572  0814                     	;# 
   573  081A                     	;# 
   574  081A                     	;# 
   575  081B                     	;# 
   576  081C                     	;# 
   577  081C                     	;# 
   578  081D                     	;# 
   579  081E                     	;# 
   580  081F                     	;# 
   581  088C                     	;# 
   582  088D                     	;# 
   583  088E                     	;# 
   584  088F                     	;# 
   585  0890                     	;# 
   586  0891                     	;# 
   587  0892                     	;# 
   588  0893                     	;# 
   589  0895                     	;# 
   590  0896                     	;# 
   591  090C                     	;# 
   592  090E                     	;# 
   593  090F                     	;# 
   594  091F                     	;# 
   595  098F                     	;# 
   596  098F                     	;# 
   597  0990                     	;# 
   598  0991                     	;# 
   599  0992                     	;# 
   600  0993                     	;# 
   601  0994                     	;# 
   602  0995                     	;# 
   603  0996                     	;# 
   604  0997                     	;# 
   605  0A19                     	;# 
   606  0A19                     	;# 
   607  0A1A                     	;# 
   608  0A1A                     	;# 
   609  0A1B                     	;# 
   610  0A1B                     	;# 
   611  0A1B                     	;# 
   612  0A1C                     	;# 
   613  0A1C                     	;# 
   614  0A1D                     	;# 
   615  0A1D                     	;# 
   616  0A1E                     	;# 
   617  0A1E                     	;# 
   618  0A1F                     	;# 
   619  0A1F                     	;# 
   620  0A1F                     	;# 
   621  1E0F                     	;# 
   622  1E10                     	;# 
   623  1E11                     	;# 
   624  1E12                     	;# 
   625  1E13                     	;# 
   626  1E14                     	;# 
   627  1E15                     	;# 
   628  1E16                     	;# 
   629  1E17                     	;# 
   630  1E18                     	;# 
   631  1E19                     	;# 
   632  1E1A                     	;# 
   633  1E1B                     	;# 
   634  1E1C                     	;# 
   635  1E1D                     	;# 
   636  1E1E                     	;# 
   637  1E1F                     	;# 
   638  1E20                     	;# 
   639  1E21                     	;# 
   640  1E22                     	;# 
   641  1E23                     	;# 
   642  1E24                     	;# 
   643  1E25                     	;# 
   644  1E26                     	;# 
   645  1E27                     	;# 
   646  1E28                     	;# 
   647  1E29                     	;# 
   648  1E2A                     	;# 
   649  1E2B                     	;# 
   650  1E2C                     	;# 
   651  1E2D                     	;# 
   652  1E2E                     	;# 
   653  1E2F                     	;# 
   654  1E30                     	;# 
   655  1E31                     	;# 
   656  1E32                     	;# 
   657  1E33                     	;# 
   658  1E34                     	;# 
   659  1E35                     	;# 
   660  1E36                     	;# 
   661  1E37                     	;# 
   662  1E8F                     	;# 
   663  1E90                     	;# 
   664  1E91                     	;# 
   665  1E92                     	;# 
   666  1E93                     	;# 
   667  1E9C                     	;# 
   668  1EA1                     	;# 
   669  1EA2                     	;# 
   670  1EB1                     	;# 
   671  1EBB                     	;# 
   672  1EBC                     	;# 
   673  1EBD                     	;# 
   674  1EBE                     	;# 
   675  1EC3                     	;# 
   676  1EC5                     	;# 
   677  1EC6                     	;# 
   678  1EC7                     	;# 
   679  1ECB                     	;# 
   680  1ECC                     	;# 
   681  1ECD                     	;# 
   682  1ECE                     	;# 
   683  1F10                     	;# 
   684  1F11                     	;# 
   685  1F12                     	;# 
   686  1F13                     	;# 
   687  1F14                     	;# 
   688  1F15                     	;# 
   689  1F1C                     	;# 
   690  1F1D                     	;# 
   691  1F1E                     	;# 
   692  1F1F                     	;# 
   693  1F20                     	;# 
   694  1F21                     	;# 
   695  1F22                     	;# 
   696  1F23                     	;# 
   697  1F24                     	;# 
   698  1F25                     	;# 
   699  1F26                     	;# 
   700  1F27                     	;# 
   701  1F38                     	;# 
   702  1F39                     	;# 
   703  1F3A                     	;# 
   704  1F3B                     	;# 
   705  1F3C                     	;# 
   706  1F3D                     	;# 
   707  1F3E                     	;# 
   708  1F3F                     	;# 
   709  1F43                     	;# 
   710  1F44                     	;# 
   711  1F45                     	;# 
   712  1F46                     	;# 
   713  1F47                     	;# 
   714  1F48                     	;# 
   715  1F49                     	;# 
   716  1F4A                     	;# 
   717  1F4E                     	;# 
   718  1F4F                     	;# 
   719  1F50                     	;# 
   720  1F51                     	;# 
   721  1F52                     	;# 
   722  1F53                     	;# 
   723  1F54                     	;# 
   724  1F55                     	;# 
   725  1FE4                     	;# 
   726  1FE5                     	;# 
   727  1FE6                     	;# 
   728  1FE7                     	;# 
   729  1FE8                     	;# 
   730  1FE8                     	;# 
   731  1FE9                     	;# 
   732  1FEA                     	;# 
   733  1FEA                     	;# 
   734  1FEB                     	;# 
   735  1FED                     	;# 
   736  1FEE                     	;# 
   737  1FEF                     	;# 
   738  0000                     	;# 
   739  0001                     	;# 
   740  0002                     	;# 
   741  0003                     	;# 
   742  0004                     	;# 
   743  0005                     	;# 
   744  0006                     	;# 
   745  0007                     	;# 
   746  0008                     	;# 
   747  0009                     	;# 
   748  000A                     	;# 
   749  000B                     	;# 
   750  000C                     	;# 
   751  000D                     	;# 
   752  000E                     	;# 
   753  0012                     	;# 
   754  0013                     	;# 
   755  0014                     	;# 
   756  0018                     	;# 
   757  0019                     	;# 
   758  001A                     	;# 
   759  009B                     	;# 
   760  009B                     	;# 
   761  009C                     	;# 
   762  009D                     	;# 
   763  009E                     	;# 
   764  009F                     	;# 
   765  0119                     	;# 
   766  0119                     	;# 
   767  0119                     	;# 
   768  011A                     	;# 
   769  011A                     	;# 
   770  011A                     	;# 
   771  011B                     	;# 
   772  011B                     	;# 
   773  011B                     	;# 
   774  011B                     	;# 
   775  011B                     	;# 
   776  011C                     	;# 
   777  011C                     	;# 
   778  011C                     	;# 
   779  011D                     	;# 
   780  011D                     	;# 
   781  011D                     	;# 
   782  011E                     	;# 
   783  011E                     	;# 
   784  011E                     	;# 
   785  011F                     	;# 
   786  011F                     	;# 
   787  011F                     	;# 
   788  011F                     	;# 
   789  011F                     	;# 
   790  018C                     	;# 
   791  018D                     	;# 
   792  018E                     	;# 
   793  018F                     	;# 
   794  0190                     	;# 
   795  0191                     	;# 
   796  0192                     	;# 
   797  020C                     	;# 
   798  020C                     	;# 
   799  020D                     	;# 
   800  020E                     	;# 
   801  020F                     	;# 
   802  020F                     	;# 
   803  0210                     	;# 
   804  0210                     	;# 
   805  0211                     	;# 
   806  0211                     	;# 
   807  028C                     	;# 
   808  028C                     	;# 
   809  028D                     	;# 
   810  028D                     	;# 
   811  028E                     	;# 
   812  028F                     	;# 
   813  0290                     	;# 
   814  0291                     	;# 
   815  030C                     	;# 
   816  030C                     	;# 
   817  030D                     	;# 
   818  030E                     	;# 
   819  030F                     	;# 
   820  0310                     	;# 
   821  0310                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  0314                     	;# 
   826  0314                     	;# 
   827  0315                     	;# 
   828  0316                     	;# 
   829  0318                     	;# 
   830  0318                     	;# 
   831  0319                     	;# 
   832  031A                     	;# 
   833  031C                     	;# 
   834  031C                     	;# 
   835  031D                     	;# 
   836  031E                     	;# 
   837  038C                     	;# 
   838  038C                     	;# 
   839  038D                     	;# 
   840  038E                     	;# 
   841  058C                     	;# 
   842  058C                     	;# 
   843  058D                     	;# 
   844  058E                     	;# 
   845  058F                     	;# 
   846  058F                     	;# 
   847  0590                     	;# 
   848  0591                     	;# 
   849  0592                     	;# 
   850  0593                     	;# 
   851  059C                     	;# 
   852  059C                     	;# 
   853  059D                     	;# 
   854  059D                     	;# 
   855  059E                     	;# 
   856  059F                     	;# 
   857  060C                     	;# 
   858  060D                     	;# 
   859  060E                     	;# 
   860  060F                     	;# 
   861  0610                     	;# 
   862  0611                     	;# 
   863  0612                     	;# 
   864  0613                     	;# 
   865  0614                     	;# 
   866  070C                     	;# 
   867  070D                     	;# 
   868  070E                     	;# 
   869  070F                     	;# 
   870  0710                     	;# 
   871  0711                     	;# 
   872  0712                     	;# 
   873  0713                     	;# 
   874  0716                     	;# 
   875  0717                     	;# 
   876  0718                     	;# 
   877  0719                     	;# 
   878  071A                     	;# 
   879  071B                     	;# 
   880  071C                     	;# 
   881  071D                     	;# 
   882  0796                     	;# 
   883  0797                     	;# 
   884  0798                     	;# 
   885  0799                     	;# 
   886  079A                     	;# 
   887  079B                     	;# 
   888  080C                     	;# 
   889  080D                     	;# 
   890  080E                     	;# 
   891  080F                     	;# 
   892  0810                     	;# 
   893  0811                     	;# 
   894  0812                     	;# 
   895  0813                     	;# 
   896  0814                     	;# 
   897  081A                     	;# 
   898  081A                     	;# 
   899  081B                     	;# 
   900  081C                     	;# 
   901  081C                     	;# 
   902  081D                     	;# 
   903  081E                     	;# 
   904  081F                     	;# 
   905  088C                     	;# 
   906  088D                     	;# 
   907  088E                     	;# 
   908  088F                     	;# 
   909  0890                     	;# 
   910  0891                     	;# 
   911  0892                     	;# 
   912  0893                     	;# 
   913  0895                     	;# 
   914  0896                     	;# 
   915  090C                     	;# 
   916  090E                     	;# 
   917  090F                     	;# 
   918  091F                     	;# 
   919  098F                     	;# 
   920  098F                     	;# 
   921  0990                     	;# 
   922  0991                     	;# 
   923  0992                     	;# 
   924  0993                     	;# 
   925  0994                     	;# 
   926  0995                     	;# 
   927  0996                     	;# 
   928  0997                     	;# 
   929  0A19                     	;# 
   930  0A19                     	;# 
   931  0A1A                     	;# 
   932  0A1A                     	;# 
   933  0A1B                     	;# 
   934  0A1B                     	;# 
   935  0A1B                     	;# 
   936  0A1C                     	;# 
   937  0A1C                     	;# 
   938  0A1D                     	;# 
   939  0A1D                     	;# 
   940  0A1E                     	;# 
   941  0A1E                     	;# 
   942  0A1F                     	;# 
   943  0A1F                     	;# 
   944  0A1F                     	;# 
   945  1E0F                     	;# 
   946  1E10                     	;# 
   947  1E11                     	;# 
   948  1E12                     	;# 
   949  1E13                     	;# 
   950  1E14                     	;# 
   951  1E15                     	;# 
   952  1E16                     	;# 
   953  1E17                     	;# 
   954  1E18                     	;# 
   955  1E19                     	;# 
   956  1E1A                     	;# 
   957  1E1B                     	;# 
   958  1E1C                     	;# 
   959  1E1D                     	;# 
   960  1E1E                     	;# 
   961  1E1F                     	;# 
   962  1E20                     	;# 
   963  1E21                     	;# 
   964  1E22                     	;# 
   965  1E23                     	;# 
   966  1E24                     	;# 
   967  1E25                     	;# 
   968  1E26                     	;# 
   969  1E27                     	;# 
   970  1E28                     	;# 
   971  1E29                     	;# 
   972  1E2A                     	;# 
   973  1E2B                     	;# 
   974  1E2C                     	;# 
   975  1E2D                     	;# 
   976  1E2E                     	;# 
   977  1E2F                     	;# 
   978  1E30                     	;# 
   979  1E31                     	;# 
   980  1E32                     	;# 
   981  1E33                     	;# 
   982  1E34                     	;# 
   983  1E35                     	;# 
   984  1E36                     	;# 
   985  1E37                     	;# 
   986  1E8F                     	;# 
   987  1E90                     	;# 
   988  1E91                     	;# 
   989  1E92                     	;# 
   990  1E93                     	;# 
   991  1E9C                     	;# 
   992  1EA1                     	;# 
   993  1EA2                     	;# 
   994  1EB1                     	;# 
   995  1EBB                     	;# 
   996  1EBC                     	;# 
   997  1EBD                     	;# 
   998  1EBE                     	;# 
   999  1EC3                     	;# 
  1000  1EC5                     	;# 
  1001  1EC6                     	;# 
  1002  1EC7                     	;# 
  1003  1ECB                     	;# 
  1004  1ECC                     	;# 
  1005  1ECD                     	;# 
  1006  1ECE                     	;# 
  1007  1F10                     	;# 
  1008  1F11                     	;# 
  1009  1F12                     	;# 
  1010  1F13                     	;# 
  1011  1F14                     	;# 
  1012  1F15                     	;# 
  1013  1F1C                     	;# 
  1014  1F1D                     	;# 
  1015  1F1E                     	;# 
  1016  1F1F                     	;# 
  1017  1F20                     	;# 
  1018  1F21                     	;# 
  1019  1F22                     	;# 
  1020  1F23                     	;# 
  1021  1F24                     	;# 
  1022  1F25                     	;# 
  1023  1F26                     	;# 
  1024  1F27                     	;# 
  1025  1F38                     	;# 
  1026  1F39                     	;# 
  1027  1F3A                     	;# 
  1028  1F3B                     	;# 
  1029  1F3C                     	;# 
  1030  1F3D                     	;# 
  1031  1F3E                     	;# 
  1032  1F3F                     	;# 
  1033  1F43                     	;# 
  1034  1F44                     	;# 
  1035  1F45                     	;# 
  1036  1F46                     	;# 
  1037  1F47                     	;# 
  1038  1F48                     	;# 
  1039  1F49                     	;# 
  1040  1F4A                     	;# 
  1041  1F4E                     	;# 
  1042  1F4F                     	;# 
  1043  1F50                     	;# 
  1044  1F51                     	;# 
  1045  1F52                     	;# 
  1046  1F53                     	;# 
  1047  1F54                     	;# 
  1048  1F55                     	;# 
  1049  1FE4                     	;# 
  1050  1FE5                     	;# 
  1051  1FE6                     	;# 
  1052  1FE7                     	;# 
  1053  1FE8                     	;# 
  1054  1FE8                     	;# 
  1055  1FE9                     	;# 
  1056  1FEA                     	;# 
  1057  1FEA                     	;# 
  1058  1FEB                     	;# 
  1059  1FED                     	;# 
  1060  1FEE                     	;# 
  1061  1FEF                     	;# 
  1062  0013                     _TRISB	set	19
  1063  000B                     _INTCONbits	set	11
  1064  0012                     _TRISA	set	18
  1065  0014                     _TRISC	set	20
  1066  005E                     _PEIE	set	94
  1067  009B                     _ADRESL	set	155
  1068  009C                     _ADRESH	set	156
  1069  009D                     _ADCON0bits	set	157
  1070  009E                     _ADCON1	set	158
  1071  009D                     _ADCON0	set	157
  1072  0119                     _RC1REG	set	281
  1073  011E                     _TX1STAbits	set	286
  1074  011A                     _TXREG	set	282
  1075  011D                     _RCSTAbits	set	285
  1076  011E                     _TXSTA	set	286
  1077  011F                     _BAUD1CON	set	287
  1078  011D                     _RC1STA	set	285
  1079  011E                     _TX1STA	set	286
  1080  011B                     _SPBRG	set	283
  1081  0717                     _PIE1bits	set	1815
  1082  070D                     _PIR1bits	set	1805
  1083  387D                     _RC1IF	set	14461
  1084  38CD                     _RC1IE	set	14541
  1085  1ECB                     _RX1DTPPS	set	7883
  1086  1F25                     _RC5PPS	set	7973
  1087  1F4E                     _ANSELC	set	8014
  1088  1F43                     _ANSELB	set	8003
  1089  1F38                     _ANSELA	set	7992
  1090                           
  1091                           	psect	stringtext1
  1092  1800                     __pstringtext1:	
  1093  1800                     STR_1:	
  1094  1800  3425               	retlw	37	;'%'
  1095  1801  3466               	retlw	102	;'f'
  1096  1802  3420               	retlw	32	;' '
  1097  1803  340A               	retlw	10
  1098  1804  340D               	retlw	13
  1099  1805  3420               	retlw	32	;' '
  1100  1806  3400               	retlw	0
  1101                           
  1102                           	psect	stringtext2
  1103  1807                     __pstringtext2:	
  1104  1807                     STR_3:	
  1105  1807  3449               	retlw	73	;'I'
  1106  1808  344E               	retlw	78	;'N'
  1107  1809  3446               	retlw	70	;'F'
  1108  180A  3400               	retlw	0
  1109                           
  1110                           	psect	stringtext3
  1111  180B                     __pstringtext3:	
  1112  180B                     STR_7:	
  1113  180B  344E               	retlw	78	;'N'
  1114  180C  3441               	retlw	65	;'A'
  1115  180D  344E               	retlw	78	;'N'
  1116  180E  3400               	retlw	0
  1117                           
  1118                           	psect	stringtext4
  1119  180F                     __pstringtext4:	
  1120  180F                     STR_4:	
  1121  180F  3469               	retlw	105	;'i'
  1122  1810  346E               	retlw	110	;'n'
  1123  1811  3466               	retlw	102	;'f'
  1124  1812  3400               	retlw	0
  1125                           
  1126                           	psect	stringtext5
  1127  1813                     __pstringtext5:	
  1128  1813                     STR_8:	
  1129  1813  346E               	retlw	110	;'n'
  1130  1814  3461               	retlw	97	;'a'
  1131  1815  346E               	retlw	110	;'n'
  1132  1816  3400               	retlw	0
  1133                           
  1134                           	psect	stringtext6
  1135  1817                     __pstringtext6:	
  1136  1817                     STR_11:	
  1137  1817  346C               	retlw	108	;'l'
  1138  1818  3466               	retlw	102	;'f'
  1139  1819  3400               	retlw	0
  1140                           
  1141                           	psect	stringtext7
  1142  181A                     __pstringtext7:	
  1143  181A                     STR_2:	
  1144  181A  3443               	retlw	67	;'C'
  1145  181B  3431               	retlw	49	;'1'
  1146  181C  3400               	retlw	0
  1147                           
  1148                           	psect	stringtext8
  1149  0000                     __pstringtext8:	
  1150  1817                     
  1151                           ; #config settings
  1152  0000                     
  1153                           	psect	cinit
  1154  005E                     start_initialization:	
  1155  005E                     __initialization:	
  1156                           
  1157                           ; Clear objects allocated to BANK1
  1158  005E  30E3               	movlw	low __pbssBANK1
  1159  005F  0084               	movwf	4
  1160  0060  3000               	movlw	high __pbssBANK1
  1161  0061  0085               	movwf	5
  1162  0062  300C               	movlw	12
  1163  0063  3192  22E5  3180   	fcall	clear_ram0
  1164                           
  1165                           ; Clear objects allocated to BANK2
  1166  0066  0142               	movlb	2	; select bank2
  1167  0067  01C5               	clrf	__pbssBANK2& (0+127)
  1168  0068  01C6               	clrf	(__pbssBANK2+1)& (0+127)
  1169  0069  01C7               	clrf	(__pbssBANK2+2)& (0+127)
  1170  006A  01C8               	clrf	(__pbssBANK2+3)& (0+127)
  1171                           
  1172                           ; Clear objects allocated to BANK3
  1173  006B  30A0               	movlw	low __pbssBANK3
  1174  006C  0084               	movwf	4
  1175  006D  3001               	movlw	high __pbssBANK3
  1176  006E  0085               	movwf	5
  1177  006F  3050               	movlw	80
  1178  0070  3192  22E5         	fcall	clear_ram0
  1179  0072                     end_of_initialization:	
  1180                           ;End of C runtime variable initialization code
  1181                           
  1182  0072                     __end_of__initialization:	
  1183  0072  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1184  0073  0140               	movlb	0
  1185  0074  3193  2B4A         	ljmp	_main	;jump to C main() function
  1186                           
  1187                           	psect	bssBANK1
  1188  00E3                     __pbssBANK1:	
  1189  00E3                     ___fpclassifyf@F463:	
  1190  00E3                     	ds	4
  1191  00E7                     _nout:	
  1192  00E7                     	ds	2
  1193  00E9                     _width:	
  1194  00E9                     	ds	2
  1195  00EB                     _prec:	
  1196  00EB                     	ds	2
  1197  00ED                     _flags:	
  1198  00ED                     	ds	2
  1199                           
  1200                           	psect	bssBANK2
  1201  0145                     __pbssBANK2:	
  1202  0145                     floorf@F524:	
  1203  0145                     	ds	4
  1204                           
  1205                           	psect	bssBANK3
  1206  01A0                     __pbssBANK3:	
  1207  01A0                     _dbuf:	
  1208  01A0                     	ds	80
  1209                           
  1210                           	psect	clrtext
  1211  12E5                     clear_ram0:	
  1212                           ;	Called with FSR0 containing the base address, and
  1213                           ;	WREG with the size to clear
  1214                           
  1215  12E5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1216  12E6                     clrloop0:	
  1217  12E6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1218  12E7  3101               	addfsr 0,1
  1219  12E8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1220  12E9  2AE6               	goto	clrloop0	;have we reached the end yet?
  1221  12EA  3400               	retlw	0	;all done for this memory range, return
  1222                           
  1223                           	psect	cstackBANK2
  1224  0120                     __pcstackBANK2:	
  1225  0120                     ?_ADC_init:	
  1226  0120                     ?___aldiv:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0120                     ADC_init@pin:	
  1230                           ; 4 bytes @ 0x0
  1231                           
  1232  0120                     ___aldiv@divisor:	
  1233                           ; 2 bytes @ 0x0
  1234                           
  1235                           
  1236                           ; 4 bytes @ 0x0
  1237  0120                     	ds	2
  1238  0122                     ??_ADC_init:	
  1239                           
  1240                           ; 1 bytes @ 0x2
  1241  0122                     	ds	2
  1242  0124                     ADC_init@block:	
  1243  0124                     ___aldiv@dividend:	
  1244                           ; 1 bytes @ 0x4
  1245                           
  1246                           
  1247                           ; 4 bytes @ 0x4
  1248  0124                     	ds	1
  1249  0125                     ADC_init@chan:	
  1250                           
  1251                           ; 1 bytes @ 0x5
  1252  0125                     	ds	1
  1253  0126                     ADC_init@pinNum:	
  1254                           
  1255                           ; 2 bytes @ 0x6
  1256  0126                     	ds	2
  1257  0128                     ??___aldiv:	
  1258                           
  1259                           ; 1 bytes @ 0x8
  1260  0128                     	ds	1
  1261  0129                     ___aldiv@counter:	
  1262                           
  1263                           ; 1 bytes @ 0x9
  1264  0129                     	ds	1
  1265  012A                     ___aldiv@sign:	
  1266                           
  1267                           ; 1 bytes @ 0xA
  1268  012A                     	ds	1
  1269  012B                     ___aldiv@quotient:	
  1270                           
  1271                           ; 4 bytes @ 0xB
  1272  012B                     	ds	4
  1273  012F                     ?_init_UART:	
  1274  012F                     init_UART@baud_rate:	
  1275                           ; 1 bytes @ 0xF
  1276                           
  1277                           
  1278                           ; 4 bytes @ 0xF
  1279  012F                     	ds	4
  1280  0133                     ??_init_UART:	
  1281                           
  1282                           ; 1 bytes @ 0x13
  1283  0133                     	ds	16
  1284  0143                     init_UART@spbrgVal:	
  1285                           
  1286                           ; 2 bytes @ 0x23
  1287  0143                     	ds	2
  1288  0145                     ??_main:	
  1289                           
  1290                           	psect	cstackBANK1
  1291  00A0                     __pcstackBANK1:	
  1292                           ; 1 bytes @ 0x25
  1293                           
  1294  00A0                     efgtoa@ou:	
  1295                           
  1296                           ; 4 bytes @ 0x0
  1297  00A0                     	ds	4
  1298  00A4                     _efgtoa$386:	
  1299                           
  1300                           ; 2 bytes @ 0x4
  1301  00A4                     	ds	2
  1302  00A6                     _efgtoa$387:	
  1303                           
  1304                           ; 2 bytes @ 0x6
  1305  00A6                     	ds	2
  1306  00A8                     _efgtoa$392:	
  1307                           
  1308                           ; 2 bytes @ 0x8
  1309  00A8                     	ds	2
  1310  00AA                     _efgtoa$396:	
  1311                           
  1312                           ; 2 bytes @ 0xA
  1313  00AA                     	ds	2
  1314  00AC                     _efgtoa$397:	
  1315                           
  1316                           ; 2 bytes @ 0xC
  1317  00AC                     	ds	2
  1318  00AE                     _efgtoa$398:	
  1319                           
  1320                           ; 2 bytes @ 0xE
  1321  00AE                     	ds	2
  1322  00B0                     efgtoa@t:	
  1323                           
  1324                           ; 2 bytes @ 0x10
  1325  00B0                     	ds	2
  1326  00B2                     efgtoa@pp:	
  1327                           
  1328                           ; 2 bytes @ 0x12
  1329  00B2                     	ds	2
  1330  00B4                     efgtoa@m:	
  1331                           
  1332                           ; 2 bytes @ 0x14
  1333  00B4                     	ds	2
  1334  00B6                     efgtoa@ne:	
  1335                           
  1336                           ; 2 bytes @ 0x16
  1337  00B6                     	ds	2
  1338  00B8                     efgtoa@d:	
  1339                           
  1340                           ; 2 bytes @ 0x18
  1341  00B8                     	ds	2
  1342  00BA                     efgtoa@sign:	
  1343                           
  1344                           ; 2 bytes @ 0x1A
  1345  00BA                     	ds	2
  1346  00BC                     efgtoa@p:	
  1347                           
  1348                           ; 2 bytes @ 0x1C
  1349  00BC                     	ds	2
  1350  00BE                     efgtoa@fp:	
  1351                           
  1352                           ; 1 bytes @ 0x1E
  1353  00BE                     	ds	1
  1354  00BF                     efgtoa@nmode:	
  1355                           
  1356                           ; 1 bytes @ 0x1F
  1357  00BF                     	ds	1
  1358  00C0                     efgtoa@w:	
  1359                           
  1360                           ; 2 bytes @ 0x20
  1361  00C0                     	ds	2
  1362  00C2                     efgtoa@mode:	
  1363                           
  1364                           ; 1 bytes @ 0x22
  1365  00C2                     	ds	1
  1366  00C3                     efgtoa@h:	
  1367                           
  1368                           ; 4 bytes @ 0x23
  1369  00C3                     	ds	4
  1370  00C7                     efgtoa@l:	
  1371                           
  1372                           ; 4 bytes @ 0x27
  1373  00C7                     	ds	4
  1374  00CB                     efgtoa@i:	
  1375                           
  1376                           ; 2 bytes @ 0x2B
  1377  00CB                     	ds	2
  1378  00CD                     efgtoa@g:	
  1379                           
  1380                           ; 4 bytes @ 0x2D
  1381  00CD                     	ds	4
  1382  00D1                     efgtoa@e:	
  1383                           
  1384                           ; 2 bytes @ 0x31
  1385  00D1                     	ds	2
  1386  00D3                     efgtoa@n:	
  1387                           
  1388                           ; 2 bytes @ 0x33
  1389  00D3                     	ds	2
  1390  00D5                     efgtoa@u:	
  1391                           
  1392                           ; 4 bytes @ 0x35
  1393  00D5                     	ds	4
  1394  00D9                     ??_printf:	
  1395                           
  1396                           ; 1 bytes @ 0x39
  1397  00D9                     	ds	3
  1398  00DC                     printf@ap:	
  1399                           
  1400                           ; 1 bytes @ 0x3C
  1401  00DC                     	ds	1
  1402  00DD                     UART_Recieve@decimalADC:	
  1403                           
  1404                           ; 4 bytes @ 0x3D
  1405  00DD                     	ds	4
  1406  00E1                     UART_Recieve@adc_out:	
  1407                           
  1408                           ; 2 bytes @ 0x41
  1409  00E1                     	ds	2
  1410                           
  1411                           	psect	cstackCOMMON
  1412  0070                     __pcstackCOMMON:	
  1413  0070                     ?___fleq:	
  1414  0070                     ?_strcpy:	
  1415                           ; 1 bit 
  1416                           
  1417  0070                     ?_UART_Recieve:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ?_main:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_putch:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ??_putch:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ?_ADC_read:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ?_strlen:	
  1433                           ; 2 bytes @ 0x0
  1434                           
  1435  0070                     ?___fpclassifyf:	
  1436                           ; 2 bytes @ 0x0
  1437                           
  1438  0070                     ?_isupper:	
  1439                           ; 2 bytes @ 0x0
  1440                           
  1441  0070                     ?_strncmp:	
  1442                           ; 2 bytes @ 0x0
  1443                           
  1444  0070                     ?__Umul8_16:	
  1445                           ; 2 bytes @ 0x0
  1446                           
  1447  0070                     ?___awdiv:	
  1448                           ; 2 bytes @ 0x0
  1449                           
  1450  0070                     ?___awmod:	
  1451                           ; 2 bytes @ 0x0
  1452                           
  1453  0070                     ?___flneg:	
  1454                           ; 2 bytes @ 0x0
  1455                           
  1456  0070                     ?___fltol:	
  1457                           ; 4 bytes @ 0x0
  1458                           
  1459  0070                     ?___fladd:	
  1460                           ; 4 bytes @ 0x0
  1461                           
  1462  0070                     ?___fldiv:	
  1463                           ; 4 bytes @ 0x0
  1464                           
  1465  0070                     ?___xxtofl:	
  1466                           ; 4 bytes @ 0x0
  1467                           
  1468  0070                     putch@byte:	
  1469                           ; 4 bytes @ 0x0
  1470                           
  1471  0070                     __Umul8_16@multiplicand:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ___awdiv@divisor:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ___awmod@divisor:	
  1478                           ; 2 bytes @ 0x0
  1479                           
  1480  0070                     isupper@c:	
  1481                           ; 2 bytes @ 0x0
  1482                           
  1483  0070                     strcpy@src:	
  1484                           ; 2 bytes @ 0x0
  1485                           
  1486  0070                     strncmp@_r:	
  1487                           ; 2 bytes @ 0x0
  1488                           
  1489  0070                     ___fleq@ff1:	
  1490                           ; 2 bytes @ 0x0
  1491                           
  1492  0070                     ___flneg@f1:	
  1493                           ; 4 bytes @ 0x0
  1494                           
  1495  0070                     ___fltol@f1:	
  1496                           ; 4 bytes @ 0x0
  1497                           
  1498  0070                     ___fladd@b:	
  1499                           ; 4 bytes @ 0x0
  1500                           
  1501  0070                     ___fldiv@a:	
  1502                           ; 4 bytes @ 0x0
  1503                           
  1504  0070                     ___xxtofl@val:	
  1505                           ; 4 bytes @ 0x0
  1506                           
  1507  0070                     ___fpclassifyf@x:	
  1508                           ; 4 bytes @ 0x0
  1509                           
  1510                           
  1511                           ; 4 bytes @ 0x0
  1512  0070                     	ds	1
  1513  0071                     ?_fputc:	
  1514  0071                     fputc@c:	
  1515                           ; 2 bytes @ 0x1
  1516                           
  1517                           
  1518                           ; 2 bytes @ 0x1
  1519  0071                     	ds	1
  1520  0072                     ??_ADC_read:	
  1521  0072                     ??_strlen:	
  1522                           ; 1 bytes @ 0x2
  1523                           
  1524  0072                     ??_isupper:	
  1525                           ; 1 bytes @ 0x2
  1526                           
  1527  0072                     ??_strcpy:	
  1528                           ; 1 bytes @ 0x2
  1529                           
  1530  0072                     ??__Umul8_16:	
  1531                           ; 1 bytes @ 0x2
  1532                           
  1533  0072                     ___awdiv@dividend:	
  1534                           ; 1 bytes @ 0x2
  1535                           
  1536  0072                     ___awmod@dividend:	
  1537                           ; 2 bytes @ 0x2
  1538                           
  1539  0072                     strncmp@n:	
  1540                           ; 2 bytes @ 0x2
  1541                           
  1542                           
  1543                           ; 2 bytes @ 0x2
  1544  0072                     	ds	1
  1545  0073                     fputc@fp:	
  1546  0073                     strlen@a:	
  1547                           ; 1 bytes @ 0x3
  1548                           
  1549                           
  1550                           ; 1 bytes @ 0x3
  1551  0073                     	ds	1
  1552  0074                     ??_fputc:	
  1553  0074                     ??___fpclassifyf:	
  1554                           ; 1 bytes @ 0x4
  1555                           
  1556  0074                     ??_strncmp:	
  1557                           ; 1 bytes @ 0x4
  1558                           
  1559  0074                     ??___awdiv:	
  1560                           ; 1 bytes @ 0x4
  1561                           
  1562  0074                     ??___awmod:	
  1563                           ; 1 bytes @ 0x4
  1564                           
  1565  0074                     ??___flneg:	
  1566                           ; 1 bytes @ 0x4
  1567                           
  1568  0074                     ??___fltol:	
  1569                           ; 1 bytes @ 0x4
  1570                           
  1571  0074                     ??___xxtofl:	
  1572                           ; 1 bytes @ 0x4
  1573                           
  1574  0074                     strlen@s:	
  1575                           ; 1 bytes @ 0x4
  1576                           
  1577  0074                     strcpy@s:	
  1578                           ; 1 bytes @ 0x4
  1579                           
  1580  0074                     __Umul8_16@product:	
  1581                           ; 2 bytes @ 0x4
  1582                           
  1583  0074                     ___fleq@ff2:	
  1584                           ; 2 bytes @ 0x4
  1585                           
  1586  0074                     ___fladd@a:	
  1587                           ; 4 bytes @ 0x4
  1588                           
  1589  0074                     ___fldiv@b:	
  1590                           ; 4 bytes @ 0x4
  1591                           
  1592                           
  1593                           ; 4 bytes @ 0x4
  1594  0074                     	ds	1
  1595  0075                     ___awdiv@counter:	
  1596  0075                     ___awmod@counter:	
  1597                           ; 1 bytes @ 0x5
  1598                           
  1599  0075                     strncmp@_l:	
  1600                           ; 1 bytes @ 0x5
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x5
  1604  0075                     	ds	1
  1605  0076                     ?_tolower:	
  1606  0076                     ___awdiv@sign:	
  1607                           ; 2 bytes @ 0x6
  1608                           
  1609  0076                     ___awmod@sign:	
  1610                           ; 1 bytes @ 0x6
  1611                           
  1612  0076                     strcpy@d:	
  1613                           ; 1 bytes @ 0x6
  1614                           
  1615  0076                     strncmp@r:	
  1616                           ; 1 bytes @ 0x6
  1617                           
  1618  0076                     tolower@c:	
  1619                           ; 2 bytes @ 0x6
  1620                           
  1621  0076                     __Umul8_16@word_mpld:	
  1622                           ; 2 bytes @ 0x6
  1623                           
  1624                           
  1625                           ; 2 bytes @ 0x6
  1626  0076                     	ds	1
  1627  0077                     strcpy@dest:	
  1628  0077                     ___awdiv@quotient:	
  1629                           ; 1 bytes @ 0x7
  1630                           
  1631                           
  1632                           ; 2 bytes @ 0x7
  1633  0077                     	ds	1
  1634  0078                     ??_tolower:	
  1635  0078                     ??___fleq:	
  1636                           ; 1 bytes @ 0x8
  1637                           
  1638  0078                     ??___fldiv:	
  1639                           ; 1 bytes @ 0x8
  1640                           
  1641  0078                     ___fladd@signs:	
  1642                           ; 1 bytes @ 0x8
  1643                           
  1644  0078                     ___xxtofl@sign:	
  1645                           ; 1 bytes @ 0x8
  1646                           
  1647  0078                     strncmp@l:	
  1648                           ; 1 bytes @ 0x8
  1649                           
  1650  0078                     __Umul8_16@multiplier:	
  1651                           ; 1 bytes @ 0x8
  1652                           
  1653                           
  1654                           ; 1 bytes @ 0x8
  1655  0078                     	ds	1
  1656  0079                     ?_fputs:	
  1657  0079                     ___fltol@sign1:	
  1658                           ; 2 bytes @ 0x9
  1659                           
  1660  0079                     ___fladd@aexp:	
  1661                           ; 1 bytes @ 0x9
  1662                           
  1663  0079                     ___xxtofl@exp:	
  1664                           ; 1 bytes @ 0x9
  1665                           
  1666  0079                     fputs@fp:	
  1667                           ; 1 bytes @ 0x9
  1668                           
  1669                           
  1670                           ; 1 bytes @ 0x9
  1671  0079                     	ds	1
  1672  007A                     ??_fputs:	
  1673  007A                     ___fltol@exp1:	
  1674                           ; 1 bytes @ 0xA
  1675                           
  1676  007A                     ___fladd@bexp:	
  1677                           ; 1 bytes @ 0xA
  1678                           
  1679  007A                     ___xxtofl@arg:	
  1680                           ; 1 bytes @ 0xA
  1681                           
  1682                           
  1683                           ; 4 bytes @ 0xA
  1684  007A                     	ds	1
  1685  007B                     ___fladd@grs:	
  1686                           
  1687                           ; 1 bytes @ 0xB
  1688  007B                     	ds	1
  1689  007C                     _tolower$797:	
  1690                           
  1691                           ; 2 bytes @ 0xC
  1692  007C                     	ds	1
  1693  007D                     ??_pad:	
  1694                           
  1695                           ; 1 bytes @ 0xD
  1696  007D                     	ds	1
  1697  007E                     ??_UART_Recieve:	
  1698  007E                     ??___flsub:	
  1699                           ; 1 bytes @ 0xE
  1700                           
  1701                           
  1702                           	psect	cstackBANK0
  1703  0020                     __pcstackBANK0:	
  1704                           ; 1 bytes @ 0xE
  1705                           
  1706  0020                     ??___fladd:	
  1707  0020                     ?___flmul:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710  0020                     fputs@c:	
  1711                           ; 4 bytes @ 0x0
  1712                           
  1713  0020                     ___fpclassifyf@e:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716  0020                     ___fldiv@rem:	
  1717                           ; 2 bytes @ 0x0
  1718                           
  1719  0020                     ___flmul@b:	
  1720                           ; 4 bytes @ 0x0
  1721                           
  1722                           
  1723                           ; 4 bytes @ 0x0
  1724  0020                     	ds	1
  1725  0021                     fputs@i:	
  1726                           
  1727                           ; 2 bytes @ 0x1
  1728  0021                     	ds	1
  1729  0022                     ___fpclassifyf@u:	
  1730                           
  1731                           ; 4 bytes @ 0x2
  1732  0022                     	ds	1
  1733  0023                     fputs@s:	
  1734                           
  1735                           ; 1 bytes @ 0x3
  1736  0023                     	ds	1
  1737  0024                     ?_pad:	
  1738  0024                     pad@buf:	
  1739                           ; 2 bytes @ 0x4
  1740                           
  1741  0024                     ___fldiv@sign:	
  1742                           ; 1 bytes @ 0x4
  1743                           
  1744  0024                     ___flmul@a:	
  1745                           ; 1 bytes @ 0x4
  1746                           
  1747                           
  1748                           ; 4 bytes @ 0x4
  1749  0024                     	ds	1
  1750  0025                     pad@p:	
  1751  0025                     ___fldiv@new_exp:	
  1752                           ; 2 bytes @ 0x5
  1753                           
  1754                           
  1755                           ; 2 bytes @ 0x5
  1756  0025                     	ds	2
  1757  0027                     pad@i:	
  1758  0027                     ___fldiv@grs:	
  1759                           ; 2 bytes @ 0x7
  1760                           
  1761                           
  1762                           ; 4 bytes @ 0x7
  1763  0027                     	ds	1
  1764  0028                     ??___flmul:	
  1765                           
  1766                           ; 1 bytes @ 0x8
  1767  0028                     	ds	1
  1768  0029                     pad@w:	
  1769                           
  1770                           ; 2 bytes @ 0x9
  1771  0029                     	ds	2
  1772  002B                     pad@fp:	
  1773  002B                     ___fldiv@bexp:	
  1774                           ; 1 bytes @ 0xB
  1775                           
  1776                           
  1777                           ; 1 bytes @ 0xB
  1778  002B                     	ds	1
  1779  002C                     ___fldiv@aexp:	
  1780                           
  1781                           ; 1 bytes @ 0xC
  1782  002C                     	ds	1
  1783  002D                     ?_floorf:	
  1784  002D                     ___flmul@sign:	
  1785                           ; 4 bytes @ 0xD
  1786                           
  1787  002D                     floorf@x:	
  1788                           ; 1 bytes @ 0xD
  1789                           
  1790                           
  1791                           ; 4 bytes @ 0xD
  1792  002D                     	ds	1
  1793  002E                     ___flmul@grs:	
  1794                           
  1795                           ; 4 bytes @ 0xE
  1796  002E                     	ds	3
  1797  0031                     ??_floorf:	
  1798                           
  1799                           ; 1 bytes @ 0x11
  1800  0031                     	ds	1
  1801  0032                     ___flmul@aexp:	
  1802                           
  1803                           ; 1 bytes @ 0x12
  1804  0032                     	ds	1
  1805  0033                     ___flmul@bexp:	
  1806                           
  1807                           ; 1 bytes @ 0x13
  1808  0033                     	ds	1
  1809  0034                     ___flmul@prod:	
  1810                           
  1811                           ; 4 bytes @ 0x14
  1812  0034                     	ds	3
  1813  0037                     floorf@m:	
  1814                           
  1815                           ; 4 bytes @ 0x17
  1816  0037                     	ds	1
  1817  0038                     ___flmul@temp:	
  1818                           
  1819                           ; 2 bytes @ 0x18
  1820  0038                     	ds	2
  1821  003A                     ?___flge:	
  1822  003A                     ?___flsub:	
  1823                           ; 1 bit 
  1824                           
  1825  003A                     ___flge@ff1:	
  1826                           ; 4 bytes @ 0x1A
  1827                           
  1828  003A                     ___flsub@a:	
  1829                           ; 4 bytes @ 0x1A
  1830                           
  1831                           
  1832                           ; 4 bytes @ 0x1A
  1833  003A                     	ds	1
  1834  003B                     floorf@e:	
  1835                           
  1836                           ; 2 bytes @ 0x1B
  1837  003B                     	ds	2
  1838  003D                     floorf@u:	
  1839                           
  1840                           ; 4 bytes @ 0x1D
  1841  003D                     	ds	1
  1842  003E                     ___flge@ff2:	
  1843  003E                     ___flsub@b:	
  1844                           ; 4 bytes @ 0x1E
  1845                           
  1846                           
  1847                           ; 4 bytes @ 0x1E
  1848  003E                     	ds	4
  1849  0042                     ??___flge:	
  1850                           
  1851                           ; 1 bytes @ 0x22
  1852  0042                     	ds	4
  1853  0046                     ?_efgtoa:	
  1854  0046                     efgtoa@f:	
  1855                           ; 2 bytes @ 0x26
  1856                           
  1857                           
  1858                           ; 4 bytes @ 0x26
  1859  0046                     	ds	4
  1860  004A                     efgtoa@c:	
  1861                           
  1862                           ; 1 bytes @ 0x2A
  1863  004A                     	ds	1
  1864  004B                     ??_efgtoa:	
  1865                           
  1866                           ; 1 bytes @ 0x2B
  1867  004B                     	ds	4
  1868  004F                     ?_vfpfcnvrt:	
  1869  004F                     vfpfcnvrt@fmt:	
  1870                           ; 2 bytes @ 0x2F
  1871                           
  1872                           
  1873                           ; 1 bytes @ 0x2F
  1874  004F                     	ds	1
  1875  0050                     vfpfcnvrt@ap:	
  1876                           
  1877                           ; 1 bytes @ 0x30
  1878  0050                     	ds	1
  1879  0051                     ??_vfpfcnvrt:	
  1880                           
  1881                           ; 1 bytes @ 0x31
  1882  0051                     	ds	6
  1883  0057                     _vfpfcnvrt$415:	
  1884                           
  1885                           ; 2 bytes @ 0x37
  1886  0057                     	ds	2
  1887  0059                     vfpfcnvrt@f:	
  1888                           
  1889                           ; 4 bytes @ 0x39
  1890  0059                     	ds	4
  1891  005D                     vfpfcnvrt@ct:	
  1892                           
  1893                           ; 3 bytes @ 0x3D
  1894  005D                     	ds	3
  1895  0060                     vfpfcnvrt@c:	
  1896                           
  1897                           ; 1 bytes @ 0x40
  1898  0060                     	ds	1
  1899  0061                     vfpfcnvrt@fp:	
  1900                           
  1901                           ; 1 bytes @ 0x41
  1902  0061                     	ds	1
  1903  0062                     ?_vfprintf:	
  1904  0062                     vfprintf@fmt:	
  1905                           ; 2 bytes @ 0x42
  1906                           
  1907                           
  1908                           ; 2 bytes @ 0x42
  1909  0062                     	ds	2
  1910  0064                     vfprintf@ap:	
  1911                           
  1912                           ; 1 bytes @ 0x44
  1913  0064                     	ds	1
  1914  0065                     ??_vfprintf:	
  1915                           
  1916                           ; 1 bytes @ 0x45
  1917  0065                     	ds	2
  1918  0067                     vfprintf@fp:	
  1919                           
  1920                           ; 1 bytes @ 0x47
  1921  0067                     	ds	1
  1922  0068                     vfprintf@cfmt:	
  1923                           
  1924                           ; 2 bytes @ 0x48
  1925  0068                     	ds	2
  1926  006A                     ?_printf:	
  1927  006A                     printf@fmt:	
  1928                           ; 2 bytes @ 0x4A
  1929                           
  1930                           
  1931                           ; 2 bytes @ 0x4A
  1932  006A                     	ds	6
  1933                           
  1934                           	psect	maintext
  1935  134A                     __pmaintext:	
  1936 ;;
  1937 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1938 ;;
  1939 ;; *************** function _main *****************
  1940 ;; Defined at:
  1941 ;;		line 75 in file "main.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : B3F/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels required when called:   11
  1961 ;; This function calls:
  1962 ;;		_ADC_init
  1963 ;;		_init_UART
  1964 ;; This function is called by:
  1965 ;;		Startup code after reset
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           
  1970                           ;psect for function _main
  1971  134A                     _main:	
  1972                           
  1973                           ;main.c: 77:     TRISC = 0b00010000;
  1974                           
  1975                           ;incstack = 0
  1976                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1977  134A  3010               	movlw	16
  1978  134B  0140               	movlb	0	; select bank0
  1979  134C  0094               	movwf	20	;volatile
  1980                           
  1981                           ;main.c: 78:     TRISA = 0x00;
  1982  134D  0192               	clrf	18	;volatile
  1983                           
  1984                           ;main.c: 80:     init_UART(115200);
  1985  134E  3000               	movlw	0
  1986  134F  0142               	movlb	2	; select bank2
  1987  1350  00B2               	movwf	(init_UART@baud_rate+3)^(0+256)
  1988  1351  3001               	movlw	1
  1989  1352  00B1               	movwf	(init_UART@baud_rate+2)^(0+256)
  1990  1353  30C2               	movlw	194
  1991  1354  00B0               	movwf	(init_UART@baud_rate+1)^(0+256)
  1992  1355  3000               	movlw	0
  1993  1356  00AF               	movwf	init_UART@baud_rate^(0+256)
  1994  1357  3195  25B2  3193   	fcall	_init_UART
  1995                           
  1996                           ;main.c: 82:     ADC_init("C1");
  1997  135A  301A               	movlw	low (STR_2| (0+32768))
  1998  135B  0142               	movlb	2	; select bank2
  1999  135C  00A0               	movwf	ADC_init@pin^(0+256)
  2000  135D  3098               	movlw	high (STR_2| (0+32768))
  2001  135E  00A1               	movwf	(ADC_init@pin^(0+256)+1)
  2002  135F  3188  2039  3193   	fcall	_ADC_init
  2003  1362                     l25:	
  2004                           ;main.c: 84:     while(1){
  2005                           
  2006                           
  2007                           ;main.c: 92:     }
  2008  1362  2B62               	goto	l25
  2009  1363                     __end_of_main:	
  2010                           
  2011                           	psect	text1
  2012  15B2                     __ptext1:	
  2013 ;; *************** function _init_UART *****************
  2014 ;; Defined at:
  2015 ;;		line 5 in file "UART_funcs.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  baud_rate       4   15[BANK2 ] long 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  clock           4    0        long 
  2020 ;;  spbrgVal        2   35[BANK2 ] unsigned int 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2030 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2031 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  2032 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  2033 ;;      Totals:         0       0       0      22       0       0       0       0       0       0       0       0       
      +0       0
  2034 ;;Total ram usage:       22 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:   10
  2037 ;; This function calls:
  2038 ;;		___aldiv
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           
  2045                           ;psect for function _init_UART
  2046  15B2                     _init_UART:	
  2047                           
  2048                           ;UART_funcs.c: 7:     ANSELC = 0x00;
  2049                           
  2050                           ;incstack = 0
  2051                           ; Regs used in _init_UART: [wreg+status,2+status,0+pclath+cstack]
  2052  15B2  017E               	movlb	62	; select bank62
  2053  15B3  01CE               	clrf	78	;volatile
  2054                           
  2055                           ;UART_funcs.c: 10:     RX1DTPPS = 0x14;
  2056  15B4  3014               	movlw	20
  2057  15B5  017D               	movlb	61	; select bank61
  2058  15B6  00CB               	movwf	75	;volatile
  2059                           
  2060                           ;UART_funcs.c: 11:     RC5PPS = 0x0F;
  2061  15B7  300F               	movlw	15
  2062  15B8  017E               	movlb	62	; select bank62
  2063  15B9  00A5               	movwf	37	;volatile
  2064                           
  2065                           ;UART_funcs.c: 14:     unsigned int spbrgVal = (clock - baud_rate * 16) / (baud_rate * 1
      +                          6);
  2066  15BA  0142               	movlb	2	; select bank2
  2067  15BB  082F               	movf	init_UART@baud_rate^(0+256),w
  2068  15BC  00B3               	movwf	??_init_UART^(0+256)
  2069  15BD  0830               	movf	(init_UART@baud_rate+1)^(0+256),w
  2070  15BE  00B4               	movwf	(??_init_UART^(0+256)+1)
  2071  15BF  0831               	movf	(init_UART@baud_rate+2)^(0+256),w
  2072  15C0  00B5               	movwf	(??_init_UART^(0+256)+2)
  2073  15C1  0832               	movf	(init_UART@baud_rate+3)^(0+256),w
  2074  15C2  00B6               	movwf	(??_init_UART^(0+256)+3)
  2075  15C3  3004               	movlw	4
  2076  15C4                     u5325:	
  2077  15C4  35B3               	lslf	??_init_UART^(0+256),f
  2078  15C5  0DB4               	rlf	(??_init_UART^(0+256)+1),f
  2079  15C6  0DB5               	rlf	(??_init_UART^(0+256)+2),f
  2080  15C7  0DB6               	rlf	(??_init_UART^(0+256)+3),f
  2081  15C8  0B89               	decfsz	9,f
  2082  15C9  2DC4               	goto	u5325
  2083  15CA  0836               	movf	(??_init_UART+3)^(0+256),w
  2084  15CB  00A3               	movwf	(___aldiv@divisor+3)^(0+256)
  2085  15CC  0835               	movf	(??_init_UART+2)^(0+256),w
  2086  15CD  00A2               	movwf	(___aldiv@divisor+2)^(0+256)
  2087  15CE  0834               	movf	(??_init_UART+1)^(0+256),w
  2088  15CF  00A1               	movwf	(___aldiv@divisor+1)^(0+256)
  2089  15D0  0833               	movf	??_init_UART^(0+256),w
  2090  15D1  00A0               	movwf	___aldiv@divisor^(0+256)
  2091  15D2  082F               	movf	init_UART@baud_rate^(0+256),w
  2092  15D3  00B7               	movwf	(??_init_UART+4)^(0+256)
  2093  15D4  0830               	movf	(init_UART@baud_rate+1)^(0+256),w
  2094  15D5  00B8               	movwf	((??_init_UART+4)^(0+256)+1)
  2095  15D6  0831               	movf	(init_UART@baud_rate+2)^(0+256),w
  2096  15D7  00B9               	movwf	((??_init_UART+4)^(0+256)+2)
  2097  15D8  0832               	movf	(init_UART@baud_rate+3)^(0+256),w
  2098  15D9  00BA               	movwf	((??_init_UART+4)^(0+256)+3)
  2099  15DA  3004               	movlw	4
  2100  15DB                     u5335:	
  2101  15DB  35B7               	lslf	(??_init_UART+4)^(0+256),f
  2102  15DC  0DB8               	rlf	((??_init_UART+4)^(0+256)+1),f
  2103  15DD  0DB9               	rlf	((??_init_UART+4)^(0+256)+2),f
  2104  15DE  0DBA               	rlf	((??_init_UART+4)^(0+256)+3),f
  2105  15DF  0B89               	decfsz	9,f
  2106  15E0  2DDB               	goto	u5335
  2107  15E1  3000               	movlw	0
  2108  15E2  00BB               	movwf	(??_init_UART+8)^(0+256)
  2109  15E3  3048               	movlw	72
  2110  15E4  00BC               	movwf	((??_init_UART+8)^(0+256)+1)
  2111  15E5  30E8               	movlw	232
  2112  15E6  00BD               	movwf	((??_init_UART+8)^(0+256)+2)
  2113  15E7  3001               	movlw	1
  2114  15E8  00BE               	movwf	((??_init_UART+8)^(0+256)+3)
  2115  15E9  0837               	movf	(??_init_UART+4)^(0+256),w
  2116  15EA  02BB               	subwf	(??_init_UART+8)^(0+256),f
  2117  15EB  0838               	movf	(??_init_UART+5)^(0+256),w
  2118  15EC  3BBC               	subwfb	((??_init_UART+8)^(0+256)+1),f
  2119  15ED  0839               	movf	(??_init_UART+6)^(0+256),w
  2120  15EE  3BBD               	subwfb	((??_init_UART+8)^(0+256)+2),f
  2121  15EF  083A               	movf	(??_init_UART+7)^(0+256),w
  2122  15F0  3BBE               	subwfb	((??_init_UART+8)^(0+256)+3),f
  2123  15F1  083E               	movf	(??_init_UART+11)^(0+256),w
  2124  15F2  00A7               	movwf	(___aldiv@dividend+3)^(0+256)
  2125  15F3  083D               	movf	(??_init_UART+10)^(0+256),w
  2126  15F4  00A6               	movwf	(___aldiv@dividend+2)^(0+256)
  2127  15F5  083C               	movf	(??_init_UART+9)^(0+256),w
  2128  15F6  00A5               	movwf	(___aldiv@dividend+1)^(0+256)
  2129  15F7  083B               	movf	(??_init_UART+8)^(0+256),w
  2130  15F8  00A4               	movwf	___aldiv@dividend^(0+256)
  2131  15F9  3196  26E9         	fcall	___aldiv
  2132  15FB  0142               	movlb	2	; select bank2
  2133  15FC  0821               	movf	(?___aldiv+1)^(0+256),w
  2134  15FD  00C4               	movwf	(init_UART@spbrgVal+1)^(0+256)
  2135  15FE  0820               	movf	?___aldiv^(0+256),w
  2136  15FF  00C3               	movwf	init_UART@spbrgVal^(0+256)
  2137                           
  2138                           ;UART_funcs.c: 15:     SPBRG = spbrgVal;
  2139  1600  0843               	movf	init_UART@spbrgVal^(0+256),w
  2140  1601  009B               	movwf	27	;volatile
  2141                           
  2142                           ;UART_funcs.c: 17:     PEIE = 1;
  2143  1602  170B               	bsf	11,6	;volatile
  2144                           
  2145                           ;UART_funcs.c: 18:     INTCONbits.GIE =1;
  2146  1603  178B               	bsf	11,7	;volatile
  2147                           
  2148                           ;UART_funcs.c: 20:     TX1STA = 0b10100110;
  2149  1604  30A6               	movlw	166
  2150  1605  009E               	movwf	30	;volatile
  2151                           
  2152                           ;UART_funcs.c: 21:     RC1STA = 0b10010000;
  2153  1606  3090               	movlw	144
  2154  1607  009D               	movwf	29	;volatile
  2155                           
  2156                           ;UART_funcs.c: 22:     BAUD1CON = 0b00000000;
  2157  1608  019F               	clrf	31	;volatile
  2158                           
  2159                           ;UART_funcs.c: 24:     RC1IE = 1;
  2160  1609  014E               	movlb	14	; select bank14
  2161  160A  1699               	bsf	25,5	;volatile
  2162  160B  0008               	return
  2163  160C                     __end_of_init_UART:	
  2164                           
  2165                           	psect	text2
  2166  16E9                     __ptext2:	
  2167 ;; *************** function ___aldiv *****************
  2168 ;; Defined at:
  2169 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aldiv.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  divisor         4    0[BANK2 ] long 
  2172 ;;  dividend        4    4[BANK2 ] long 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  quotient        4   11[BANK2 ] long 
  2175 ;;  sign            1   10[BANK2 ] unsigned char 
  2176 ;;  counter         1    9[BANK2 ] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  4    0[BANK2 ] long 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2186 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  2187 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  2188 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2189 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0
  2190 ;;Total ram usage:       15 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    9
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_init_UART
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function ___aldiv
  2202  16E9                     ___aldiv:	
  2203                           
  2204                           ;incstack = 0
  2205                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2206  16E9  0142               	movlb	2	; select bank2
  2207  16EA  01AA               	clrf	___aldiv@sign^(0+256)
  2208  16EB  1FA3               	btfss	(___aldiv@divisor+3)^(0+256),7
  2209  16EC  2EFA               	goto	l408
  2210  16ED  09A0               	comf	___aldiv@divisor^(0+256),f
  2211  16EE  09A1               	comf	(___aldiv@divisor+1)^(0+256),f
  2212  16EF  09A2               	comf	(___aldiv@divisor+2)^(0+256),f
  2213  16F0  09A3               	comf	(___aldiv@divisor+3)^(0+256),f
  2214  16F1  0AA0               	incf	___aldiv@divisor^(0+256),f
  2215  16F2  1903               	skipnz
  2216  16F3  0AA1               	incf	(___aldiv@divisor+1)^(0+256),f
  2217  16F4  1903               	skipnz
  2218  16F5  0AA2               	incf	(___aldiv@divisor+2)^(0+256),f
  2219  16F6  1903               	skipnz
  2220  16F7  0AA3               	incf	(___aldiv@divisor+3)^(0+256),f
  2221  16F8  01AA               	clrf	___aldiv@sign^(0+256)
  2222  16F9  0AAA               	incf	___aldiv@sign^(0+256),f
  2223  16FA                     l408:	
  2224  16FA  1FA7               	btfss	(___aldiv@dividend+3)^(0+256),7
  2225  16FB  2F0B               	goto	l3472
  2226  16FC  09A4               	comf	___aldiv@dividend^(0+256),f
  2227  16FD  09A5               	comf	(___aldiv@dividend+1)^(0+256),f
  2228  16FE  09A6               	comf	(___aldiv@dividend+2)^(0+256),f
  2229  16FF  09A7               	comf	(___aldiv@dividend+3)^(0+256),f
  2230  1700  0AA4               	incf	___aldiv@dividend^(0+256),f
  2231  1701  1903               	skipnz
  2232  1702  0AA5               	incf	(___aldiv@dividend+1)^(0+256),f
  2233  1703  1903               	skipnz
  2234  1704  0AA6               	incf	(___aldiv@dividend+2)^(0+256),f
  2235  1705  1903               	skipnz
  2236  1706  0AA7               	incf	(___aldiv@dividend+3)^(0+256),f
  2237  1707  3001               	movlw	1
  2238  1708  00A8               	movwf	??___aldiv^(0+256)
  2239  1709  0828               	movf	??___aldiv^(0+256),w
  2240  170A  06AA               	xorwf	___aldiv@sign^(0+256),f
  2241  170B                     l3472:	
  2242  170B  3000               	movlw	0
  2243  170C  00AE               	movwf	(___aldiv@quotient+3)^(0+256)
  2244  170D  3000               	movlw	0
  2245  170E  00AD               	movwf	(___aldiv@quotient+2)^(0+256)
  2246  170F  3000               	movlw	0
  2247  1710  00AC               	movwf	(___aldiv@quotient+1)^(0+256)
  2248  1711  3000               	movlw	0
  2249  1712  00AB               	movwf	___aldiv@quotient^(0+256)
  2250  1713  0823               	movf	(___aldiv@divisor+3)^(0+256),w
  2251  1714  0422               	iorwf	(___aldiv@divisor+2)^(0+256),w
  2252  1715  0421               	iorwf	(___aldiv@divisor+1)^(0+256),w
  2253  1716  0420               	iorwf	___aldiv@divisor^(0+256),w
  2254  1717  1903               	skipnz
  2255  1718  2F54               	goto	l3494
  2256  1719  01A9               	clrf	___aldiv@counter^(0+256)
  2257  171A  0AA9               	incf	___aldiv@counter^(0+256),f
  2258  171B                     l3480:	
  2259  171B  1BA3               	btfsc	(___aldiv@divisor+3)^(0+256),7
  2260  171C  2F29               	goto	l3482
  2261  171D  3001               	movlw	1
  2262  171E                     u5245:	
  2263  171E  35A0               	lslf	___aldiv@divisor^(0+256),f
  2264  171F  0DA1               	rlf	(___aldiv@divisor+1)^(0+256),f
  2265  1720  0DA2               	rlf	(___aldiv@divisor+2)^(0+256),f
  2266  1721  0DA3               	rlf	(___aldiv@divisor+3)^(0+256),f
  2267  1722  0B89               	decfsz	9,f
  2268  1723  2F1E               	goto	u5245
  2269  1724  3001               	movlw	1
  2270  1725  00A8               	movwf	??___aldiv^(0+256)
  2271  1726  0828               	movf	??___aldiv^(0+256),w
  2272  1727  07A9               	addwf	___aldiv@counter^(0+256),f
  2273  1728  2F1B               	goto	l3480
  2274  1729                     l3482:	
  2275  1729  3001               	movlw	1
  2276  172A                     u5265:	
  2277  172A  35AB               	lslf	___aldiv@quotient^(0+256),f
  2278  172B  0DAC               	rlf	(___aldiv@quotient+1)^(0+256),f
  2279  172C  0DAD               	rlf	(___aldiv@quotient+2)^(0+256),f
  2280  172D  0DAE               	rlf	(___aldiv@quotient+3)^(0+256),f
  2281  172E  0B89               	decfsz	9,f
  2282  172F  2F2A               	goto	u5265
  2283  1730  0823               	movf	(___aldiv@divisor+3)^(0+256),w
  2284  1731  0227               	subwf	(___aldiv@dividend+3)^(0+256),w
  2285  1732  1D03               	skipz
  2286  1733  2F3E               	goto	u5275
  2287  1734  0822               	movf	(___aldiv@divisor+2)^(0+256),w
  2288  1735  0226               	subwf	(___aldiv@dividend+2)^(0+256),w
  2289  1736  1D03               	skipz
  2290  1737  2F3E               	goto	u5275
  2291  1738  0821               	movf	(___aldiv@divisor+1)^(0+256),w
  2292  1739  0225               	subwf	(___aldiv@dividend+1)^(0+256),w
  2293  173A  1D03               	skipz
  2294  173B  2F3E               	goto	u5275
  2295  173C  0820               	movf	___aldiv@divisor^(0+256),w
  2296  173D  0224               	subwf	___aldiv@dividend^(0+256),w
  2297  173E                     u5275:	
  2298  173E  1C03               	skipc
  2299  173F  2F49               	goto	l3490
  2300  1740  0820               	movf	___aldiv@divisor^(0+256),w
  2301  1741  02A4               	subwf	___aldiv@dividend^(0+256),f
  2302  1742  0821               	movf	(___aldiv@divisor+1)^(0+256),w
  2303  1743  3BA5               	subwfb	(___aldiv@dividend+1)^(0+256),f
  2304  1744  0822               	movf	(___aldiv@divisor+2)^(0+256),w
  2305  1745  3BA6               	subwfb	(___aldiv@dividend+2)^(0+256),f
  2306  1746  0823               	movf	(___aldiv@divisor+3)^(0+256),w
  2307  1747  3BA7               	subwfb	(___aldiv@dividend+3)^(0+256),f
  2308  1748  142B               	bsf	___aldiv@quotient^(0+256),0
  2309  1749                     l3490:	
  2310  1749  3001               	movlw	1
  2311  174A                     u5285:	
  2312  174A  36A3               	lsrf	(___aldiv@divisor+3)^(0+256),f
  2313  174B  0CA2               	rrf	(___aldiv@divisor+2)^(0+256),f
  2314  174C  0CA1               	rrf	(___aldiv@divisor+1)^(0+256),f
  2315  174D  0CA0               	rrf	___aldiv@divisor^(0+256),f
  2316  174E  0B89               	decfsz	9,f
  2317  174F  2F4A               	goto	u5285
  2318  1750  3001               	movlw	1
  2319  1751  02A9               	subwf	___aldiv@counter^(0+256),f
  2320  1752  1D03               	btfss	3,2
  2321  1753  2F29               	goto	l3482
  2322  1754                     l3494:	
  2323  1754  082A               	movf	___aldiv@sign^(0+256),w
  2324  1755  1903               	btfsc	3,2
  2325  1756  2F62               	goto	l3498
  2326  1757  09AB               	comf	___aldiv@quotient^(0+256),f
  2327  1758  09AC               	comf	(___aldiv@quotient+1)^(0+256),f
  2328  1759  09AD               	comf	(___aldiv@quotient+2)^(0+256),f
  2329  175A  09AE               	comf	(___aldiv@quotient+3)^(0+256),f
  2330  175B  0AAB               	incf	___aldiv@quotient^(0+256),f
  2331  175C  1903               	skipnz
  2332  175D  0AAC               	incf	(___aldiv@quotient+1)^(0+256),f
  2333  175E  1903               	skipnz
  2334  175F  0AAD               	incf	(___aldiv@quotient+2)^(0+256),f
  2335  1760  1903               	skipnz
  2336  1761  0AAE               	incf	(___aldiv@quotient+3)^(0+256),f
  2337  1762                     l3498:	
  2338  1762  082E               	movf	(___aldiv@quotient+3)^(0+256),w
  2339  1763  00A3               	movwf	(?___aldiv+3)^(0+256)
  2340  1764  082D               	movf	(___aldiv@quotient+2)^(0+256),w
  2341  1765  00A2               	movwf	(?___aldiv+2)^(0+256)
  2342  1766  082C               	movf	(___aldiv@quotient+1)^(0+256),w
  2343  1767  00A1               	movwf	(?___aldiv+1)^(0+256)
  2344  1768  082B               	movf	___aldiv@quotient^(0+256),w
  2345  1769  00A0               	movwf	?___aldiv^(0+256)
  2346  176A  0008               	return
  2347  176B                     __end_of___aldiv:	
  2348                           
  2349                           	psect	text3
  2350  0839                     __ptext3:	
  2351 ;; *************** function _ADC_init *****************
  2352 ;; Defined at:
  2353 ;;		line 5 in file "ADC_funcs.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  pin             2    0[BANK2 ] PTR unsigned char 
  2356 ;;		 -> STR_2(3), 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  pinNum          2    6[BANK2 ] int 
  2359 ;;  chan            1    5[BANK2 ] unsigned char 
  2360 ;;  block           1    4[BANK2 ] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      unsigned char 
  2363 ;; Registers used:
  2364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2370 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2373 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  2374 ;;Total ram usage:        8 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    9
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_main
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           
  2385                           ;psect for function _ADC_init
  2386  0839                     _ADC_init:	
  2387                           
  2388                           ;ADC_funcs.c: 6:     char block = pin[0];
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0+pclath]
  2392  0839  0142               	movlb	2	; select bank2
  2393  083A  0820               	movf	ADC_init@pin^(0+256),w
  2394  083B  0084               	movwf	4
  2395  083C  0821               	movf	(ADC_init@pin+1)^(0+256),w
  2396  083D  0085               	movwf	5
  2397  083E  0800               	movf	0,w	;code access
  2398  083F  00A2               	movwf	??_ADC_init^(0+256)
  2399  0840  0822               	movf	??_ADC_init^(0+256),w
  2400  0841  00A4               	movwf	ADC_init@block^(0+256)
  2401                           
  2402                           ;ADC_funcs.c: 7:     int pinNum = pin[1] - '0';
  2403  0842  0821               	movf	(ADC_init@pin+1)^(0+256),w
  2404  0843  00A3               	movwf	(??_ADC_init^(0+256)+1)
  2405  0844  0820               	movf	ADC_init@pin^(0+256),w
  2406  0845  00A2               	movwf	??_ADC_init^(0+256)
  2407  0846  3001               	movlw	1
  2408  0847  0722               	addwf	??_ADC_init^(0+256),w
  2409  0848  0084               	movwf	4
  2410  0849  0823               	movf	(??_ADC_init^(0+256)+1),w
  2411  084A  1803               	skipnc
  2412  084B  0A23               	incf	(??_ADC_init^(0+256)+1),w
  2413  084C  0085               	movwf	5
  2414  084D  0800               	movf	0,w	;code access
  2415  084E  3ED0               	addlw	208
  2416  084F  00A6               	movwf	ADC_init@pinNum^(0+256)
  2417  0850  30FF               	movlw	255
  2418  0851  1803               	skipnc
  2419  0852  3000               	movlw	0
  2420  0853  00A7               	movwf	(ADC_init@pinNum^(0+256)+1)
  2421                           
  2422                           ;ADC_funcs.c: 8:     char chan ;;ADC_funcs.c: 11:     PIR1bits.ADIF = 0;
  2423  0854  014E               	movlb	14	; select bank14
  2424  0855  100D               	bcf	13,0	;volatile
  2425                           
  2426                           ;ADC_funcs.c: 14:     PIE1bits.ADIE = 1;
  2427  0856  1417               	bsf	23,0	;volatile
  2428                           
  2429                           ;ADC_funcs.c: 17:     PEIE = 1;
  2430  0857  170B               	bsf	11,6	;volatile
  2431                           
  2432                           ;ADC_funcs.c: 18:     INTCONbits.GIE =1;
  2433  0858  178B               	bsf	11,7	;volatile
  2434                           
  2435                           ;ADC_funcs.c: 21:      switch(block){
  2436  0859  28AE               	goto	l3564
  2437  085A                     l3548:	
  2438  085A  3001               	movlw	1
  2439  085B  00A2               	movwf	??_ADC_init^(0+256)
  2440  085C  0A26               	incf	ADC_init@pinNum^(0+256),w
  2441  085D  285F               	goto	u5344
  2442  085E                     u5345:	
  2443  085E  35A2               	lslf	??_ADC_init^(0+256),f
  2444  085F                     u5344:	
  2445  085F  0B89               	decfsz	9,f
  2446  0860  285E               	goto	u5345
  2447  0861  0822               	movf	??_ADC_init^(0+256),w
  2448  0862  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2449  0863  0823               	movf	(??_ADC_init+1)^(0+256),w
  2450  0864  0140               	movlb	0	; select bank0
  2451  0865  0492               	iorwf	18,f	;volatile
  2452                           
  2453                           ;ADC_funcs.c: 23:                    ANSELA |= 1 << pinNum;
  2454  0866  3001               	movlw	1
  2455  0867  0142               	movlb	2	; select bank2
  2456  0868  00A2               	movwf	??_ADC_init^(0+256)
  2457  0869  0A26               	incf	ADC_init@pinNum^(0+256),w
  2458  086A  286C               	goto	u5354
  2459  086B                     u5355:	
  2460  086B  35A2               	lslf	??_ADC_init^(0+256),f
  2461  086C                     u5354:	
  2462  086C  0B89               	decfsz	9,f
  2463  086D  286B               	goto	u5355
  2464  086E  0822               	movf	??_ADC_init^(0+256),w
  2465  086F  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2466  0870  0823               	movf	(??_ADC_init+1)^(0+256),w
  2467  0871  017E               	movlb	62	; select bank62
  2468  0872  04B8               	iorwf	56,f	;volatile
  2469  0873                     l3552:	
  2470  0873  3001               	movlw	1
  2471  0874  0142               	movlb	2	; select bank2
  2472  0875  00A2               	movwf	??_ADC_init^(0+256)
  2473  0876  0A26               	incf	ADC_init@pinNum^(0+256),w
  2474  0877  2879               	goto	u5364
  2475  0878                     u5365:	
  2476  0878  35A2               	lslf	??_ADC_init^(0+256),f
  2477  0879                     u5364:	
  2478  0879  0B89               	decfsz	9,f
  2479  087A  2878               	goto	u5365
  2480  087B  0822               	movf	??_ADC_init^(0+256),w
  2481  087C  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2482  087D  0823               	movf	(??_ADC_init+1)^(0+256),w
  2483  087E  0140               	movlb	0	; select bank0
  2484  087F  0493               	iorwf	19,f	;volatile
  2485                           
  2486                           ;ADC_funcs.c: 27:                    ANSELB |= 1 << pinNum;
  2487  0880  3001               	movlw	1
  2488  0881  0142               	movlb	2	; select bank2
  2489  0882  00A2               	movwf	??_ADC_init^(0+256)
  2490  0883  0A26               	incf	ADC_init@pinNum^(0+256),w
  2491  0884  2886               	goto	u5374
  2492  0885                     u5375:	
  2493  0885  35A2               	lslf	??_ADC_init^(0+256),f
  2494  0886                     u5374:	
  2495  0886  0B89               	decfsz	9,f
  2496  0887  2885               	goto	u5375
  2497  0888  0822               	movf	??_ADC_init^(0+256),w
  2498  0889  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2499  088A  0823               	movf	(??_ADC_init+1)^(0+256),w
  2500  088B  017E               	movlb	62	; select bank62
  2501  088C  04C3               	iorwf	67,f	;volatile
  2502  088D                     l3558:	
  2503  088D  3001               	movlw	1
  2504  088E  0142               	movlb	2	; select bank2
  2505  088F  00A2               	movwf	??_ADC_init^(0+256)
  2506  0890  0A26               	incf	ADC_init@pinNum^(0+256),w
  2507  0891  2893               	goto	u5384
  2508  0892                     u5385:	
  2509  0892  35A2               	lslf	??_ADC_init^(0+256),f
  2510  0893                     u5384:	
  2511  0893  0B89               	decfsz	9,f
  2512  0894  2892               	goto	u5385
  2513  0895  0822               	movf	??_ADC_init^(0+256),w
  2514  0896  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2515  0897  0823               	movf	(??_ADC_init+1)^(0+256),w
  2516  0898  0140               	movlb	0	; select bank0
  2517  0899  0494               	iorwf	20,f	;volatile
  2518                           
  2519                           ;ADC_funcs.c: 31:                    ANSELC |= 1 << pinNum;
  2520  089A  3001               	movlw	1
  2521  089B  0142               	movlb	2	; select bank2
  2522  089C  00A2               	movwf	??_ADC_init^(0+256)
  2523  089D  0A26               	incf	ADC_init@pinNum^(0+256),w
  2524  089E  28A0               	goto	u5394
  2525  089F                     u5395:	
  2526  089F  35A2               	lslf	??_ADC_init^(0+256),f
  2527  08A0                     u5394:	
  2528  08A0  0B89               	decfsz	9,f
  2529  08A1  289F               	goto	u5395
  2530  08A2  0822               	movf	??_ADC_init^(0+256),w
  2531  08A3  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2532  08A4  0823               	movf	(??_ADC_init+1)^(0+256),w
  2533  08A5  017E               	movlb	62	; select bank62
  2534  08A6  04CE               	iorwf	78,f	;volatile
  2535                           
  2536                           ;ADC_funcs.c: 32:                    chan = 16 + pinNum ;
  2537  08A7  0142               	movlb	2	; select bank2
  2538  08A8  0826               	movf	ADC_init@pinNum^(0+256),w
  2539  08A9  3E10               	addlw	16
  2540  08AA  00A2               	movwf	??_ADC_init^(0+256)
  2541  08AB  0822               	movf	??_ADC_init^(0+256),w
  2542  08AC  00A5               	movwf	ADC_init@chan^(0+256)
  2543                           
  2544                           ;ADC_funcs.c: 33:     }
  2545  08AD  28C2               	goto	l3566
  2546  08AE                     l3564:	
  2547  08AE  0142               	movlb	2	; select bank2
  2548  08AF  0824               	movf	ADC_init@block^(0+256),w
  2549  08B0  00A2               	movwf	??_ADC_init^(0+256)
  2550  08B1  01A3               	clrf	(??_ADC_init^(0+256)+1)
  2551                           
  2552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2553                           ; Switch size 1, requested type "simple"
  2554                           ; Number of cases is 1, Range of values is 0 to 0
  2555                           ; switch strategies available:
  2556                           ; Name         Instructions Cycles
  2557                           ; simple_byte            4     3 (average)
  2558                           ; direct_byte            8     6 (fixed)
  2559                           ; jumptable            260     6 (fixed)
  2560                           ;	Chosen strategy is simple_byte
  2561  08B2  0823               	movf	(??_ADC_init+1)^(0+256),w
  2562  08B3  3A00               	xorlw	0	; case 0
  2563  08B4  1903               	skipnz
  2564  08B5  28B7               	goto	l3662
  2565  08B6  28C2               	goto	l3566
  2566  08B7                     l3662:	
  2567                           
  2568                           ; Switch size 1, requested type "simple"
  2569                           ; Number of cases is 3, Range of values is 65 to 67
  2570                           ; switch strategies available:
  2571                           ; Name         Instructions Cycles
  2572                           ; simple_byte           10     6 (average)
  2573                           ; direct_byte           15     9 (fixed)
  2574                           ; jumptable            263     9 (fixed)
  2575                           ;	Chosen strategy is simple_byte
  2576  08B7  0822               	movf	??_ADC_init^(0+256),w
  2577  08B8  3A41               	xorlw	65	; case 65
  2578  08B9  1903               	skipnz
  2579  08BA  285A               	goto	l3548
  2580  08BB  3A03               	xorlw	3	; case 66
  2581  08BC  1903               	skipnz
  2582  08BD  2873               	goto	l3552
  2583  08BE  3A01               	xorlw	1	; case 67
  2584  08BF  1903               	skipnz
  2585  08C0  288D               	goto	l3558
  2586  08C1  28C2               	goto	l3566
  2587  08C2                     l3566:	
  2588                           
  2589                           ;ADC_funcs.c: 36:     ADCON0 |= chan << 2;
  2590  08C2  0825               	movf	ADC_init@chan^(0+256),w	;volatile
  2591  08C3  00A2               	movwf	??_ADC_init^(0+256)
  2592  08C4  3001               	movlw	1
  2593  08C5                     u5405:	
  2594  08C5  35A2               	lslf	??_ADC_init^(0+256),f
  2595  08C6  3EFF               	addlw	-1
  2596  08C7  1D03               	skipz
  2597  08C8  28C5               	goto	u5405
  2598  08C9  3522               	lslf	??_ADC_init^(0+256),w
  2599  08CA  00A3               	movwf	(??_ADC_init+1)^(0+256)
  2600  08CB  0823               	movf	(??_ADC_init+1)^(0+256),w
  2601  08CC  0141               	movlb	1	; select bank1
  2602  08CD  049D               	iorwf	29,f	;volatile
  2603                           
  2604                           ;ADC_funcs.c: 39:     ADCON1 = 0b10100000;
  2605  08CE  30A0               	movlw	160
  2606  08CF  009E               	movwf	30	;volatile
  2607                           
  2608                           ;ADC_funcs.c: 42:     ADCON0bits.ADON = 1;
  2609  08D0  141D               	bsf	29,0	;volatile
  2610                           
  2611                           ;ADC_funcs.c: 43:     _delay((unsigned long)((100)*(32000000/4000000.0)));
  2612  08D1  30A0               	movlw	160
  2613  08D2                     u5567:	
  2614  08D2  3200               	nop2
  2615  08D3  0B89               	decfsz	9,f
  2616  08D4  28D2               	goto	u5567
  2617                           
  2618                           ;ADC_funcs.c: 44:     ADCON0bits.GOnDONE = 1;
  2619  08D5  0141               	movlb	1	; select bank1
  2620  08D6  149D               	bsf	29,1	;volatile
  2621  08D7  0008               	return
  2622  08D8                     __end_of_ADC_init:	
  2623                           
  2624                           	psect	intentry
  2625  0004                     __pintentry:	
  2626 ;; *************** function _UART_Recieve *****************
  2627 ;; Defined at:
  2628 ;;		line 54 in file "main.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  decimalADC      4   61[BANK1 ] float 
  2633 ;;  adc_out         2   65[BANK1 ] unsigned int 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2644 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2646 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2647 ;;Total ram usage:        6 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    8
  2650 ;; This function calls:
  2651 ;;		_ADC_read
  2652 ;;		___flmul
  2653 ;;		___xxtofl
  2654 ;;		_printf
  2655 ;; This function is called by:
  2656 ;;		Interrupt level 1
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660  0004                     _UART_Recieve:	
  2661                           
  2662                           ;incstack = 0
  2663  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2664                           
  2665                           ; Regs used in _UART_Recieve: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2666  0005  3180               	pagesel	$
  2667                           
  2668                           ;main.c: 60:     if(PIR1bits.ADIF == 1){
  2669  0006  014E               	movlb	14	; select bank14
  2670  0007  1C0D               	btfss	13,0	;volatile
  2671  0008  285A               	goto	i1l20
  2672                           
  2673                           ;main.c: 61:        unsigned int adc_out = ADC_read();
  2674  0009  3192  22EB  3180   	fcall	_ADC_read
  2675  000C  0871               	movf	?_ADC_read+1,w
  2676  000D  0141               	movlb	1	; select bank1
  2677  000E  00E2               	movwf	(UART_Recieve@adc_out+1)^(0+128)
  2678  000F  0870               	movf	?_ADC_read,w
  2679  0010  00E1               	movwf	UART_Recieve@adc_out^(0+128)
  2680                           
  2681                           ;main.c: 62:         float decimalADC = 0.004887586 * adc_out;
  2682  0011  303B               	movlw	59
  2683  0012  0140               	movlb	0	; select bank0
  2684  0013  00A3               	movwf	___flmul@b+3
  2685  0014  30A0               	movlw	160
  2686  0015  00A2               	movwf	___flmul@b+2
  2687  0016  3028               	movlw	40
  2688  0017  00A1               	movwf	___flmul@b+1
  2689  0018  300B               	movlw	11
  2690  0019  00A0               	movwf	___flmul@b
  2691  001A  0141               	movlb	1	; select bank1
  2692  001B  0861               	movf	UART_Recieve@adc_out^(0+128),w
  2693  001C  00F0               	movwf	___xxtofl@val
  2694  001D  0862               	movf	(UART_Recieve@adc_out+1)^(0+128),w
  2695  001E  00F1               	movwf	___xxtofl@val+1
  2696  001F  01F2               	clrf	___xxtofl@val+2
  2697  0020  01F3               	clrf	___xxtofl@val+3
  2698  0021  3000               	movlw	0
  2699  0022  3197  276B  3180   	fcall	___xxtofl
  2700  0025  0873               	movf	?___xxtofl+3,w
  2701  0026  0140               	movlb	0	; select bank0
  2702  0027  00A7               	movwf	___flmul@a+3
  2703  0028  0872               	movf	?___xxtofl+2,w
  2704  0029  00A6               	movwf	___flmul@a+2
  2705  002A  0871               	movf	?___xxtofl+1,w
  2706  002B  00A5               	movwf	___flmul@a+1
  2707  002C  0870               	movf	?___xxtofl,w
  2708  002D  00A4               	movwf	___flmul@a
  2709  002E  318D  25D4  3180   	fcall	___flmul
  2710  0031  0140               	movlb	0	; select bank0
  2711  0032  0823               	movf	?___flmul+3,w
  2712  0033  0141               	movlb	1	; select bank1
  2713  0034  00E0               	movwf	(UART_Recieve@decimalADC+3)^(0+128)
  2714  0035  0140               	movlb	0	; select bank0
  2715  0036  0822               	movf	?___flmul+2,w
  2716  0037  0141               	movlb	1	; select bank1
  2717  0038  00DF               	movwf	(UART_Recieve@decimalADC+2)^(0+128)
  2718  0039  0140               	movlb	0	; select bank0
  2719  003A  0821               	movf	?___flmul+1,w
  2720  003B  0141               	movlb	1	; select bank1
  2721  003C  00DE               	movwf	(UART_Recieve@decimalADC+1)^(0+128)
  2722  003D  0140               	movlb	0	; select bank0
  2723  003E  0820               	movf	?___flmul,w
  2724  003F  0141               	movlb	1	; select bank1
  2725  0040  00DD               	movwf	UART_Recieve@decimalADC^(0+128)
  2726                           
  2727                           ;main.c: 65:         printf("%f \n\r ", decimalADC);
  2728  0041  3000               	movlw	low (STR_1| (0+32768))
  2729  0042  0140               	movlb	0	; select bank0
  2730  0043  00EA               	movwf	printf@fmt
  2731  0044  3098               	movlw	high (STR_1| (0+32768))
  2732  0045  00EB               	movwf	printf@fmt+1
  2733  0046  0141               	movlb	1	; select bank1
  2734  0047  0860               	movf	(UART_Recieve@decimalADC+3)^(0+128),w
  2735  0048  0140               	movlb	0	; select bank0
  2736  0049  00EF               	movwf	?_printf+5
  2737  004A  0141               	movlb	1	; select bank1
  2738  004B  085F               	movf	(UART_Recieve@decimalADC+2)^(0+128),w
  2739  004C  0140               	movlb	0	; select bank0
  2740  004D  00EE               	movwf	?_printf+4
  2741  004E  0141               	movlb	1	; select bank1
  2742  004F  085E               	movf	(UART_Recieve@decimalADC+1)^(0+128),w
  2743  0050  0140               	movlb	0	; select bank0
  2744  0051  00ED               	movwf	?_printf+3
  2745  0052  0141               	movlb	1	; select bank1
  2746  0053  085D               	movf	UART_Recieve@decimalADC^(0+128),w
  2747  0054  0140               	movlb	0	; select bank0
  2748  0055  00EC               	movwf	?_printf+2
  2749  0056  3193  2307         	fcall	_printf
  2750                           
  2751                           ;main.c: 66:         PIR1bits.ADIF = 0;
  2752  0058  014E               	movlb	14	; select bank14
  2753  0059  100D               	bcf	13,0	;volatile
  2754  005A                     i1l20:	
  2755  005A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2756  005B  0009               	retfie
  2757  005C                     __end_of_UART_Recieve:	
  2758                           
  2759                           	psect	text5
  2760  1307                     __ptext5:	
  2761 ;; *************** function _printf *****************
  2762 ;; Defined at:
  2763 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2766 ;;		 -> STR_1(7), 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  ret             2    0        int 
  2769 ;;  ap              1   60[BANK1 ] PTR void [1]
  2770 ;;		 -> ?_printf(2), 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  2   74[BANK0 ] int 
  2773 ;; Registers used:
  2774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2780 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2781 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2782 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2783 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2784 ;;Total ram usage:       10 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    7
  2787 ;; This function calls:
  2788 ;;		_vfprintf
  2789 ;; This function is called by:
  2790 ;;		_UART_Recieve
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           
  2795                           ;psect for function _printf
  2796  1307                     _printf:	
  2797                           
  2798                           ;incstack = 0
  2799                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2800  1307  306C               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2801  1308  0141               	movlb	1	; select bank1
  2802  1309  00D9               	movwf	??_printf^(0+128)
  2803  130A  0859               	movf	??_printf^(0+128),w
  2804  130B  00DC               	movwf	printf@ap^(0+128)
  2805  130C  0140               	movlb	0	; select bank0
  2806  130D  086B               	movf	printf@fmt+1,w
  2807  130E  00E3               	movwf	vfprintf@fmt+1
  2808  130F  086A               	movf	printf@fmt,w
  2809  1310  00E2               	movwf	vfprintf@fmt
  2810  1311  30DC               	movlw	(low (printf@ap| 0))& (0+255)
  2811  1312  0141               	movlb	1	; select bank1
  2812  1313  00D9               	movwf	??_printf^(0+128)
  2813  1314  0859               	movf	??_printf^(0+128),w
  2814  1315  0140               	movlb	0	; select bank0
  2815  1316  00E4               	movwf	vfprintf@ap
  2816  1317  3000               	movlw	0
  2817  1318  3194  2407         	fcall	_vfprintf
  2818  131A  0008               	return
  2819  131B                     __end_of_printf:	
  2820                           
  2821                           	psect	text6
  2822  1407                     __ptext6:	
  2823 ;; *************** function _vfprintf *****************
  2824 ;; Defined at:
  2825 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  fp              1    wreg     PTR struct _IO_FILE
  2828 ;;		 -> NULL(0), 
  2829 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  2830 ;;		 -> STR_1(7), 
  2831 ;;  ap              1   68[BANK0 ] PTR PTR void 
  2832 ;;		 -> printf@ap(1), 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  2835 ;;		 -> NULL(0), 
  2836 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  2837 ;;		 -> STR_1(7), 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  2   66[BANK0 ] int 
  2840 ;; Registers used:
  2841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2847 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2848 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2849 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2850 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2851 ;;Total ram usage:        8 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    6
  2854 ;; This function calls:
  2855 ;;		_vfpfcnvrt
  2856 ;; This function is called by:
  2857 ;;		_printf
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           
  2862                           ;psect for function _vfprintf
  2863  1407                     _vfprintf:	
  2864                           
  2865                           ;incstack = 0
  2866                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2867                           ;vfprintf@fp stored from wreg
  2868  1407  0140               	movlb	0	; select bank0
  2869  1408  00E7               	movwf	vfprintf@fp
  2870                           
  2871                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2872  1409  0863               	movf	vfprintf@fmt+1,w
  2873  140A  00E9               	movwf	vfprintf@cfmt+1
  2874  140B  0862               	movf	vfprintf@fmt,w
  2875  140C  00E8               	movwf	vfprintf@cfmt
  2876                           
  2877                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2878  140D  0141               	movlb	1	; select bank1
  2879  140E  01E7               	clrf	_nout^(0+128)
  2880  140F  01E8               	clrf	(_nout+1)^(0+128)
  2881  1410                     i1l3456:	
  2882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2883                           
  2884                           
  2885                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2886  1410  0140               	movlb	0	; select bank0
  2887  1411  0868               	movf	vfprintf@cfmt,w
  2888  1412  0084               	movwf	4
  2889  1413  0869               	movf	vfprintf@cfmt+1,w
  2890  1414  0085               	movwf	5
  2891  1415  0012               	moviw fsr0++
  2892  1416  1903               	btfsc	3,2
  2893  1417  2C2D               	goto	i1l3458
  2894                           
  2895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2896  1418  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2897  1419  00E5               	movwf	??_vfprintf
  2898  141A  0865               	movf	??_vfprintf,w
  2899  141B  00CF               	movwf	vfpfcnvrt@fmt
  2900  141C  0864               	movf	vfprintf@ap,w
  2901  141D  00E6               	movwf	??_vfprintf+1
  2902  141E  0866               	movf	??_vfprintf+1,w
  2903  141F  00D0               	movwf	vfpfcnvrt@ap
  2904  1420  0867               	movf	vfprintf@fp,w
  2905  1421  318A  2252  3194   	fcall	_vfpfcnvrt
  2906  1424  0140               	movlb	0	; select bank0
  2907  1425  084F               	movf	?_vfpfcnvrt,w
  2908  1426  0141               	movlb	1	; select bank1
  2909  1427  07E7               	addwf	_nout^(0+128),f
  2910  1428  0140               	movlb	0	; select bank0
  2911  1429  0850               	movf	?_vfpfcnvrt+1,w
  2912  142A  0141               	movlb	1	; select bank1
  2913  142B  3DE8               	addwfc	(_nout+1)^(0+128),f
  2914  142C  2C10               	goto	i1l3456
  2915  142D                     i1l3458:	
  2916                           
  2917                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2918  142D  0141               	movlb	1	; select bank1
  2919  142E  0868               	movf	(_nout+1)^(0+128),w
  2920  142F  0140               	movlb	0	; select bank0
  2921  1430  00E3               	movwf	?_vfprintf+1
  2922  1431  0141               	movlb	1	; select bank1
  2923  1432  0867               	movf	_nout^(0+128),w
  2924  1433  0140               	movlb	0	; select bank0
  2925  1434  00E2               	movwf	?_vfprintf
  2926  1435  0008               	return
  2927  1436                     __end_of_vfprintf:	
  2928                           
  2929                           	psect	text7
  2930  0A52                     __ptext7:	
  2931 ;; *************** function _vfpfcnvrt *****************
  2932 ;; Defined at:
  2933 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  fp              1    wreg     PTR struct _IO_FILE
  2936 ;;		 -> NULL(0), 
  2937 ;;  fmt             1   47[BANK0 ] PTR PTR unsigned char 
  2938 ;;		 -> vfprintf@cfmt(2), 
  2939 ;;  ap              1   48[BANK0 ] PTR PTR void 
  2940 ;;		 -> printf@ap(1), 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  fp              1   65[BANK0 ] PTR struct _IO_FILE
  2943 ;;		 -> NULL(0), 
  2944 ;;  llu             8    0        unsigned long long 
  2945 ;;  ll              8    0        long long 
  2946 ;;  f               4   57[BANK0 ] long long 
  2947 ;;  ct              3   61[BANK0 ] unsigned char [3]
  2948 ;;  vp              2    0        PTR void 
  2949 ;;  i               2    0        int 
  2950 ;;  done            2    0        int 
  2951 ;;  cp              2    0        PTR unsigned char 
  2952 ;;  c               1   64[BANK0 ] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  2   47[BANK0 ] int 
  2955 ;; Registers used:
  2956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2962 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;Total ram usage:       19 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    5
  2969 ;; This function calls:
  2970 ;;		_efgtoa
  2971 ;;		_fputc
  2972 ;;		_isupper
  2973 ;;		_strncmp
  2974 ;;		_tolower
  2975 ;; This function is called by:
  2976 ;;		_vfprintf
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _vfpfcnvrt
  2982  0A52                     _vfpfcnvrt:	
  2983                           
  2984                           ;incstack = 0
  2985                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2986                           ;vfpfcnvrt@fp stored from wreg
  2987  0A52  0140               	movlb	0	; select bank0
  2988  0A53  00E1               	movwf	vfpfcnvrt@fp
  2989                           
  2990                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2991  0A54  084F               	movf	vfpfcnvrt@fmt,w
  2992  0A55  0086               	movwf	6
  2993  0A56  0187               	clrf	7
  2994  0A57  3F40               	moviw [0]fsr1
  2995  0A58  00D1               	movwf	??_vfpfcnvrt
  2996  0A59  3F41               	moviw [1]fsr1
  2997  0A5A  00D2               	movwf	??_vfpfcnvrt+1
  2998  0A5B  0851               	movf	??_vfpfcnvrt,w
  2999  0A5C  0084               	movwf	4
  3000  0A5D  0852               	movf	??_vfpfcnvrt+1,w
  3001  0A5E  0085               	movwf	5
  3002  0A5F  0012               	moviw fsr0++
  3003  0A60  3A25               	xorlw	37
  3004  0A61  1D03               	btfss	3,2
  3005  0A62  2BC8               	goto	i1l3442
  3006                           
  3007                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  3008  0A63  084F               	movf	vfpfcnvrt@fmt,w
  3009  0A64  0086               	movwf	6
  3010  0A65  0187               	clrf	7
  3011  0A66  3001               	movlw	1
  3012  0A67  0781               	addwf	1,f
  3013  0A68  3141               	addfsr 1,1
  3014  0A69  1803               	skipnc
  3015  0A6A  0A81               	incf	1,f
  3016                           
  3017                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  3018  0A6B  0141               	movlb	1	; select bank1
  3019  0A6C  01E9               	clrf	_width^(0+128)
  3020  0A6D  01EA               	clrf	(_width+1)^(0+128)
  3021  0A6E  01ED               	clrf	_flags^(0+128)
  3022  0A6F  01EE               	clrf	(_flags+1)^(0+128)
  3023                           
  3024                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  3025  0A70  30FF               	movlw	255
  3026  0A71  00EB               	movwf	_prec^(0+128)
  3027  0A72  30FF               	movlw	255
  3028  0A73  00EC               	movwf	(_prec^(0+128)+1)
  3029                           
  3030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  3031  0A74  0140               	movlb	0	; select bank0
  3032  0A75  084F               	movf	vfpfcnvrt@fmt,w
  3033  0A76  0086               	movwf	6
  3034  0A77  0187               	clrf	7
  3035  0A78  3F40               	moviw [0]fsr1
  3036  0A79  00D1               	movwf	??_vfpfcnvrt
  3037  0A7A  3F41               	moviw [1]fsr1
  3038  0A7B  00D2               	movwf	??_vfpfcnvrt+1
  3039  0A7C  0851               	movf	??_vfpfcnvrt,w
  3040  0A7D  0084               	movwf	4
  3041  0A7E  0852               	movf	??_vfpfcnvrt+1,w
  3042  0A7F  0085               	movwf	5
  3043  0A80  0800               	movf	0,w	;code access
  3044  0A81  00D3               	movwf	??_vfpfcnvrt+2
  3045  0A82  01D4               	clrf	??_vfpfcnvrt+3
  3046  0A83  0853               	movf	??_vfpfcnvrt+2,w
  3047  0A84  00F6               	movwf	tolower@c
  3048  0A85  0854               	movf	??_vfpfcnvrt+3,w
  3049  0A86  00F7               	movwf	tolower@c+1
  3050  0A87  3193  23C0  318A   	fcall	_tolower
  3051  0A8A  0876               	movf	?_tolower,w
  3052  0A8B  0140               	movlb	0	; select bank0
  3053  0A8C  00D5               	movwf	??_vfpfcnvrt+4
  3054  0A8D  0855               	movf	??_vfpfcnvrt+4,w
  3055  0A8E  00DD               	movwf	vfpfcnvrt@ct
  3056                           
  3057                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  3058  0A8F  085D               	movf	vfpfcnvrt@ct,w
  3059  0A90  1903               	btfsc	3,2
  3060  0A91  2ACF               	goto	i1l3396
  3061                           
  3062                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  3063  0A92  084F               	movf	vfpfcnvrt@fmt,w
  3064  0A93  0086               	movwf	6
  3065  0A94  0187               	clrf	7
  3066  0A95  3F40               	moviw [0]fsr1
  3067  0A96  00D1               	movwf	??_vfpfcnvrt
  3068  0A97  3F41               	moviw [1]fsr1
  3069  0A98  00D2               	movwf	??_vfpfcnvrt+1
  3070  0A99  3001               	movlw	1
  3071  0A9A  0751               	addwf	??_vfpfcnvrt,w
  3072  0A9B  0084               	movwf	4
  3073  0A9C  0852               	movf	??_vfpfcnvrt+1,w
  3074  0A9D  1803               	skipnc
  3075  0A9E  0A52               	incf	??_vfpfcnvrt+1,w
  3076  0A9F  0085               	movwf	5
  3077  0AA0  0800               	movf	0,w	;code access
  3078  0AA1  00D3               	movwf	??_vfpfcnvrt+2
  3079  0AA2  01D4               	clrf	??_vfpfcnvrt+3
  3080  0AA3  0853               	movf	??_vfpfcnvrt+2,w
  3081  0AA4  00F6               	movwf	tolower@c
  3082  0AA5  0854               	movf	??_vfpfcnvrt+3,w
  3083  0AA6  00F7               	movwf	tolower@c+1
  3084  0AA7  3193  23C0  318A   	fcall	_tolower
  3085  0AAA  0876               	movf	?_tolower,w
  3086  0AAB  0140               	movlb	0	; select bank0
  3087  0AAC  00D5               	movwf	??_vfpfcnvrt+4
  3088  0AAD  0855               	movf	??_vfpfcnvrt+4,w
  3089  0AAE  00DE               	movwf	vfpfcnvrt@ct+1
  3090                           
  3091                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  3092  0AAF  085E               	movf	vfpfcnvrt@ct+1,w
  3093  0AB0  1903               	btfsc	3,2
  3094  0AB1  2ACF               	goto	i1l3396
  3095                           
  3096                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  3097  0AB2  084F               	movf	vfpfcnvrt@fmt,w
  3098  0AB3  0086               	movwf	6
  3099  0AB4  0187               	clrf	7
  3100  0AB5  3F40               	moviw [0]fsr1
  3101  0AB6  00D1               	movwf	??_vfpfcnvrt
  3102  0AB7  3F41               	moviw [1]fsr1
  3103  0AB8  00D2               	movwf	??_vfpfcnvrt+1
  3104  0AB9  3002               	movlw	2
  3105  0ABA  0751               	addwf	??_vfpfcnvrt,w
  3106  0ABB  0084               	movwf	4
  3107  0ABC  0852               	movf	??_vfpfcnvrt+1,w
  3108  0ABD  1803               	skipnc
  3109  0ABE  0A52               	incf	??_vfpfcnvrt+1,w
  3110  0ABF  0085               	movwf	5
  3111  0AC0  0800               	movf	0,w	;code access
  3112  0AC1  00D3               	movwf	??_vfpfcnvrt+2
  3113  0AC2  01D4               	clrf	??_vfpfcnvrt+3
  3114  0AC3  0853               	movf	??_vfpfcnvrt+2,w
  3115  0AC4  00F6               	movwf	tolower@c
  3116  0AC5  0854               	movf	??_vfpfcnvrt+3,w
  3117  0AC6  00F7               	movwf	tolower@c+1
  3118  0AC7  3193  23C0  318A   	fcall	_tolower
  3119  0ACA  0876               	movf	?_tolower,w
  3120  0ACB  0140               	movlb	0	; select bank0
  3121  0ACC  00D5               	movwf	??_vfpfcnvrt+4
  3122  0ACD  0855               	movf	??_vfpfcnvrt+4,w
  3123  0ACE  00DF               	movwf	vfpfcnvrt@ct+2
  3124  0ACF                     i1l3396:	
  3125                           
  3126                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  3127  0ACF  3066               	movlw	102
  3128  0AD0  065D               	xorwf	vfpfcnvrt@ct,w
  3129  0AD1  1D03               	btfss	3,2
  3130  0AD2  2B0F               	goto	i1l3408
  3131                           
  3132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  3133  0AD3  084F               	movf	vfpfcnvrt@fmt,w
  3134  0AD4  0086               	movwf	6
  3135  0AD5  0187               	clrf	7
  3136  0AD6  3F40               	moviw [0]fsr1
  3137  0AD7  00D1               	movwf	??_vfpfcnvrt
  3138  0AD8  3F41               	moviw [1]fsr1
  3139  0AD9  00D2               	movwf	??_vfpfcnvrt+1
  3140  0ADA  0851               	movf	??_vfpfcnvrt,w
  3141  0ADB  0084               	movwf	4
  3142  0ADC  0852               	movf	??_vfpfcnvrt+1,w
  3143  0ADD  0085               	movwf	5
  3144  0ADE  0800               	movf	0,w	;code access
  3145  0ADF  00D3               	movwf	??_vfpfcnvrt+2
  3146  0AE0  0853               	movf	??_vfpfcnvrt+2,w
  3147  0AE1  00E0               	movwf	vfpfcnvrt@c
  3148                           
  3149                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  3150  0AE2  084F               	movf	vfpfcnvrt@fmt,w
  3151  0AE3  0086               	movwf	6
  3152  0AE4  0187               	clrf	7
  3153  0AE5  3001               	movlw	1
  3154  0AE6  0781               	addwf	1,f
  3155  0AE7  3141               	addfsr 1,1
  3156  0AE8  1803               	skipnc
  3157  0AE9  0A81               	incf	1,f
  3158                           
  3159                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  3160  0AEA  0850               	movf	vfpfcnvrt@ap,w
  3161  0AEB  0086               	movwf	6
  3162  0AEC  0187               	clrf	7
  3163  0AED  0801               	movf	1,w
  3164  0AEE  0084               	movwf	4
  3165  0AEF  0185               	clrf	5
  3166  0AF0  3004               	movlw	4
  3167  0AF1  0781               	addwf	1,f
  3168  0AF2  3F00               	moviw [0]fsr0
  3169  0AF3  00D9               	movwf	vfpfcnvrt@f
  3170  0AF4  3F01               	moviw [1]fsr0
  3171  0AF5  00DA               	movwf	vfpfcnvrt@f+1
  3172  0AF6  3F02               	moviw [2]fsr0
  3173  0AF7  00DB               	movwf	vfpfcnvrt@f+2
  3174  0AF8  3F03               	moviw [3]fsr0
  3175  0AF9  00DC               	movwf	vfpfcnvrt@f+3
  3176                           
  3177                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  3178  0AFA  085C               	movf	vfpfcnvrt@f+3,w
  3179  0AFB  00C9               	movwf	efgtoa@f+3
  3180  0AFC  085B               	movf	vfpfcnvrt@f+2,w
  3181  0AFD  00C8               	movwf	efgtoa@f+2
  3182  0AFE  085A               	movf	vfpfcnvrt@f+1,w
  3183  0AFF  00C7               	movwf	efgtoa@f+1
  3184  0B00  0859               	movf	vfpfcnvrt@f,w
  3185  0B01  00C6               	movwf	efgtoa@f
  3186  0B02  0860               	movf	vfpfcnvrt@c,w
  3187  0B03  00D1               	movwf	??_vfpfcnvrt
  3188  0B04  0851               	movf	??_vfpfcnvrt,w
  3189  0B05  00CA               	movwf	efgtoa@c
  3190  0B06  0861               	movf	vfpfcnvrt@fp,w
  3191  0B07  3180  2076         	fcall	_efgtoa
  3192  0B09  0140               	movlb	0	; select bank0
  3193  0B0A  0847               	movf	?_efgtoa+1,w
  3194  0B0B  00D0               	movwf	?_vfpfcnvrt+1
  3195  0B0C  0846               	movf	?_efgtoa,w
  3196  0B0D  00CF               	movwf	?_vfpfcnvrt
  3197  0B0E  0008               	return
  3198  0B0F                     i1l3408:	
  3199                           
  3200                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3201  0B0F  3017               	movlw	low (STR_11| (0+32768))
  3202  0B10  00F0               	movwf	strncmp@_r
  3203  0B11  3098               	movlw	high (STR_11| (0+32768))
  3204  0B12  00F1               	movwf	strncmp@_r+1
  3205  0B13  3002               	movlw	2
  3206  0B14  00F2               	movwf	strncmp@n
  3207  0B15  3000               	movlw	0
  3208  0B16  00F3               	movwf	strncmp@n+1
  3209  0B17  305D               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  3210  0B18  3194  24C3  318A   	fcall	_strncmp
  3211  0B1B  0870               	movf	?_strncmp,w
  3212  0B1C  0471               	iorwf	?_strncmp+1,w
  3213  0B1D  1D03               	btfss	3,2
  3214  0B1E  2B95               	goto	i1l3426
  3215                           
  3216                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3217  0B1F  0140               	movlb	0	; select bank0
  3218  0B20  084F               	movf	vfpfcnvrt@fmt,w
  3219  0B21  0086               	movwf	6
  3220  0B22  0187               	clrf	7
  3221  0B23  3F40               	moviw [0]fsr1
  3222  0B24  00D1               	movwf	??_vfpfcnvrt
  3223  0B25  3F41               	moviw [1]fsr1
  3224  0B26  00D2               	movwf	??_vfpfcnvrt+1
  3225  0B27  3001               	movlw	1
  3226  0B28  0751               	addwf	??_vfpfcnvrt,w
  3227  0B29  0084               	movwf	4
  3228  0B2A  0852               	movf	??_vfpfcnvrt+1,w
  3229  0B2B  1803               	skipnc
  3230  0B2C  0A52               	incf	??_vfpfcnvrt+1,w
  3231  0B2D  0085               	movwf	5
  3232  0B2E  0800               	movf	0,w	;code access
  3233  0B2F  00D3               	movwf	??_vfpfcnvrt+2
  3234  0B30  0853               	movf	??_vfpfcnvrt+2,w
  3235  0B31  00E0               	movwf	vfpfcnvrt@c
  3236  0B32  084F               	movf	vfpfcnvrt@fmt,w
  3237  0B33  0086               	movwf	6
  3238  0B34  0187               	clrf	7
  3239  0B35  3F40               	moviw [0]fsr1
  3240  0B36  00D1               	movwf	??_vfpfcnvrt
  3241  0B37  3F41               	moviw [1]fsr1
  3242  0B38  00D2               	movwf	??_vfpfcnvrt+1
  3243  0B39  0851               	movf	??_vfpfcnvrt,w
  3244  0B3A  0084               	movwf	4
  3245  0B3B  0852               	movf	??_vfpfcnvrt+1,w
  3246  0B3C  0085               	movwf	5
  3247  0B3D  0800               	movf	0,w	;code access
  3248  0B3E  3EBF               	addlw	191
  3249  0B3F  00D3               	movwf	??_vfpfcnvrt+2
  3250  0B40  30FF               	movlw	255
  3251  0B41  1803               	skipnc
  3252  0B42  3000               	movlw	0
  3253  0B43  00D4               	movwf	??_vfpfcnvrt+3
  3254  0B44  3000               	movlw	0
  3255  0B45  0254               	subwf	??_vfpfcnvrt+3,w
  3256  0B46  301A               	movlw	26
  3257  0B47  1903               	skipnz
  3258  0B48  0253               	subwf	??_vfpfcnvrt+2,w
  3259  0B49  1803               	btfsc	3,0
  3260  0B4A  2B4D               	goto	u516_20
  3261  0B4B  3001               	movlw	1
  3262  0B4C  2B4E               	goto	u517_20
  3263  0B4D                     u516_20:	
  3264  0B4D  3000               	movlw	0
  3265  0B4E                     u517_20:	
  3266  0B4E  00D5               	movwf	??_vfpfcnvrt+4
  3267  0B4F  01D6               	clrf	??_vfpfcnvrt+5
  3268  0B50  0855               	movf	??_vfpfcnvrt+4,w
  3269  0B51  00D7               	movwf	_vfpfcnvrt$415
  3270  0B52  0856               	movf	??_vfpfcnvrt+5,w
  3271  0B53  00D8               	movwf	_vfpfcnvrt$415+1
  3272  0B54  0857               	movf	_vfpfcnvrt$415,w
  3273  0B55  0458               	iorwf	_vfpfcnvrt$415+1,w
  3274  0B56  1903               	btfsc	3,2
  3275  0B57  2B68               	goto	i1l3418
  3276                           
  3277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  3278  0B58  0850               	movf	vfpfcnvrt@ap,w
  3279  0B59  0086               	movwf	6
  3280  0B5A  0187               	clrf	7
  3281  0B5B  0801               	movf	1,w
  3282  0B5C  0084               	movwf	4
  3283  0B5D  0185               	clrf	5
  3284  0B5E  3004               	movlw	4
  3285  0B5F  0781               	addwf	1,f
  3286  0B60  3F00               	moviw [0]fsr0
  3287  0B61  00D9               	movwf	vfpfcnvrt@f
  3288  0B62  3F01               	moviw [1]fsr0
  3289  0B63  00DA               	movwf	vfpfcnvrt@f+1
  3290  0B64  3F02               	moviw [2]fsr0
  3291  0B65  00DB               	movwf	vfpfcnvrt@f+2
  3292  0B66  3F03               	moviw [3]fsr0
  3293  0B67  2B77               	goto	L1
  3294  0B68                     i1l3418:	
  3295                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  3296                           
  3297                           
  3298                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3299  0B68  0850               	movf	vfpfcnvrt@ap,w
  3300  0B69  0086               	movwf	6
  3301  0B6A  0187               	clrf	7
  3302  0B6B  0801               	movf	1,w
  3303  0B6C  0084               	movwf	4
  3304  0B6D  0185               	clrf	5
  3305  0B6E  3004               	movlw	4
  3306  0B6F  0781               	addwf	1,f
  3307  0B70  3F00               	moviw [0]fsr0
  3308  0B71  00D9               	movwf	vfpfcnvrt@f
  3309  0B72  3F01               	moviw [1]fsr0
  3310  0B73  00DA               	movwf	vfpfcnvrt@f+1
  3311  0B74  3F02               	moviw [2]fsr0
  3312  0B75  00DB               	movwf	vfpfcnvrt@f+2
  3313  0B76  3F03               	moviw [3]fsr0
  3314  0B77                     L1:	
  3315  0B77  00DC               	movwf	vfpfcnvrt@f+3
  3316                           
  3317                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  3318  0B78  084F               	movf	vfpfcnvrt@fmt,w
  3319  0B79  0086               	movwf	6
  3320  0B7A  0187               	clrf	7
  3321  0B7B  3002               	movlw	2
  3322  0B7C  0781               	addwf	1,f
  3323  0B7D  3141               	addfsr 1,1
  3324  0B7E  1803               	skipnc
  3325  0B7F  0A81               	incf	1,f
  3326                           
  3327                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 938:             return efgto
      +                          a(fp, f, c);
  3328  0B80  085C               	movf	vfpfcnvrt@f+3,w
  3329  0B81  00C9               	movwf	efgtoa@f+3
  3330  0B82  085B               	movf	vfpfcnvrt@f+2,w
  3331  0B83  00C8               	movwf	efgtoa@f+2
  3332  0B84  085A               	movf	vfpfcnvrt@f+1,w
  3333  0B85  00C7               	movwf	efgtoa@f+1
  3334  0B86  0859               	movf	vfpfcnvrt@f,w
  3335  0B87  00C6               	movwf	efgtoa@f
  3336  0B88  0860               	movf	vfpfcnvrt@c,w
  3337  0B89  00D1               	movwf	??_vfpfcnvrt
  3338  0B8A  0851               	movf	??_vfpfcnvrt,w
  3339  0B8B  00CA               	movwf	efgtoa@c
  3340  0B8C  0861               	movf	vfpfcnvrt@fp,w
  3341  0B8D  3180  2076         	fcall	_efgtoa
  3342  0B8F  0140               	movlb	0	; select bank0
  3343  0B90  0847               	movf	?_efgtoa+1,w
  3344  0B91  00D0               	movwf	?_vfpfcnvrt+1
  3345  0B92  0846               	movf	?_efgtoa,w
  3346  0B93  00CF               	movwf	?_vfpfcnvrt
  3347  0B94  0008               	return
  3348  0B95                     i1l3426:	
  3349                           
  3350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3351  0B95  0140               	movlb	0	; select bank0
  3352  0B96  084F               	movf	vfpfcnvrt@fmt,w
  3353  0B97  0086               	movwf	6
  3354  0B98  0187               	clrf	7
  3355  0B99  3F40               	moviw [0]fsr1
  3356  0B9A  00D1               	movwf	??_vfpfcnvrt
  3357  0B9B  3F41               	moviw [1]fsr1
  3358  0B9C  00D2               	movwf	??_vfpfcnvrt+1
  3359  0B9D  0851               	movf	??_vfpfcnvrt,w
  3360  0B9E  0084               	movwf	4
  3361  0B9F  0852               	movf	??_vfpfcnvrt+1,w
  3362  0BA0  0085               	movwf	5
  3363  0BA1  0012               	moviw fsr0++
  3364  0BA2  3A25               	xorlw	37
  3365  0BA3  1D03               	btfss	3,2
  3366  0BA4  2BBD               	goto	i1l3436
  3367                           
  3368                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  3369  0BA5  084F               	movf	vfpfcnvrt@fmt,w
  3370  0BA6  0086               	movwf	6
  3371  0BA7  0187               	clrf	7
  3372  0BA8  3001               	movlw	1
  3373  0BA9  0781               	addwf	1,f
  3374  0BAA  3141               	addfsr 1,1
  3375  0BAB  1803               	skipnc
  3376  0BAC  0A81               	incf	1,f
  3377                           
  3378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  3379  0BAD  3025               	movlw	37
  3380  0BAE  00F1               	movwf	fputc@c
  3381  0BAF  3000               	movlw	0
  3382  0BB0  00F2               	movwf	fputc@c+1
  3383  0BB1  0861               	movf	vfpfcnvrt@fp,w
  3384  0BB2  00D1               	movwf	??_vfpfcnvrt
  3385  0BB3  0851               	movf	??_vfpfcnvrt,w
  3386  0BB4  00F3               	movwf	fputc@fp
  3387  0BB5  3188  2004         	fcall	_fputc
  3388  0BB7                     i1l3432:	
  3389                           
  3390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  3391  0BB7  3001               	movlw	1
  3392  0BB8  0140               	movlb	0	; select bank0
  3393  0BB9  00CF               	movwf	?_vfpfcnvrt
  3394  0BBA  3000               	movlw	0
  3395  0BBB  00D0               	movwf	?_vfpfcnvrt+1
  3396  0BBC  0008               	return
  3397  0BBD                     i1l3436:	
  3398                           
  3399                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  3400  0BBD  084F               	movf	vfpfcnvrt@fmt,w
  3401  0BBE  0086               	movwf	6
  3402  0BBF  0187               	clrf	7
  3403  0BC0  3001               	movlw	1
  3404  0BC1  0781               	addwf	1,f
  3405  0BC2  3141               	addfsr 1,1
  3406  0BC3  1803               	skipnc
  3407  0BC4  0A81               	incf	1,f
  3408                           
  3409                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  3410  0BC5  01CF               	clrf	?_vfpfcnvrt
  3411  0BC6  01D0               	clrf	?_vfpfcnvrt+1
  3412  0BC7  0008               	return
  3413  0BC8                     i1l3442:	
  3414                           
  3415                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3416  0BC8  084F               	movf	vfpfcnvrt@fmt,w
  3417  0BC9  0086               	movwf	6
  3418  0BCA  0187               	clrf	7
  3419  0BCB  3F40               	moviw [0]fsr1
  3420  0BCC  00D1               	movwf	??_vfpfcnvrt
  3421  0BCD  3F41               	moviw [1]fsr1
  3422  0BCE  00D2               	movwf	??_vfpfcnvrt+1
  3423  0BCF  0851               	movf	??_vfpfcnvrt,w
  3424  0BD0  0084               	movwf	4
  3425  0BD1  0852               	movf	??_vfpfcnvrt+1,w
  3426  0BD2  0085               	movwf	5
  3427  0BD3  0800               	movf	0,w	;code access
  3428  0BD4  00D3               	movwf	??_vfpfcnvrt+2
  3429  0BD5  01D4               	clrf	??_vfpfcnvrt+3
  3430  0BD6  0853               	movf	??_vfpfcnvrt+2,w
  3431  0BD7  00F1               	movwf	fputc@c
  3432  0BD8  0854               	movf	??_vfpfcnvrt+3,w
  3433  0BD9  00F2               	movwf	fputc@c+1
  3434  0BDA  0861               	movf	vfpfcnvrt@fp,w
  3435  0BDB  00D5               	movwf	??_vfpfcnvrt+4
  3436  0BDC  0855               	movf	??_vfpfcnvrt+4,w
  3437  0BDD  00F3               	movwf	fputc@fp
  3438  0BDE  3188  2004  318A   	fcall	_fputc
  3439                           
  3440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3441  0BE1  0140               	movlb	0	; select bank0
  3442  0BE2  084F               	movf	vfpfcnvrt@fmt,w
  3443  0BE3  0086               	movwf	6
  3444  0BE4  0187               	clrf	7
  3445  0BE5  3001               	movlw	1
  3446  0BE6  0781               	addwf	1,f
  3447  0BE7  3141               	addfsr 1,1
  3448  0BE8  1803               	skipnc
  3449  0BE9  0A81               	incf	1,f
  3450  0BEA  2BB7               	goto	i1l3432
  3451  0BEB                     __end_of_vfpfcnvrt:	
  3452                           
  3453                           	psect	text8
  3454  14C3                     __ptext8:	
  3455 ;; *************** function _strncmp *****************
  3456 ;; Defined at:
  3457 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  _l              1    wreg     PTR const unsigned char 
  3460 ;;		 -> vfpfcnvrt@ct(3), 
  3461 ;;  _r              2    0[COMMON] PTR const unsigned char 
  3462 ;;		 -> STR_13(3), 
  3463 ;;  n               2    2[COMMON] unsigned int 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  _l              1    5[COMMON] PTR const unsigned char 
  3466 ;;		 -> vfpfcnvrt@ct(3), 
  3467 ;;  r               2    6[COMMON] PTR const unsigned char 
  3468 ;;		 -> STR_13(3), 
  3469 ;;  l               1    8[COMMON] PTR const unsigned char 
  3470 ;;		 -> vfpfcnvrt@ct(3), 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  2    0[COMMON] int 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3480 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3481 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3483 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3484 ;;Total ram usage:        9 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_vfpfcnvrt
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           
  3494                           ;psect for function _strncmp
  3495  14C3                     _strncmp:	
  3496                           
  3497                           ;incstack = 0
  3498                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  3499                           ;strncmp@_l stored from wreg
  3500  14C3  00F5               	movwf	strncmp@_l
  3501  14C4  0875               	movf	strncmp@_l,w
  3502  14C5  00F4               	movwf	??_strncmp
  3503  14C6  0874               	movf	??_strncmp,w
  3504  14C7  00F8               	movwf	strncmp@l
  3505  14C8  0871               	movf	strncmp@_r+1,w
  3506  14C9  00F7               	movwf	strncmp@r+1
  3507  14CA  0870               	movf	strncmp@_r,w
  3508  14CB  00F6               	movwf	strncmp@r
  3509  14CC  3001               	movlw	1
  3510  14CD  02F2               	subwf	strncmp@n,f
  3511  14CE  3000               	movlw	0
  3512  14CF  3BF3               	subwfb	strncmp@n+1,f
  3513  14D0  0A72               	incf	strncmp@n,w
  3514  14D1  1D03               	skipz
  3515  14D2  2CFD               	goto	i1l3366
  3516  14D3  0A73               	incf	strncmp@n+1,w
  3517  14D4  1D03               	btfss	3,2
  3518  14D5  2CFD               	goto	i1l3366
  3519  14D6  01F0               	clrf	?_strncmp
  3520  14D7  01F1               	clrf	?_strncmp+1
  3521  14D8  0008               	return
  3522  14D9                     i1l3368:	
  3523  14D9  0876               	movf	strncmp@r,w
  3524  14DA  0084               	movwf	4
  3525  14DB  0877               	movf	strncmp@r+1,w
  3526  14DC  0085               	movwf	5
  3527  14DD  0012               	moviw fsr0++
  3528  14DE  1903               	btfsc	3,2
  3529  14DF  2D03               	goto	i1l3374
  3530  14E0  0872               	movf	strncmp@n,w
  3531  14E1  0473               	iorwf	strncmp@n+1,w
  3532  14E2  1903               	btfsc	3,2
  3533  14E3  2D03               	goto	i1l3374
  3534  14E4  0876               	movf	strncmp@r,w
  3535  14E5  0084               	movwf	4
  3536  14E6  0877               	movf	strncmp@r+1,w
  3537  14E7  0085               	movwf	5
  3538  14E8  0800               	movf	0,w	;code access
  3539  14E9  00F4               	movwf	??_strncmp
  3540  14EA  0878               	movf	strncmp@l,w
  3541  14EB  0086               	movwf	6
  3542  14EC  0187               	clrf	7
  3543  14ED  0801               	movf	1,w
  3544  14EE  0674               	xorwf	??_strncmp,w
  3545  14EF  1D03               	btfss	3,2
  3546  14F0  2D03               	goto	i1l3374
  3547  14F1  3001               	movlw	1
  3548  14F2  00F4               	movwf	??_strncmp
  3549  14F3  0874               	movf	??_strncmp,w
  3550  14F4  07F8               	addwf	strncmp@l,f
  3551  14F5  3001               	movlw	1
  3552  14F6  07F6               	addwf	strncmp@r,f
  3553  14F7  3000               	movlw	0
  3554  14F8  3DF7               	addwfc	strncmp@r+1,f
  3555  14F9  3001               	movlw	1
  3556  14FA  02F2               	subwf	strncmp@n,f
  3557  14FB  3000               	movlw	0
  3558  14FC  3BF3               	subwfb	strncmp@n+1,f
  3559  14FD                     i1l3366:	
  3560  14FD  0878               	movf	strncmp@l,w
  3561  14FE  0086               	movwf	6
  3562  14FF  0187               	clrf	7
  3563  1500  0801               	movf	1,w
  3564  1501  1D03               	btfss	3,2
  3565  1502  2CD9               	goto	i1l3368
  3566  1503                     i1l3374:	
  3567  1503  0878               	movf	strncmp@l,w
  3568  1504  0086               	movwf	6
  3569  1505  0187               	clrf	7
  3570  1506  0876               	movf	strncmp@r,w
  3571  1507  0084               	movwf	4
  3572  1508  0877               	movf	strncmp@r+1,w
  3573  1509  0085               	movwf	5
  3574  150A  0800               	movf	0,w	;code access
  3575  150B  0201               	subwf	1,w
  3576  150C  00F0               	movwf	?_strncmp
  3577  150D  01F1               	clrf	?_strncmp+1
  3578  150E  1C03               	skipc
  3579  150F  03F1               	decf	?_strncmp+1,f
  3580  1510  0008               	return
  3581  1511                     __end_of_strncmp:	
  3582                           
  3583                           	psect	text9
  3584  0076                     __ptext9:	
  3585 ;; *************** function _efgtoa *****************
  3586 ;; Defined at:
  3587 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  fp              1    wreg     PTR struct _IO_FILE
  3590 ;;		 -> NULL(0), 
  3591 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  3592 ;;  c               1   42[BANK0 ] unsigned char 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  fp              1   30[BANK1 ] PTR struct _IO_FILE
  3595 ;;		 -> NULL(0), 
  3596 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  3597 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  3598 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  3599 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  3600 ;;  ou              4    0[BANK1 ] PTR struct _IO_FILE
  3601 ;;  n               2   51[BANK1 ] int 
  3602 ;;  e               2   49[BANK1 ] int 
  3603 ;;  i               2   43[BANK1 ] int 
  3604 ;;  w               2   32[BANK1 ] int 
  3605 ;;  p               2   28[BANK1 ] int 
  3606 ;;  sign            2   26[BANK1 ] int 
  3607 ;;  d               2   24[BANK1 ] int 
  3608 ;;  ne              2   22[BANK1 ] int 
  3609 ;;  m               2   20[BANK1 ] int 
  3610 ;;  pp              2   18[BANK1 ] int 
  3611 ;;  t               2   16[BANK1 ] int 
  3612 ;;  mode            1   34[BANK1 ] unsigned char 
  3613 ;;  nmode           1   31[BANK1 ] unsigned char 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  2   38[BANK0 ] int 
  3616 ;; Registers used:
  3617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3623 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Totals:         0       9      57       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;Total ram usage:       66 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    4
  3630 ;; This function calls:
  3631 ;;		___awdiv
  3632 ;;		___awmod
  3633 ;;		___fladd
  3634 ;;		___fldiv
  3635 ;;		___fleq
  3636 ;;		___flge
  3637 ;;		___flmul
  3638 ;;		___flneg
  3639 ;;		___flsub
  3640 ;;		___fltol
  3641 ;;		___fpclassifyf
  3642 ;;		_floorf
  3643 ;;		_isupper
  3644 ;;		_pad
  3645 ;;		_strcpy
  3646 ;;		_tolower
  3647 ;; This function is called by:
  3648 ;;		_vfpfcnvrt
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           
  3653                           ;psect for function _efgtoa
  3654  0076                     _efgtoa:	
  3655                           
  3656                           ;incstack = 0
  3657                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3658                           ;efgtoa@fp stored from wreg
  3659  0076  0141               	movlb	1	; select bank1
  3660  0077  00BE               	movwf	efgtoa@fp^(0+128)
  3661                           
  3662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  3663  0078  01BA               	clrf	efgtoa@sign^(0+128)
  3664  0079  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  3665                           
  3666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  3667  007A  0140               	movlb	0	; select bank0
  3668  007B  0849               	movf	efgtoa@f+3,w
  3669  007C  0141               	movlb	1	; select bank1
  3670  007D  00D0               	movwf	(efgtoa@g+3)^(0+128)
  3671  007E  0140               	movlb	0	; select bank0
  3672  007F  0848               	movf	efgtoa@f+2,w
  3673  0080  0141               	movlb	1	; select bank1
  3674  0081  00CF               	movwf	(efgtoa@g+2)^(0+128)
  3675  0082  0140               	movlb	0	; select bank0
  3676  0083  0847               	movf	efgtoa@f+1,w
  3677  0084  0141               	movlb	1	; select bank1
  3678  0085  00CE               	movwf	(efgtoa@g+1)^(0+128)
  3679  0086  0140               	movlb	0	; select bank0
  3680  0087  0846               	movf	efgtoa@f,w
  3681  0088  0141               	movlb	1	; select bank1
  3682  0089  00CD               	movwf	efgtoa@g^(0+128)
  3683                           
  3684                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  3685  008A  0850               	movf	(efgtoa@g+3)^(0+128),w
  3686  008B  0140               	movlb	0	; select bank0
  3687  008C  00BD               	movwf	___flge@ff1+3
  3688  008D  0141               	movlb	1	; select bank1
  3689  008E  084F               	movf	(efgtoa@g+2)^(0+128),w
  3690  008F  0140               	movlb	0	; select bank0
  3691  0090  00BC               	movwf	___flge@ff1+2
  3692  0091  0141               	movlb	1	; select bank1
  3693  0092  084E               	movf	(efgtoa@g+1)^(0+128),w
  3694  0093  0140               	movlb	0	; select bank0
  3695  0094  00BB               	movwf	___flge@ff1+1
  3696  0095  0141               	movlb	1	; select bank1
  3697  0096  084D               	movf	efgtoa@g^(0+128),w
  3698  0097  0140               	movlb	0	; select bank0
  3699  0098  00BA               	movwf	___flge@ff1
  3700  0099  3000               	movlw	0
  3701  009A  00C1               	movwf	___flge@ff2+3
  3702  009B  3000               	movlw	0
  3703  009C  00C0               	movwf	___flge@ff2+2
  3704  009D  3000               	movlw	0
  3705  009E  00BF               	movwf	___flge@ff2+1
  3706  009F  3000               	movlw	0
  3707  00A0  00BE               	movwf	___flge@ff2
  3708  00A1  3187  2783  3180   	fcall	___flge
  3709  00A4  1803               	btfsc	3,0
  3710  00A5  28BF               	goto	i1l3070
  3711                           
  3712                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  3713  00A6  3001               	movlw	1
  3714  00A7  0141               	movlb	1	; select bank1
  3715  00A8  00BA               	movwf	efgtoa@sign^(0+128)
  3716  00A9  3000               	movlw	0
  3717  00AA  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  3718                           
  3719                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  3720  00AB  0850               	movf	(efgtoa@g+3)^(0+128),w
  3721  00AC  00F3               	movwf	___flneg@f1+3
  3722  00AD  084F               	movf	(efgtoa@g+2)^(0+128),w
  3723  00AE  00F2               	movwf	___flneg@f1+2
  3724  00AF  084E               	movf	(efgtoa@g+1)^(0+128),w
  3725  00B0  00F1               	movwf	___flneg@f1+1
  3726  00B1  084D               	movf	efgtoa@g^(0+128),w
  3727  00B2  00F0               	movwf	___flneg@f1
  3728  00B3  3192  22F3  3180   	fcall	___flneg
  3729  00B6  0873               	movf	?___flneg+3,w
  3730  00B7  0141               	movlb	1	; select bank1
  3731  00B8  00D0               	movwf	(efgtoa@g+3)^(0+128)
  3732  00B9  0872               	movf	?___flneg+2,w
  3733  00BA  00CF               	movwf	(efgtoa@g+2)^(0+128)
  3734  00BB  0871               	movf	?___flneg+1,w
  3735  00BC  00CE               	movwf	(efgtoa@g+1)^(0+128)
  3736  00BD  0870               	movf	?___flneg,w
  3737  00BE  00CD               	movwf	efgtoa@g^(0+128)
  3738  00BF                     i1l3070:	
  3739                           
  3740                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  3741  00BF  0141               	movlb	1	; select bank1
  3742  00C0  01D3               	clrf	efgtoa@n^(0+128)
  3743  00C1  01D4               	clrf	(efgtoa@n+1)^(0+128)
  3744                           
  3745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  3746  00C2  086A               	movf	(_width+1)^(0+128),w
  3747  00C3  00C1               	movwf	(efgtoa@w+1)^(0+128)
  3748  00C4  0869               	movf	_width^(0+128),w
  3749  00C5  00C0               	movwf	efgtoa@w^(0+128)
  3750                           
  3751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  3752  00C6  083A               	movf	efgtoa@sign^(0+128),w
  3753  00C7  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  3754  00C8  1D03               	btfss	3,2
  3755  00C9  28CC               	goto	i1l3078
  3756  00CA  1D6D               	btfss	_flags^(0+128),2
  3757  00CB  28E5               	goto	i1l3090
  3758  00CC                     i1l3078:	
  3759                           
  3760                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  3761  00CC  083A               	movf	efgtoa@sign^(0+128),w
  3762  00CD  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  3763  00CE  1D03               	btfss	3,2
  3764  00CF  28D2               	goto	i1l3082
  3765  00D0  302B               	movlw	43
  3766  00D1  28D3               	goto	L2
  3767  00D2                     i1l3082:	
  3768  00D2  302D               	movlw	45
  3769  00D3                     L2:	
  3770  00D3  00A4               	movwf	_efgtoa$386^(0+128)
  3771  00D4  3000               	movlw	0
  3772  00D5  00A5               	movwf	(_efgtoa$386^(0+128)+1)
  3773  00D6  0824               	movf	_efgtoa$386^(0+128),w
  3774  00D7  0140               	movlb	0	; select bank0
  3775  00D8  00CB               	movwf	??_efgtoa
  3776  00D9  084B               	movf	??_efgtoa,w
  3777  00DA  0143               	movlb	3	; select bank3
  3778  00DB  00A0               	movwf	_dbuf^(0+384)
  3779                           
  3780                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  3781  00DC  3001               	movlw	1
  3782  00DD  0141               	movlb	1	; select bank1
  3783  00DE  07D3               	addwf	efgtoa@n^(0+128),f
  3784  00DF  3000               	movlw	0
  3785  00E0  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  3786                           
  3787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  3788  00E1  30FF               	movlw	255
  3789  00E2  07C0               	addwf	efgtoa@w^(0+128),f
  3790  00E3  30FF               	movlw	255
  3791  00E4  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  3792  00E5                     i1l3090:	
  3793                           
  3794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3795  00E5  0850               	movf	(efgtoa@g+3)^(0+128),w
  3796  00E6  00F3               	movwf	___fpclassifyf@x+3
  3797  00E7  084F               	movf	(efgtoa@g+2)^(0+128),w
  3798  00E8  00F2               	movwf	___fpclassifyf@x+2
  3799  00E9  084E               	movf	(efgtoa@g+1)^(0+128),w
  3800  00EA  00F1               	movwf	___fpclassifyf@x+1
  3801  00EB  084D               	movf	efgtoa@g^(0+128),w
  3802  00EC  00F0               	movwf	___fpclassifyf@x
  3803  00ED  3196  2671  3180   	fcall	___fpclassifyf
  3804  00F0  0370               	decf	?___fpclassifyf,w
  3805  00F1  0471               	iorwf	?___fpclassifyf+1,w
  3806  00F2  1D03               	btfss	3,2
  3807  00F3  293C               	goto	i1l3108
  3808  00F4  0140               	movlb	0	; select bank0
  3809  00F5  084A               	movf	efgtoa@c,w
  3810  00F6  3EBF               	addlw	191
  3811  00F7  00CB               	movwf	??_efgtoa
  3812  00F8  30FF               	movlw	255
  3813  00F9  1803               	skipnc
  3814  00FA  3000               	movlw	0
  3815  00FB  00CC               	movwf	??_efgtoa+1
  3816  00FC  3000               	movlw	0
  3817  00FD  024C               	subwf	??_efgtoa+1,w
  3818  00FE  301A               	movlw	26
  3819  00FF  1903               	skipnz
  3820  0100  024B               	subwf	??_efgtoa,w
  3821  0101  1803               	btfsc	3,0
  3822  0102  2905               	goto	u459_20
  3823  0103  3001               	movlw	1
  3824  0104  2906               	goto	u460_20
  3825  0105                     u459_20:	
  3826  0105  3000               	movlw	0
  3827  0106                     u460_20:	
  3828  0106  00CD               	movwf	??_efgtoa+2
  3829  0107  01CE               	clrf	??_efgtoa+3
  3830  0108  084D               	movf	??_efgtoa+2,w
  3831  0109  0141               	movlb	1	; select bank1
  3832  010A  00A6               	movwf	_efgtoa$387^(0+128)
  3833  010B  0140               	movlb	0	; select bank0
  3834  010C  084E               	movf	??_efgtoa+3,w
  3835  010D  0141               	movlb	1	; select bank1
  3836  010E  00A7               	movwf	(_efgtoa$387+1)^(0+128)
  3837  010F  0826               	movf	_efgtoa$387^(0+128),w
  3838  0110  0427               	iorwf	(_efgtoa$387+1)^(0+128),w
  3839  0111  1903               	btfsc	3,2
  3840  0112  2917               	goto	i1l3100
  3841                           
  3842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  3843  0113  3007               	movlw	low (STR_3| (0+32768))
  3844  0114  00F0               	movwf	strcpy@src
  3845  0115  3098               	movlw	high (STR_3| (0+32768))
  3846  0116  291A               	goto	L3
  3847  0117                     i1l3100:	
  3848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  3849                           
  3850                           
  3851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  3852  0117  300F               	movlw	low (STR_4| (0+32768))
  3853  0118  00F0               	movwf	strcpy@src
  3854  0119  3098               	movlw	high (STR_4| (0+32768))
  3855  011A                     L3:	
  3856  011A  00F1               	movwf	strcpy@src+1
  3857  011B  0853               	movf	efgtoa@n^(0+128),w
  3858  011C  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3859  011D  3193  23A1  3180   	fcall	_strcpy
  3860                           
  3861                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  3862  0120  30FD               	movlw	253
  3863  0121  0141               	movlb	1	; select bank1
  3864  0122  07C0               	addwf	efgtoa@w^(0+128),f
  3865  0123  30FF               	movlw	255
  3866  0124  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  3867                           
  3868                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  3869  0125  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3870  0126  0140               	movlb	0	; select bank0
  3871  0127  00CB               	movwf	??_efgtoa
  3872  0128  084B               	movf	??_efgtoa,w
  3873  0129  00A4               	movwf	pad@buf
  3874  012A  0141               	movlb	1	; select bank1
  3875  012B  0841               	movf	(efgtoa@w+1)^(0+128),w
  3876  012C  0140               	movlb	0	; select bank0
  3877  012D  00A6               	movwf	pad@p+1
  3878  012E  0141               	movlb	1	; select bank1
  3879  012F  0840               	movf	efgtoa@w^(0+128),w
  3880  0130  0140               	movlb	0	; select bank0
  3881  0131  00A5               	movwf	pad@p
  3882  0132  0141               	movlb	1	; select bank1
  3883  0133  083E               	movf	efgtoa@fp^(0+128),w
  3884  0134  3195  2511         	fcall	_pad
  3885  0136  0140               	movlb	0	; select bank0
  3886  0137  0825               	movf	?_pad+1,w
  3887  0138  00C7               	movwf	?_efgtoa+1
  3888  0139  0824               	movf	?_pad,w
  3889  013A  00C6               	movwf	?_efgtoa
  3890  013B  0008               	return
  3891  013C                     i1l3108:	
  3892                           
  3893                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3894  013C  0141               	movlb	1	; select bank1
  3895  013D  0850               	movf	(efgtoa@g+3)^(0+128),w
  3896  013E  00F3               	movwf	___fpclassifyf@x+3
  3897  013F  084F               	movf	(efgtoa@g+2)^(0+128),w
  3898  0140  00F2               	movwf	___fpclassifyf@x+2
  3899  0141  084E               	movf	(efgtoa@g+1)^(0+128),w
  3900  0142  00F1               	movwf	___fpclassifyf@x+1
  3901  0143  084D               	movf	efgtoa@g^(0+128),w
  3902  0144  00F0               	movwf	___fpclassifyf@x
  3903  0145  3196  2671  3180   	fcall	___fpclassifyf
  3904  0148  0870               	movf	?___fpclassifyf,w
  3905  0149  0471               	iorwf	?___fpclassifyf+1,w
  3906  014A  1D03               	btfss	3,2
  3907  014B  2994               	goto	i1l3126
  3908  014C  0140               	movlb	0	; select bank0
  3909  014D  084A               	movf	efgtoa@c,w
  3910  014E  3EBF               	addlw	191
  3911  014F  00CB               	movwf	??_efgtoa
  3912  0150  30FF               	movlw	255
  3913  0151  1803               	skipnc
  3914  0152  3000               	movlw	0
  3915  0153  00CC               	movwf	??_efgtoa+1
  3916  0154  3000               	movlw	0
  3917  0155  024C               	subwf	??_efgtoa+1,w
  3918  0156  301A               	movlw	26
  3919  0157  1903               	skipnz
  3920  0158  024B               	subwf	??_efgtoa,w
  3921  0159  1803               	btfsc	3,0
  3922  015A  295D               	goto	u463_20
  3923  015B  3001               	movlw	1
  3924  015C  295E               	goto	u464_20
  3925  015D                     u463_20:	
  3926  015D  3000               	movlw	0
  3927  015E                     u464_20:	
  3928  015E  00CD               	movwf	??_efgtoa+2
  3929  015F  01CE               	clrf	??_efgtoa+3
  3930  0160  084D               	movf	??_efgtoa+2,w
  3931  0161  0141               	movlb	1	; select bank1
  3932  0162  00A8               	movwf	_efgtoa$392^(0+128)
  3933  0163  0140               	movlb	0	; select bank0
  3934  0164  084E               	movf	??_efgtoa+3,w
  3935  0165  0141               	movlb	1	; select bank1
  3936  0166  00A9               	movwf	(_efgtoa$392+1)^(0+128)
  3937  0167  0828               	movf	_efgtoa$392^(0+128),w
  3938  0168  0429               	iorwf	(_efgtoa$392+1)^(0+128),w
  3939  0169  1903               	btfsc	3,2
  3940  016A  296F               	goto	i1l3118
  3941                           
  3942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  3943  016B  300B               	movlw	low (STR_7| (0+32768))
  3944  016C  00F0               	movwf	strcpy@src
  3945  016D  3098               	movlw	high (STR_7| (0+32768))
  3946  016E  2972               	goto	L4
  3947  016F                     i1l3118:	
  3948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  3949                           
  3950                           
  3951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  3952  016F  3013               	movlw	low (STR_8| (0+32768))
  3953  0170  00F0               	movwf	strcpy@src
  3954  0171  3098               	movlw	high (STR_8| (0+32768))
  3955  0172                     L4:	
  3956  0172  00F1               	movwf	strcpy@src+1
  3957  0173  0853               	movf	efgtoa@n^(0+128),w
  3958  0174  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3959  0175  3193  23A1  3180   	fcall	_strcpy
  3960                           
  3961                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 358:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  3962  0178  30FD               	movlw	253
  3963  0179  0141               	movlb	1	; select bank1
  3964  017A  07C0               	addwf	efgtoa@w^(0+128),f
  3965  017B  30FF               	movlw	255
  3966  017C  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  3967                           
  3968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 359:         return pad(fp, &
      +                          dbuf[0], w);
  3969  017D  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3970  017E  0140               	movlb	0	; select bank0
  3971  017F  00CB               	movwf	??_efgtoa
  3972  0180  084B               	movf	??_efgtoa,w
  3973  0181  00A4               	movwf	pad@buf
  3974  0182  0141               	movlb	1	; select bank1
  3975  0183  0841               	movf	(efgtoa@w+1)^(0+128),w
  3976  0184  0140               	movlb	0	; select bank0
  3977  0185  00A6               	movwf	pad@p+1
  3978  0186  0141               	movlb	1	; select bank1
  3979  0187  0840               	movf	efgtoa@w^(0+128),w
  3980  0188  0140               	movlb	0	; select bank0
  3981  0189  00A5               	movwf	pad@p
  3982  018A  0141               	movlb	1	; select bank1
  3983  018B  083E               	movf	efgtoa@fp^(0+128),w
  3984  018C  3195  2511         	fcall	_pad
  3985  018E  0140               	movlb	0	; select bank0
  3986  018F  0825               	movf	?_pad+1,w
  3987  0190  00C7               	movwf	?_efgtoa+1
  3988  0191  0824               	movf	?_pad,w
  3989  0192  00C6               	movwf	?_efgtoa
  3990  0193  0008               	return
  3991  0194                     i1l3126:	
  3992                           
  3993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  3994  0194  303F               	movlw	63
  3995  0195  0141               	movlb	1	; select bank1
  3996  0196  00D8               	movwf	(efgtoa@u+3)^(0+128)
  3997  0197  3080               	movlw	128
  3998  0198  00D7               	movwf	(efgtoa@u+2)^(0+128)
  3999  0199  3000               	movlw	0
  4000  019A  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4001  019B  3000               	movlw	0
  4002  019C  00D5               	movwf	efgtoa@u^(0+128)
  4003                           
  4004                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  4005  019D  01D1               	clrf	efgtoa@e^(0+128)
  4006  019E  01D2               	clrf	(efgtoa@e+1)^(0+128)
  4007                           
  4008                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  4009  019F  0850               	movf	(efgtoa@g+3)^(0+128),w
  4010  01A0  00F3               	movwf	___fleq@ff1+3
  4011  01A1  084F               	movf	(efgtoa@g+2)^(0+128),w
  4012  01A2  00F2               	movwf	___fleq@ff1+2
  4013  01A3  084E               	movf	(efgtoa@g+1)^(0+128),w
  4014  01A4  00F1               	movwf	___fleq@ff1+1
  4015  01A5  084D               	movf	efgtoa@g^(0+128),w
  4016  01A6  00F0               	movwf	___fleq@ff1
  4017  01A7  3000               	movlw	0
  4018  01A8  00F7               	movwf	___fleq@ff2+3
  4019  01A9  3000               	movlw	0
  4020  01AA  00F6               	movwf	___fleq@ff2+2
  4021  01AB  3000               	movlw	0
  4022  01AC  00F5               	movwf	___fleq@ff2+1
  4023  01AD  3000               	movlw	0
  4024  01AE  00F4               	movwf	___fleq@ff2
  4025  01AF  3194  247B  3180   	fcall	___fleq
  4026  01B2  1C03               	btfss	3,0
  4027  01B3  29E5               	goto	i1l3138
  4028  01B4  2A65               	goto	i1l3146
  4029  01B5                     i1l3134:	
  4030                           
  4031                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  4032  01B5  3041               	movlw	65
  4033  01B6  0140               	movlb	0	; select bank0
  4034  01B7  00A3               	movwf	___flmul@b+3
  4035  01B8  3020               	movlw	32
  4036  01B9  00A2               	movwf	___flmul@b+2
  4037  01BA  3000               	movlw	0
  4038  01BB  00A1               	movwf	___flmul@b+1
  4039  01BC  3000               	movlw	0
  4040  01BD  00A0               	movwf	___flmul@b
  4041  01BE  0141               	movlb	1	; select bank1
  4042  01BF  0858               	movf	(efgtoa@u+3)^(0+128),w
  4043  01C0  0140               	movlb	0	; select bank0
  4044  01C1  00A7               	movwf	___flmul@a+3
  4045  01C2  0141               	movlb	1	; select bank1
  4046  01C3  0857               	movf	(efgtoa@u+2)^(0+128),w
  4047  01C4  0140               	movlb	0	; select bank0
  4048  01C5  00A6               	movwf	___flmul@a+2
  4049  01C6  0141               	movlb	1	; select bank1
  4050  01C7  0856               	movf	(efgtoa@u+1)^(0+128),w
  4051  01C8  0140               	movlb	0	; select bank0
  4052  01C9  00A5               	movwf	___flmul@a+1
  4053  01CA  0141               	movlb	1	; select bank1
  4054  01CB  0855               	movf	efgtoa@u^(0+128),w
  4055  01CC  0140               	movlb	0	; select bank0
  4056  01CD  00A4               	movwf	___flmul@a
  4057  01CE  318D  25D4  3180   	fcall	___flmul
  4058  01D1  0140               	movlb	0	; select bank0
  4059  01D2  0823               	movf	?___flmul+3,w
  4060  01D3  0141               	movlb	1	; select bank1
  4061  01D4  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4062  01D5  0140               	movlb	0	; select bank0
  4063  01D6  0822               	movf	?___flmul+2,w
  4064  01D7  0141               	movlb	1	; select bank1
  4065  01D8  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4066  01D9  0140               	movlb	0	; select bank0
  4067  01DA  0821               	movf	?___flmul+1,w
  4068  01DB  0141               	movlb	1	; select bank1
  4069  01DC  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4070  01DD  0140               	movlb	0	; select bank0
  4071  01DE  0820               	movf	?___flmul,w
  4072  01DF  0141               	movlb	1	; select bank1
  4073  01E0  00D5               	movwf	efgtoa@u^(0+128)
  4074                           
  4075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  4076  01E1  3001               	movlw	1
  4077  01E2  07D1               	addwf	efgtoa@e^(0+128),f
  4078  01E3  3000               	movlw	0
  4079  01E4  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  4080  01E5                     i1l3138:	
  4081                           
  4082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  4083  01E5  0141               	movlb	1	; select bank1
  4084  01E6  0850               	movf	(efgtoa@g+3)^(0+128),w
  4085  01E7  0140               	movlb	0	; select bank0
  4086  01E8  00BD               	movwf	___flge@ff1+3
  4087  01E9  0141               	movlb	1	; select bank1
  4088  01EA  084F               	movf	(efgtoa@g+2)^(0+128),w
  4089  01EB  0140               	movlb	0	; select bank0
  4090  01EC  00BC               	movwf	___flge@ff1+2
  4091  01ED  0141               	movlb	1	; select bank1
  4092  01EE  084E               	movf	(efgtoa@g+1)^(0+128),w
  4093  01EF  0140               	movlb	0	; select bank0
  4094  01F0  00BB               	movwf	___flge@ff1+1
  4095  01F1  0141               	movlb	1	; select bank1
  4096  01F2  084D               	movf	efgtoa@g^(0+128),w
  4097  01F3  0140               	movlb	0	; select bank0
  4098  01F4  00BA               	movwf	___flge@ff1
  4099  01F5  3041               	movlw	65
  4100  01F6  00A3               	movwf	___flmul@b+3
  4101  01F7  3020               	movlw	32
  4102  01F8  00A2               	movwf	___flmul@b+2
  4103  01F9  3000               	movlw	0
  4104  01FA  00A1               	movwf	___flmul@b+1
  4105  01FB  3000               	movlw	0
  4106  01FC  00A0               	movwf	___flmul@b
  4107  01FD  0141               	movlb	1	; select bank1
  4108  01FE  0858               	movf	(efgtoa@u+3)^(0+128),w
  4109  01FF  0140               	movlb	0	; select bank0
  4110  0200  00A7               	movwf	___flmul@a+3
  4111  0201  0141               	movlb	1	; select bank1
  4112  0202  0857               	movf	(efgtoa@u+2)^(0+128),w
  4113  0203  0140               	movlb	0	; select bank0
  4114  0204  00A6               	movwf	___flmul@a+2
  4115  0205  0141               	movlb	1	; select bank1
  4116  0206  0856               	movf	(efgtoa@u+1)^(0+128),w
  4117  0207  0140               	movlb	0	; select bank0
  4118  0208  00A5               	movwf	___flmul@a+1
  4119  0209  0141               	movlb	1	; select bank1
  4120  020A  0855               	movf	efgtoa@u^(0+128),w
  4121  020B  0140               	movlb	0	; select bank0
  4122  020C  00A4               	movwf	___flmul@a
  4123  020D  318D  25D4  3180   	fcall	___flmul
  4124  0210  0140               	movlb	0	; select bank0
  4125  0211  0823               	movf	?___flmul+3,w
  4126  0212  00C1               	movwf	___flge@ff2+3
  4127  0213  0822               	movf	?___flmul+2,w
  4128  0214  00C0               	movwf	___flge@ff2+2
  4129  0215  0821               	movf	?___flmul+1,w
  4130  0216  00BF               	movwf	___flge@ff2+1
  4131  0217  0820               	movf	?___flmul,w
  4132  0218  00BE               	movwf	___flge@ff2
  4133  0219  3187  2783  3180   	fcall	___flge
  4134  021C  1C03               	btfss	3,0
  4135  021D  2A40               	goto	i1l3144
  4136  021E  29B5               	goto	i1l3134
  4137  021F                     i1l3140:	
  4138                           
  4139                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  4140  021F  3041               	movlw	65
  4141  0220  00F3               	movwf	___fldiv@a+3
  4142  0221  3020               	movlw	32
  4143  0222  00F2               	movwf	___fldiv@a+2
  4144  0223  3000               	movlw	0
  4145  0224  00F1               	movwf	___fldiv@a+1
  4146  0225  3000               	movlw	0
  4147  0226  00F0               	movwf	___fldiv@a
  4148  0227  0141               	movlb	1	; select bank1
  4149  0228  0858               	movf	(efgtoa@u+3)^(0+128),w
  4150  0229  00F7               	movwf	___fldiv@b+3
  4151  022A  0857               	movf	(efgtoa@u+2)^(0+128),w
  4152  022B  00F6               	movwf	___fldiv@b+2
  4153  022C  0856               	movf	(efgtoa@u+1)^(0+128),w
  4154  022D  00F5               	movwf	___fldiv@b+1
  4155  022E  0855               	movf	efgtoa@u^(0+128),w
  4156  022F  00F4               	movwf	___fldiv@b
  4157  0230  3188  20D8  3180   	fcall	___fldiv
  4158  0233  0873               	movf	?___fldiv+3,w
  4159  0234  0141               	movlb	1	; select bank1
  4160  0235  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4161  0236  0872               	movf	?___fldiv+2,w
  4162  0237  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4163  0238  0871               	movf	?___fldiv+1,w
  4164  0239  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4165  023A  0870               	movf	?___fldiv,w
  4166  023B  00D5               	movwf	efgtoa@u^(0+128)
  4167                           
  4168                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  4169  023C  30FF               	movlw	255
  4170  023D  07D1               	addwf	efgtoa@e^(0+128),f
  4171  023E  30FF               	movlw	255
  4172  023F  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  4173  0240                     i1l3144:	
  4174                           
  4175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  4176  0240  0141               	movlb	1	; select bank1
  4177  0241  0850               	movf	(efgtoa@g+3)^(0+128),w
  4178  0242  0140               	movlb	0	; select bank0
  4179  0243  00BD               	movwf	___flge@ff1+3
  4180  0244  0141               	movlb	1	; select bank1
  4181  0245  084F               	movf	(efgtoa@g+2)^(0+128),w
  4182  0246  0140               	movlb	0	; select bank0
  4183  0247  00BC               	movwf	___flge@ff1+2
  4184  0248  0141               	movlb	1	; select bank1
  4185  0249  084E               	movf	(efgtoa@g+1)^(0+128),w
  4186  024A  0140               	movlb	0	; select bank0
  4187  024B  00BB               	movwf	___flge@ff1+1
  4188  024C  0141               	movlb	1	; select bank1
  4189  024D  084D               	movf	efgtoa@g^(0+128),w
  4190  024E  0140               	movlb	0	; select bank0
  4191  024F  00BA               	movwf	___flge@ff1
  4192  0250  0141               	movlb	1	; select bank1
  4193  0251  0858               	movf	(efgtoa@u+3)^(0+128),w
  4194  0252  0140               	movlb	0	; select bank0
  4195  0253  00C1               	movwf	___flge@ff2+3
  4196  0254  0141               	movlb	1	; select bank1
  4197  0255  0857               	movf	(efgtoa@u+2)^(0+128),w
  4198  0256  0140               	movlb	0	; select bank0
  4199  0257  00C0               	movwf	___flge@ff2+2
  4200  0258  0141               	movlb	1	; select bank1
  4201  0259  0856               	movf	(efgtoa@u+1)^(0+128),w
  4202  025A  0140               	movlb	0	; select bank0
  4203  025B  00BF               	movwf	___flge@ff2+1
  4204  025C  0141               	movlb	1	; select bank1
  4205  025D  0855               	movf	efgtoa@u^(0+128),w
  4206  025E  0140               	movlb	0	; select bank0
  4207  025F  00BE               	movwf	___flge@ff2
  4208  0260  3187  2783  3180   	fcall	___flge
  4209  0263  1C03               	btfss	3,0
  4210  0264  2A1F               	goto	i1l3140
  4211  0265                     i1l3146:	
  4212                           
  4213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  4214  0265  0140               	movlb	0	; select bank0
  4215  0266  084A               	movf	efgtoa@c,w
  4216  0267  00CB               	movwf	??_efgtoa
  4217  0268  01CC               	clrf	??_efgtoa+1
  4218  0269  084B               	movf	??_efgtoa,w
  4219  026A  00F6               	movwf	tolower@c
  4220  026B  084C               	movf	??_efgtoa+1,w
  4221  026C  00F7               	movwf	tolower@c+1
  4222  026D  3193  23C0  3180   	fcall	_tolower
  4223  0270  0876               	movf	?_tolower,w
  4224  0271  0140               	movlb	0	; select bank0
  4225  0272  00CD               	movwf	??_efgtoa+2
  4226  0273  084D               	movf	??_efgtoa+2,w
  4227  0274  0141               	movlb	1	; select bank1
  4228  0275  00C2               	movwf	efgtoa@mode^(0+128)
  4229                           
  4230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  4231  0276  0842               	movf	efgtoa@mode^(0+128),w
  4232  0277  0140               	movlb	0	; select bank0
  4233  0278  00CB               	movwf	??_efgtoa
  4234  0279  084B               	movf	??_efgtoa,w
  4235  027A  0141               	movlb	1	; select bank1
  4236  027B  00BF               	movwf	efgtoa@nmode^(0+128)
  4237                           
  4238                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  4239  027C  3067               	movlw	103
  4240  027D  0642               	xorwf	efgtoa@mode^(0+128),w
  4241  027E  1D03               	btfss	3,2
  4242  027F  2A9B               	goto	i1l260
  4243                           
  4244                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  4245  0280  086B               	movf	_prec^(0+128),w
  4246  0281  046C               	iorwf	(_prec+1)^(0+128),w
  4247  0282  1D03               	btfss	3,2
  4248  0283  2A88               	goto	i1l261
  4249                           
  4250                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  4251  0284  3001               	movlw	1
  4252  0285  00EB               	movwf	_prec^(0+128)
  4253  0286  3000               	movlw	0
  4254  0287  00EC               	movwf	(_prec^(0+128)+1)
  4255  0288                     i1l261:	
  4256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 382:   }
  4257                           
  4258                           
  4259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  4260  0288  086C               	movf	(_prec+1)^(0+128),w
  4261  0289  3A80               	xorlw	128
  4262  028A  0140               	movlb	0	; select bank0
  4263  028B  00CB               	movwf	??_efgtoa
  4264  028C  3080               	movlw	128
  4265  028D  024B               	subwf	??_efgtoa,w
  4266  028E  1D03               	skipz
  4267  028F  2A93               	goto	u471_25
  4268  0290  3001               	movlw	1
  4269  0291  0141               	movlb	1	; select bank1
  4270  0292  026B               	subwf	_prec^(0+128),w
  4271  0293                     u471_25:	
  4272  0293  1803               	skipnc
  4273  0294  2A9D               	goto	i1l3158
  4274  0295                     i1l3156:	
  4275  0295  3006               	movlw	6
  4276  0296  0141               	movlb	1	; select bank1
  4277  0297  00BC               	movwf	efgtoa@p^(0+128)
  4278  0298  3000               	movlw	0
  4279  0299  00BD               	movwf	(efgtoa@p^(0+128)+1)
  4280  029A  2AA2               	goto	i1l3164
  4281  029B                     i1l260:	
  4282                           
  4283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  4284  029B  1BEC               	btfsc	(_prec+1)^(0+128),7
  4285  029C  2A95               	goto	i1l3156
  4286  029D                     i1l3158:	
  4287  029D  0141               	movlb	1	; select bank1
  4288  029E  086C               	movf	(_prec+1)^(0+128),w
  4289  029F  00BD               	movwf	(efgtoa@p+1)^(0+128)
  4290  02A0  086B               	movf	_prec^(0+128),w
  4291  02A1  00BC               	movwf	efgtoa@p^(0+128)
  4292  02A2                     i1l3164:	
  4293                           
  4294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  4295  02A2  3067               	movlw	103
  4296  02A3  0642               	xorwf	efgtoa@mode^(0+128),w
  4297  02A4  1D03               	btfss	3,2
  4298  02A5  2AD5               	goto	i1l271
  4299                           
  4300                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  4301  02A6  0852               	movf	(efgtoa@e+1)^(0+128),w
  4302  02A7  3A80               	xorlw	128
  4303  02A8  0140               	movlb	0	; select bank0
  4304  02A9  00CB               	movwf	??_efgtoa
  4305  02AA  307F               	movlw	127
  4306  02AB  024B               	subwf	??_efgtoa,w
  4307  02AC  1D03               	skipz
  4308  02AD  2AB1               	goto	u474_25
  4309  02AE  30FC               	movlw	252
  4310  02AF  0141               	movlb	1	; select bank1
  4311  02B0  0251               	subwf	efgtoa@e^(0+128),w
  4312  02B1                     u474_25:	
  4313  02B1  1C03               	skipc
  4314  02B2  2ACF               	goto	i1l3172
  4315  02B3  0141               	movlb	1	; select bank1
  4316  02B4  083C               	movf	efgtoa@p^(0+128),w
  4317  02B5  3EFF               	addlw	255
  4318  02B6  0140               	movlb	0	; select bank0
  4319  02B7  00CB               	movwf	??_efgtoa
  4320  02B8  30FF               	movlw	255
  4321  02B9  0141               	movlb	1	; select bank1
  4322  02BA  3D3D               	addwfc	(efgtoa@p+1)^(0+128),w
  4323  02BB  0140               	movlb	0	; select bank0
  4324  02BC  00CC               	movwf	??_efgtoa+1
  4325  02BD  084C               	movf	??_efgtoa+1,w
  4326  02BE  3A80               	xorlw	128
  4327  02BF  00CD               	movwf	??_efgtoa+2
  4328  02C0  0141               	movlb	1	; select bank1
  4329  02C1  0852               	movf	(efgtoa@e+1)^(0+128),w
  4330  02C2  3A80               	xorlw	128
  4331  02C3  0140               	movlb	0	; select bank0
  4332  02C4  024D               	subwf	??_efgtoa+2,w
  4333  02C5  1D03               	skipz
  4334  02C6  2ACB               	goto	u475_25
  4335  02C7  0141               	movlb	1	; select bank1
  4336  02C8  0851               	movf	efgtoa@e^(0+128),w
  4337  02C9  0140               	movlb	0	; select bank0
  4338  02CA  024B               	subwf	??_efgtoa,w
  4339  02CB                     u475_25:	
  4340  02CB  1C03               	skipc
  4341  02CC  2ACF               	goto	i1l3172
  4342                           
  4343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  4344  02CD  3066               	movlw	102
  4345  02CE  2AD0               	goto	L5
  4346  02CF                     i1l3172:	
  4347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 392:         } else {
  4348                           
  4349                           
  4350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  4351  02CF  3065               	movlw	101
  4352  02D0                     L5:	
  4353  02D0  0140               	movlb	0	; select bank0
  4354  02D1  00CB               	movwf	??_efgtoa
  4355  02D2  084B               	movf	??_efgtoa,w
  4356  02D3  0141               	movlb	1	; select bank1
  4357  02D4  00BF               	movwf	efgtoa@nmode^(0+128)
  4358  02D5                     i1l271:	
  4359                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 395:     }
  4360                           
  4361                           
  4362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  4363  02D5  083D               	movf	(efgtoa@p+1)^(0+128),w
  4364  02D6  00B5               	movwf	(efgtoa@m+1)^(0+128)
  4365  02D7  083C               	movf	efgtoa@p^(0+128),w
  4366  02D8  00B4               	movwf	efgtoa@m^(0+128)
  4367                           
  4368                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  4369  02D9  3067               	movlw	103
  4370  02DA  0642               	xorwf	efgtoa@mode^(0+128),w
  4371  02DB  1D03               	btfss	3,2
  4372  02DC  2AE2               	goto	i1l3180
  4373  02DD  3066               	movlw	102
  4374  02DE  063F               	xorwf	efgtoa@nmode^(0+128),w
  4375  02DF  1903               	btfsc	3,2
  4376  02E0  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  4377  02E1  2AE6               	goto	i1l3182
  4378  02E2                     i1l3180:	
  4379                           
  4380                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  4381  02E2  3001               	movlw	1
  4382  02E3  07B4               	addwf	efgtoa@m^(0+128),f
  4383  02E4  3000               	movlw	0
  4384  02E5  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  4385  02E6                     i1l3182:	
  4386                           
  4387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  4388  02E6  3066               	movlw	102
  4389  02E7  063F               	xorwf	efgtoa@nmode^(0+128),w
  4390  02E8  1D03               	btfss	3,2
  4391  02E9  2AFE               	goto	i1l3194
  4392                           
  4393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  4394  02EA  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  4395  02EB  2AF6               	goto	i1l3190
  4396                           
  4397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  4398  02EC  303F               	movlw	63
  4399  02ED  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4400  02EE  3080               	movlw	128
  4401  02EF  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4402  02F0  3000               	movlw	0
  4403  02F1  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4404  02F2  3000               	movlw	0
  4405  02F3  00D5               	movwf	efgtoa@u^(0+128)
  4406                           
  4407                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  4408  02F4  01D1               	clrf	efgtoa@e^(0+128)
  4409  02F5  01D2               	clrf	(efgtoa@e+1)^(0+128)
  4410  02F6                     i1l3190:	
  4411                           
  4412                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  4413  02F6  3067               	movlw	103
  4414  02F7  0642               	xorwf	efgtoa@mode^(0+128),w
  4415  02F8  1903               	btfsc	3,2
  4416  02F9  2AFE               	goto	i1l3194
  4417                           
  4418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  4419  02FA  0851               	movf	efgtoa@e^(0+128),w
  4420  02FB  07B4               	addwf	efgtoa@m^(0+128),f
  4421  02FC  0852               	movf	(efgtoa@e+1)^(0+128),w
  4422  02FD  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  4423  02FE                     i1l3194:	
  4424                           
  4425                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  4426  02FE  01CB               	clrf	efgtoa@i^(0+128)
  4427  02FF  01CC               	clrf	(efgtoa@i+1)^(0+128)
  4428                           
  4429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  4430  0300  0850               	movf	(efgtoa@g+3)^(0+128),w
  4431  0301  00C6               	movwf	(efgtoa@h+3)^(0+128)
  4432  0302  084F               	movf	(efgtoa@g+2)^(0+128),w
  4433  0303  00C5               	movwf	(efgtoa@h+2)^(0+128)
  4434  0304  084E               	movf	(efgtoa@g+1)^(0+128),w
  4435  0305  00C4               	movwf	(efgtoa@h+1)^(0+128)
  4436  0306  084D               	movf	efgtoa@g^(0+128),w
  4437  0307  00C3               	movwf	efgtoa@h^(0+128)
  4438                           
  4439                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  4440  0308  0858               	movf	(efgtoa@u+3)^(0+128),w
  4441  0309  00A3               	movwf	(efgtoa@ou+3)^(0+128)
  4442  030A  0857               	movf	(efgtoa@u+2)^(0+128),w
  4443  030B  00A2               	movwf	(efgtoa@ou+2)^(0+128)
  4444  030C  0856               	movf	(efgtoa@u+1)^(0+128),w
  4445  030D  00A1               	movwf	(efgtoa@ou+1)^(0+128)
  4446  030E  0855               	movf	efgtoa@u^(0+128),w
  4447  030F  00A0               	movwf	efgtoa@ou^(0+128)
  4448  0310                     i1l3204:	
  4449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  4450                           
  4451                           
  4452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  4453  0310  084C               	movf	(efgtoa@i+1)^(0+128),w
  4454  0311  3A80               	xorlw	128
  4455  0312  0140               	movlb	0	; select bank0
  4456  0313  00CB               	movwf	??_efgtoa
  4457  0314  0141               	movlb	1	; select bank1
  4458  0315  0835               	movf	(efgtoa@m+1)^(0+128),w
  4459  0316  3A80               	xorlw	128
  4460  0317  0140               	movlb	0	; select bank0
  4461  0318  024B               	subwf	??_efgtoa,w
  4462  0319  1D03               	skipz
  4463  031A  2B1E               	goto	u482_25
  4464  031B  0141               	movlb	1	; select bank1
  4465  031C  0834               	movf	efgtoa@m^(0+128),w
  4466  031D  024B               	subwf	efgtoa@i^(0+128),w
  4467  031E                     u482_25:	
  4468  031E  1803               	btfsc	3,0
  4469  031F  2BCF               	goto	i1l3206
  4470                           
  4471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  4472  0320  0141               	movlb	1	; select bank1
  4473  0321  0858               	movf	(efgtoa@u+3)^(0+128),w
  4474  0322  00F3               	movwf	___fldiv@a+3
  4475  0323  0857               	movf	(efgtoa@u+2)^(0+128),w
  4476  0324  00F2               	movwf	___fldiv@a+2
  4477  0325  0856               	movf	(efgtoa@u+1)^(0+128),w
  4478  0326  00F1               	movwf	___fldiv@a+1
  4479  0327  0855               	movf	efgtoa@u^(0+128),w
  4480  0328  00F0               	movwf	___fldiv@a
  4481  0329  0846               	movf	(efgtoa@h+3)^(0+128),w
  4482  032A  00F7               	movwf	___fldiv@b+3
  4483  032B  0845               	movf	(efgtoa@h+2)^(0+128),w
  4484  032C  00F6               	movwf	___fldiv@b+2
  4485  032D  0844               	movf	(efgtoa@h+1)^(0+128),w
  4486  032E  00F5               	movwf	___fldiv@b+1
  4487  032F  0843               	movf	efgtoa@h^(0+128),w
  4488  0330  00F4               	movwf	___fldiv@b
  4489  0331  3188  20D8  3180   	fcall	___fldiv
  4490  0334  0873               	movf	?___fldiv+3,w
  4491  0335  0140               	movlb	0	; select bank0
  4492  0336  00B0               	movwf	floorf@x+3
  4493  0337  0872               	movf	?___fldiv+2,w
  4494  0338  00AF               	movwf	floorf@x+2
  4495  0339  0871               	movf	?___fldiv+1,w
  4496  033A  00AE               	movwf	floorf@x+1
  4497  033B  0870               	movf	?___fldiv,w
  4498  033C  00AD               	movwf	floorf@x
  4499  033D  3186  26AB  3180   	fcall	_floorf
  4500  0340  0140               	movlb	0	; select bank0
  4501  0341  0830               	movf	?_floorf+3,w
  4502  0342  0141               	movlb	1	; select bank1
  4503  0343  00CA               	movwf	(efgtoa@l+3)^(0+128)
  4504  0344  0140               	movlb	0	; select bank0
  4505  0345  082F               	movf	?_floorf+2,w
  4506  0346  0141               	movlb	1	; select bank1
  4507  0347  00C9               	movwf	(efgtoa@l+2)^(0+128)
  4508  0348  0140               	movlb	0	; select bank0
  4509  0349  082E               	movf	?_floorf+1,w
  4510  034A  0141               	movlb	1	; select bank1
  4511  034B  00C8               	movwf	(efgtoa@l+1)^(0+128)
  4512  034C  0140               	movlb	0	; select bank0
  4513  034D  082D               	movf	?_floorf,w
  4514  034E  0141               	movlb	1	; select bank1
  4515  034F  00C7               	movwf	efgtoa@l^(0+128)
  4516                           
  4517                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  4518  0350  084A               	movf	(efgtoa@l+3)^(0+128),w
  4519  0351  00F3               	movwf	___fltol@f1+3
  4520  0352  0849               	movf	(efgtoa@l+2)^(0+128),w
  4521  0353  00F2               	movwf	___fltol@f1+2
  4522  0354  0848               	movf	(efgtoa@l+1)^(0+128),w
  4523  0355  00F1               	movwf	___fltol@f1+1
  4524  0356  0847               	movf	efgtoa@l^(0+128),w
  4525  0357  00F0               	movwf	___fltol@f1
  4526  0358  3196  260C  3180   	fcall	___fltol
  4527  035B  0871               	movf	?___fltol+1,w
  4528  035C  0141               	movlb	1	; select bank1
  4529  035D  00B9               	movwf	(efgtoa@d+1)^(0+128)
  4530  035E  0870               	movf	?___fltol,w
  4531  035F  00B8               	movwf	efgtoa@d^(0+128)
  4532                           
  4533                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  4534  0360  084A               	movf	(efgtoa@l+3)^(0+128),w
  4535  0361  0140               	movlb	0	; select bank0
  4536  0362  00A7               	movwf	___flmul@a+3
  4537  0363  0141               	movlb	1	; select bank1
  4538  0364  0849               	movf	(efgtoa@l+2)^(0+128),w
  4539  0365  0140               	movlb	0	; select bank0
  4540  0366  00A6               	movwf	___flmul@a+2
  4541  0367  0141               	movlb	1	; select bank1
  4542  0368  0848               	movf	(efgtoa@l+1)^(0+128),w
  4543  0369  0140               	movlb	0	; select bank0
  4544  036A  00A5               	movwf	___flmul@a+1
  4545  036B  0141               	movlb	1	; select bank1
  4546  036C  0847               	movf	efgtoa@l^(0+128),w
  4547  036D  0140               	movlb	0	; select bank0
  4548  036E  00A4               	movwf	___flmul@a
  4549  036F  0141               	movlb	1	; select bank1
  4550  0370  0858               	movf	(efgtoa@u+3)^(0+128),w
  4551  0371  0140               	movlb	0	; select bank0
  4552  0372  00A3               	movwf	___flmul@b+3
  4553  0373  0141               	movlb	1	; select bank1
  4554  0374  0857               	movf	(efgtoa@u+2)^(0+128),w
  4555  0375  0140               	movlb	0	; select bank0
  4556  0376  00A2               	movwf	___flmul@b+2
  4557  0377  0141               	movlb	1	; select bank1
  4558  0378  0856               	movf	(efgtoa@u+1)^(0+128),w
  4559  0379  0140               	movlb	0	; select bank0
  4560  037A  00A1               	movwf	___flmul@b+1
  4561  037B  0141               	movlb	1	; select bank1
  4562  037C  0855               	movf	efgtoa@u^(0+128),w
  4563  037D  0140               	movlb	0	; select bank0
  4564  037E  00A0               	movwf	___flmul@b
  4565  037F  318D  25D4  3180   	fcall	___flmul
  4566  0382  0140               	movlb	0	; select bank0
  4567  0383  0823               	movf	?___flmul+3,w
  4568  0384  00BD               	movwf	___flsub@a+3
  4569  0385  0822               	movf	?___flmul+2,w
  4570  0386  00BC               	movwf	___flsub@a+2
  4571  0387  0821               	movf	?___flmul+1,w
  4572  0388  00BB               	movwf	___flsub@a+1
  4573  0389  0820               	movf	?___flmul,w
  4574  038A  00BA               	movwf	___flsub@a
  4575  038B  0141               	movlb	1	; select bank1
  4576  038C  0846               	movf	(efgtoa@h+3)^(0+128),w
  4577  038D  0140               	movlb	0	; select bank0
  4578  038E  00C1               	movwf	___flsub@b+3
  4579  038F  0141               	movlb	1	; select bank1
  4580  0390  0845               	movf	(efgtoa@h+2)^(0+128),w
  4581  0391  0140               	movlb	0	; select bank0
  4582  0392  00C0               	movwf	___flsub@b+2
  4583  0393  0141               	movlb	1	; select bank1
  4584  0394  0844               	movf	(efgtoa@h+1)^(0+128),w
  4585  0395  0140               	movlb	0	; select bank0
  4586  0396  00BF               	movwf	___flsub@b+1
  4587  0397  0141               	movlb	1	; select bank1
  4588  0398  0843               	movf	efgtoa@h^(0+128),w
  4589  0399  0140               	movlb	0	; select bank0
  4590  039A  00BE               	movwf	___flsub@b
  4591  039B  3193  2382  3180   	fcall	___flsub
  4592  039E  0140               	movlb	0	; select bank0
  4593  039F  083D               	movf	?___flsub+3,w
  4594  03A0  0141               	movlb	1	; select bank1
  4595  03A1  00C6               	movwf	(efgtoa@h+3)^(0+128)
  4596  03A2  0140               	movlb	0	; select bank0
  4597  03A3  083C               	movf	?___flsub+2,w
  4598  03A4  0141               	movlb	1	; select bank1
  4599  03A5  00C5               	movwf	(efgtoa@h+2)^(0+128)
  4600  03A6  0140               	movlb	0	; select bank0
  4601  03A7  083B               	movf	?___flsub+1,w
  4602  03A8  0141               	movlb	1	; select bank1
  4603  03A9  00C4               	movwf	(efgtoa@h+1)^(0+128)
  4604  03AA  0140               	movlb	0	; select bank0
  4605  03AB  083A               	movf	?___flsub,w
  4606  03AC  0141               	movlb	1	; select bank1
  4607  03AD  00C3               	movwf	efgtoa@h^(0+128)
  4608                           
  4609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  4610  03AE  3041               	movlw	65
  4611  03AF  00F3               	movwf	___fldiv@a+3
  4612  03B0  3020               	movlw	32
  4613  03B1  00F2               	movwf	___fldiv@a+2
  4614  03B2  3000               	movlw	0
  4615  03B3  00F1               	movwf	___fldiv@a+1
  4616  03B4  3000               	movlw	0
  4617  03B5  00F0               	movwf	___fldiv@a
  4618  03B6  0858               	movf	(efgtoa@u+3)^(0+128),w
  4619  03B7  00F7               	movwf	___fldiv@b+3
  4620  03B8  0857               	movf	(efgtoa@u+2)^(0+128),w
  4621  03B9  00F6               	movwf	___fldiv@b+2
  4622  03BA  0856               	movf	(efgtoa@u+1)^(0+128),w
  4623  03BB  00F5               	movwf	___fldiv@b+1
  4624  03BC  0855               	movf	efgtoa@u^(0+128),w
  4625  03BD  00F4               	movwf	___fldiv@b
  4626  03BE  3188  20D8  3180   	fcall	___fldiv
  4627  03C1  0873               	movf	?___fldiv+3,w
  4628  03C2  0141               	movlb	1	; select bank1
  4629  03C3  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4630  03C4  0872               	movf	?___fldiv+2,w
  4631  03C5  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4632  03C6  0871               	movf	?___fldiv+1,w
  4633  03C7  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4634  03C8  0870               	movf	?___fldiv,w
  4635  03C9  00D5               	movwf	efgtoa@u^(0+128)
  4636                           
  4637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  4638  03CA  3001               	movlw	1
  4639  03CB  07CB               	addwf	efgtoa@i^(0+128),f
  4640  03CC  3000               	movlw	0
  4641  03CD  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  4642  03CE  2B10               	goto	i1l3204
  4643  03CF                     i1l3206:	
  4644                           
  4645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  4646  03CF  3040               	movlw	64
  4647  03D0  0140               	movlb	0	; select bank0
  4648  03D1  00A3               	movwf	___flmul@b+3
  4649  03D2  30A0               	movlw	160
  4650  03D3  00A2               	movwf	___flmul@b+2
  4651  03D4  3000               	movlw	0
  4652  03D5  00A1               	movwf	___flmul@b+1
  4653  03D6  3000               	movlw	0
  4654  03D7  00A0               	movwf	___flmul@b
  4655  03D8  0141               	movlb	1	; select bank1
  4656  03D9  0858               	movf	(efgtoa@u+3)^(0+128),w
  4657  03DA  0140               	movlb	0	; select bank0
  4658  03DB  00A7               	movwf	___flmul@a+3
  4659  03DC  0141               	movlb	1	; select bank1
  4660  03DD  0857               	movf	(efgtoa@u+2)^(0+128),w
  4661  03DE  0140               	movlb	0	; select bank0
  4662  03DF  00A6               	movwf	___flmul@a+2
  4663  03E0  0141               	movlb	1	; select bank1
  4664  03E1  0856               	movf	(efgtoa@u+1)^(0+128),w
  4665  03E2  0140               	movlb	0	; select bank0
  4666  03E3  00A5               	movwf	___flmul@a+1
  4667  03E4  0141               	movlb	1	; select bank1
  4668  03E5  0855               	movf	efgtoa@u^(0+128),w
  4669  03E6  0140               	movlb	0	; select bank0
  4670  03E7  00A4               	movwf	___flmul@a
  4671  03E8  318D  25D4  3180   	fcall	___flmul
  4672  03EB  0140               	movlb	0	; select bank0
  4673  03EC  0823               	movf	?___flmul+3,w
  4674  03ED  0141               	movlb	1	; select bank1
  4675  03EE  00CA               	movwf	(efgtoa@l+3)^(0+128)
  4676  03EF  0140               	movlb	0	; select bank0
  4677  03F0  0822               	movf	?___flmul+2,w
  4678  03F1  0141               	movlb	1	; select bank1
  4679  03F2  00C9               	movwf	(efgtoa@l+2)^(0+128)
  4680  03F3  0140               	movlb	0	; select bank0
  4681  03F4  0821               	movf	?___flmul+1,w
  4682  03F5  0141               	movlb	1	; select bank1
  4683  03F6  00C8               	movwf	(efgtoa@l+1)^(0+128)
  4684  03F7  0140               	movlb	0	; select bank0
  4685  03F8  0820               	movf	?___flmul,w
  4686  03F9  0141               	movlb	1	; select bank1
  4687  03FA  00C7               	movwf	efgtoa@l^(0+128)
  4688                           
  4689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  4690  03FB  0846               	movf	(efgtoa@h+3)^(0+128),w
  4691  03FC  0140               	movlb	0	; select bank0
  4692  03FD  00BD               	movwf	___flge@ff1+3
  4693  03FE  0141               	movlb	1	; select bank1
  4694  03FF  0845               	movf	(efgtoa@h+2)^(0+128),w
  4695  0400  0140               	movlb	0	; select bank0
  4696  0401  00BC               	movwf	___flge@ff1+2
  4697  0402  0141               	movlb	1	; select bank1
  4698  0403  0844               	movf	(efgtoa@h+1)^(0+128),w
  4699  0404  0140               	movlb	0	; select bank0
  4700  0405  00BB               	movwf	___flge@ff1+1
  4701  0406  0141               	movlb	1	; select bank1
  4702  0407  0843               	movf	efgtoa@h^(0+128),w
  4703  0408  0140               	movlb	0	; select bank0
  4704  0409  00BA               	movwf	___flge@ff1
  4705  040A  0141               	movlb	1	; select bank1
  4706  040B  084A               	movf	(efgtoa@l+3)^(0+128),w
  4707  040C  0140               	movlb	0	; select bank0
  4708  040D  00C1               	movwf	___flge@ff2+3
  4709  040E  0141               	movlb	1	; select bank1
  4710  040F  0849               	movf	(efgtoa@l+2)^(0+128),w
  4711  0410  0140               	movlb	0	; select bank0
  4712  0411  00C0               	movwf	___flge@ff2+2
  4713  0412  0141               	movlb	1	; select bank1
  4714  0413  0848               	movf	(efgtoa@l+1)^(0+128),w
  4715  0414  0140               	movlb	0	; select bank0
  4716  0415  00BF               	movwf	___flge@ff2+1
  4717  0416  0141               	movlb	1	; select bank1
  4718  0417  0847               	movf	efgtoa@l^(0+128),w
  4719  0418  0140               	movlb	0	; select bank0
  4720  0419  00BE               	movwf	___flge@ff2
  4721  041A  3187  2783  3180   	fcall	___flge
  4722  041D  1803               	btfsc	3,0
  4723  041E  2C22               	goto	i1l3210
  4724                           
  4725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  4726  041F  3000               	movlw	0
  4727  0420  0141               	movlb	1	; select bank1
  4728  0421  2C3C               	goto	L6
  4729  0422                     i1l3210:	
  4730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 430:     } else {
  4731                           
  4732                           
  4733                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  4734  0422  0141               	movlb	1	; select bank1
  4735  0423  0846               	movf	(efgtoa@h+3)^(0+128),w
  4736  0424  00F3               	movwf	___fleq@ff1+3
  4737  0425  0845               	movf	(efgtoa@h+2)^(0+128),w
  4738  0426  00F2               	movwf	___fleq@ff1+2
  4739  0427  0844               	movf	(efgtoa@h+1)^(0+128),w
  4740  0428  00F1               	movwf	___fleq@ff1+1
  4741  0429  0843               	movf	efgtoa@h^(0+128),w
  4742  042A  00F0               	movwf	___fleq@ff1
  4743  042B  084A               	movf	(efgtoa@l+3)^(0+128),w
  4744  042C  00F7               	movwf	___fleq@ff2+3
  4745  042D  0849               	movf	(efgtoa@l+2)^(0+128),w
  4746  042E  00F6               	movwf	___fleq@ff2+2
  4747  042F  0848               	movf	(efgtoa@l+1)^(0+128),w
  4748  0430  00F5               	movwf	___fleq@ff2+1
  4749  0431  0847               	movf	efgtoa@l^(0+128),w
  4750  0432  00F4               	movwf	___fleq@ff2
  4751  0433  3194  247B  3180   	fcall	___fleq
  4752  0436  1C03               	btfss	3,0
  4753  0437  2C43               	goto	i1l3216
  4754  0438  0141               	movlb	1	; select bank1
  4755  0439  1838               	btfsc	efgtoa@d^(0+128),0
  4756  043A  2C43               	goto	i1l3216
  4757                           
  4758                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  4759  043B  3000               	movlw	0
  4760  043C                     L6:	
  4761  043C  00CA               	movwf	(efgtoa@l+3)^(0+128)
  4762  043D  3000               	movlw	0
  4763  043E  00C9               	movwf	(efgtoa@l+2)^(0+128)
  4764  043F  3000               	movlw	0
  4765  0440  00C8               	movwf	(efgtoa@l+1)^(0+128)
  4766  0441  3000               	movlw	0
  4767  0442  00C7               	movwf	efgtoa@l^(0+128)
  4768  0443                     i1l3216:	
  4769                           
  4770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  4771  0443  0141               	movlb	1	; select bank1
  4772  0444  084A               	movf	(efgtoa@l+3)^(0+128),w
  4773  0445  00F3               	movwf	___fladd@b+3
  4774  0446  0849               	movf	(efgtoa@l+2)^(0+128),w
  4775  0447  00F2               	movwf	___fladd@b+2
  4776  0448  0848               	movf	(efgtoa@l+1)^(0+128),w
  4777  0449  00F1               	movwf	___fladd@b+1
  4778  044A  0847               	movf	efgtoa@l^(0+128),w
  4779  044B  00F0               	movwf	___fladd@b
  4780  044C  0850               	movf	(efgtoa@g+3)^(0+128),w
  4781  044D  00F7               	movwf	___fladd@a+3
  4782  044E  084F               	movf	(efgtoa@g+2)^(0+128),w
  4783  044F  00F6               	movwf	___fladd@a+2
  4784  0450  084E               	movf	(efgtoa@g+1)^(0+128),w
  4785  0451  00F5               	movwf	___fladd@a+1
  4786  0452  084D               	movf	efgtoa@g^(0+128),w
  4787  0453  00F4               	movwf	___fladd@a
  4788  0454  318B  23EB  3180   	fcall	___fladd
  4789  0457  0873               	movf	?___fladd+3,w
  4790  0458  0141               	movlb	1	; select bank1
  4791  0459  00C6               	movwf	(efgtoa@h+3)^(0+128)
  4792  045A  0872               	movf	?___fladd+2,w
  4793  045B  00C5               	movwf	(efgtoa@h+2)^(0+128)
  4794  045C  0871               	movf	?___fladd+1,w
  4795  045D  00C4               	movwf	(efgtoa@h+1)^(0+128)
  4796  045E  0870               	movf	?___fladd,w
  4797  045F  00C3               	movwf	efgtoa@h^(0+128)
  4798                           
  4799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  4800  0460  0823               	movf	(efgtoa@ou+3)^(0+128),w
  4801  0461  00D8               	movwf	(efgtoa@u+3)^(0+128)
  4802  0462  0822               	movf	(efgtoa@ou+2)^(0+128),w
  4803  0463  00D7               	movwf	(efgtoa@u+2)^(0+128)
  4804  0464  0821               	movf	(efgtoa@ou+1)^(0+128),w
  4805  0465  00D6               	movwf	(efgtoa@u+1)^(0+128)
  4806  0466  0820               	movf	efgtoa@ou^(0+128),w
  4807  0467  00D5               	movwf	efgtoa@u^(0+128)
  4808                           
  4809                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  4810  0468  3065               	movlw	101
  4811  0469  063F               	xorwf	efgtoa@nmode^(0+128),w
  4812  046A  1903               	btfsc	3,2
  4813  046B  2C71               	goto	i1l3224
  4814  046C  0852               	movf	(efgtoa@e+1)^(0+128),w
  4815  046D  00B7               	movwf	(efgtoa@ne+1)^(0+128)
  4816  046E  0851               	movf	efgtoa@e^(0+128),w
  4817  046F  00B6               	movwf	efgtoa@ne^(0+128)
  4818  0470  2C73               	goto	i1l289
  4819  0471                     i1l3224:	
  4820  0471  01B6               	clrf	efgtoa@ne^(0+128)
  4821  0472  01B7               	clrf	(efgtoa@ne+1)^(0+128)
  4822  0473                     i1l289:	
  4823                           
  4824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  4825  0473  01B2               	clrf	efgtoa@pp^(0+128)
  4826  0474  01B3               	clrf	(efgtoa@pp+1)^(0+128)
  4827                           
  4828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  4829  0475  01B0               	clrf	efgtoa@t^(0+128)
  4830  0476  01B1               	clrf	(efgtoa@t+1)^(0+128)
  4831                           
  4832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  4833  0477  01CB               	clrf	efgtoa@i^(0+128)
  4834  0478  01CC               	clrf	(efgtoa@i+1)^(0+128)
  4835                           
  4836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  4837  0479  2D8E               	goto	i1l3274
  4838  047A                     i1l3226:	
  4839                           
  4840                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  4841  047A  0141               	movlb	1	; select bank1
  4842  047B  0858               	movf	(efgtoa@u+3)^(0+128),w
  4843  047C  00F3               	movwf	___fldiv@a+3
  4844  047D  0857               	movf	(efgtoa@u+2)^(0+128),w
  4845  047E  00F2               	movwf	___fldiv@a+2
  4846  047F  0856               	movf	(efgtoa@u+1)^(0+128),w
  4847  0480  00F1               	movwf	___fldiv@a+1
  4848  0481  0855               	movf	efgtoa@u^(0+128),w
  4849  0482  00F0               	movwf	___fldiv@a
  4850  0483  0846               	movf	(efgtoa@h+3)^(0+128),w
  4851  0484  00F7               	movwf	___fldiv@b+3
  4852  0485  0845               	movf	(efgtoa@h+2)^(0+128),w
  4853  0486  00F6               	movwf	___fldiv@b+2
  4854  0487  0844               	movf	(efgtoa@h+1)^(0+128),w
  4855  0488  00F5               	movwf	___fldiv@b+1
  4856  0489  0843               	movf	efgtoa@h^(0+128),w
  4857  048A  00F4               	movwf	___fldiv@b
  4858  048B  3188  20D8  3180   	fcall	___fldiv
  4859  048E  0873               	movf	?___fldiv+3,w
  4860  048F  0140               	movlb	0	; select bank0
  4861  0490  00B0               	movwf	floorf@x+3
  4862  0491  0872               	movf	?___fldiv+2,w
  4863  0492  00AF               	movwf	floorf@x+2
  4864  0493  0871               	movf	?___fldiv+1,w
  4865  0494  00AE               	movwf	floorf@x+1
  4866  0495  0870               	movf	?___fldiv,w
  4867  0496  00AD               	movwf	floorf@x
  4868  0497  3186  26AB  3180   	fcall	_floorf
  4869  049A  0140               	movlb	0	; select bank0
  4870  049B  0830               	movf	?_floorf+3,w
  4871  049C  0141               	movlb	1	; select bank1
  4872  049D  00CA               	movwf	(efgtoa@l+3)^(0+128)
  4873  049E  0140               	movlb	0	; select bank0
  4874  049F  082F               	movf	?_floorf+2,w
  4875  04A0  0141               	movlb	1	; select bank1
  4876  04A1  00C9               	movwf	(efgtoa@l+2)^(0+128)
  4877  04A2  0140               	movlb	0	; select bank0
  4878  04A3  082E               	movf	?_floorf+1,w
  4879  04A4  0141               	movlb	1	; select bank1
  4880  04A5  00C8               	movwf	(efgtoa@l+1)^(0+128)
  4881  04A6  0140               	movlb	0	; select bank0
  4882  04A7  082D               	movf	?_floorf,w
  4883  04A8  0141               	movlb	1	; select bank1
  4884  04A9  00C7               	movwf	efgtoa@l^(0+128)
  4885                           
  4886                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  4887  04AA  084A               	movf	(efgtoa@l+3)^(0+128),w
  4888  04AB  00F3               	movwf	___fltol@f1+3
  4889  04AC  0849               	movf	(efgtoa@l+2)^(0+128),w
  4890  04AD  00F2               	movwf	___fltol@f1+2
  4891  04AE  0848               	movf	(efgtoa@l+1)^(0+128),w
  4892  04AF  00F1               	movwf	___fltol@f1+1
  4893  04B0  0847               	movf	efgtoa@l^(0+128),w
  4894  04B1  00F0               	movwf	___fltol@f1
  4895  04B2  3196  260C  3180   	fcall	___fltol
  4896  04B5  0871               	movf	?___fltol+1,w
  4897  04B6  0141               	movlb	1	; select bank1
  4898  04B7  00B9               	movwf	(efgtoa@d+1)^(0+128)
  4899  04B8  0870               	movf	?___fltol,w
  4900  04B9  00B8               	movwf	efgtoa@d^(0+128)
  4901                           
  4902                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4903  04BA  1A6D               	btfsc	_flags^(0+128),4
  4904  04BB  2CCA               	goto	i1l3238
  4905  04BC  0838               	movf	efgtoa@d^(0+128),w
  4906  04BD  0439               	iorwf	(efgtoa@d+1)^(0+128),w
  4907  04BE  1D03               	btfss	3,2
  4908  04BF  2CCA               	goto	i1l3238
  4909  04C0  3067               	movlw	103
  4910  04C1  0642               	xorwf	efgtoa@mode^(0+128),w
  4911  04C2  1903               	btfsc	3,2
  4912  04C3  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  4913  04C4  2CCA               	goto	i1l3238
  4914                           
  4915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  4916  04C5  3001               	movlw	1
  4917  04C6  07B0               	addwf	efgtoa@t^(0+128),f
  4918  04C7  3000               	movlw	0
  4919  04C8  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  4920                           
  4921                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  4922  04C9  2D1C               	goto	i1l3266
  4923  04CA                     i1l3238:	
  4924                           
  4925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  4926  04CA  0832               	movf	efgtoa@pp^(0+128),w
  4927  04CB  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  4928  04CC  1903               	btfsc	3,2
  4929  04CD  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  4930  04CE  2CE8               	goto	i1l3258
  4931                           
  4932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  4933  04CF  302E               	movlw	46
  4934  04D0  0140               	movlb	0	; select bank0
  4935  04D1  00CB               	movwf	??_efgtoa
  4936  04D2  0141               	movlb	1	; select bank1
  4937  04D3  0853               	movf	efgtoa@n^(0+128),w
  4938  04D4  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4939  04D5  0086               	movwf	6
  4940  04D6  3001               	movlw	1	; select bank3/4
  4941  04D7  0087               	movwf	7
  4942  04D8  0140               	movlb	0	; select bank0
  4943  04D9  084B               	movf	??_efgtoa,w
  4944  04DA  0081               	movwf	1
  4945  04DB  3001               	movlw	1
  4946  04DC  0141               	movlb	1	; select bank1
  4947  04DD  07D3               	addwf	efgtoa@n^(0+128),f
  4948  04DE  3000               	movlw	0
  4949  04DF  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  4950                           
  4951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  4952  04E0  30FF               	movlw	255
  4953  04E1  07C0               	addwf	efgtoa@w^(0+128),f
  4954  04E2  30FF               	movlw	255
  4955  04E3  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  4956                           
  4957                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  4958  04E4  3001               	movlw	1
  4959  04E5  00B2               	movwf	efgtoa@pp^(0+128)
  4960  04E6  3000               	movlw	0
  4961  04E7  00B3               	movwf	(efgtoa@pp^(0+128)+1)
  4962  04E8                     i1l3258:	
  4963                           
  4964                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  4965  04E8  0830               	movf	efgtoa@t^(0+128),w
  4966  04E9  0431               	iorwf	(efgtoa@t+1)^(0+128),w
  4967  04EA  1903               	btfsc	3,2
  4968  04EB  2D06               	goto	i1l3260
  4969                           
  4970                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  4971  04EC  3030               	movlw	48
  4972  04ED  0140               	movlb	0	; select bank0
  4973  04EE  00CB               	movwf	??_efgtoa
  4974  04EF  0141               	movlb	1	; select bank1
  4975  04F0  0853               	movf	efgtoa@n^(0+128),w
  4976  04F1  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4977  04F2  0086               	movwf	6
  4978  04F3  3001               	movlw	1	; select bank3/4
  4979  04F4  0087               	movwf	7
  4980  04F5  0140               	movlb	0	; select bank0
  4981  04F6  084B               	movf	??_efgtoa,w
  4982  04F7  0081               	movwf	1
  4983  04F8  3001               	movlw	1
  4984  04F9  0141               	movlb	1	; select bank1
  4985  04FA  07D3               	addwf	efgtoa@n^(0+128),f
  4986  04FB  3000               	movlw	0
  4987  04FC  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  4988                           
  4989                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  4990  04FD  30FF               	movlw	255
  4991  04FE  07C0               	addwf	efgtoa@w^(0+128),f
  4992  04FF  30FF               	movlw	255
  4993  0500  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  4994                           
  4995                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  4996  0501  30FF               	movlw	255
  4997  0502  07B0               	addwf	efgtoa@t^(0+128),f
  4998  0503  30FF               	movlw	255
  4999  0504  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  5000  0505  2CE8               	goto	i1l3258
  5001  0506                     i1l3260:	
  5002                           
  5003                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  5004  0506  0838               	movf	efgtoa@d^(0+128),w
  5005  0507  3E30               	addlw	48
  5006  0508  0140               	movlb	0	; select bank0
  5007  0509  00CB               	movwf	??_efgtoa
  5008  050A  0141               	movlb	1	; select bank1
  5009  050B  0853               	movf	efgtoa@n^(0+128),w
  5010  050C  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5011  050D  0086               	movwf	6
  5012  050E  3001               	movlw	1	; select bank3/4
  5013  050F  0087               	movwf	7
  5014  0510  0140               	movlb	0	; select bank0
  5015  0511  084B               	movf	??_efgtoa,w
  5016  0512  0081               	movwf	1
  5017  0513  3001               	movlw	1
  5018  0514  0141               	movlb	1	; select bank1
  5019  0515  07D3               	addwf	efgtoa@n^(0+128),f
  5020  0516  3000               	movlw	0
  5021  0517  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  5022                           
  5023                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  5024  0518  30FF               	movlw	255
  5025  0519  07C0               	addwf	efgtoa@w^(0+128),f
  5026  051A  30FF               	movlw	255
  5027  051B  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5028  051C                     i1l3266:	
  5029                           
  5030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  5031  051C  084A               	movf	(efgtoa@l+3)^(0+128),w
  5032  051D  0140               	movlb	0	; select bank0
  5033  051E  00A7               	movwf	___flmul@a+3
  5034  051F  0141               	movlb	1	; select bank1
  5035  0520  0849               	movf	(efgtoa@l+2)^(0+128),w
  5036  0521  0140               	movlb	0	; select bank0
  5037  0522  00A6               	movwf	___flmul@a+2
  5038  0523  0141               	movlb	1	; select bank1
  5039  0524  0848               	movf	(efgtoa@l+1)^(0+128),w
  5040  0525  0140               	movlb	0	; select bank0
  5041  0526  00A5               	movwf	___flmul@a+1
  5042  0527  0141               	movlb	1	; select bank1
  5043  0528  0847               	movf	efgtoa@l^(0+128),w
  5044  0529  0140               	movlb	0	; select bank0
  5045  052A  00A4               	movwf	___flmul@a
  5046  052B  0141               	movlb	1	; select bank1
  5047  052C  0858               	movf	(efgtoa@u+3)^(0+128),w
  5048  052D  0140               	movlb	0	; select bank0
  5049  052E  00A3               	movwf	___flmul@b+3
  5050  052F  0141               	movlb	1	; select bank1
  5051  0530  0857               	movf	(efgtoa@u+2)^(0+128),w
  5052  0531  0140               	movlb	0	; select bank0
  5053  0532  00A2               	movwf	___flmul@b+2
  5054  0533  0141               	movlb	1	; select bank1
  5055  0534  0856               	movf	(efgtoa@u+1)^(0+128),w
  5056  0535  0140               	movlb	0	; select bank0
  5057  0536  00A1               	movwf	___flmul@b+1
  5058  0537  0141               	movlb	1	; select bank1
  5059  0538  0855               	movf	efgtoa@u^(0+128),w
  5060  0539  0140               	movlb	0	; select bank0
  5061  053A  00A0               	movwf	___flmul@b
  5062  053B  318D  25D4  3180   	fcall	___flmul
  5063  053E  0140               	movlb	0	; select bank0
  5064  053F  0823               	movf	?___flmul+3,w
  5065  0540  00BD               	movwf	___flsub@a+3
  5066  0541  0822               	movf	?___flmul+2,w
  5067  0542  00BC               	movwf	___flsub@a+2
  5068  0543  0821               	movf	?___flmul+1,w
  5069  0544  00BB               	movwf	___flsub@a+1
  5070  0545  0820               	movf	?___flmul,w
  5071  0546  00BA               	movwf	___flsub@a
  5072  0547  0141               	movlb	1	; select bank1
  5073  0548  0846               	movf	(efgtoa@h+3)^(0+128),w
  5074  0549  0140               	movlb	0	; select bank0
  5075  054A  00C1               	movwf	___flsub@b+3
  5076  054B  0141               	movlb	1	; select bank1
  5077  054C  0845               	movf	(efgtoa@h+2)^(0+128),w
  5078  054D  0140               	movlb	0	; select bank0
  5079  054E  00C0               	movwf	___flsub@b+2
  5080  054F  0141               	movlb	1	; select bank1
  5081  0550  0844               	movf	(efgtoa@h+1)^(0+128),w
  5082  0551  0140               	movlb	0	; select bank0
  5083  0552  00BF               	movwf	___flsub@b+1
  5084  0553  0141               	movlb	1	; select bank1
  5085  0554  0843               	movf	efgtoa@h^(0+128),w
  5086  0555  0140               	movlb	0	; select bank0
  5087  0556  00BE               	movwf	___flsub@b
  5088  0557  3193  2382  3180   	fcall	___flsub
  5089  055A  0140               	movlb	0	; select bank0
  5090  055B  083D               	movf	?___flsub+3,w
  5091  055C  0141               	movlb	1	; select bank1
  5092  055D  00C6               	movwf	(efgtoa@h+3)^(0+128)
  5093  055E  0140               	movlb	0	; select bank0
  5094  055F  083C               	movf	?___flsub+2,w
  5095  0560  0141               	movlb	1	; select bank1
  5096  0561  00C5               	movwf	(efgtoa@h+2)^(0+128)
  5097  0562  0140               	movlb	0	; select bank0
  5098  0563  083B               	movf	?___flsub+1,w
  5099  0564  0141               	movlb	1	; select bank1
  5100  0565  00C4               	movwf	(efgtoa@h+1)^(0+128)
  5101  0566  0140               	movlb	0	; select bank0
  5102  0567  083A               	movf	?___flsub,w
  5103  0568  0141               	movlb	1	; select bank1
  5104  0569  00C3               	movwf	efgtoa@h^(0+128)
  5105                           
  5106                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  5107  056A  3041               	movlw	65
  5108  056B  00F3               	movwf	___fldiv@a+3
  5109  056C  3020               	movlw	32
  5110  056D  00F2               	movwf	___fldiv@a+2
  5111  056E  3000               	movlw	0
  5112  056F  00F1               	movwf	___fldiv@a+1
  5113  0570  3000               	movlw	0
  5114  0571  00F0               	movwf	___fldiv@a
  5115  0572  0858               	movf	(efgtoa@u+3)^(0+128),w
  5116  0573  00F7               	movwf	___fldiv@b+3
  5117  0574  0857               	movf	(efgtoa@u+2)^(0+128),w
  5118  0575  00F6               	movwf	___fldiv@b+2
  5119  0576  0856               	movf	(efgtoa@u+1)^(0+128),w
  5120  0577  00F5               	movwf	___fldiv@b+1
  5121  0578  0855               	movf	efgtoa@u^(0+128),w
  5122  0579  00F4               	movwf	___fldiv@b
  5123  057A  3188  20D8  3180   	fcall	___fldiv
  5124  057D  0873               	movf	?___fldiv+3,w
  5125  057E  0141               	movlb	1	; select bank1
  5126  057F  00D8               	movwf	(efgtoa@u+3)^(0+128)
  5127  0580  0872               	movf	?___fldiv+2,w
  5128  0581  00D7               	movwf	(efgtoa@u+2)^(0+128)
  5129  0582  0871               	movf	?___fldiv+1,w
  5130  0583  00D6               	movwf	(efgtoa@u+1)^(0+128)
  5131  0584  0870               	movf	?___fldiv,w
  5132  0585  00D5               	movwf	efgtoa@u^(0+128)
  5133                           
  5134                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  5135  0586  30FF               	movlw	255
  5136  0587  07B6               	addwf	efgtoa@ne^(0+128),f
  5137  0588  30FF               	movlw	255
  5138  0589  3DB7               	addwfc	(efgtoa@ne+1)^(0+128),f
  5139                           
  5140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  5141  058A  3001               	movlw	1
  5142  058B  07CB               	addwf	efgtoa@i^(0+128),f
  5143  058C  3000               	movlw	0
  5144  058D  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  5145  058E                     i1l3274:	
  5146                           
  5147                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5148  058E  084C               	movf	(efgtoa@i+1)^(0+128),w
  5149  058F  3A80               	xorlw	128
  5150  0590  0140               	movlb	0	; select bank0
  5151  0591  00CB               	movwf	??_efgtoa
  5152  0592  0141               	movlb	1	; select bank1
  5153  0593  0835               	movf	(efgtoa@m+1)^(0+128),w
  5154  0594  3A80               	xorlw	128
  5155  0595  0140               	movlb	0	; select bank0
  5156  0596  024B               	subwf	??_efgtoa,w
  5157  0597  1D03               	skipz
  5158  0598  2D9C               	goto	u494_25
  5159  0599  0141               	movlb	1	; select bank1
  5160  059A  0834               	movf	efgtoa@m^(0+128),w
  5161  059B  024B               	subwf	efgtoa@i^(0+128),w
  5162  059C                     u494_25:	
  5163  059C  1803               	skipnc
  5164  059D  2DAC               	goto	i1l3278
  5165  059E  0141               	movlb	1	; select bank1
  5166  059F  0854               	movf	(efgtoa@n+1)^(0+128),w
  5167  05A0  3A80               	xorlw	128
  5168  05A1  0140               	movlb	0	; select bank0
  5169  05A2  00CB               	movwf	??_efgtoa
  5170  05A3  3080               	movlw	128
  5171  05A4  024B               	subwf	??_efgtoa,w
  5172  05A5  1D03               	skipz
  5173  05A6  2DAA               	goto	u495_25
  5174  05A7  304B               	movlw	75
  5175  05A8  0141               	movlb	1	; select bank1
  5176  05A9  0253               	subwf	efgtoa@n^(0+128),w
  5177  05AA                     u495_25:	
  5178  05AA  1C03               	skipc
  5179  05AB  2C7A               	goto	i1l3226
  5180  05AC                     i1l3278:	
  5181                           
  5182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  5183  05AC  0141               	movlb	1	; select bank1
  5184  05AD  0832               	movf	efgtoa@pp^(0+128),w
  5185  05AE  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  5186  05AF  1903               	btfsc	3,2
  5187  05B0  1E6D               	btfss	_flags^(0+128),4
  5188  05B1  2DC3               	goto	i1l3286
  5189                           
  5190                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  5191  05B2  302E               	movlw	46
  5192  05B3  0140               	movlb	0	; select bank0
  5193  05B4  00CB               	movwf	??_efgtoa
  5194  05B5  0141               	movlb	1	; select bank1
  5195  05B6  0853               	movf	efgtoa@n^(0+128),w
  5196  05B7  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5197  05B8  0086               	movwf	6
  5198  05B9  3001               	movlw	1	; select bank3/4
  5199  05BA  0087               	movwf	7
  5200  05BB  0140               	movlb	0	; select bank0
  5201  05BC  084B               	movf	??_efgtoa,w
  5202  05BD  0081               	movwf	1
  5203  05BE  3001               	movlw	1
  5204  05BF  0141               	movlb	1	; select bank1
  5205  05C0  07D3               	addwf	efgtoa@n^(0+128),f
  5206  05C1  3000               	movlw	0
  5207  05C2  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  5208  05C3                     i1l3286:	
  5209                           
  5210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  5211  05C3  0853               	movf	efgtoa@n^(0+128),w
  5212  05C4  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5213  05C5  0086               	movwf	6
  5214  05C6  3001               	movlw	1	; select bank3/4
  5215  05C7  0087               	movwf	7
  5216  05C8  0181               	clrf	1
  5217                           
  5218                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  5219  05C9  3065               	movlw	101
  5220  05CA  063F               	xorwf	efgtoa@nmode^(0+128),w
  5221  05CB  1D03               	btfss	3,2
  5222  05CC  2E94               	goto	i1l3348
  5223                           
  5224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  5225  05CD  304F               	movlw	79
  5226  05CE  00CB               	movwf	efgtoa@i^(0+128)
  5227  05CF  3000               	movlw	0
  5228  05D0  00CC               	movwf	(efgtoa@i^(0+128)+1)
  5229                           
  5230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  5231  05D1  084B               	movf	efgtoa@i^(0+128),w
  5232  05D2  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5233  05D3  0086               	movwf	6
  5234  05D4  3001               	movlw	1	; select bank3/4
  5235  05D5  0087               	movwf	7
  5236  05D6  0181               	clrf	1
  5237                           
  5238                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  5239  05D7  01BA               	clrf	efgtoa@sign^(0+128)
  5240  05D8  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  5241                           
  5242                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  5243  05D9  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  5244  05DA  2DE4               	goto	i1l3302
  5245                           
  5246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  5247  05DB  3001               	movlw	1
  5248  05DC  00BA               	movwf	efgtoa@sign^(0+128)
  5249  05DD  3000               	movlw	0
  5250  05DE  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  5251                           
  5252                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  5253  05DF  09D1               	comf	efgtoa@e^(0+128),f
  5254  05E0  09D2               	comf	(efgtoa@e+1)^(0+128),f
  5255  05E1  0AD1               	incf	efgtoa@e^(0+128),f
  5256  05E2  1903               	skipnz
  5257  05E3  0AD2               	incf	(efgtoa@e+1)^(0+128),f
  5258  05E4                     i1l3302:	
  5259                           
  5260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  5261  05E4  3002               	movlw	2
  5262  05E5  00BC               	movwf	efgtoa@p^(0+128)
  5263  05E6  3000               	movlw	0
  5264  05E7  00BD               	movwf	(efgtoa@p^(0+128)+1)
  5265  05E8                     i1l3314:	
  5266                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  5267                           
  5268                           
  5269                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  5270  05E8  0851               	movf	efgtoa@e^(0+128),w
  5271  05E9  0452               	iorwf	(efgtoa@e+1)^(0+128),w
  5272  05EA  1903               	btfsc	3,2
  5273  05EB  2E23               	goto	i1l3316
  5274  05EC                     i1l3304:	
  5275                           
  5276                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  5277  05EC  30FF               	movlw	255
  5278  05ED  0141               	movlb	1	; select bank1
  5279  05EE  07CB               	addwf	efgtoa@i^(0+128),f
  5280  05EF  30FF               	movlw	255
  5281  05F0  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  5282                           
  5283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  5284  05F1  300A               	movlw	10
  5285  05F2  00F0               	movwf	___awmod@divisor
  5286  05F3  3000               	movlw	0
  5287  05F4  00F1               	movwf	___awmod@divisor+1
  5288  05F5  0852               	movf	(efgtoa@e+1)^(0+128),w
  5289  05F6  00F3               	movwf	___awmod@dividend+1
  5290  05F7  0851               	movf	efgtoa@e^(0+128),w
  5291  05F8  00F2               	movwf	___awmod@dividend
  5292  05F9  3194  2436  3180   	fcall	___awmod
  5293  05FC  0870               	movf	?___awmod,w
  5294  05FD  3E30               	addlw	48
  5295  05FE  0140               	movlb	0	; select bank0
  5296  05FF  00CB               	movwf	??_efgtoa
  5297  0600  0141               	movlb	1	; select bank1
  5298  0601  084B               	movf	efgtoa@i^(0+128),w
  5299  0602  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5300  0603  0086               	movwf	6
  5301  0604  3001               	movlw	1	; select bank3/4
  5302  0605  0087               	movwf	7
  5303  0606  0140               	movlb	0	; select bank0
  5304  0607  084B               	movf	??_efgtoa,w
  5305  0608  0081               	movwf	1
  5306                           
  5307                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  5308  0609  300A               	movlw	10
  5309  060A  00F0               	movwf	___awdiv@divisor
  5310  060B  3000               	movlw	0
  5311  060C  00F1               	movwf	___awdiv@divisor+1
  5312  060D  0141               	movlb	1	; select bank1
  5313  060E  0852               	movf	(efgtoa@e+1)^(0+128),w
  5314  060F  00F3               	movwf	___awdiv@dividend+1
  5315  0610  0851               	movf	efgtoa@e^(0+128),w
  5316  0611  00F2               	movwf	___awdiv@dividend
  5317  0612  3195  2561  3180   	fcall	___awdiv
  5318  0615  0871               	movf	?___awdiv+1,w
  5319  0616  0141               	movlb	1	; select bank1
  5320  0617  00D2               	movwf	(efgtoa@e+1)^(0+128)
  5321  0618  0870               	movf	?___awdiv,w
  5322  0619  00D1               	movwf	efgtoa@e^(0+128)
  5323                           
  5324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  5325  061A  30FF               	movlw	255
  5326  061B  07BC               	addwf	efgtoa@p^(0+128),f
  5327  061C  30FF               	movlw	255
  5328  061D  3DBD               	addwfc	(efgtoa@p+1)^(0+128),f
  5329                           
  5330                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  5331  061E  30FF               	movlw	255
  5332  061F  07C0               	addwf	efgtoa@w^(0+128),f
  5333  0620  30FF               	movlw	255
  5334  0621  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5335  0622  2DE8               	goto	i1l3314
  5336  0623                     i1l3316:	
  5337  0623  083D               	movf	(efgtoa@p+1)^(0+128),w
  5338  0624  3A80               	xorlw	128
  5339  0625  0140               	movlb	0	; select bank0
  5340  0626  00CB               	movwf	??_efgtoa
  5341  0627  3080               	movlw	128
  5342  0628  024B               	subwf	??_efgtoa,w
  5343  0629  1D03               	skipz
  5344  062A  2E2E               	goto	u501_25
  5345  062B  3001               	movlw	1
  5346  062C  0141               	movlb	1	; select bank1
  5347  062D  023C               	subwf	efgtoa@p^(0+128),w
  5348  062E                     u501_25:	
  5349  062E  1803               	skipnc
  5350  062F  2DEC               	goto	i1l3304
  5351                           
  5352                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  5353  0630  30FF               	movlw	255
  5354  0631  0141               	movlb	1	; select bank1
  5355  0632  07CB               	addwf	efgtoa@i^(0+128),f
  5356  0633  30FF               	movlw	255
  5357  0634  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  5358                           
  5359                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  5360  0635  083A               	movf	efgtoa@sign^(0+128),w
  5361  0636  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  5362  0637  1D03               	btfss	3,2
  5363  0638  2E3B               	goto	i1l3324
  5364  0639  302B               	movlw	43
  5365  063A  2E3C               	goto	L7
  5366  063B                     i1l3324:	
  5367  063B  302D               	movlw	45
  5368  063C                     L7:	
  5369  063C  00AA               	movwf	_efgtoa$396^(0+128)
  5370  063D  3000               	movlw	0
  5371  063E  00AB               	movwf	(_efgtoa$396^(0+128)+1)
  5372  063F  082A               	movf	_efgtoa$396^(0+128),w
  5373  0640  0140               	movlb	0	; select bank0
  5374  0641  00CB               	movwf	??_efgtoa
  5375  0642  0141               	movlb	1	; select bank1
  5376  0643  084B               	movf	efgtoa@i^(0+128),w
  5377  0644  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5378  0645  0086               	movwf	6
  5379  0646  3001               	movlw	1	; select bank3/4
  5380  0647  0087               	movwf	7
  5381  0648  0140               	movlb	0	; select bank0
  5382  0649  084B               	movf	??_efgtoa,w
  5383  064A  0081               	movwf	1
  5384                           
  5385                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  5386  064B  30FF               	movlw	255
  5387  064C  0141               	movlb	1	; select bank1
  5388  064D  07C0               	addwf	efgtoa@w^(0+128),f
  5389  064E  30FF               	movlw	255
  5390  064F  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5391                           
  5392                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5393  0650  30FF               	movlw	255
  5394  0651  07CB               	addwf	efgtoa@i^(0+128),f
  5395  0652  30FF               	movlw	255
  5396  0653  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  5397  0654  0140               	movlb	0	; select bank0
  5398  0655  084A               	movf	efgtoa@c,w
  5399  0656  3EBF               	addlw	191
  5400  0657  00CB               	movwf	??_efgtoa
  5401  0658  30FF               	movlw	255
  5402  0659  1803               	skipnc
  5403  065A  3000               	movlw	0
  5404  065B  00CC               	movwf	??_efgtoa+1
  5405  065C  3000               	movlw	0
  5406  065D  024C               	subwf	??_efgtoa+1,w
  5407  065E  301A               	movlw	26
  5408  065F  1903               	skipnz
  5409  0660  024B               	subwf	??_efgtoa,w
  5410  0661  1803               	btfsc	3,0
  5411  0662  2E65               	goto	u503_20
  5412  0663  3001               	movlw	1
  5413  0664  2E66               	goto	u504_20
  5414  0665                     u503_20:	
  5415  0665  3000               	movlw	0
  5416  0666                     u504_20:	
  5417  0666  00CD               	movwf	??_efgtoa+2
  5418  0667  01CE               	clrf	??_efgtoa+3
  5419  0668  084D               	movf	??_efgtoa+2,w
  5420  0669  0141               	movlb	1	; select bank1
  5421  066A  00AE               	movwf	_efgtoa$398^(0+128)
  5422  066B  0140               	movlb	0	; select bank0
  5423  066C  084E               	movf	??_efgtoa+3,w
  5424  066D  0141               	movlb	1	; select bank1
  5425  066E  00AF               	movwf	(_efgtoa$398+1)^(0+128)
  5426  066F  082E               	movf	_efgtoa$398^(0+128),w
  5427  0670  042F               	iorwf	(_efgtoa$398+1)^(0+128),w
  5428  0671  1D03               	btfss	3,2
  5429  0672  2E75               	goto	i1l3340
  5430  0673  3065               	movlw	101
  5431  0674  2E76               	goto	L8
  5432  0675                     i1l3340:	
  5433  0675  3045               	movlw	69
  5434  0676                     L8:	
  5435  0676  00AC               	movwf	_efgtoa$397^(0+128)
  5436  0677  3000               	movlw	0
  5437  0678  00AD               	movwf	(_efgtoa$397^(0+128)+1)
  5438  0679  082C               	movf	_efgtoa$397^(0+128),w
  5439  067A  0140               	movlb	0	; select bank0
  5440  067B  00CB               	movwf	??_efgtoa
  5441  067C  0141               	movlb	1	; select bank1
  5442  067D  084B               	movf	efgtoa@i^(0+128),w
  5443  067E  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5444  067F  0086               	movwf	6
  5445  0680  3001               	movlw	1	; select bank3/4
  5446  0681  0087               	movwf	7
  5447  0682  0140               	movlb	0	; select bank0
  5448  0683  084B               	movf	??_efgtoa,w
  5449  0684  0081               	movwf	1
  5450                           
  5451                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  5452  0685  30FF               	movlw	255
  5453  0686  0141               	movlb	1	; select bank1
  5454  0687  07C0               	addwf	efgtoa@w^(0+128),f
  5455  0688  30FF               	movlw	255
  5456  0689  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5457                           
  5458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  5459  068A  084B               	movf	efgtoa@i^(0+128),w
  5460  068B  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5461  068C  00F0               	movwf	strcpy@src
  5462  068D  3001               	movlw	1
  5463  068E  00F1               	movwf	strcpy@src+1
  5464  068F  0853               	movf	efgtoa@n^(0+128),w
  5465  0690  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5466  0691  3193  23A1  3180   	fcall	_strcpy
  5467  0694                     i1l3348:	
  5468                           
  5469                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 502:     return pad(fp, &dbuf
      +                          [0], w);
  5470  0694  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  5471  0695  0140               	movlb	0	; select bank0
  5472  0696  00CB               	movwf	??_efgtoa
  5473  0697  084B               	movf	??_efgtoa,w
  5474  0698  00A4               	movwf	pad@buf
  5475  0699  0141               	movlb	1	; select bank1
  5476  069A  0841               	movf	(efgtoa@w+1)^(0+128),w
  5477  069B  0140               	movlb	0	; select bank0
  5478  069C  00A6               	movwf	pad@p+1
  5479  069D  0141               	movlb	1	; select bank1
  5480  069E  0840               	movf	efgtoa@w^(0+128),w
  5481  069F  0140               	movlb	0	; select bank0
  5482  06A0  00A5               	movwf	pad@p
  5483  06A1  0141               	movlb	1	; select bank1
  5484  06A2  083E               	movf	efgtoa@fp^(0+128),w
  5485  06A3  3195  2511         	fcall	_pad
  5486  06A5  0140               	movlb	0	; select bank0
  5487  06A6  0825               	movf	?_pad+1,w
  5488  06A7  00C7               	movwf	?_efgtoa+1
  5489  06A8  0824               	movf	?_pad,w
  5490  06A9  00C6               	movwf	?_efgtoa
  5491  06AA  0008               	return
  5492  06AB                     __end_of_efgtoa:	
  5493                           
  5494                           	psect	text10
  5495  13C0                     __ptext10:	
  5496 ;; *************** function _tolower *****************
  5497 ;; Defined at:
  5498 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  c               2    6[COMMON] int 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  2    6[COMMON] int 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2, status,0
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5513 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5516 ;;Total ram usage:        8 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    1
  5519 ;; This function calls:
  5520 ;;		_isupper
  5521 ;; This function is called by:
  5522 ;;		_efgtoa
  5523 ;;		_vfpfcnvrt
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           
  5528                           ;psect for function _tolower
  5529  13C0                     _tolower:	
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in _tolower: [wreg+status,2+status,0]
  5533  13C0  0876               	movf	tolower@c,w
  5534  13C1  3EBF               	addlw	191
  5535  13C2  00F8               	movwf	??_tolower
  5536  13C3  30FF               	movlw	255
  5537  13C4  3D77               	addwfc	tolower@c+1,w
  5538  13C5  00F9               	movwf	??_tolower+1
  5539  13C6  3000               	movlw	0
  5540  13C7  0279               	subwf	??_tolower+1,w
  5541  13C8  301A               	movlw	26
  5542  13C9  1903               	skipnz
  5543  13CA  0278               	subwf	??_tolower,w
  5544  13CB  1803               	btfsc	3,0
  5545  13CC  2BCF               	goto	u347_20
  5546  13CD  3001               	movlw	1
  5547  13CE  2BD0               	goto	u348_20
  5548  13CF                     u347_20:	
  5549  13CF  3000               	movlw	0
  5550  13D0                     u348_20:	
  5551  13D0  00FA               	movwf	??_tolower+2
  5552  13D1  01FB               	clrf	??_tolower+3
  5553  13D2  087A               	movf	??_tolower+2,w
  5554  13D3  00FC               	movwf	_tolower$797
  5555  13D4  087B               	movf	??_tolower+3,w
  5556  13D5  00FD               	movwf	_tolower$797+1
  5557  13D6  087C               	movf	_tolower$797,w
  5558  13D7  047D               	iorwf	_tolower$797+1,w
  5559  13D8  1903               	btfsc	3,2
  5560  13D9  0008               	return
  5561  13DA  3020               	movlw	32
  5562  13DB  0476               	iorwf	tolower@c,w
  5563  13DC  00F6               	movwf	?_tolower
  5564  13DD  3000               	movlw	0
  5565  13DE  0477               	iorwf	tolower@c+1,w
  5566  13DF  00F7               	movwf	?_tolower+1
  5567  13E0  0008               	return
  5568  13E1                     __end_of_tolower:	
  5569                           
  5570                           	psect	text11
  5571  131B                     __ptext11:	
  5572 ;; *************** function _isupper *****************
  5573 ;; Defined at:
  5574 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  c               2    0[COMMON] int 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;		None
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  2    0[COMMON] int 
  5581 ;; Registers used:
  5582 ;;		wreg, status,2, status,0
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5590 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5591 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5592 ;;Total ram usage:        6 bytes
  5593 ;; Hardware stack levels used:    1
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_efgtoa
  5598 ;;		_vfpfcnvrt
  5599 ;;		_tolower
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           
  5604                           ;psect for function _isupper
  5605  131B                     _isupper:	
  5606                           
  5607                           ;incstack = 0
  5608                           ; Regs used in _isupper: [wreg+status,2+status,0]
  5609  131B  0870               	movf	isupper@c,w
  5610  131C  3EBF               	addlw	191
  5611  131D  00F2               	movwf	??_isupper
  5612  131E  30FF               	movlw	255
  5613  131F  3D71               	addwfc	isupper@c+1,w
  5614  1320  00F3               	movwf	??_isupper+1
  5615  1321  3000               	movlw	0
  5616  1322  0273               	subwf	??_isupper+1,w
  5617  1323  301A               	movlw	26
  5618  1324  1903               	skipnz
  5619  1325  0272               	subwf	??_isupper,w
  5620  1326  1803               	btfsc	3,0
  5621  1327  2B2A               	goto	u286_20
  5622  1328  3001               	movlw	1
  5623  1329  2B2B               	goto	u287_20
  5624  132A                     u286_20:	
  5625  132A  3000               	movlw	0
  5626  132B                     u287_20:	
  5627  132B  00F4               	movwf	??_isupper+2
  5628  132C  01F5               	clrf	??_isupper+3
  5629  132D  0874               	movf	??_isupper+2,w
  5630  132E  00F0               	movwf	?_isupper
  5631  132F  0875               	movf	??_isupper+3,w
  5632  1330  00F1               	movwf	?_isupper+1
  5633  1331  0008               	return
  5634  1332                     __end_of_isupper:	
  5635                           
  5636                           	psect	text12
  5637  13A1                     __ptext12:	
  5638 ;; *************** function _strcpy *****************
  5639 ;; Defined at:
  5640 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  dest            1    wreg     PTR unsigned char 
  5643 ;;		 -> dbuf(80), 
  5644 ;;  src             2    0[COMMON] PTR const unsigned char 
  5645 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5646 ;;		 -> dbuf(80), 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  dest            1    7[COMMON] PTR unsigned char 
  5649 ;;		 -> dbuf(80), 
  5650 ;;  s               2    4[COMMON] PTR const unsigned char 
  5651 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5652 ;;		 -> dbuf(80), 
  5653 ;;  d               1    6[COMMON] PTR unsigned char 
  5654 ;;		 -> dbuf(80), 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      PTR unsigned char 
  5657 ;; Registers used:
  5658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5665 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;Total ram usage:        8 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_efgtoa
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           
  5678                           ;psect for function _strcpy
  5679  13A1                     _strcpy:	
  5680                           
  5681                           ;incstack = 0
  5682                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  5683                           ;strcpy@dest stored from wreg
  5684  13A1  00F7               	movwf	strcpy@dest
  5685  13A2  0871               	movf	strcpy@src+1,w
  5686  13A3  00F5               	movwf	strcpy@s+1
  5687  13A4  0870               	movf	strcpy@src,w
  5688  13A5  00F4               	movwf	strcpy@s
  5689  13A6  0877               	movf	strcpy@dest,w
  5690  13A7  00F2               	movwf	??_strcpy
  5691  13A8  0872               	movf	??_strcpy,w
  5692  13A9  00F6               	movwf	strcpy@d
  5693  13AA                     i1l2574:	
  5694  13AA  0876               	movf	strcpy@d,w
  5695  13AB  0086               	movwf	6
  5696  13AC  3001               	movlw	1	; select bank2/3
  5697  13AD  0087               	movwf	7
  5698  13AE  0AF6               	incf	strcpy@d,f
  5699  13AF  0875               	movf	strcpy@s+1,w
  5700  13B0  00F3               	movwf	??_strcpy+1
  5701  13B1  0874               	movf	strcpy@s,w
  5702  13B2  00F2               	movwf	??_strcpy
  5703  13B3  0AF4               	incf	strcpy@s,f
  5704  13B4  1903               	skipnz
  5705  13B5  0AF5               	incf	strcpy@s+1,f
  5706  13B6  0872               	movf	??_strcpy,w
  5707  13B7  0084               	movwf	4
  5708  13B8  0873               	movf	??_strcpy+1,w
  5709  13B9  0085               	movwf	5
  5710  13BA  0800               	movf	0,w	;code access
  5711  13BB  3FC0               	movwi [0]fsr1
  5712  13BC  0889               	movf	9,f
  5713  13BD  1903               	btfsc	3,2
  5714  13BE  0008               	return
  5715  13BF  2BAA               	goto	i1l2574
  5716  13C0                     __end_of_strcpy:	
  5717                           
  5718                           	psect	text13
  5719  1511                     __ptext13:	
  5720 ;; *************** function _pad *****************
  5721 ;; Defined at:
  5722 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  fp              1    wreg     PTR struct _IO_FILE
  5725 ;;		 -> NULL(0), 
  5726 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5727 ;;		 -> dbuf(80), 
  5728 ;;  p               2    5[BANK0 ] int 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5731 ;;		 -> NULL(0), 
  5732 ;;  w               2    9[BANK0 ] int 
  5733 ;;  i               2    7[BANK0 ] int 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  2    4[BANK0 ] int 
  5736 ;; Registers used:
  5737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5743 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5747 ;;Total ram usage:        9 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    3
  5750 ;; This function calls:
  5751 ;;		_fputc
  5752 ;;		_fputs
  5753 ;;		_strlen
  5754 ;; This function is called by:
  5755 ;;		_efgtoa
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           
  5760                           ;psect for function _pad
  5761  1511                     _pad:	
  5762                           
  5763                           ;incstack = 0
  5764                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5765                           ;pad@fp stored from wreg
  5766  1511  0140               	movlb	0	; select bank0
  5767  1512  00AB               	movwf	pad@fp
  5768                           
  5769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  5770  1513  0141               	movlb	1	; select bank1
  5771  1514  1C6D               	btfss	_flags^(0+128),0
  5772  1515  2D1F               	goto	i1l2532
  5773                           
  5774                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  5775  1516  0140               	movlb	0	; select bank0
  5776  1517  082B               	movf	pad@fp,w
  5777  1518  00FD               	movwf	??_pad
  5778  1519  087D               	movf	??_pad,w
  5779  151A  00F9               	movwf	fputs@fp
  5780  151B  0824               	movf	pad@buf,w
  5781  151C  3193  23E1  3195   	fcall	_fputs
  5782  151F                     i1l2532:	
  5783                           
  5784                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  5785  151F  0140               	movlb	0	; select bank0
  5786  1520  1BA6               	btfsc	pad@p+1,7
  5787  1521  2D27               	goto	i1l2536
  5788  1522  0826               	movf	pad@p+1,w
  5789  1523  00AA               	movwf	pad@w+1
  5790  1524  0825               	movf	pad@p,w
  5791  1525  00A9               	movwf	pad@w
  5792  1526  2D29               	goto	i1l222
  5793  1527                     i1l2536:	
  5794  1527  01A9               	clrf	pad@w
  5795  1528  01AA               	clrf	pad@w+1
  5796  1529                     i1l222:	
  5797                           
  5798                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  5799  1529  01A7               	clrf	pad@i
  5800  152A  01A8               	clrf	pad@i+1
  5801  152B                     i1l2542:	
  5802                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  5803                           
  5804                           
  5805                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  5806  152B  0828               	movf	pad@i+1,w
  5807  152C  3A80               	xorlw	128
  5808  152D  00FD               	movwf	??_pad
  5809  152E  082A               	movf	pad@w+1,w
  5810  152F  3A80               	xorlw	128
  5811  1530  027D               	subwf	??_pad,w
  5812  1531  1D03               	skipz
  5813  1532  2D35               	goto	u336_25
  5814  1533  0829               	movf	pad@w,w
  5815  1534  0227               	subwf	pad@i,w
  5816  1535                     u336_25:	
  5817  1535  1803               	btfsc	3,0
  5818  1536  2D49               	goto	i1l225
  5819                           
  5820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  5821  1537  3020               	movlw	32
  5822  1538  00F1               	movwf	fputc@c
  5823  1539  3000               	movlw	0
  5824  153A  00F2               	movwf	fputc@c+1
  5825  153B  0140               	movlb	0	; select bank0
  5826  153C  082B               	movf	pad@fp,w
  5827  153D  00FD               	movwf	??_pad
  5828  153E  087D               	movf	??_pad,w
  5829  153F  00F3               	movwf	fputc@fp
  5830  1540  3188  2004  3195   	fcall	_fputc
  5831                           
  5832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  5833  1543  3001               	movlw	1
  5834  1544  0140               	movlb	0	; select bank0
  5835  1545  07A7               	addwf	pad@i,f
  5836  1546  3000               	movlw	0
  5837  1547  3DA8               	addwfc	pad@i+1,f
  5838  1548  2D2B               	goto	i1l2542
  5839  1549                     i1l225:	
  5840                           
  5841                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  5842  1549  0141               	movlb	1	; select bank1
  5843  154A  186D               	btfsc	_flags^(0+128),0
  5844  154B  2D55               	goto	i1l226
  5845                           
  5846                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  5847  154C  0140               	movlb	0	; select bank0
  5848  154D  082B               	movf	pad@fp,w
  5849  154E  00FD               	movwf	??_pad
  5850  154F  087D               	movf	??_pad,w
  5851  1550  00F9               	movwf	fputs@fp
  5852  1551  0824               	movf	pad@buf,w
  5853  1552  3193  23E1  3195   	fcall	_fputs
  5854  1555                     i1l226:	
  5855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 92:     }
  5856                           
  5857                           
  5858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  5859  1555  0140               	movlb	0	; select bank0
  5860  1556  0824               	movf	pad@buf,w
  5861  1557  3193  2332         	fcall	_strlen
  5862  1559  0140               	movlb	0	; select bank0
  5863  155A  0829               	movf	pad@w,w
  5864  155B  0770               	addwf	?_strlen,w
  5865  155C  00A4               	movwf	?_pad
  5866  155D  082A               	movf	pad@w+1,w
  5867  155E  3D71               	addwfc	?_strlen+1,w
  5868  155F  00A5               	movwf	?_pad+1
  5869  1560  0008               	return
  5870  1561                     __end_of_pad:	
  5871                           
  5872                           	psect	text14
  5873  1332                     __ptext14:	
  5874 ;; *************** function _strlen *****************
  5875 ;; Defined at:
  5876 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  s               1    wreg     PTR const unsigned char 
  5879 ;;		 -> dbuf(80), 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  s               1    4[COMMON] PTR const unsigned char 
  5882 ;;		 -> dbuf(80), 
  5883 ;;  a               1    3[COMMON] PTR const unsigned char 
  5884 ;;		 -> dbuf(80), 
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  2    0[COMMON] unsigned int 
  5887 ;; Registers used:
  5888 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5897 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;Total ram usage:        5 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		_pad
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           
  5908                           ;psect for function _strlen
  5909  1332                     _strlen:	
  5910                           
  5911                           ;incstack = 0
  5912                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5913                           ;strlen@s stored from wreg
  5914  1332  00F4               	movwf	strlen@s
  5915  1333  0874               	movf	strlen@s,w
  5916  1334  00F2               	movwf	??_strlen
  5917  1335  0872               	movf	??_strlen,w
  5918  1336  00F3               	movwf	strlen@a
  5919  1337                     i1l2310:	
  5920  1337  0874               	movf	strlen@s,w
  5921  1338  0086               	movwf	6
  5922  1339  3001               	movlw	1	; select bank2/3
  5923  133A  0087               	movwf	7
  5924  133B  0801               	movf	1,w
  5925  133C  1903               	btfsc	3,2
  5926  133D  2B43               	goto	i1l2312
  5927  133E  3001               	movlw	1
  5928  133F  00F2               	movwf	??_strlen
  5929  1340  0872               	movf	??_strlen,w
  5930  1341  07F4               	addwf	strlen@s,f
  5931  1342  2B37               	goto	i1l2310
  5932  1343                     i1l2312:	
  5933  1343  0873               	movf	strlen@a,w
  5934  1344  0274               	subwf	strlen@s,w
  5935  1345  00F0               	movwf	?_strlen
  5936  1346  01F1               	clrf	?_strlen+1
  5937  1347  1BF0               	btfsc	?_strlen,7
  5938  1348  03F1               	decf	?_strlen+1,f
  5939  1349  0008               	return
  5940  134A                     __end_of_strlen:	
  5941                           
  5942                           	psect	text15
  5943  13E1                     __ptext15:	
  5944 ;; *************** function _fputs *****************
  5945 ;; Defined at:
  5946 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;  s               1    wreg     PTR const unsigned char 
  5949 ;;		 -> dbuf(80), 
  5950 ;;  fp              1    9[COMMON] PTR struct _IO_FILE
  5951 ;;		 -> NULL(0), 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  5954 ;;		 -> dbuf(80), 
  5955 ;;  i               2    1[BANK0 ] int 
  5956 ;;  c               1    0[BANK0 ] unsigned char 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  2    9[COMMON] int 
  5959 ;; Registers used:
  5960 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5966 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;Total ram usage:        8 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    2
  5973 ;; This function calls:
  5974 ;;		_fputc
  5975 ;; This function is called by:
  5976 ;;		_pad
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           
  5981                           ;psect for function _fputs
  5982  13E1                     _fputs:	
  5983                           
  5984                           ;incstack = 0
  5985                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5986                           ;fputs@s stored from wreg
  5987  13E1  0140               	movlb	0	; select bank0
  5988  13E2  00A3               	movwf	fputs@s
  5989  13E3  01A1               	clrf	fputs@i
  5990  13E4  01A2               	clrf	fputs@i+1
  5991  13E5                     i1l2304:	
  5992  13E5  0821               	movf	fputs@i,w
  5993  13E6  0723               	addwf	fputs@s,w
  5994  13E7  00FA               	movwf	??_fputs
  5995  13E8  087A               	movf	??_fputs,w
  5996  13E9  0086               	movwf	6
  5997  13EA  3001               	movlw	1	; select bank2/3
  5998  13EB  0087               	movwf	7
  5999  13EC  0801               	movf	1,w
  6000  13ED  00FB               	movwf	??_fputs+1
  6001  13EE  087B               	movf	??_fputs+1,w
  6002  13EF  00A0               	movwf	fputs@c
  6003  13F0  0820               	movf	fputs@c,w
  6004  13F1  1903               	btfsc	3,2
  6005  13F2  0008               	return
  6006  13F3  0820               	movf	fputs@c,w
  6007  13F4  00FA               	movwf	??_fputs
  6008  13F5  01FB               	clrf	??_fputs+1
  6009  13F6  087A               	movf	??_fputs,w
  6010  13F7  00F1               	movwf	fputc@c
  6011  13F8  087B               	movf	??_fputs+1,w
  6012  13F9  00F2               	movwf	fputc@c+1
  6013  13FA  0879               	movf	fputs@fp,w
  6014  13FB  00FC               	movwf	??_fputs+2
  6015  13FC  087C               	movf	??_fputs+2,w
  6016  13FD  00F3               	movwf	fputc@fp
  6017  13FE  3188  2004  3193   	fcall	_fputc
  6018  1401  3001               	movlw	1
  6019  1402  0140               	movlb	0	; select bank0
  6020  1403  07A1               	addwf	fputs@i,f
  6021  1404  3000               	movlw	0
  6022  1405  3DA2               	addwfc	fputs@i+1,f
  6023  1406  2BE5               	goto	i1l2304
  6024  1407                     __end_of_fputs:	
  6025                           
  6026                           	psect	text16
  6027  0804                     __ptext16:	
  6028 ;; *************** function _fputc *****************
  6029 ;; Defined at:
  6030 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  c               2    1[COMMON] int 
  6033 ;;  fp              1    3[COMMON] PTR struct _IO_FILE
  6034 ;;		 -> NULL(0), 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;		None
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  2    1[COMMON] int 
  6039 ;; Registers used:
  6040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6046 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6048 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6049 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6050 ;;Total ram usage:        8 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; Hardware stack levels required when called:    1
  6053 ;; This function calls:
  6054 ;;		_putch
  6055 ;; This function is called by:
  6056 ;;		_pad
  6057 ;;		_vfpfcnvrt
  6058 ;;		_fputs
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           
  6063                           ;psect for function _fputc
  6064  0804                     _fputc:	
  6065                           
  6066                           ;incstack = 0
  6067                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6068  0804  0873               	movf	fputc@fp,w
  6069  0805  1D03               	btfss	3,2
  6070  0806  0873               	movf	fputc@fp,w
  6071  0807  1D03               	btfss	3,2
  6072  0808  280D               	goto	i1l2290
  6073  0809  0871               	movf	fputc@c,w
  6074  080A  3192  22FC         	fcall	_putch
  6075  080C  0008               	return
  6076  080D                     i1l2290:	
  6077  080D  0873               	movf	fputc@fp,w
  6078  080E  3E03               	addlw	3
  6079  080F  0086               	movwf	6
  6080  0810  0187               	clrf	7
  6081  0811  0016               	moviw fsr1++
  6082  0812  0401               	iorwf	1,w
  6083  0813  1903               	btfsc	3,2
  6084  0814  2830               	goto	i1l2294
  6085  0815  0873               	movf	fputc@fp,w
  6086  0816  3E03               	addlw	3
  6087  0817  0086               	movwf	6
  6088  0818  0187               	clrf	7
  6089  0819  3F40               	moviw [0]fsr1
  6090  081A  00F4               	movwf	??_fputc
  6091  081B  3F41               	moviw [1]fsr1
  6092  081C  00F5               	movwf	??_fputc+1
  6093  081D  0A73               	incf	fputc@fp,w
  6094  081E  0086               	movwf	6
  6095  081F  0187               	clrf	7
  6096  0820  3F40               	moviw [0]fsr1
  6097  0821  00F6               	movwf	??_fputc+2
  6098  0822  3F41               	moviw [1]fsr1
  6099  0823  00F7               	movwf	??_fputc+3
  6100  0824  0877               	movf	??_fputc+3,w
  6101  0825  3A80               	xorlw	128
  6102  0826  00F8               	movwf	??_fputc+4
  6103  0827  0875               	movf	??_fputc+1,w
  6104  0828  3A80               	xorlw	128
  6105  0829  0278               	subwf	??_fputc+4,w
  6106  082A  1D03               	skipz
  6107  082B  282E               	goto	u283_25
  6108  082C  0874               	movf	??_fputc,w
  6109  082D  0276               	subwf	??_fputc+2,w
  6110  082E                     u283_25:	
  6111  082E  1803               	skipnc
  6112  082F  0008               	return
  6113  0830                     i1l2294:	
  6114  0830  0A73               	incf	fputc@fp,w
  6115  0831  0086               	movwf	6
  6116  0832  0187               	clrf	7
  6117  0833  3001               	movlw	1
  6118  0834  0781               	addwf	1,f
  6119  0835  3141               	addfsr 1,1
  6120  0836  1803               	skipnc
  6121  0837  0A81               	incf	1,f
  6122  0838  0008               	return
  6123  0839                     __end_of_fputc:	
  6124                           
  6125                           	psect	text17
  6126  12FC                     __ptext17:	
  6127 ;; *************** function _putch *****************
  6128 ;; Defined at:
  6129 ;;		line 29 in file "UART_funcs.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  byte            1    wreg     unsigned char 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  byte            1    0[COMMON] unsigned char 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		wreg
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6147 ;;Total ram usage:        1 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		_fputc
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function _putch
  6158  12FC                     _putch:	
  6159                           
  6160                           ;incstack = 0
  6161                           ; Regs used in _putch: [wreg]
  6162                           ;putch@byte stored from wreg
  6163  12FC  00F0               	movwf	putch@byte
  6164                           
  6165                           ;UART_funcs.c: 29: void putch(unsigned char byte);UART_funcs.c: 30: {;UART_funcs.c: 31: 
      +                              TXSTA=0x26;
  6166  12FD  3026               	movlw	38
  6167  12FE  0142               	movlb	2	; select bank2
  6168  12FF  009E               	movwf	30	;volatile
  6169                           
  6170                           ;UART_funcs.c: 32:     RCSTAbits.SPEN=1;
  6171  1300  179D               	bsf	29,7	;volatile
  6172                           
  6173                           ;UART_funcs.c: 33:     TXREG=byte;
  6174  1301  0870               	movf	putch@byte,w
  6175  1302  009A               	movwf	26	;volatile
  6176  1303                     i1l112:	
  6177                           ;UART_funcs.c: 34:     while(TX1STAbits.TRMT == 0)continue;
  6178                           
  6179  1303  1C9E               	btfss	30,1	;volatile
  6180  1304  2B03               	goto	i1l112
  6181                           
  6182                           ;UART_funcs.c: 35:     TX1STAbits.TRMT = 0;
  6183  1305  109E               	bcf	30,1	;volatile
  6184  1306  0008               	return
  6185  1307                     __end_of_putch:	
  6186                           
  6187                           	psect	text18
  6188  06AB                     __ptext18:	
  6189 ;; *************** function _floorf *****************
  6190 ;; Defined at:
  6191 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  x               4   13[BANK0 ] float 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  u               4   29[BANK0 ] struct .
  6196 ;;  m               4   23[BANK0 ] unsigned long 
  6197 ;;  e               2   27[BANK0 ] int 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  4   13[BANK0 ] float 
  6200 ;; Registers used:
  6201 ;;		wreg, status,2, status,0
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6207 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6208 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6209 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6210 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6211 ;;Total ram usage:       20 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_efgtoa
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           
  6221                           ;psect for function _floorf
  6222  06AB                     _floorf:	
  6223                           
  6224                           ;incstack = 0
  6225                           ; Regs used in _floorf: [wreg+status,2+status,0]
  6226  06AB  0142               	movlb	2	; select bank2
  6227  06AC  0848               	movf	(floorf@F524+3)^(0+256),w
  6228  06AD  0140               	movlb	0	; select bank0
  6229  06AE  00C0               	movwf	floorf@u+3
  6230  06AF  0142               	movlb	2	; select bank2
  6231  06B0  0847               	movf	(floorf@F524+2)^(0+256),w
  6232  06B1  0140               	movlb	0	; select bank0
  6233  06B2  00BF               	movwf	floorf@u+2
  6234  06B3  0142               	movlb	2	; select bank2
  6235  06B4  0846               	movf	(floorf@F524+1)^(0+256),w
  6236  06B5  0140               	movlb	0	; select bank0
  6237  06B6  00BE               	movwf	floorf@u+1
  6238  06B7  0142               	movlb	2	; select bank2
  6239  06B8  0845               	movf	floorf@F524^(0+256),w
  6240  06B9  0140               	movlb	0	; select bank0
  6241  06BA  00BD               	movwf	floorf@u
  6242  06BB  0830               	movf	floorf@x+3,w
  6243  06BC  00C0               	movwf	floorf@u+3
  6244  06BD  082F               	movf	floorf@x+2,w
  6245  06BE  00BF               	movwf	floorf@u+2
  6246  06BF  082E               	movf	floorf@x+1,w
  6247  06C0  00BE               	movwf	floorf@u+1
  6248  06C1  082D               	movf	floorf@x,w
  6249  06C2  00BD               	movwf	floorf@u
  6250  06C3  083D               	movf	floorf@u,w
  6251  06C4  00B1               	movwf	??_floorf
  6252  06C5  083E               	movf	floorf@u+1,w
  6253  06C6  00B2               	movwf	??_floorf+1
  6254  06C7  083F               	movf	floorf@u+2,w
  6255  06C8  00B3               	movwf	??_floorf+2
  6256  06C9  0840               	movf	floorf@u+3,w
  6257  06CA  00B4               	movwf	??_floorf+3
  6258  06CB  3017               	movlw	23
  6259  06CC                     u350_25:	
  6260  06CC  36B4               	lsrf	??_floorf+3,f
  6261  06CD  0CB3               	rrf	??_floorf+2,f
  6262  06CE  0CB2               	rrf	??_floorf+1,f
  6263  06CF  0CB1               	rrf	??_floorf,f
  6264  06D0  0B89               	decfsz	9,f
  6265  06D1  2ECC               	goto	u350_25
  6266  06D2  30FF               	movlw	255
  6267  06D3  0531               	andwf	??_floorf,w
  6268  06D4  00B5               	movwf	??_floorf+4
  6269  06D5  3000               	movlw	0
  6270  06D6  0532               	andwf	??_floorf+1,w
  6271  06D7  00B6               	movwf	??_floorf+5
  6272  06D8  0835               	movf	??_floorf+4,w
  6273  06D9  3E81               	addlw	129
  6274  06DA  00BB               	movwf	floorf@e
  6275  06DB  30FF               	movlw	255
  6276  06DC  3D36               	addwfc	??_floorf+5,w
  6277  06DD  00BC               	movwf	floorf@e+1
  6278  06DE  083C               	movf	floorf@e+1,w
  6279  06DF  3A80               	xorlw	128
  6280  06E0  00B1               	movwf	??_floorf
  6281  06E1  3080               	movlw	128
  6282  06E2  0231               	subwf	??_floorf,w
  6283  06E3  1D03               	skipz
  6284  06E4  2EE7               	goto	u351_25
  6285  06E5  3017               	movlw	23
  6286  06E6  023B               	subwf	floorf@e,w
  6287  06E7                     u351_25:	
  6288  06E7  1803               	btfsc	3,0
  6289  06E8  0008               	return
  6290  06E9  0140               	movlb	0	; select bank0
  6291  06EA  1BBC               	btfsc	floorf@e+1,7
  6292  06EB  2F44               	goto	i1l2606
  6293  06EC  30FF               	movlw	255
  6294  06ED  00B1               	movwf	??_floorf
  6295  06EE  30FF               	movlw	255
  6296  06EF  00B2               	movwf	??_floorf+1
  6297  06F0  307F               	movlw	127
  6298  06F1  00B3               	movwf	??_floorf+2
  6299  06F2  3000               	movlw	0
  6300  06F3  00B4               	movwf	??_floorf+3
  6301  06F4  0A3B               	incf	floorf@e,w
  6302  06F5  2EFA               	goto	u353_20
  6303  06F6                     u353_25:	
  6304  06F6  37B4               	asrf	??_floorf+3,f
  6305  06F7  0CB3               	rrf	??_floorf+2,f
  6306  06F8  0CB2               	rrf	??_floorf+1,f
  6307  06F9  0CB1               	rrf	??_floorf,f
  6308  06FA                     u353_20:	
  6309  06FA  0B89               	decfsz	9,f
  6310  06FB  2EF6               	goto	u353_25
  6311  06FC  0834               	movf	??_floorf+3,w
  6312  06FD  00BA               	movwf	floorf@m+3
  6313  06FE  0833               	movf	??_floorf+2,w
  6314  06FF  00B9               	movwf	floorf@m+2
  6315  0700  0832               	movf	??_floorf+1,w
  6316  0701  00B8               	movwf	floorf@m+1
  6317  0702  0831               	movf	??_floorf,w
  6318  0703  00B7               	movwf	floorf@m
  6319  0704  083D               	movf	floorf@u,w
  6320  0705  0537               	andwf	floorf@m,w
  6321  0706  00B1               	movwf	??_floorf
  6322  0707  083E               	movf	floorf@u+1,w
  6323  0708  0538               	andwf	floorf@m+1,w
  6324  0709  00B2               	movwf	??_floorf+1
  6325  070A  083F               	movf	floorf@u+2,w
  6326  070B  0539               	andwf	floorf@m+2,w
  6327  070C  00B3               	movwf	??_floorf+2
  6328  070D  0840               	movf	floorf@u+3,w
  6329  070E  053A               	andwf	floorf@m+3,w
  6330  070F  00B4               	movwf	??_floorf+3
  6331  0710  0834               	movf	??_floorf+3,w
  6332  0711  0433               	iorwf	??_floorf+2,w
  6333  0712  0432               	iorwf	??_floorf+1,w
  6334  0713  0431               	iorwf	??_floorf,w
  6335  0714  1903               	btfsc	3,2
  6336  0715  0008               	return
  6337  0716  083D               	movf	floorf@u,w
  6338  0717  00B1               	movwf	??_floorf
  6339  0718  083E               	movf	floorf@u+1,w
  6340  0719  00B2               	movwf	??_floorf+1
  6341  071A  083F               	movf	floorf@u+2,w
  6342  071B  00B3               	movwf	??_floorf+2
  6343  071C  0840               	movf	floorf@u+3,w
  6344  071D  00B4               	movwf	??_floorf+3
  6345  071E  301F               	movlw	31
  6346  071F                     u355_25:	
  6347  071F  36B4               	lsrf	??_floorf+3,f
  6348  0720  0CB3               	rrf	??_floorf+2,f
  6349  0721  0CB2               	rrf	??_floorf+1,f
  6350  0722  0CB1               	rrf	??_floorf,f
  6351  0723  0B89               	decfsz	9,f
  6352  0724  2F1F               	goto	u355_25
  6353  0725  0834               	movf	??_floorf+3,w
  6354  0726  0433               	iorwf	??_floorf+2,w
  6355  0727  0432               	iorwf	??_floorf+1,w
  6356  0728  0431               	iorwf	??_floorf,w
  6357  0729  1903               	skipnz
  6358  072A  2F33               	goto	i1l2604
  6359  072B  0837               	movf	floorf@m,w
  6360  072C  07BD               	addwf	floorf@u,f
  6361  072D  0838               	movf	floorf@m+1,w
  6362  072E  3DBE               	addwfc	floorf@u+1,f
  6363  072F  0839               	movf	floorf@m+2,w
  6364  0730  3DBF               	addwfc	floorf@u+2,f
  6365  0731  083A               	movf	floorf@m+3,w
  6366  0732  3DC0               	addwfc	floorf@u+3,f
  6367  0733                     i1l2604:	
  6368  0733  0937               	comf	floorf@m,w
  6369  0734  00B1               	movwf	??_floorf
  6370  0735  0938               	comf	floorf@m+1,w
  6371  0736  00B2               	movwf	??_floorf+1
  6372  0737  0939               	comf	floorf@m+2,w
  6373  0738  00B3               	movwf	??_floorf+2
  6374  0739  093A               	comf	floorf@m+3,w
  6375  073A  00B4               	movwf	??_floorf+3
  6376  073B  0831               	movf	??_floorf,w
  6377  073C  05BD               	andwf	floorf@u,f
  6378  073D  0832               	movf	??_floorf+1,w
  6379  073E  05BE               	andwf	floorf@u+1,f
  6380  073F  0833               	movf	??_floorf+2,w
  6381  0740  05BF               	andwf	floorf@u+2,f
  6382  0741  0834               	movf	??_floorf+3,w
  6383  0742  05C0               	andwf	floorf@u+3,f
  6384  0743  2F7A               	goto	i1l814
  6385  0744                     i1l2606:	
  6386  0744  083D               	movf	floorf@u,w
  6387  0745  00B1               	movwf	??_floorf
  6388  0746  083E               	movf	floorf@u+1,w
  6389  0747  00B2               	movwf	??_floorf+1
  6390  0748  083F               	movf	floorf@u+2,w
  6391  0749  00B3               	movwf	??_floorf+2
  6392  074A  0840               	movf	floorf@u+3,w
  6393  074B  00B4               	movwf	??_floorf+3
  6394  074C  301F               	movlw	31
  6395  074D                     u357_25:	
  6396  074D  36B4               	lsrf	??_floorf+3,f
  6397  074E  0CB3               	rrf	??_floorf+2,f
  6398  074F  0CB2               	rrf	??_floorf+1,f
  6399  0750  0CB1               	rrf	??_floorf,f
  6400  0751  0B89               	decfsz	9,f
  6401  0752  2F4D               	goto	u357_25
  6402  0753  0834               	movf	??_floorf+3,w
  6403  0754  0433               	iorwf	??_floorf+2,w
  6404  0755  0432               	iorwf	??_floorf+1,w
  6405  0756  0431               	iorwf	??_floorf,w
  6406  0757  1D03               	skipz
  6407  0758  2F5D               	goto	i1l2610
  6408  0759  3000               	movlw	0
  6409  075A  00C0               	movwf	floorf@u+3
  6410  075B  3000               	movlw	0
  6411  075C  2F75               	goto	L9
  6412  075D                     i1l2610:	
  6413  075D  083D               	movf	floorf@u,w
  6414  075E  00B1               	movwf	??_floorf
  6415  075F  083E               	movf	floorf@u+1,w
  6416  0760  00B2               	movwf	??_floorf+1
  6417  0761  083F               	movf	floorf@u+2,w
  6418  0762  00B3               	movwf	??_floorf+2
  6419  0763  0840               	movf	floorf@u+3,w
  6420  0764  00B4               	movwf	??_floorf+3
  6421  0765  3001               	movlw	1
  6422  0766                     u359_25:	
  6423  0766  35B1               	lslf	??_floorf,f
  6424  0767  0DB2               	rlf	??_floorf+1,f
  6425  0768  0DB3               	rlf	??_floorf+2,f
  6426  0769  0DB4               	rlf	??_floorf+3,f
  6427  076A  0B89               	decfsz	9,f
  6428  076B  2F66               	goto	u359_25
  6429  076C  0834               	movf	??_floorf+3,w
  6430  076D  0433               	iorwf	??_floorf+2,w
  6431  076E  0432               	iorwf	??_floorf+1,w
  6432  076F  0431               	iorwf	??_floorf,w
  6433  0770  1903               	skipnz
  6434  0771  2F7A               	goto	i1l814
  6435  0772  30BF               	movlw	191
  6436  0773  00C0               	movwf	floorf@u+3
  6437  0774  3080               	movlw	128
  6438  0775                     L9:	
  6439  0775  00BF               	movwf	floorf@u+2
  6440  0776  3000               	movlw	0
  6441  0777  00BE               	movwf	floorf@u+1
  6442  0778  3000               	movlw	0
  6443  0779  00BD               	movwf	floorf@u
  6444  077A                     i1l814:	
  6445  077A  0840               	movf	floorf@u+3,w
  6446  077B  00B0               	movwf	?_floorf+3
  6447  077C  083F               	movf	floorf@u+2,w
  6448  077D  00AF               	movwf	?_floorf+2
  6449  077E  083E               	movf	floorf@u+1,w
  6450  077F  00AE               	movwf	?_floorf+1
  6451  0780  083D               	movf	floorf@u,w
  6452  0781  00AD               	movwf	?_floorf
  6453  0782  0008               	return
  6454  0783                     __end_of_floorf:	
  6455                           
  6456                           	psect	text19
  6457  1671                     __ptext19:	
  6458 ;; *************** function ___fpclassifyf *****************
  6459 ;; Defined at:
  6460 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  x               4    0[COMMON] float 
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;  u               4    2[BANK0 ] struct .
  6465 ;;  e               2    0[BANK0 ] int 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  2    0[COMMON] int 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6476 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6477 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6478 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;Total ram usage:       16 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_efgtoa
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           
  6489                           ;psect for function ___fpclassifyf
  6490  1671                     ___fpclassifyf:	
  6491                           
  6492                           ;incstack = 0
  6493                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  6494  1671  0141               	movlb	1	; select bank1
  6495  1672  0866               	movf	(___fpclassifyf@F463+3)^(0+128),w
  6496  1673  0140               	movlb	0	; select bank0
  6497  1674  00A5               	movwf	___fpclassifyf@u+3
  6498  1675  0141               	movlb	1	; select bank1
  6499  1676  0865               	movf	(___fpclassifyf@F463+2)^(0+128),w
  6500  1677  0140               	movlb	0	; select bank0
  6501  1678  00A4               	movwf	___fpclassifyf@u+2
  6502  1679  0141               	movlb	1	; select bank1
  6503  167A  0864               	movf	(___fpclassifyf@F463+1)^(0+128),w
  6504  167B  0140               	movlb	0	; select bank0
  6505  167C  00A3               	movwf	___fpclassifyf@u+1
  6506  167D  0141               	movlb	1	; select bank1
  6507  167E  0863               	movf	___fpclassifyf@F463^(0+128),w
  6508  167F  0140               	movlb	0	; select bank0
  6509  1680  00A2               	movwf	___fpclassifyf@u
  6510  1681  0873               	movf	___fpclassifyf@x+3,w
  6511  1682  00A5               	movwf	___fpclassifyf@u+3
  6512  1683  0872               	movf	___fpclassifyf@x+2,w
  6513  1684  00A4               	movwf	___fpclassifyf@u+2
  6514  1685  0871               	movf	___fpclassifyf@x+1,w
  6515  1686  00A3               	movwf	___fpclassifyf@u+1
  6516  1687  0870               	movf	___fpclassifyf@x,w
  6517  1688  00A2               	movwf	___fpclassifyf@u
  6518  1689  0822               	movf	___fpclassifyf@u,w
  6519  168A  00F4               	movwf	??___fpclassifyf
  6520  168B  0823               	movf	___fpclassifyf@u+1,w
  6521  168C  00F5               	movwf	??___fpclassifyf+1
  6522  168D  0824               	movf	___fpclassifyf@u+2,w
  6523  168E  00F6               	movwf	??___fpclassifyf+2
  6524  168F  0825               	movf	___fpclassifyf@u+3,w
  6525  1690  00F7               	movwf	??___fpclassifyf+3
  6526  1691  3017               	movlw	23
  6527  1692                     u338_25:	
  6528  1692  36F7               	lsrf	??___fpclassifyf+3,f
  6529  1693  0CF6               	rrf	??___fpclassifyf+2,f
  6530  1694  0CF5               	rrf	??___fpclassifyf+1,f
  6531  1695  0CF4               	rrf	??___fpclassifyf,f
  6532  1696  0B89               	decfsz	9,f
  6533  1697  2E92               	goto	u338_25
  6534  1698  30FF               	movlw	255
  6535  1699  0574               	andwf	??___fpclassifyf,w
  6536  169A  00A0               	movwf	___fpclassifyf@e
  6537  169B  3000               	movlw	0
  6538  169C  0575               	andwf	??___fpclassifyf+1,w
  6539  169D  00A1               	movwf	___fpclassifyf@e+1
  6540  169E  0820               	movf	___fpclassifyf@e,w
  6541  169F  0421               	iorwf	___fpclassifyf@e+1,w
  6542  16A0  1D03               	btfss	3,2
  6543  16A1  2EC1               	goto	i1l2562
  6544  16A2  0822               	movf	___fpclassifyf@u,w
  6545  16A3  00F4               	movwf	??___fpclassifyf
  6546  16A4  0823               	movf	___fpclassifyf@u+1,w
  6547  16A5  00F5               	movwf	??___fpclassifyf+1
  6548  16A6  0824               	movf	___fpclassifyf@u+2,w
  6549  16A7  00F6               	movwf	??___fpclassifyf+2
  6550  16A8  0825               	movf	___fpclassifyf@u+3,w
  6551  16A9  00F7               	movwf	??___fpclassifyf+3
  6552  16AA  3001               	movlw	1
  6553  16AB                     u340_25:	
  6554  16AB  35F4               	lslf	??___fpclassifyf,f
  6555  16AC  0DF5               	rlf	??___fpclassifyf+1,f
  6556  16AD  0DF6               	rlf	??___fpclassifyf+2,f
  6557  16AE  0DF7               	rlf	??___fpclassifyf+3,f
  6558  16AF  0B89               	decfsz	9,f
  6559  16B0  2EAB               	goto	u340_25
  6560  16B1  0877               	movf	??___fpclassifyf+3,w
  6561  16B2  0476               	iorwf	??___fpclassifyf+2,w
  6562  16B3  0475               	iorwf	??___fpclassifyf+1,w
  6563  16B4  0474               	iorwf	??___fpclassifyf,w
  6564  16B5  1D03               	skipz
  6565  16B6  2EBC               	goto	i1l2558
  6566  16B7  3002               	movlw	2
  6567  16B8  00F0               	movwf	?___fpclassifyf
  6568  16B9  3000               	movlw	0
  6569  16BA  00F1               	movwf	?___fpclassifyf+1
  6570  16BB  0008               	return
  6571  16BC                     i1l2558:	
  6572  16BC  3003               	movlw	3
  6573  16BD  00F0               	movwf	?___fpclassifyf
  6574  16BE  3000               	movlw	0
  6575  16BF  00F1               	movwf	?___fpclassifyf+1
  6576  16C0  0008               	return
  6577  16C1                     i1l2562:	
  6578  16C1  0A20               	incf	___fpclassifyf@e,w
  6579  16C2  0421               	iorwf	___fpclassifyf@e+1,w
  6580  16C3  1D03               	btfss	3,2
  6581  16C4  2EE4               	goto	i1l2568
  6582  16C5  0822               	movf	___fpclassifyf@u,w
  6583  16C6  00F4               	movwf	??___fpclassifyf
  6584  16C7  0823               	movf	___fpclassifyf@u+1,w
  6585  16C8  00F5               	movwf	??___fpclassifyf+1
  6586  16C9  0824               	movf	___fpclassifyf@u+2,w
  6587  16CA  00F6               	movwf	??___fpclassifyf+2
  6588  16CB  0825               	movf	___fpclassifyf@u+3,w
  6589  16CC  00F7               	movwf	??___fpclassifyf+3
  6590  16CD  3009               	movlw	9
  6591  16CE                     u343_25:	
  6592  16CE  35F4               	lslf	??___fpclassifyf,f
  6593  16CF  0DF5               	rlf	??___fpclassifyf+1,f
  6594  16D0  0DF6               	rlf	??___fpclassifyf+2,f
  6595  16D1  0DF7               	rlf	??___fpclassifyf+3,f
  6596  16D2  0B89               	decfsz	9,f
  6597  16D3  2ECE               	goto	u343_25
  6598  16D4  0877               	movf	??___fpclassifyf+3,w
  6599  16D5  0476               	iorwf	??___fpclassifyf+2,w
  6600  16D6  0475               	iorwf	??___fpclassifyf+1,w
  6601  16D7  0474               	iorwf	??___fpclassifyf,w
  6602  16D8  1D03               	btfss	3,2
  6603  16D9  2EDC               	goto	u344_20
  6604  16DA  3001               	movlw	1
  6605  16DB  2EDD               	goto	u345_20
  6606  16DC                     u344_20:	
  6607  16DC  3000               	movlw	0
  6608  16DD                     u345_20:	
  6609  16DD  00F8               	movwf	??___fpclassifyf+4
  6610  16DE  01F9               	clrf	??___fpclassifyf+5
  6611  16DF  0878               	movf	??___fpclassifyf+4,w
  6612  16E0  00F0               	movwf	?___fpclassifyf
  6613  16E1  0879               	movf	??___fpclassifyf+5,w
  6614  16E2  00F1               	movwf	?___fpclassifyf+1
  6615  16E3  0008               	return
  6616  16E4                     i1l2568:	
  6617  16E4  3004               	movlw	4
  6618  16E5  00F0               	movwf	?___fpclassifyf
  6619  16E6  3000               	movlw	0
  6620  16E7  00F1               	movwf	?___fpclassifyf+1
  6621  16E8  0008               	return
  6622  16E9                     __end_of___fpclassifyf:	
  6623                           
  6624                           	psect	text20
  6625  160C                     __ptext20:	
  6626 ;; *************** function ___fltol *****************
  6627 ;; Defined at:
  6628 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  f1              4    0[COMMON] int 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  exp1            1   10[COMMON] unsigned char 
  6633 ;;  sign1           1    9[COMMON] unsigned char 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  4    0[COMMON] long 
  6636 ;; Registers used:
  6637 ;;		wreg, status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6643 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6645 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;Total ram usage:       11 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_efgtoa
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           
  6657                           ;psect for function ___fltol
  6658  160C                     ___fltol:	
  6659                           
  6660                           ;incstack = 0
  6661                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6662  160C  1003               	clrc
  6663  160D  0D72               	rlf	___fltol@f1+2,w
  6664  160E  0D73               	rlf	___fltol@f1+3,w
  6665  160F  00F4               	movwf	??___fltol
  6666  1610  0874               	movf	??___fltol,w
  6667  1611  00FA               	movwf	___fltol@exp1
  6668  1612  087A               	movf	___fltol@exp1,w
  6669  1613  1D03               	btfss	3,2
  6670  1614  2E1E               	goto	i1l2744
  6671  1615                     i1l2740:	
  6672  1615  3000               	movlw	0
  6673  1616  00F3               	movwf	?___fltol+3
  6674  1617  3000               	movlw	0
  6675  1618  00F2               	movwf	?___fltol+2
  6676  1619  3000               	movlw	0
  6677  161A  00F1               	movwf	?___fltol+1
  6678  161B  3000               	movlw	0
  6679  161C  00F0               	movwf	?___fltol
  6680  161D  0008               	return
  6681  161E                     i1l2744:	
  6682  161E  0870               	movf	___fltol@f1,w
  6683  161F  00F4               	movwf	??___fltol
  6684  1620  0871               	movf	___fltol@f1+1,w
  6685  1621  00F5               	movwf	??___fltol+1
  6686  1622  0872               	movf	___fltol@f1+2,w
  6687  1623  00F6               	movwf	??___fltol+2
  6688  1624  0873               	movf	___fltol@f1+3,w
  6689  1625  00F7               	movwf	??___fltol+3
  6690  1626  301F               	movlw	31
  6691  1627                     u390_25:	
  6692  1627  36F7               	lsrf	??___fltol+3,f
  6693  1628  0CF6               	rrf	??___fltol+2,f
  6694  1629  0CF5               	rrf	??___fltol+1,f
  6695  162A  0CF4               	rrf	??___fltol,f
  6696  162B  0B89               	decfsz	9,f
  6697  162C  2E27               	goto	u390_25
  6698  162D  0874               	movf	??___fltol,w
  6699  162E  00F8               	movwf	??___fltol+4
  6700  162F  0878               	movf	??___fltol+4,w
  6701  1630  00F9               	movwf	___fltol@sign1
  6702  1631  17F2               	bsf	___fltol@f1+2,7
  6703  1632  30FF               	movlw	255
  6704  1633  05F0               	andwf	___fltol@f1,f
  6705  1634  30FF               	movlw	255
  6706  1635  05F1               	andwf	___fltol@f1+1,f
  6707  1636  30FF               	movlw	255
  6708  1637  05F2               	andwf	___fltol@f1+2,f
  6709  1638  3000               	movlw	0
  6710  1639  05F3               	andwf	___fltol@f1+3,f
  6711  163A  3096               	movlw	150
  6712  163B  02FA               	subwf	___fltol@exp1,f
  6713  163C  1FFA               	btfss	___fltol@exp1,7
  6714  163D  2E51               	goto	i1l2762
  6715  163E  087A               	movf	___fltol@exp1,w
  6716  163F  3A80               	xorlw	128
  6717  1640  3E97               	addlw	151
  6718  1641  1C03               	btfss	3,0
  6719  1642  2E15               	goto	i1l2740
  6720  1643                     i1l2760:	
  6721  1643  3001               	movlw	1
  6722  1644                     u393_25:	
  6723  1644  36F3               	lsrf	___fltol@f1+3,f
  6724  1645  0CF2               	rrf	___fltol@f1+2,f
  6725  1646  0CF1               	rrf	___fltol@f1+1,f
  6726  1647  0CF0               	rrf	___fltol@f1,f
  6727  1648  0B89               	decfsz	9,f
  6728  1649  2E44               	goto	u393_25
  6729  164A  3001               	movlw	1
  6730  164B  00F4               	movwf	??___fltol
  6731  164C  0874               	movf	??___fltol,w
  6732  164D  07FA               	addwf	___fltol@exp1,f
  6733  164E  1903               	btfsc	3,2
  6734  164F  2E62               	goto	i1l2770
  6735  1650  2E43               	goto	i1l2760
  6736  1651                     i1l2762:	
  6737  1651  3020               	movlw	32
  6738  1652  027A               	subwf	___fltol@exp1,w
  6739  1653  1803               	btfsc	3,0
  6740  1654  2E15               	goto	i1l2740
  6741  1655                     i1l544:	
  6742  1655  087A               	movf	___fltol@exp1,w
  6743  1656  1903               	btfsc	3,2
  6744  1657  2E62               	goto	i1l2770
  6745  1658  3001               	movlw	1
  6746  1659                     u396_25:	
  6747  1659  35F0               	lslf	___fltol@f1,f
  6748  165A  0DF1               	rlf	___fltol@f1+1,f
  6749  165B  0DF2               	rlf	___fltol@f1+2,f
  6750  165C  0DF3               	rlf	___fltol@f1+3,f
  6751  165D  0B89               	decfsz	9,f
  6752  165E  2E59               	goto	u396_25
  6753  165F  3001               	movlw	1
  6754  1660  02FA               	subwf	___fltol@exp1,f
  6755  1661  2E55               	goto	i1l544
  6756  1662                     i1l2770:	
  6757  1662  0879               	movf	___fltol@sign1,w
  6758  1663  1903               	btfsc	3,2
  6759  1664  0008               	return
  6760  1665  09F0               	comf	___fltol@f1,f
  6761  1666  09F1               	comf	___fltol@f1+1,f
  6762  1667  09F2               	comf	___fltol@f1+2,f
  6763  1668  09F3               	comf	___fltol@f1+3,f
  6764  1669  0AF0               	incf	___fltol@f1,f
  6765  166A  1903               	skipnz
  6766  166B  0AF1               	incf	___fltol@f1+1,f
  6767  166C  1903               	skipnz
  6768  166D  0AF2               	incf	___fltol@f1+2,f
  6769  166E  1903               	skipnz
  6770  166F  0AF3               	incf	___fltol@f1+3,f
  6771  1670  0008               	return
  6772  1671                     __end_of___fltol:	
  6773                           
  6774                           	psect	text21
  6775  1382                     __ptext21:	
  6776 ;; *************** function ___flsub *****************
  6777 ;; Defined at:
  6778 ;;		line 242 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  a               4   26[BANK0 ] long 
  6781 ;;  b               4   30[BANK0 ] long 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;		None
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  4   26[BANK0 ] long 
  6786 ;; Registers used:
  6787 ;;		wreg, status,2, status,0, pclath, cstack
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6793 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;Total ram usage:        8 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:    1
  6800 ;; This function calls:
  6801 ;;		___fladd
  6802 ;; This function is called by:
  6803 ;;		_efgtoa
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           
  6808                           ;psect for function ___flsub
  6809  1382                     ___flsub:	
  6810                           
  6811                           ;incstack = 0
  6812                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  6813  1382  3080               	movlw	128
  6814  1383  0140               	movlb	0	; select bank0
  6815  1384  06BD               	xorwf	___flsub@a+3,f
  6816  1385  0841               	movf	___flsub@b+3,w
  6817  1386  00F3               	movwf	___fladd@b+3
  6818  1387  0840               	movf	___flsub@b+2,w
  6819  1388  00F2               	movwf	___fladd@b+2
  6820  1389  083F               	movf	___flsub@b+1,w
  6821  138A  00F1               	movwf	___fladd@b+1
  6822  138B  083E               	movf	___flsub@b,w
  6823  138C  00F0               	movwf	___fladd@b
  6824  138D  083D               	movf	___flsub@a+3,w
  6825  138E  00F7               	movwf	___fladd@a+3
  6826  138F  083C               	movf	___flsub@a+2,w
  6827  1390  00F6               	movwf	___fladd@a+2
  6828  1391  083B               	movf	___flsub@a+1,w
  6829  1392  00F5               	movwf	___fladd@a+1
  6830  1393  083A               	movf	___flsub@a,w
  6831  1394  00F4               	movwf	___fladd@a
  6832  1395  318B  23EB         	fcall	___fladd
  6833  1397  0873               	movf	?___fladd+3,w
  6834  1398  0140               	movlb	0	; select bank0
  6835  1399  00BD               	movwf	?___flsub+3
  6836  139A  0872               	movf	?___fladd+2,w
  6837  139B  00BC               	movwf	?___flsub+2
  6838  139C  0871               	movf	?___fladd+1,w
  6839  139D  00BB               	movwf	?___flsub+1
  6840  139E  0870               	movf	?___fladd,w
  6841  139F  00BA               	movwf	?___flsub
  6842  13A0  0008               	return
  6843  13A1                     __end_of___flsub:	
  6844                           
  6845                           	psect	text22
  6846  0BEB                     __ptext22:	
  6847 ;; *************** function ___fladd *****************
  6848 ;; Defined at:
  6849 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  b               4    0[COMMON] long 
  6852 ;;  a               4    4[COMMON] long 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;  grs             1   11[COMMON] unsigned char 
  6855 ;;  bexp            1   10[COMMON] unsigned char 
  6856 ;;  aexp            1    9[COMMON] unsigned char 
  6857 ;;  signs           1    8[COMMON] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  4    0[COMMON] unsigned char 
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, status,0
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6867 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6868 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;Total ram usage:       20 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_efgtoa
  6877 ;;		___flsub
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           
  6882                           ;psect for function ___fladd
  6883  0BEB                     ___fladd:	
  6884                           
  6885                           ;incstack = 0
  6886                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  6887  0BEB  0873               	movf	___fladd@b+3,w
  6888  0BEC  3980               	andlw	128
  6889  0BED  0140               	movlb	0	; select bank0
  6890  0BEE  00A0               	movwf	??___fladd
  6891  0BEF  0820               	movf	??___fladd,w
  6892  0BF0  00F8               	movwf	___fladd@signs
  6893  0BF1  3573               	lslf	___fladd@b+3,w
  6894  0BF2  00A0               	movwf	??___fladd
  6895  0BF3  0820               	movf	??___fladd,w
  6896  0BF4  00FA               	movwf	___fladd@bexp
  6897  0BF5  1BF2               	btfsc	___fladd@b+2,7
  6898  0BF6  147A               	bsf	___fladd@bexp,0
  6899  0BF7  087A               	movf	___fladd@bexp,w
  6900  0BF8  1903               	btfsc	3,2
  6901  0BF9  2C08               	goto	i1l2338
  6902  0BFA  0A7A               	incf	___fladd@bexp,w
  6903  0BFB  1D03               	btfss	3,2
  6904  0BFC  2C05               	goto	i1l2334
  6905  0BFD  3000               	movlw	0
  6906  0BFE  00F3               	movwf	___fladd@b+3
  6907  0BFF  3000               	movlw	0
  6908  0C00  00F2               	movwf	___fladd@b+2
  6909  0C01  3000               	movlw	0
  6910  0C02  00F1               	movwf	___fladd@b+1
  6911  0C03  3000               	movlw	0
  6912  0C04  00F0               	movwf	___fladd@b
  6913  0C05                     i1l2334:	
  6914  0C05  17F2               	bsf	___fladd@b+2,7
  6915  0C06  01F3               	clrf	___fladd@b+3
  6916  0C07  2C10               	goto	i1l2340
  6917  0C08                     i1l2338:	
  6918  0C08  3000               	movlw	0
  6919  0C09  00F3               	movwf	___fladd@b+3
  6920  0C0A  3000               	movlw	0
  6921  0C0B  00F2               	movwf	___fladd@b+2
  6922  0C0C  3000               	movlw	0
  6923  0C0D  00F1               	movwf	___fladd@b+1
  6924  0C0E  3000               	movlw	0
  6925  0C0F  00F0               	movwf	___fladd@b
  6926  0C10                     i1l2340:	
  6927  0C10  0877               	movf	___fladd@a+3,w
  6928  0C11  3980               	andlw	128
  6929  0C12  00A0               	movwf	??___fladd
  6930  0C13  0820               	movf	??___fladd,w
  6931  0C14  00F9               	movwf	___fladd@aexp
  6932  0C15  0879               	movf	___fladd@aexp,w
  6933  0C16  0678               	xorwf	___fladd@signs,w
  6934  0C17  1D03               	btfss	3,2
  6935  0C18  1778               	bsf	___fladd@signs,6
  6936  0C19  3577               	lslf	___fladd@a+3,w
  6937  0C1A  00A0               	movwf	??___fladd
  6938  0C1B  0820               	movf	??___fladd,w
  6939  0C1C  00F9               	movwf	___fladd@aexp
  6940  0C1D  1BF6               	btfsc	___fladd@a+2,7
  6941  0C1E  1479               	bsf	___fladd@aexp,0
  6942  0C1F  0879               	movf	___fladd@aexp,w
  6943  0C20  1903               	btfsc	3,2
  6944  0C21  2C30               	goto	i1l2362
  6945  0C22  0A79               	incf	___fladd@aexp,w
  6946  0C23  1D03               	btfss	3,2
  6947  0C24  2C2D               	goto	i1l2358
  6948  0C25  3000               	movlw	0
  6949  0C26  00F7               	movwf	___fladd@a+3
  6950  0C27  3000               	movlw	0
  6951  0C28  00F6               	movwf	___fladd@a+2
  6952  0C29  3000               	movlw	0
  6953  0C2A  00F5               	movwf	___fladd@a+1
  6954  0C2B  3000               	movlw	0
  6955  0C2C  00F4               	movwf	___fladd@a
  6956  0C2D                     i1l2358:	
  6957  0C2D  17F6               	bsf	___fladd@a+2,7
  6958  0C2E  01F7               	clrf	___fladd@a+3
  6959  0C2F  2C38               	goto	i1l644
  6960  0C30                     i1l2362:	
  6961  0C30  3000               	movlw	0
  6962  0C31  00F7               	movwf	___fladd@a+3
  6963  0C32  3000               	movlw	0
  6964  0C33  00F6               	movwf	___fladd@a+2
  6965  0C34  3000               	movlw	0
  6966  0C35  00F5               	movwf	___fladd@a+1
  6967  0C36  3000               	movlw	0
  6968  0C37  00F4               	movwf	___fladd@a
  6969  0C38                     i1l644:	
  6970  0C38  087A               	movf	___fladd@bexp,w
  6971  0C39  0279               	subwf	___fladd@aexp,w
  6972  0C3A  1803               	skipnc
  6973  0C3B  2C7E               	goto	i1l2398
  6974  0C3C  1F78               	btfss	___fladd@signs,6
  6975  0C3D  2C42               	goto	i1l2368
  6976  0C3E  3080               	movlw	128
  6977  0C3F  00A0               	movwf	??___fladd
  6978  0C40  0820               	movf	??___fladd,w
  6979  0C41  06F8               	xorwf	___fladd@signs,f
  6980  0C42                     i1l2368:	
  6981  0C42  087A               	movf	___fladd@bexp,w
  6982  0C43  00A0               	movwf	??___fladd
  6983  0C44  0820               	movf	??___fladd,w
  6984  0C45  00FB               	movwf	___fladd@grs
  6985  0C46  0879               	movf	___fladd@aexp,w
  6986  0C47  00A0               	movwf	??___fladd
  6987  0C48  0820               	movf	??___fladd,w
  6988  0C49  00FA               	movwf	___fladd@bexp
  6989  0C4A  087B               	movf	___fladd@grs,w
  6990  0C4B  00A0               	movwf	??___fladd
  6991  0C4C  0820               	movf	??___fladd,w
  6992  0C4D  00F9               	movwf	___fladd@aexp
  6993  0C4E  0870               	movf	___fladd@b,w
  6994  0C4F  00A0               	movwf	??___fladd
  6995  0C50  0820               	movf	??___fladd,w
  6996  0C51  00FB               	movwf	___fladd@grs
  6997  0C52  0874               	movf	___fladd@a,w
  6998  0C53  00A0               	movwf	??___fladd
  6999  0C54  0820               	movf	??___fladd,w
  7000  0C55  00F0               	movwf	___fladd@b
  7001  0C56  087B               	movf	___fladd@grs,w
  7002  0C57  00A0               	movwf	??___fladd
  7003  0C58  0820               	movf	??___fladd,w
  7004  0C59  00F4               	movwf	___fladd@a
  7005  0C5A  0871               	movf	___fladd@b+1,w
  7006  0C5B  00A0               	movwf	??___fladd
  7007  0C5C  0820               	movf	??___fladd,w
  7008  0C5D  00FB               	movwf	___fladd@grs
  7009  0C5E  0875               	movf	___fladd@a+1,w
  7010  0C5F  00A0               	movwf	??___fladd
  7011  0C60  0820               	movf	??___fladd,w
  7012  0C61  00F1               	movwf	___fladd@b+1
  7013  0C62  087B               	movf	___fladd@grs,w
  7014  0C63  00A0               	movwf	??___fladd
  7015  0C64  0820               	movf	??___fladd,w
  7016  0C65  00F5               	movwf	___fladd@a+1
  7017  0C66  0872               	movf	___fladd@b+2,w
  7018  0C67  00A0               	movwf	??___fladd
  7019  0C68  0820               	movf	??___fladd,w
  7020  0C69  00FB               	movwf	___fladd@grs
  7021  0C6A  0876               	movf	___fladd@a+2,w
  7022  0C6B  00A0               	movwf	??___fladd
  7023  0C6C  0820               	movf	??___fladd,w
  7024  0C6D  00F2               	movwf	___fladd@b+2
  7025  0C6E  087B               	movf	___fladd@grs,w
  7026  0C6F  00A0               	movwf	??___fladd
  7027  0C70  0820               	movf	??___fladd,w
  7028  0C71  00F6               	movwf	___fladd@a+2
  7029  0C72  0873               	movf	___fladd@b+3,w
  7030  0C73  00A0               	movwf	??___fladd
  7031  0C74  0820               	movf	??___fladd,w
  7032  0C75  00FB               	movwf	___fladd@grs
  7033  0C76  0877               	movf	___fladd@a+3,w
  7034  0C77  00A0               	movwf	??___fladd
  7035  0C78  0820               	movf	??___fladd,w
  7036  0C79  00F3               	movwf	___fladd@b+3
  7037  0C7A  087B               	movf	___fladd@grs,w
  7038  0C7B  00A0               	movwf	??___fladd
  7039  0C7C  0820               	movf	??___fladd,w
  7040  0C7D  00F7               	movwf	___fladd@a+3
  7041  0C7E                     i1l2398:	
  7042  0C7E  01FB               	clrf	___fladd@grs
  7043  0C7F  0879               	movf	___fladd@aexp,w
  7044  0C80  00A0               	movwf	??___fladd
  7045  0C81  01A1               	clrf	??___fladd+1
  7046  0C82  0821               	movf	??___fladd+1,w
  7047  0C83  00A3               	movwf	??___fladd+3
  7048  0C84  087A               	movf	___fladd@bexp,w
  7049  0C85  0220               	subwf	??___fladd,w
  7050  0C86  00A2               	movwf	??___fladd+2
  7051  0C87  1C03               	skipc
  7052  0C88  03A3               	decf	??___fladd+3,f
  7053  0C89  0823               	movf	??___fladd+3,w
  7054  0C8A  3A80               	xorlw	128
  7055  0C8B  00A4               	movwf	??___fladd+4
  7056  0C8C  3080               	movlw	128
  7057  0C8D  0224               	subwf	??___fladd+4,w
  7058  0C8E  1D03               	skipz
  7059  0C8F  2C92               	goto	u297_25
  7060  0C90  301A               	movlw	26
  7061  0C91  0222               	subwf	??___fladd+2,w
  7062  0C92                     u297_25:	
  7063  0C92  1C03               	skipc
  7064  0C93  2CC8               	goto	i1l2416
  7065  0C94  0873               	movf	___fladd@b+3,w
  7066  0C95  0472               	iorwf	___fladd@b+2,w
  7067  0C96  0471               	iorwf	___fladd@b+1,w
  7068  0C97  0470               	iorwf	___fladd@b,w
  7069  0C98  1903               	btfsc	3,2
  7070  0C99  2C9C               	goto	u298_20
  7071  0C9A  3001               	movlw	1
  7072  0C9B  2C9D               	goto	u299_20
  7073  0C9C                     u298_20:	
  7074  0C9C  3000               	movlw	0
  7075  0C9D                     u299_20:	
  7076  0C9D  0140               	movlb	0	; select bank0
  7077  0C9E  00A0               	movwf	??___fladd
  7078  0C9F  0820               	movf	??___fladd,w
  7079  0CA0  00FB               	movwf	___fladd@grs
  7080  0CA1  3000               	movlw	0
  7081  0CA2  00F3               	movwf	___fladd@b+3
  7082  0CA3  3000               	movlw	0
  7083  0CA4  00F2               	movwf	___fladd@b+2
  7084  0CA5  3000               	movlw	0
  7085  0CA6  00F1               	movwf	___fladd@b+1
  7086  0CA7  3000               	movlw	0
  7087  0CA8  00F0               	movwf	___fladd@b
  7088  0CA9  0879               	movf	___fladd@aexp,w
  7089  0CAA  00A0               	movwf	??___fladd
  7090  0CAB  0820               	movf	??___fladd,w
  7091  0CAC  00FA               	movwf	___fladd@bexp
  7092  0CAD  2CCC               	goto	i1l648
  7093  0CAE                     i1l650:	
  7094  0CAE  1C7B               	btfss	___fladd@grs,0
  7095  0CAF  2CB7               	goto	i1l2406
  7096  0CB0  367B               	lsrf	___fladd@grs,w
  7097  0CB1  3801               	iorlw	1
  7098  0CB2  0140               	movlb	0	; select bank0
  7099  0CB3  00A0               	movwf	??___fladd
  7100  0CB4  0820               	movf	??___fladd,w
  7101  0CB5  00FB               	movwf	___fladd@grs
  7102  0CB6  2CB9               	goto	i1l2408
  7103  0CB7                     i1l2406:	
  7104  0CB7  1003               	clrc
  7105  0CB8  0CFB               	rrf	___fladd@grs,f
  7106  0CB9                     i1l2408:	
  7107  0CB9  1870               	btfsc	___fladd@b,0
  7108  0CBA  17FB               	bsf	___fladd@grs,7
  7109  0CBB  3001               	movlw	1
  7110  0CBC  0140               	movlb	0	; select bank0
  7111  0CBD  00A0               	movwf	??___fladd
  7112  0CBE                     u302_25:	
  7113  0CBE  37F3               	asrf	___fladd@b+3,f
  7114  0CBF  0CF2               	rrf	___fladd@b+2,f
  7115  0CC0  0CF1               	rrf	___fladd@b+1,f
  7116  0CC1  0CF0               	rrf	___fladd@b,f
  7117  0CC2  0BA0               	decfsz	??___fladd& (0+127),f
  7118  0CC3  2CBE               	goto	u302_25
  7119  0CC4  3001               	movlw	1
  7120  0CC5  00A0               	movwf	??___fladd
  7121  0CC6  0820               	movf	??___fladd,w
  7122  0CC7  07FA               	addwf	___fladd@bexp,f
  7123  0CC8                     i1l2416:	
  7124  0CC8  0879               	movf	___fladd@aexp,w
  7125  0CC9  027A               	subwf	___fladd@bexp,w
  7126  0CCA  1C03               	skipc
  7127  0CCB  2CAE               	goto	i1l650
  7128  0CCC                     i1l648:	
  7129  0CCC  1B78               	btfsc	___fladd@signs,6
  7130  0CCD  2CFF               	goto	i1l2442
  7131  0CCE  087A               	movf	___fladd@bexp,w
  7132  0CCF  1D03               	btfss	3,2
  7133  0CD0  2CDA               	goto	i1l2424
  7134  0CD1  3000               	movlw	0
  7135  0CD2  00F3               	movwf	?___fladd+3
  7136  0CD3  3000               	movlw	0
  7137  0CD4  00F2               	movwf	?___fladd+2
  7138  0CD5  3000               	movlw	0
  7139  0CD6  00F1               	movwf	?___fladd+1
  7140  0CD7  3000               	movlw	0
  7141  0CD8  00F0               	movwf	?___fladd
  7142  0CD9  0008               	return
  7143  0CDA                     i1l2424:	
  7144  0CDA  0874               	movf	___fladd@a,w
  7145  0CDB  07F0               	addwf	___fladd@b,f
  7146  0CDC  0875               	movf	___fladd@a+1,w
  7147  0CDD  3DF1               	addwfc	___fladd@b+1,f
  7148  0CDE  0876               	movf	___fladd@a+2,w
  7149  0CDF  3DF2               	addwfc	___fladd@b+2,f
  7150  0CE0  0877               	movf	___fladd@a+3,w
  7151  0CE1  3DF3               	addwfc	___fladd@b+3,f
  7152  0CE2  1C73               	btfss	___fladd@b+3,0
  7153  0CE3  2D7A               	goto	i1l2476
  7154  0CE4  1C7B               	btfss	___fladd@grs,0
  7155  0CE5  2CED               	goto	i1l2432
  7156  0CE6  367B               	lsrf	___fladd@grs,w
  7157  0CE7  3801               	iorlw	1
  7158  0CE8  0140               	movlb	0	; select bank0
  7159  0CE9  00A0               	movwf	??___fladd
  7160  0CEA  0820               	movf	??___fladd,w
  7161  0CEB  00FB               	movwf	___fladd@grs
  7162  0CEC  2CEF               	goto	i1l2434
  7163  0CED                     i1l2432:	
  7164  0CED  1003               	clrc
  7165  0CEE  0CFB               	rrf	___fladd@grs,f
  7166  0CEF                     i1l2434:	
  7167  0CEF  1870               	btfsc	___fladd@b,0
  7168  0CF0  17FB               	bsf	___fladd@grs,7
  7169  0CF1  3001               	movlw	1
  7170  0CF2  0140               	movlb	0	; select bank0
  7171  0CF3  00A0               	movwf	??___fladd
  7172  0CF4                     u309_25:	
  7173  0CF4  37F3               	asrf	___fladd@b+3,f
  7174  0CF5  0CF2               	rrf	___fladd@b+2,f
  7175  0CF6  0CF1               	rrf	___fladd@b+1,f
  7176  0CF7  0CF0               	rrf	___fladd@b,f
  7177  0CF8  0BA0               	decfsz	??___fladd& (0+127),f
  7178  0CF9  2CF4               	goto	u309_25
  7179  0CFA  3001               	movlw	1
  7180  0CFB  00A0               	movwf	??___fladd
  7181  0CFC  0820               	movf	??___fladd,w
  7182  0CFD  07FA               	addwf	___fladd@bexp,f
  7183  0CFE  2D7A               	goto	i1l2476
  7184  0CFF                     i1l2442:	
  7185  0CFF  0873               	movf	___fladd@b+3,w
  7186  0D00  3A80               	xorlw	128
  7187  0D01  0140               	movlb	0	; select bank0
  7188  0D02  00A0               	movwf	??___fladd
  7189  0D03  0877               	movf	___fladd@a+3,w
  7190  0D04  3A80               	xorlw	128
  7191  0D05  0220               	subwf	??___fladd,w
  7192  0D06  1D03               	skipz
  7193  0D07  2D12               	goto	u310_23
  7194  0D08  0876               	movf	___fladd@a+2,w
  7195  0D09  0272               	subwf	___fladd@b+2,w
  7196  0D0A  1D03               	skipz
  7197  0D0B  2D12               	goto	u310_23
  7198  0D0C  0875               	movf	___fladd@a+1,w
  7199  0D0D  0271               	subwf	___fladd@b+1,w
  7200  0D0E  1D03               	skipz
  7201  0D0F  2D12               	goto	u310_23
  7202  0D10  0874               	movf	___fladd@a,w
  7203  0D11  0270               	subwf	___fladd@b,w
  7204  0D12                     u310_23:	
  7205  0D12  1803               	skipnc
  7206  0D13  2D4A               	goto	i1l2452
  7207  0D14  30FF               	movlw	255
  7208  0D15  00A0               	movwf	??___fladd
  7209  0D16  30FF               	movlw	255
  7210  0D17  00A1               	movwf	??___fladd+1
  7211  0D18  30FF               	movlw	255
  7212  0D19  00A2               	movwf	??___fladd+2
  7213  0D1A  30FF               	movlw	255
  7214  0D1B  00A3               	movwf	??___fladd+3
  7215  0D1C  0870               	movf	___fladd@b,w
  7216  0D1D  0274               	subwf	___fladd@a,w
  7217  0D1E  00A4               	movwf	??___fladd+4
  7218  0D1F  0871               	movf	___fladd@b+1,w
  7219  0D20  3B75               	subwfb	___fladd@a+1,w
  7220  0D21  00A5               	movwf	??___fladd+5
  7221  0D22  0872               	movf	___fladd@b+2,w
  7222  0D23  3B76               	subwfb	___fladd@a+2,w
  7223  0D24  00A6               	movwf	??___fladd+6
  7224  0D25  0873               	movf	___fladd@b+3,w
  7225  0D26  3B77               	subwfb	___fladd@a+3,w
  7226  0D27  00A7               	movwf	??___fladd+7
  7227  0D28  0824               	movf	??___fladd+4,w
  7228  0D29  07A0               	addwf	??___fladd,f
  7229  0D2A  0825               	movf	??___fladd+5,w
  7230  0D2B  3DA1               	addwfc	??___fladd+1,f
  7231  0D2C  0826               	movf	??___fladd+6,w
  7232  0D2D  3DA2               	addwfc	??___fladd+2,f
  7233  0D2E  0827               	movf	??___fladd+7,w
  7234  0D2F  3DA3               	addwfc	??___fladd+3,f
  7235  0D30  0823               	movf	??___fladd+3,w
  7236  0D31  00F3               	movwf	___fladd@b+3
  7237  0D32  0822               	movf	??___fladd+2,w
  7238  0D33  00F2               	movwf	___fladd@b+2
  7239  0D34  0821               	movf	??___fladd+1,w
  7240  0D35  00F1               	movwf	___fladd@b+1
  7241  0D36  0820               	movf	??___fladd,w
  7242  0D37  00F0               	movwf	___fladd@b
  7243  0D38  3080               	movlw	128
  7244  0D39  00A0               	movwf	??___fladd
  7245  0D3A  0820               	movf	??___fladd,w
  7246  0D3B  06F8               	xorwf	___fladd@signs,f
  7247  0D3C  09FB               	comf	___fladd@grs,f
  7248  0D3D  0AFB               	incf	___fladd@grs,f
  7249  0D3E  087B               	movf	___fladd@grs,w
  7250  0D3F  1D03               	btfss	3,2
  7251  0D40  2D52               	goto	i1l665
  7252  0D41  3001               	movlw	1
  7253  0D42  07F0               	addwf	___fladd@b,f
  7254  0D43  3000               	movlw	0
  7255  0D44  3DF1               	addwfc	___fladd@b+1,f
  7256  0D45  3000               	movlw	0
  7257  0D46  3DF2               	addwfc	___fladd@b+2,f
  7258  0D47  3000               	movlw	0
  7259  0D48  3DF3               	addwfc	___fladd@b+3,f
  7260  0D49  2D52               	goto	i1l665
  7261  0D4A                     i1l2452:	
  7262  0D4A  0874               	movf	___fladd@a,w
  7263  0D4B  02F0               	subwf	___fladd@b,f
  7264  0D4C  0875               	movf	___fladd@a+1,w
  7265  0D4D  3BF1               	subwfb	___fladd@b+1,f
  7266  0D4E  0876               	movf	___fladd@a+2,w
  7267  0D4F  3BF2               	subwfb	___fladd@b+2,f
  7268  0D50  0877               	movf	___fladd@a+3,w
  7269  0D51  3BF3               	subwfb	___fladd@b+3,f
  7270  0D52                     i1l665:	
  7271  0D52  0873               	movf	___fladd@b+3,w
  7272  0D53  0472               	iorwf	___fladd@b+2,w
  7273  0D54  0471               	iorwf	___fladd@b+1,w
  7274  0D55  0470               	iorwf	___fladd@b,w
  7275  0D56  1D03               	skipz
  7276  0D57  2D78               	goto	i1l2474
  7277  0D58  087B               	movf	___fladd@grs,w
  7278  0D59  1D03               	btfss	3,2
  7279  0D5A  2D78               	goto	i1l2474
  7280  0D5B  3000               	movlw	0
  7281  0D5C  00F3               	movwf	?___fladd+3
  7282  0D5D  3000               	movlw	0
  7283  0D5E  00F2               	movwf	?___fladd+2
  7284  0D5F  3000               	movlw	0
  7285  0D60  00F1               	movwf	?___fladd+1
  7286  0D61  3000               	movlw	0
  7287  0D62  00F0               	movwf	?___fladd
  7288  0D63  0008               	return
  7289  0D64                     i1l2460:	
  7290  0D64  3001               	movlw	1
  7291  0D65                     u314_25:	
  7292  0D65  35F0               	lslf	___fladd@b,f
  7293  0D66  0DF1               	rlf	___fladd@b+1,f
  7294  0D67  0DF2               	rlf	___fladd@b+2,f
  7295  0D68  0DF3               	rlf	___fladd@b+3,f
  7296  0D69  0B89               	decfsz	9,f
  7297  0D6A  2D65               	goto	u314_25
  7298  0D6B  1BFB               	btfsc	___fladd@grs,7
  7299  0D6C  1470               	bsf	___fladd@b,0
  7300  0D6D  1C7B               	btfss	___fladd@grs,0
  7301  0D6E  2D71               	goto	i1l2468
  7302  0D6F  1403               	setc
  7303  0D70  2D72               	goto	L10
  7304  0D71                     i1l2468:	
  7305  0D71  1003               	clrc
  7306  0D72                     L10:	
  7307  0D72  0DFB               	rlf	___fladd@grs,f
  7308  0D73  087A               	movf	___fladd@bexp,w
  7309  0D74  1903               	btfsc	3,2
  7310  0D75  2D78               	goto	i1l2474
  7311  0D76  3001               	movlw	1
  7312  0D77  02FA               	subwf	___fladd@bexp,f
  7313  0D78                     i1l2474:	
  7314  0D78  1FF2               	btfss	___fladd@b+2,7
  7315  0D79  2D64               	goto	i1l2460
  7316  0D7A                     i1l2476:	
  7317  0D7A  01F9               	clrf	___fladd@aexp
  7318  0D7B  1FFB               	btfss	___fladd@grs,7
  7319  0D7C  2D85               	goto	i1l2486
  7320  0D7D  087B               	movf	___fladd@grs,w
  7321  0D7E  397F               	andlw	127
  7322  0D7F  1903               	btfsc	3,2
  7323  0D80  1870               	btfsc	___fladd@b,0
  7324  0D81  2D83               	goto	i1l2482
  7325  0D82  2D85               	goto	i1l2486
  7326  0D83                     i1l2482:	
  7327  0D83  01F9               	clrf	___fladd@aexp
  7328  0D84  0AF9               	incf	___fladd@aexp,f
  7329  0D85                     i1l2486:	
  7330  0D85  0879               	movf	___fladd@aexp,w
  7331  0D86  1903               	btfsc	3,2
  7332  0D87  2DB2               	goto	i1l678
  7333  0D88  3001               	movlw	1
  7334  0D89  07F0               	addwf	___fladd@b,f
  7335  0D8A  3000               	movlw	0
  7336  0D8B  3DF1               	addwfc	___fladd@b+1,f
  7337  0D8C  3000               	movlw	0
  7338  0D8D  3DF2               	addwfc	___fladd@b+2,f
  7339  0D8E  3000               	movlw	0
  7340  0D8F  3DF3               	addwfc	___fladd@b+3,f
  7341  0D90  1C73               	btfss	___fladd@b+3,0
  7342  0D91  2DB2               	goto	i1l678
  7343  0D92  0870               	movf	___fladd@b,w
  7344  0D93  0140               	movlb	0	; select bank0
  7345  0D94  00A0               	movwf	??___fladd
  7346  0D95  0871               	movf	___fladd@b+1,w
  7347  0D96  00A1               	movwf	??___fladd+1
  7348  0D97  0872               	movf	___fladd@b+2,w
  7349  0D98  00A2               	movwf	??___fladd+2
  7350  0D99  0873               	movf	___fladd@b+3,w
  7351  0D9A  00A3               	movwf	??___fladd+3
  7352  0D9B  3001               	movlw	1
  7353  0D9C  00A4               	movwf	??___fladd+4
  7354  0D9D                     u324_25:	
  7355  0D9D  37A3               	asrf	??___fladd+3,f
  7356  0D9E  0CA2               	rrf	??___fladd+2,f
  7357  0D9F  0CA1               	rrf	??___fladd+1,f
  7358  0DA0  0CA0               	rrf	??___fladd,f
  7359  0DA1  0BA4               	decfsz	??___fladd+4,f
  7360  0DA2  2D9D               	goto	u324_25
  7361  0DA3  0823               	movf	??___fladd+3,w
  7362  0DA4  00F3               	movwf	___fladd@b+3
  7363  0DA5  0822               	movf	??___fladd+2,w
  7364  0DA6  00F2               	movwf	___fladd@b+2
  7365  0DA7  0821               	movf	??___fladd+1,w
  7366  0DA8  00F1               	movwf	___fladd@b+1
  7367  0DA9  0820               	movf	??___fladd,w
  7368  0DAA  00F0               	movwf	___fladd@b
  7369  0DAB  0A7A               	incf	___fladd@bexp,w
  7370  0DAC  1903               	btfsc	3,2
  7371  0DAD  2DB2               	goto	i1l678
  7372  0DAE  3001               	movlw	1
  7373  0DAF  00A0               	movwf	??___fladd
  7374  0DB0  0820               	movf	??___fladd,w
  7375  0DB1  07FA               	addwf	___fladd@bexp,f
  7376  0DB2                     i1l678:	
  7377  0DB2  0A7A               	incf	___fladd@bexp,w
  7378  0DB3  1D03               	btfss	3,2
  7379  0DB4  087A               	movf	___fladd@bexp,w
  7380  0DB5  1D03               	btfss	3,2
  7381  0DB6  2DC2               	goto	i1l2504
  7382  0DB7  3000               	movlw	0
  7383  0DB8  00F3               	movwf	___fladd@b+3
  7384  0DB9  3000               	movlw	0
  7385  0DBA  00F2               	movwf	___fladd@b+2
  7386  0DBB  3000               	movlw	0
  7387  0DBC  00F1               	movwf	___fladd@b+1
  7388  0DBD  3000               	movlw	0
  7389  0DBE  00F0               	movwf	___fladd@b
  7390  0DBF  087A               	movf	___fladd@bexp,w
  7391  0DC0  1903               	btfsc	3,2
  7392  0DC1  01F8               	clrf	___fladd@signs
  7393  0DC2                     i1l2504:	
  7394  0DC2  1C7A               	btfss	___fladd@bexp,0
  7395  0DC3  2DC6               	goto	i1l2508
  7396  0DC4  17F2               	bsf	___fladd@b+2,7
  7397  0DC5  2DCB               	goto	i1l686
  7398  0DC6                     i1l2508:	
  7399  0DC6  307F               	movlw	127
  7400  0DC7  0140               	movlb	0	; select bank0
  7401  0DC8  00A0               	movwf	??___fladd
  7402  0DC9  0820               	movf	??___fladd,w
  7403  0DCA  05F2               	andwf	___fladd@b+2,f
  7404  0DCB                     i1l686:	
  7405  0DCB  367A               	lsrf	___fladd@bexp,w
  7406  0DCC  0140               	movlb	0	; select bank0
  7407  0DCD  00A0               	movwf	??___fladd
  7408  0DCE  0820               	movf	??___fladd,w
  7409  0DCF  00F3               	movwf	___fladd@b+3
  7410  0DD0  1FF8               	btfss	___fladd@signs,7
  7411  0DD1  0008               	return
  7412  0DD2  17F3               	bsf	___fladd@b+3,7
  7413  0DD3  0008               	return
  7414  0DD4                     __end_of___fladd:	
  7415                           
  7416                           	psect	text23
  7417  12F3                     __ptext23:	
  7418 ;; *************** function ___flneg *****************
  7419 ;; Defined at:
  7420 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;  f1              4    0[COMMON] unsigned char 
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  4    0[COMMON] unsigned char 
  7427 ;; Registers used:
  7428 ;;		wreg
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7437 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7438 ;;Total ram usage:        4 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; This function calls:
  7441 ;;		Nothing
  7442 ;; This function is called by:
  7443 ;;		_efgtoa
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           
  7448                           ;psect for function ___flneg
  7449  12F3                     ___flneg:	
  7450                           
  7451                           ;incstack = 0
  7452                           ; Regs used in ___flneg: [wreg]
  7453  12F3  0873               	movf	___flneg@f1+3,w
  7454  12F4  0472               	iorwf	___flneg@f1+2,w
  7455  12F5  0471               	iorwf	___flneg@f1+1,w
  7456  12F6  0470               	iorwf	___flneg@f1,w
  7457  12F7  1903               	skipnz
  7458  12F8  0008               	return
  7459  12F9  3080               	movlw	128
  7460  12FA  06F3               	xorwf	___flneg@f1+3,f
  7461  12FB  0008               	return
  7462  12FC                     __end_of___flneg:	
  7463                           
  7464                           	psect	text24
  7465  0DD4                     __ptext24:	
  7466 ;; *************** function ___flmul *****************
  7467 ;; Defined at:
  7468 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  b               4    0[BANK0 ] unsigned char 
  7471 ;;  a               4    4[BANK0 ] unsigned char 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;  prod            4   20[BANK0 ] struct .
  7474 ;;  grs             4   14[BANK0 ] unsigned long 
  7475 ;;  temp            2   24[BANK0 ] struct .
  7476 ;;  bexp            1   19[BANK0 ] unsigned char 
  7477 ;;  aexp            1   18[BANK0 ] unsigned char 
  7478 ;;  sign            1   13[BANK0 ] unsigned char 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  4    0[BANK0 ] unsigned char 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0, pclath, cstack
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7488 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7489 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7490 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7491 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7492 ;;Total ram usage:       26 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    1
  7495 ;; This function calls:
  7496 ;;		__Umul8_16
  7497 ;; This function is called by:
  7498 ;;		_UART_Recieve
  7499 ;;		_efgtoa
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           
  7504                           ;psect for function ___flmul
  7505  0DD4                     ___flmul:	
  7506                           
  7507                           ;incstack = 0
  7508                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  7509  0DD4  0140               	movlb	0	; select bank0
  7510  0DD5  0823               	movf	___flmul@b+3,w
  7511  0DD6  3980               	andlw	128
  7512  0DD7  00A8               	movwf	??___flmul
  7513  0DD8  0828               	movf	??___flmul,w
  7514  0DD9  00AD               	movwf	___flmul@sign
  7515  0DDA  3523               	lslf	___flmul@b+3,w
  7516  0DDB  00A8               	movwf	??___flmul
  7517  0DDC  0828               	movf	??___flmul,w
  7518  0DDD  00B3               	movwf	___flmul@bexp
  7519  0DDE  1BA2               	btfsc	___flmul@b+2,7
  7520  0DDF  1433               	bsf	___flmul@bexp,0
  7521  0DE0  0833               	movf	___flmul@bexp,w
  7522  0DE1  1903               	btfsc	3,2
  7523  0DE2  2DF0               	goto	i1l2936
  7524  0DE3  0A33               	incf	___flmul@bexp,w
  7525  0DE4  1D03               	btfss	3,2
  7526  0DE5  2DEE               	goto	i1l2934
  7527  0DE6  3000               	movlw	0
  7528  0DE7  00A3               	movwf	___flmul@b+3
  7529  0DE8  3000               	movlw	0
  7530  0DE9  00A2               	movwf	___flmul@b+2
  7531  0DEA  3000               	movlw	0
  7532  0DEB  00A1               	movwf	___flmul@b+1
  7533  0DEC  3000               	movlw	0
  7534  0DED  00A0               	movwf	___flmul@b
  7535  0DEE                     i1l2934:	
  7536  0DEE  17A2               	bsf	___flmul@b+2,7
  7537  0DEF  2DF8               	goto	i1l2938
  7538  0DF0                     i1l2936:	
  7539  0DF0  3000               	movlw	0
  7540  0DF1  00A3               	movwf	___flmul@b+3
  7541  0DF2  3000               	movlw	0
  7542  0DF3  00A2               	movwf	___flmul@b+2
  7543  0DF4  3000               	movlw	0
  7544  0DF5  00A1               	movwf	___flmul@b+1
  7545  0DF6  3000               	movlw	0
  7546  0DF7  00A0               	movwf	___flmul@b
  7547  0DF8                     i1l2938:	
  7548  0DF8  0827               	movf	___flmul@a+3,w
  7549  0DF9  3980               	andlw	128
  7550  0DFA  00A8               	movwf	??___flmul
  7551  0DFB  0828               	movf	??___flmul,w
  7552  0DFC  06AD               	xorwf	___flmul@sign,f
  7553  0DFD  3527               	lslf	___flmul@a+3,w
  7554  0DFE  00A8               	movwf	??___flmul
  7555  0DFF  0828               	movf	??___flmul,w
  7556  0E00  00B2               	movwf	___flmul@aexp
  7557  0E01  1BA6               	btfsc	___flmul@a+2,7
  7558  0E02  1432               	bsf	___flmul@aexp,0
  7559  0E03  0832               	movf	___flmul@aexp,w
  7560  0E04  1903               	btfsc	3,2
  7561  0E05  2E13               	goto	i1l2954
  7562  0E06  0A32               	incf	___flmul@aexp,w
  7563  0E07  1D03               	btfss	3,2
  7564  0E08  2E11               	goto	i1l2952
  7565  0E09  3000               	movlw	0
  7566  0E0A  00A7               	movwf	___flmul@a+3
  7567  0E0B  3000               	movlw	0
  7568  0E0C  00A6               	movwf	___flmul@a+2
  7569  0E0D  3000               	movlw	0
  7570  0E0E  00A5               	movwf	___flmul@a+1
  7571  0E0F  3000               	movlw	0
  7572  0E10  00A4               	movwf	___flmul@a
  7573  0E11                     i1l2952:	
  7574  0E11  17A6               	bsf	___flmul@a+2,7
  7575  0E12  2E1B               	goto	i1l2956
  7576  0E13                     i1l2954:	
  7577  0E13  3000               	movlw	0
  7578  0E14  00A7               	movwf	___flmul@a+3
  7579  0E15  3000               	movlw	0
  7580  0E16  00A6               	movwf	___flmul@a+2
  7581  0E17  3000               	movlw	0
  7582  0E18  00A5               	movwf	___flmul@a+1
  7583  0E19  3000               	movlw	0
  7584  0E1A  00A4               	movwf	___flmul@a
  7585  0E1B                     i1l2956:	
  7586  0E1B  0832               	movf	___flmul@aexp,w
  7587  0E1C  1D03               	btfss	3,2
  7588  0E1D  0833               	movf	___flmul@bexp,w
  7589  0E1E  1D03               	btfss	3,2
  7590  0E1F  2E29               	goto	i1l2964
  7591  0E20  3000               	movlw	0
  7592  0E21  00A3               	movwf	?___flmul+3
  7593  0E22  3000               	movlw	0
  7594  0E23  00A2               	movwf	?___flmul+2
  7595  0E24  3000               	movlw	0
  7596  0E25  00A1               	movwf	?___flmul+1
  7597  0E26  3000               	movlw	0
  7598  0E27  00A0               	movwf	?___flmul
  7599  0E28  0008               	return
  7600  0E29                     i1l2964:	
  7601  0E29  0820               	movf	___flmul@b,w
  7602  0E2A  00A8               	movwf	??___flmul
  7603  0E2B  0828               	movf	??___flmul,w
  7604  0E2C  00F0               	movwf	__Umul8_16@multiplicand
  7605  0E2D  0826               	movf	___flmul@a+2,w
  7606  0E2E  3193  2363  318D   	fcall	__Umul8_16
  7607  0E31  0871               	movf	?__Umul8_16+1,w
  7608  0E32  0140               	movlb	0	; select bank0
  7609  0E33  00B9               	movwf	___flmul@temp+1
  7610  0E34  0870               	movf	?__Umul8_16,w
  7611  0E35  00B8               	movwf	___flmul@temp
  7612  0E36  0838               	movf	___flmul@temp,w
  7613  0E37  00A8               	movwf	??___flmul
  7614  0E38  01A9               	clrf	??___flmul+1
  7615  0E39  01AA               	clrf	??___flmul+2
  7616  0E3A  01AB               	clrf	??___flmul+3
  7617  0E3B  082B               	movf	??___flmul+3,w
  7618  0E3C  00B1               	movwf	___flmul@grs+3
  7619  0E3D  082A               	movf	??___flmul+2,w
  7620  0E3E  00B0               	movwf	___flmul@grs+2
  7621  0E3F  0829               	movf	??___flmul+1,w
  7622  0E40  00AF               	movwf	___flmul@grs+1
  7623  0E41  0828               	movf	??___flmul,w
  7624  0E42  00AE               	movwf	___flmul@grs
  7625  0E43  0839               	movf	___flmul@temp+1,w
  7626  0E44  00A8               	movwf	??___flmul
  7627  0E45  01A9               	clrf	??___flmul+1
  7628  0E46  01AA               	clrf	??___flmul+2
  7629  0E47  01AB               	clrf	??___flmul+3
  7630  0E48  082B               	movf	??___flmul+3,w
  7631  0E49  00B7               	movwf	___flmul@prod+3
  7632  0E4A  082A               	movf	??___flmul+2,w
  7633  0E4B  00B6               	movwf	___flmul@prod+2
  7634  0E4C  0829               	movf	??___flmul+1,w
  7635  0E4D  00B5               	movwf	___flmul@prod+1
  7636  0E4E  0828               	movf	??___flmul,w
  7637  0E4F  00B4               	movwf	___flmul@prod
  7638  0E50  0821               	movf	___flmul@b+1,w
  7639  0E51  00A8               	movwf	??___flmul
  7640  0E52  0828               	movf	??___flmul,w
  7641  0E53  00F0               	movwf	__Umul8_16@multiplicand
  7642  0E54  0825               	movf	___flmul@a+1,w
  7643  0E55  3193  2363  318D   	fcall	__Umul8_16
  7644  0E58  0871               	movf	?__Umul8_16+1,w
  7645  0E59  0140               	movlb	0	; select bank0
  7646  0E5A  00B9               	movwf	___flmul@temp+1
  7647  0E5B  0870               	movf	?__Umul8_16,w
  7648  0E5C  00B8               	movwf	___flmul@temp
  7649  0E5D  0838               	movf	___flmul@temp,w
  7650  0E5E  00A8               	movwf	??___flmul
  7651  0E5F  01A9               	clrf	??___flmul+1
  7652  0E60  01AA               	clrf	??___flmul+2
  7653  0E61  01AB               	clrf	??___flmul+3
  7654  0E62  0828               	movf	??___flmul,w
  7655  0E63  07AE               	addwf	___flmul@grs,f
  7656  0E64  0829               	movf	??___flmul+1,w
  7657  0E65  3DAF               	addwfc	___flmul@grs+1,f
  7658  0E66  082A               	movf	??___flmul+2,w
  7659  0E67  3DB0               	addwfc	___flmul@grs+2,f
  7660  0E68  082B               	movf	??___flmul+3,w
  7661  0E69  3DB1               	addwfc	___flmul@grs+3,f
  7662  0E6A  0839               	movf	___flmul@temp+1,w
  7663  0E6B  00A8               	movwf	??___flmul
  7664  0E6C  01A9               	clrf	??___flmul+1
  7665  0E6D  01AA               	clrf	??___flmul+2
  7666  0E6E  01AB               	clrf	??___flmul+3
  7667  0E6F  0828               	movf	??___flmul,w
  7668  0E70  07B4               	addwf	___flmul@prod,f
  7669  0E71  0829               	movf	??___flmul+1,w
  7670  0E72  3DB5               	addwfc	___flmul@prod+1,f
  7671  0E73  082A               	movf	??___flmul+2,w
  7672  0E74  3DB6               	addwfc	___flmul@prod+2,f
  7673  0E75  082B               	movf	??___flmul+3,w
  7674  0E76  3DB7               	addwfc	___flmul@prod+3,f
  7675  0E77  0822               	movf	___flmul@b+2,w
  7676  0E78  00A8               	movwf	??___flmul
  7677  0E79  0828               	movf	??___flmul,w
  7678  0E7A  00F0               	movwf	__Umul8_16@multiplicand
  7679  0E7B  0824               	movf	___flmul@a,w
  7680  0E7C  3193  2363  318D   	fcall	__Umul8_16
  7681  0E7F  0871               	movf	?__Umul8_16+1,w
  7682  0E80  0140               	movlb	0	; select bank0
  7683  0E81  00B9               	movwf	___flmul@temp+1
  7684  0E82  0870               	movf	?__Umul8_16,w
  7685  0E83  00B8               	movwf	___flmul@temp
  7686  0E84  0838               	movf	___flmul@temp,w
  7687  0E85  00A8               	movwf	??___flmul
  7688  0E86  01A9               	clrf	??___flmul+1
  7689  0E87  01AA               	clrf	??___flmul+2
  7690  0E88  01AB               	clrf	??___flmul+3
  7691  0E89  0828               	movf	??___flmul,w
  7692  0E8A  07AE               	addwf	___flmul@grs,f
  7693  0E8B  0829               	movf	??___flmul+1,w
  7694  0E8C  3DAF               	addwfc	___flmul@grs+1,f
  7695  0E8D  082A               	movf	??___flmul+2,w
  7696  0E8E  3DB0               	addwfc	___flmul@grs+2,f
  7697  0E8F  082B               	movf	??___flmul+3,w
  7698  0E90  3DB1               	addwfc	___flmul@grs+3,f
  7699  0E91  0839               	movf	___flmul@temp+1,w
  7700  0E92  00A8               	movwf	??___flmul
  7701  0E93  01A9               	clrf	??___flmul+1
  7702  0E94  01AA               	clrf	??___flmul+2
  7703  0E95  01AB               	clrf	??___flmul+3
  7704  0E96  0828               	movf	??___flmul,w
  7705  0E97  07B4               	addwf	___flmul@prod,f
  7706  0E98  0829               	movf	??___flmul+1,w
  7707  0E99  3DB5               	addwfc	___flmul@prod+1,f
  7708  0E9A  082A               	movf	??___flmul+2,w
  7709  0E9B  3DB6               	addwfc	___flmul@prod+2,f
  7710  0E9C  082B               	movf	??___flmul+3,w
  7711  0E9D  3DB7               	addwfc	___flmul@prod+3,f
  7712  0E9E  3008               	movlw	8
  7713  0E9F                     u436_25:	
  7714  0E9F  35AE               	lslf	___flmul@grs,f
  7715  0EA0  0DAF               	rlf	___flmul@grs+1,f
  7716  0EA1  0DB0               	rlf	___flmul@grs+2,f
  7717  0EA2  0DB1               	rlf	___flmul@grs+3,f
  7718  0EA3  0B89               	decfsz	9,f
  7719  0EA4  2E9F               	goto	u436_25
  7720  0EA5  0821               	movf	___flmul@b+1,w
  7721  0EA6  00A8               	movwf	??___flmul
  7722  0EA7  0828               	movf	??___flmul,w
  7723  0EA8  00F0               	movwf	__Umul8_16@multiplicand
  7724  0EA9  0824               	movf	___flmul@a,w
  7725  0EAA  3193  2363  318D   	fcall	__Umul8_16
  7726  0EAD  0871               	movf	?__Umul8_16+1,w
  7727  0EAE  0140               	movlb	0	; select bank0
  7728  0EAF  00B9               	movwf	___flmul@temp+1
  7729  0EB0  0870               	movf	?__Umul8_16,w
  7730  0EB1  00B8               	movwf	___flmul@temp
  7731  0EB2  0838               	movf	___flmul@temp,w
  7732  0EB3  07AE               	addwf	___flmul@grs,f
  7733  0EB4  0839               	movf	___flmul@temp+1,w
  7734  0EB5  3DAF               	addwfc	___flmul@grs+1,f
  7735  0EB6  3000               	movlw	0
  7736  0EB7  3DB0               	addwfc	___flmul@grs+2,f
  7737  0EB8  3DB1               	addwfc	___flmul@grs+3,f
  7738  0EB9  0820               	movf	___flmul@b,w
  7739  0EBA  00A8               	movwf	??___flmul
  7740  0EBB  0828               	movf	??___flmul,w
  7741  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  7742  0EBD  0825               	movf	___flmul@a+1,w
  7743  0EBE  3193  2363  318D   	fcall	__Umul8_16
  7744  0EC1  0871               	movf	?__Umul8_16+1,w
  7745  0EC2  0140               	movlb	0	; select bank0
  7746  0EC3  00B9               	movwf	___flmul@temp+1
  7747  0EC4  0870               	movf	?__Umul8_16,w
  7748  0EC5  00B8               	movwf	___flmul@temp
  7749  0EC6  0838               	movf	___flmul@temp,w
  7750  0EC7  07AE               	addwf	___flmul@grs,f
  7751  0EC8  0839               	movf	___flmul@temp+1,w
  7752  0EC9  3DAF               	addwfc	___flmul@grs+1,f
  7753  0ECA  3000               	movlw	0
  7754  0ECB  3DB0               	addwfc	___flmul@grs+2,f
  7755  0ECC  3DB1               	addwfc	___flmul@grs+3,f
  7756  0ECD  3008               	movlw	8
  7757  0ECE                     u437_25:	
  7758  0ECE  35AE               	lslf	___flmul@grs,f
  7759  0ECF  0DAF               	rlf	___flmul@grs+1,f
  7760  0ED0  0DB0               	rlf	___flmul@grs+2,f
  7761  0ED1  0DB1               	rlf	___flmul@grs+3,f
  7762  0ED2  0B89               	decfsz	9,f
  7763  0ED3  2ECE               	goto	u437_25
  7764  0ED4  0820               	movf	___flmul@b,w
  7765  0ED5  00A8               	movwf	??___flmul
  7766  0ED6  0828               	movf	??___flmul,w
  7767  0ED7  00F0               	movwf	__Umul8_16@multiplicand
  7768  0ED8  0824               	movf	___flmul@a,w
  7769  0ED9  3193  2363  318D   	fcall	__Umul8_16
  7770  0EDC  0871               	movf	?__Umul8_16+1,w
  7771  0EDD  0140               	movlb	0	; select bank0
  7772  0EDE  00B9               	movwf	___flmul@temp+1
  7773  0EDF  0870               	movf	?__Umul8_16,w
  7774  0EE0  00B8               	movwf	___flmul@temp
  7775  0EE1  0838               	movf	___flmul@temp,w
  7776  0EE2  07AE               	addwf	___flmul@grs,f
  7777  0EE3  0839               	movf	___flmul@temp+1,w
  7778  0EE4  3DAF               	addwfc	___flmul@grs+1,f
  7779  0EE5  3000               	movlw	0
  7780  0EE6  3DB0               	addwfc	___flmul@grs+2,f
  7781  0EE7  3DB1               	addwfc	___flmul@grs+3,f
  7782  0EE8  0821               	movf	___flmul@b+1,w
  7783  0EE9  00A8               	movwf	??___flmul
  7784  0EEA  0828               	movf	??___flmul,w
  7785  0EEB  00F0               	movwf	__Umul8_16@multiplicand
  7786  0EEC  0826               	movf	___flmul@a+2,w
  7787  0EED  3193  2363  318D   	fcall	__Umul8_16
  7788  0EF0  0871               	movf	?__Umul8_16+1,w
  7789  0EF1  0140               	movlb	0	; select bank0
  7790  0EF2  00B9               	movwf	___flmul@temp+1
  7791  0EF3  0870               	movf	?__Umul8_16,w
  7792  0EF4  00B8               	movwf	___flmul@temp
  7793  0EF5  0838               	movf	___flmul@temp,w
  7794  0EF6  07B4               	addwf	___flmul@prod,f
  7795  0EF7  0839               	movf	___flmul@temp+1,w
  7796  0EF8  3DB5               	addwfc	___flmul@prod+1,f
  7797  0EF9  3000               	movlw	0
  7798  0EFA  3DB6               	addwfc	___flmul@prod+2,f
  7799  0EFB  3DB7               	addwfc	___flmul@prod+3,f
  7800  0EFC  0822               	movf	___flmul@b+2,w
  7801  0EFD  00A8               	movwf	??___flmul
  7802  0EFE  0828               	movf	??___flmul,w
  7803  0EFF  00F0               	movwf	__Umul8_16@multiplicand
  7804  0F00  0825               	movf	___flmul@a+1,w
  7805  0F01  3193  2363  318D   	fcall	__Umul8_16
  7806  0F04  0871               	movf	?__Umul8_16+1,w
  7807  0F05  0140               	movlb	0	; select bank0
  7808  0F06  00B9               	movwf	___flmul@temp+1
  7809  0F07  0870               	movf	?__Umul8_16,w
  7810  0F08  00B8               	movwf	___flmul@temp
  7811  0F09  0838               	movf	___flmul@temp,w
  7812  0F0A  07B4               	addwf	___flmul@prod,f
  7813  0F0B  0839               	movf	___flmul@temp+1,w
  7814  0F0C  3DB5               	addwfc	___flmul@prod+1,f
  7815  0F0D  3000               	movlw	0
  7816  0F0E  3DB6               	addwfc	___flmul@prod+2,f
  7817  0F0F  3DB7               	addwfc	___flmul@prod+3,f
  7818  0F10  0822               	movf	___flmul@b+2,w
  7819  0F11  00A8               	movwf	??___flmul
  7820  0F12  0828               	movf	??___flmul,w
  7821  0F13  00F0               	movwf	__Umul8_16@multiplicand
  7822  0F14  0826               	movf	___flmul@a+2,w
  7823  0F15  3193  2363  318D   	fcall	__Umul8_16
  7824  0F18  0871               	movf	?__Umul8_16+1,w
  7825  0F19  0140               	movlb	0	; select bank0
  7826  0F1A  00B9               	movwf	___flmul@temp+1
  7827  0F1B  0870               	movf	?__Umul8_16,w
  7828  0F1C  00B8               	movwf	___flmul@temp
  7829  0F1D  0838               	movf	___flmul@temp,w
  7830  0F1E  00A8               	movwf	??___flmul
  7831  0F1F  0839               	movf	___flmul@temp+1,w
  7832  0F20  00A9               	movwf	??___flmul+1
  7833  0F21  01AA               	clrf	??___flmul+2
  7834  0F22  01AB               	clrf	??___flmul+3
  7835  0F23  3008               	movlw	8
  7836  0F24                     u438_25:	
  7837  0F24  35A8               	lslf	??___flmul,f
  7838  0F25  0DA9               	rlf	??___flmul+1,f
  7839  0F26  0DAA               	rlf	??___flmul+2,f
  7840  0F27  0DAB               	rlf	??___flmul+3,f
  7841  0F28  0B89               	decfsz	9,f
  7842  0F29  2F24               	goto	u438_25
  7843  0F2A  0828               	movf	??___flmul,w
  7844  0F2B  07B4               	addwf	___flmul@prod,f
  7845  0F2C  0829               	movf	??___flmul+1,w
  7846  0F2D  3DB5               	addwfc	___flmul@prod+1,f
  7847  0F2E  082A               	movf	??___flmul+2,w
  7848  0F2F  3DB6               	addwfc	___flmul@prod+2,f
  7849  0F30  082B               	movf	??___flmul+3,w
  7850  0F31  3DB7               	addwfc	___flmul@prod+3,f
  7851  0F32  082E               	movf	___flmul@grs,w
  7852  0F33  00A8               	movwf	??___flmul
  7853  0F34  082F               	movf	___flmul@grs+1,w
  7854  0F35  00A9               	movwf	??___flmul+1
  7855  0F36  0830               	movf	___flmul@grs+2,w
  7856  0F37  00AA               	movwf	??___flmul+2
  7857  0F38  0831               	movf	___flmul@grs+3,w
  7858  0F39  00AB               	movwf	??___flmul+3
  7859  0F3A  3018               	movlw	24
  7860  0F3B                     u439_25:	
  7861  0F3B  36AB               	lsrf	??___flmul+3,f
  7862  0F3C  0CAA               	rrf	??___flmul+2,f
  7863  0F3D  0CA9               	rrf	??___flmul+1,f
  7864  0F3E  0CA8               	rrf	??___flmul,f
  7865  0F3F  0B89               	decfsz	9,f
  7866  0F40  2F3B               	goto	u439_25
  7867  0F41  0828               	movf	??___flmul,w
  7868  0F42  07B4               	addwf	___flmul@prod,f
  7869  0F43  0829               	movf	??___flmul+1,w
  7870  0F44  3DB5               	addwfc	___flmul@prod+1,f
  7871  0F45  082A               	movf	??___flmul+2,w
  7872  0F46  3DB6               	addwfc	___flmul@prod+2,f
  7873  0F47  082B               	movf	??___flmul+3,w
  7874  0F48  3DB7               	addwfc	___flmul@prod+3,f
  7875  0F49  3008               	movlw	8
  7876  0F4A                     u440_25:	
  7877  0F4A  35AE               	lslf	___flmul@grs,f
  7878  0F4B  0DAF               	rlf	___flmul@grs+1,f
  7879  0F4C  0DB0               	rlf	___flmul@grs+2,f
  7880  0F4D  0DB1               	rlf	___flmul@grs+3,f
  7881  0F4E  0B89               	decfsz	9,f
  7882  0F4F  2F4A               	goto	u440_25
  7883  0F50  0833               	movf	___flmul@bexp,w
  7884  0F51  0732               	addwf	___flmul@aexp,w
  7885  0F52  00A8               	movwf	??___flmul
  7886  0F53  01A9               	clrf	??___flmul+1
  7887  0F54  0DA9               	rlf	??___flmul+1,f
  7888  0F55  0828               	movf	??___flmul,w
  7889  0F56  3E82               	addlw	130
  7890  0F57  00B8               	movwf	___flmul@temp
  7891  0F58  30FF               	movlw	255
  7892  0F59  3D29               	addwfc	??___flmul+1,w
  7893  0F5A  00B9               	movwf	___flmul@temp+1
  7894  0F5B                     i1l3016:	
  7895  0F5B  1BB6               	btfsc	___flmul@prod+2,7
  7896  0F5C  2F72               	goto	i1l3018
  7897  0F5D  3001               	movlw	1
  7898  0F5E                     u441_25:	
  7899  0F5E  35B4               	lslf	___flmul@prod,f
  7900  0F5F  0DB5               	rlf	___flmul@prod+1,f
  7901  0F60  0DB6               	rlf	___flmul@prod+2,f
  7902  0F61  0DB7               	rlf	___flmul@prod+3,f
  7903  0F62  0B89               	decfsz	9,f
  7904  0F63  2F5E               	goto	u441_25
  7905  0F64  1BB1               	btfsc	___flmul@grs+3,7
  7906  0F65  1434               	bsf	___flmul@prod,0
  7907  0F66  3001               	movlw	1
  7908  0F67                     u443_25:	
  7909  0F67  35AE               	lslf	___flmul@grs,f
  7910  0F68  0DAF               	rlf	___flmul@grs+1,f
  7911  0F69  0DB0               	rlf	___flmul@grs+2,f
  7912  0F6A  0DB1               	rlf	___flmul@grs+3,f
  7913  0F6B  0B89               	decfsz	9,f
  7914  0F6C  2F67               	goto	u443_25
  7915  0F6D  30FF               	movlw	255
  7916  0F6E  07B8               	addwf	___flmul@temp,f
  7917  0F6F  30FF               	movlw	255
  7918  0F70  3DB9               	addwfc	___flmul@temp+1,f
  7919  0F71  2F5B               	goto	i1l3016
  7920  0F72                     i1l3018:	
  7921  0F72  01B2               	clrf	___flmul@aexp
  7922  0F73  1FB1               	btfss	___flmul@grs+3,7
  7923  0F74  2F8B               	goto	i1l3028
  7924  0F75  30FF               	movlw	255
  7925  0F76  052E               	andwf	___flmul@grs,w
  7926  0F77  00A8               	movwf	??___flmul
  7927  0F78  30FF               	movlw	255
  7928  0F79  052F               	andwf	___flmul@grs+1,w
  7929  0F7A  00A9               	movwf	??___flmul+1
  7930  0F7B  30FF               	movlw	255
  7931  0F7C  0530               	andwf	___flmul@grs+2,w
  7932  0F7D  00AA               	movwf	??___flmul+2
  7933  0F7E  307F               	movlw	127
  7934  0F7F  0531               	andwf	___flmul@grs+3,w
  7935  0F80  00AB               	movwf	??___flmul+3
  7936  0F81  082B               	movf	??___flmul+3,w
  7937  0F82  042A               	iorwf	??___flmul+2,w
  7938  0F83  0429               	iorwf	??___flmul+1,w
  7939  0F84  0428               	iorwf	??___flmul,w
  7940  0F85  1903               	skipnz
  7941  0F86  1834               	btfsc	___flmul@prod,0
  7942  0F87  2F89               	goto	i1l3024
  7943  0F88  2F8B               	goto	i1l3028
  7944  0F89                     i1l3024:	
  7945  0F89  01B2               	clrf	___flmul@aexp
  7946  0F8A  0AB2               	incf	___flmul@aexp,f
  7947  0F8B                     i1l3028:	
  7948  0F8B  0832               	movf	___flmul@aexp,w
  7949  0F8C  1903               	btfsc	3,2
  7950  0F8D  2FB4               	goto	i1l3038
  7951  0F8E  3001               	movlw	1
  7952  0F8F  07B4               	addwf	___flmul@prod,f
  7953  0F90  3000               	movlw	0
  7954  0F91  3DB5               	addwfc	___flmul@prod+1,f
  7955  0F92  3000               	movlw	0
  7956  0F93  3DB6               	addwfc	___flmul@prod+2,f
  7957  0F94  3000               	movlw	0
  7958  0F95  3DB7               	addwfc	___flmul@prod+3,f
  7959  0F96  1C37               	btfss	___flmul@prod+3,0
  7960  0F97  2FB4               	goto	i1l3038
  7961  0F98  0834               	movf	___flmul@prod,w
  7962  0F99  00A8               	movwf	??___flmul
  7963  0F9A  0835               	movf	___flmul@prod+1,w
  7964  0F9B  00A9               	movwf	??___flmul+1
  7965  0F9C  0836               	movf	___flmul@prod+2,w
  7966  0F9D  00AA               	movwf	??___flmul+2
  7967  0F9E  0837               	movf	___flmul@prod+3,w
  7968  0F9F  00AB               	movwf	??___flmul+3
  7969  0FA0  3001               	movlw	1
  7970  0FA1  00AC               	movwf	??___flmul+4
  7971  0FA2                     u450_25:	
  7972  0FA2  37AB               	asrf	??___flmul+3,f
  7973  0FA3  0CAA               	rrf	??___flmul+2,f
  7974  0FA4  0CA9               	rrf	??___flmul+1,f
  7975  0FA5  0CA8               	rrf	??___flmul,f
  7976  0FA6  0BAC               	decfsz	??___flmul+4,f
  7977  0FA7  2FA2               	goto	u450_25
  7978  0FA8  082B               	movf	??___flmul+3,w
  7979  0FA9  00B7               	movwf	___flmul@prod+3
  7980  0FAA  082A               	movf	??___flmul+2,w
  7981  0FAB  00B6               	movwf	___flmul@prod+2
  7982  0FAC  0829               	movf	??___flmul+1,w
  7983  0FAD  00B5               	movwf	___flmul@prod+1
  7984  0FAE  0828               	movf	??___flmul,w
  7985  0FAF  00B4               	movwf	___flmul@prod
  7986  0FB0  3001               	movlw	1
  7987  0FB1  07B8               	addwf	___flmul@temp,f
  7988  0FB2  3000               	movlw	0
  7989  0FB3  3DB9               	addwfc	___flmul@temp+1,f
  7990  0FB4                     i1l3038:	
  7991  0FB4  0839               	movf	___flmul@temp+1,w
  7992  0FB5  3A80               	xorlw	128
  7993  0FB6  00A8               	movwf	??___flmul
  7994  0FB7  3080               	movlw	128
  7995  0FB8  0228               	subwf	??___flmul,w
  7996  0FB9  1D03               	skipz
  7997  0FBA  2FBD               	goto	u451_25
  7998  0FBB  30FF               	movlw	255
  7999  0FBC  0238               	subwf	___flmul@temp,w
  8000  0FBD                     u451_25:	
  8001  0FBD  1C03               	skipc
  8002  0FBE  2FC9               	goto	i1l3042
  8003  0FBF  307F               	movlw	127
  8004  0FC0  0140               	movlb	0	; select bank0
  8005  0FC1  00B7               	movwf	___flmul@prod+3
  8006  0FC2  3080               	movlw	128
  8007  0FC3  00B6               	movwf	___flmul@prod+2
  8008  0FC4  3000               	movlw	0
  8009  0FC5  00B5               	movwf	___flmul@prod+1
  8010  0FC6  3000               	movlw	0
  8011  0FC7  00B4               	movwf	___flmul@prod
  8012  0FC8  2FF3               	goto	i1l752
  8013  0FC9                     i1l3042:	
  8014  0FC9  0140               	movlb	0	; select bank0
  8015  0FCA  0839               	movf	___flmul@temp+1,w
  8016  0FCB  3A80               	xorlw	128
  8017  0FCC  00A8               	movwf	??___flmul
  8018  0FCD  3080               	movlw	128
  8019  0FCE  0228               	subwf	??___flmul,w
  8020  0FCF  1D03               	skipz
  8021  0FD0  2FD3               	goto	u452_25
  8022  0FD1  3001               	movlw	1
  8023  0FD2  0238               	subwf	___flmul@temp,w
  8024  0FD3                     u452_25:	
  8025  0FD3  1803               	skipnc
  8026  0FD4  2FE0               	goto	i1l3048
  8027  0FD5  3000               	movlw	0
  8028  0FD6  0140               	movlb	0	; select bank0
  8029  0FD7  00B7               	movwf	___flmul@prod+3
  8030  0FD8  3000               	movlw	0
  8031  0FD9  00B6               	movwf	___flmul@prod+2
  8032  0FDA  3000               	movlw	0
  8033  0FDB  00B5               	movwf	___flmul@prod+1
  8034  0FDC  3000               	movlw	0
  8035  0FDD  00B4               	movwf	___flmul@prod
  8036  0FDE  01AD               	clrf	___flmul@sign
  8037  0FDF  2FF3               	goto	i1l752
  8038  0FE0                     i1l3048:	
  8039  0FE0  0140               	movlb	0	; select bank0
  8040  0FE1  0838               	movf	___flmul@temp,w
  8041  0FE2  00A8               	movwf	??___flmul
  8042  0FE3  0828               	movf	??___flmul,w
  8043  0FE4  00B3               	movwf	___flmul@bexp
  8044  0FE5  30FF               	movlw	255
  8045  0FE6  05B4               	andwf	___flmul@prod,f
  8046  0FE7  30FF               	movlw	255
  8047  0FE8  05B5               	andwf	___flmul@prod+1,f
  8048  0FE9  307F               	movlw	127
  8049  0FEA  05B6               	andwf	___flmul@prod+2,f
  8050  0FEB  3000               	movlw	0
  8051  0FEC  05B7               	andwf	___flmul@prod+3,f
  8052  0FED  1833               	btfsc	___flmul@bexp,0
  8053  0FEE  17B6               	bsf	___flmul@prod+2,7
  8054  0FEF  3633               	lsrf	___flmul@bexp,w
  8055  0FF0  00A8               	movwf	??___flmul
  8056  0FF1  0828               	movf	??___flmul,w
  8057  0FF2  00B7               	movwf	___flmul@prod+3
  8058  0FF3                     i1l752:	
  8059  0FF3  082D               	movf	___flmul@sign,w
  8060  0FF4  00A8               	movwf	??___flmul
  8061  0FF5  0828               	movf	??___flmul,w
  8062  0FF6  04B7               	iorwf	___flmul@prod+3,f
  8063  0FF7  0837               	movf	___flmul@prod+3,w
  8064  0FF8  00A3               	movwf	?___flmul+3
  8065  0FF9  0836               	movf	___flmul@prod+2,w
  8066  0FFA  00A2               	movwf	?___flmul+2
  8067  0FFB  0835               	movf	___flmul@prod+1,w
  8068  0FFC  00A1               	movwf	?___flmul+1
  8069  0FFD  0834               	movf	___flmul@prod,w
  8070  0FFE  00A0               	movwf	?___flmul
  8071  0FFF  0008               	return
  8072  1000                     __end_of___flmul:	
  8073                           
  8074                           	psect	text25
  8075  1363                     __ptext25:	
  8076 ;; *************** function __Umul8_16 *****************
  8077 ;; Defined at:
  8078 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  multiplier      1    wreg     unsigned char 
  8081 ;;  multiplicand    1    0[COMMON] unsigned char 
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;  multiplier      1    8[COMMON] unsigned char 
  8084 ;;  word_mpld       2    6[COMMON] unsigned int 
  8085 ;;  product         2    4[COMMON] unsigned int 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  2    0[COMMON] unsigned int 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2, status,0
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;Total ram usage:        9 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		___flmul
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           
  8109                           ;psect for function __Umul8_16
  8110  1363                     __Umul8_16:	
  8111                           
  8112                           ;incstack = 0
  8113                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8114                           ;__Umul8_16@multiplier stored from wreg
  8115  1363  00F8               	movwf	__Umul8_16@multiplier
  8116  1364  01F4               	clrf	__Umul8_16@product
  8117  1365  01F5               	clrf	__Umul8_16@product+1
  8118  1366  0870               	movf	__Umul8_16@multiplicand,w
  8119  1367  00F2               	movwf	??__Umul8_16
  8120  1368  01F3               	clrf	??__Umul8_16+1
  8121  1369  0872               	movf	??__Umul8_16,w
  8122  136A  00F6               	movwf	__Umul8_16@word_mpld
  8123  136B  0873               	movf	??__Umul8_16+1,w
  8124  136C  00F7               	movwf	__Umul8_16@word_mpld+1
  8125  136D                     i1l2518:	
  8126  136D  1C78               	btfss	__Umul8_16@multiplier,0
  8127  136E  2B73               	goto	i1l888
  8128  136F  0876               	movf	__Umul8_16@word_mpld,w
  8129  1370  07F4               	addwf	__Umul8_16@product,f
  8130  1371  0877               	movf	__Umul8_16@word_mpld+1,w
  8131  1372  3DF5               	addwfc	__Umul8_16@product+1,f
  8132  1373                     i1l888:	
  8133  1373  3001               	movlw	1
  8134  1374                     u332_25:	
  8135  1374  35F6               	lslf	__Umul8_16@word_mpld,f
  8136  1375  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8137  1376  0B89               	decfsz	9,f
  8138  1377  2B74               	goto	u332_25
  8139  1378  1003               	clrc
  8140  1379  0CF8               	rrf	__Umul8_16@multiplier,f
  8141  137A  0878               	movf	__Umul8_16@multiplier,w
  8142  137B  1D03               	btfss	3,2
  8143  137C  2B6D               	goto	i1l2518
  8144  137D  0875               	movf	__Umul8_16@product+1,w
  8145  137E  00F1               	movwf	?__Umul8_16+1
  8146  137F  0874               	movf	__Umul8_16@product,w
  8147  1380  00F0               	movwf	?__Umul8_16
  8148  1381  0008               	return
  8149  1382                     __end_of__Umul8_16:	
  8150                           
  8151                           	psect	text26
  8152  0783                     __ptext26:	
  8153 ;; *************** function ___flge *****************
  8154 ;; Defined at:
  8155 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;  ff1             4   26[BANK0 ] unsigned int 
  8158 ;;  ff2             4   30[BANK0 ] unsigned int 
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;		None
  8161 ;; Return value:  Size  Location     Type
  8162 ;;		None               void
  8163 ;; Registers used:
  8164 ;;		wreg, status,2, status,0
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/0
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8170 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8172 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8173 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8174 ;;Total ram usage:       12 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; This function calls:
  8177 ;;		Nothing
  8178 ;; This function is called by:
  8179 ;;		_efgtoa
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           
  8184                           ;psect for function ___flge
  8185  0783                     ___flge:	
  8186                           
  8187                           ;incstack = 0
  8188                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8189  0783  3000               	movlw	0
  8190  0784  0140               	movlb	0	; select bank0
  8191  0785  053A               	andwf	___flge@ff1,w
  8192  0786  00C2               	movwf	??___flge
  8193  0787  3000               	movlw	0
  8194  0788  053B               	andwf	___flge@ff1+1,w
  8195  0789  00C3               	movwf	??___flge+1
  8196  078A  3080               	movlw	128
  8197  078B  053C               	andwf	___flge@ff1+2,w
  8198  078C  00C4               	movwf	??___flge+2
  8199  078D  307F               	movlw	127
  8200  078E  053D               	andwf	___flge@ff1+3,w
  8201  078F  00C5               	movwf	??___flge+3
  8202  0790  0845               	movf	??___flge+3,w
  8203  0791  0444               	iorwf	??___flge+2,w
  8204  0792  0443               	iorwf	??___flge+1,w
  8205  0793  0442               	iorwf	??___flge,w
  8206  0794  1D03               	skipz
  8207  0795  2F9E               	goto	i1l521
  8208  0796  3000               	movlw	0
  8209  0797  00BD               	movwf	___flge@ff1+3
  8210  0798  3000               	movlw	0
  8211  0799  00BC               	movwf	___flge@ff1+2
  8212  079A  3000               	movlw	0
  8213  079B  00BB               	movwf	___flge@ff1+1
  8214  079C  3000               	movlw	0
  8215  079D  00BA               	movwf	___flge@ff1
  8216  079E                     i1l521:	
  8217  079E  3000               	movlw	0
  8218  079F  053E               	andwf	___flge@ff2,w
  8219  07A0  00C2               	movwf	??___flge
  8220  07A1  3000               	movlw	0
  8221  07A2  053F               	andwf	___flge@ff2+1,w
  8222  07A3  00C3               	movwf	??___flge+1
  8223  07A4  3080               	movlw	128
  8224  07A5  0540               	andwf	___flge@ff2+2,w
  8225  07A6  00C4               	movwf	??___flge+2
  8226  07A7  307F               	movlw	127
  8227  07A8  0541               	andwf	___flge@ff2+3,w
  8228  07A9  00C5               	movwf	??___flge+3
  8229  07AA  0845               	movf	??___flge+3,w
  8230  07AB  0444               	iorwf	??___flge+2,w
  8231  07AC  0443               	iorwf	??___flge+1,w
  8232  07AD  0442               	iorwf	??___flge,w
  8233  07AE  1D03               	skipz
  8234  07AF  2FB8               	goto	i1l2716
  8235  07B0  3000               	movlw	0
  8236  07B1  00C1               	movwf	___flge@ff2+3
  8237  07B2  3000               	movlw	0
  8238  07B3  00C0               	movwf	___flge@ff2+2
  8239  07B4  3000               	movlw	0
  8240  07B5  00BF               	movwf	___flge@ff2+1
  8241  07B6  3000               	movlw	0
  8242  07B7  00BE               	movwf	___flge@ff2
  8243  07B8                     i1l2716:	
  8244  07B8  1FBD               	btfss	___flge@ff1+3,7
  8245  07B9  2FD2               	goto	i1l2720
  8246  07BA  3000               	movlw	0
  8247  07BB  00C2               	movwf	??___flge
  8248  07BC  3000               	movlw	0
  8249  07BD  00C3               	movwf	??___flge+1
  8250  07BE  3000               	movlw	0
  8251  07BF  00C4               	movwf	??___flge+2
  8252  07C0  3080               	movlw	128
  8253  07C1  00C5               	movwf	??___flge+3
  8254  07C2  083A               	movf	___flge@ff1,w
  8255  07C3  02C2               	subwf	??___flge,f
  8256  07C4  083B               	movf	___flge@ff1+1,w
  8257  07C5  3BC3               	subwfb	??___flge+1,f
  8258  07C6  083C               	movf	___flge@ff1+2,w
  8259  07C7  3BC4               	subwfb	??___flge+2,f
  8260  07C8  083D               	movf	___flge@ff1+3,w
  8261  07C9  3BC5               	subwfb	??___flge+3,f
  8262  07CA  0845               	movf	??___flge+3,w
  8263  07CB  00BD               	movwf	___flge@ff1+3
  8264  07CC  0844               	movf	??___flge+2,w
  8265  07CD  00BC               	movwf	___flge@ff1+2
  8266  07CE  0843               	movf	??___flge+1,w
  8267  07CF  00BB               	movwf	___flge@ff1+1
  8268  07D0  0842               	movf	??___flge,w
  8269  07D1  00BA               	movwf	___flge@ff1
  8270  07D2                     i1l2720:	
  8271  07D2  1FC1               	btfss	___flge@ff2+3,7
  8272  07D3  2FEC               	goto	i1l524
  8273  07D4  3000               	movlw	0
  8274  07D5  00C2               	movwf	??___flge
  8275  07D6  3000               	movlw	0
  8276  07D7  00C3               	movwf	??___flge+1
  8277  07D8  3000               	movlw	0
  8278  07D9  00C4               	movwf	??___flge+2
  8279  07DA  3080               	movlw	128
  8280  07DB  00C5               	movwf	??___flge+3
  8281  07DC  083E               	movf	___flge@ff2,w
  8282  07DD  02C2               	subwf	??___flge,f
  8283  07DE  083F               	movf	___flge@ff2+1,w
  8284  07DF  3BC3               	subwfb	??___flge+1,f
  8285  07E0  0840               	movf	___flge@ff2+2,w
  8286  07E1  3BC4               	subwfb	??___flge+2,f
  8287  07E2  0841               	movf	___flge@ff2+3,w
  8288  07E3  3BC5               	subwfb	??___flge+3,f
  8289  07E4  0845               	movf	??___flge+3,w
  8290  07E5  00C1               	movwf	___flge@ff2+3
  8291  07E6  0844               	movf	??___flge+2,w
  8292  07E7  00C0               	movwf	___flge@ff2+2
  8293  07E8  0843               	movf	??___flge+1,w
  8294  07E9  00BF               	movwf	___flge@ff2+1
  8295  07EA  0842               	movf	??___flge,w
  8296  07EB  00BE               	movwf	___flge@ff2
  8297  07EC                     i1l524:	
  8298  07EC  3080               	movlw	128
  8299  07ED  06BD               	xorwf	___flge@ff1+3,f
  8300  07EE  3080               	movlw	128
  8301  07EF  06C1               	xorwf	___flge@ff2+3,f
  8302  07F0  0841               	movf	___flge@ff2+3,w
  8303  07F1  023D               	subwf	___flge@ff1+3,w
  8304  07F2  1D03               	skipz
  8305  07F3  0008               	return
  8306  07F4  0840               	movf	___flge@ff2+2,w
  8307  07F5  023C               	subwf	___flge@ff1+2,w
  8308  07F6  1D03               	skipz
  8309  07F7  0008               	return
  8310  07F8  083F               	movf	___flge@ff2+1,w
  8311  07F9  023B               	subwf	___flge@ff1+1,w
  8312  07FA  1D03               	skipz
  8313  07FB  0008               	return
  8314  07FC  083E               	movf	___flge@ff2,w
  8315  07FD  023A               	subwf	___flge@ff1,w
  8316  07FE  0008               	return
  8317  07FF                     __end_of___flge:	
  8318                           
  8319                           	psect	text27
  8320  147B                     __ptext27:	
  8321 ;; *************** function ___fleq *****************
  8322 ;; Defined at:
  8323 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  ff1             4    0[COMMON] unsigned int 
  8326 ;;  ff2             4    4[COMMON] unsigned int 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;		None
  8329 ;; Return value:  Size  Location     Type
  8330 ;;		None               void
  8331 ;; Registers used:
  8332 ;;		wreg, status,2, status,0
  8333 ;; Tracked objects:
  8334 ;;		On entry : 0/0
  8335 ;;		On exit  : 0/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8338 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8341 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8342 ;;Total ram usage:       12 bytes
  8343 ;; Hardware stack levels used:    1
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_efgtoa
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           
  8352                           ;psect for function ___fleq
  8353  147B                     ___fleq:	
  8354                           
  8355                           ;incstack = 0
  8356                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8357  147B  3000               	movlw	0
  8358  147C  0570               	andwf	___fleq@ff1,w
  8359  147D  00F8               	movwf	??___fleq
  8360  147E  3000               	movlw	0
  8361  147F  0571               	andwf	___fleq@ff1+1,w
  8362  1480  00F9               	movwf	??___fleq+1
  8363  1481  3080               	movlw	128
  8364  1482  0572               	andwf	___fleq@ff1+2,w
  8365  1483  00FA               	movwf	??___fleq+2
  8366  1484  307F               	movlw	127
  8367  1485  0573               	andwf	___fleq@ff1+3,w
  8368  1486  00FB               	movwf	??___fleq+3
  8369  1487  087B               	movf	??___fleq+3,w
  8370  1488  047A               	iorwf	??___fleq+2,w
  8371  1489  0479               	iorwf	??___fleq+1,w
  8372  148A  0478               	iorwf	??___fleq,w
  8373  148B  1D03               	skipz
  8374  148C  2C95               	goto	i1l512
  8375  148D  3000               	movlw	0
  8376  148E  00F3               	movwf	___fleq@ff1+3
  8377  148F  3000               	movlw	0
  8378  1490  00F2               	movwf	___fleq@ff1+2
  8379  1491  3000               	movlw	0
  8380  1492  00F1               	movwf	___fleq@ff1+1
  8381  1493  3000               	movlw	0
  8382  1494  00F0               	movwf	___fleq@ff1
  8383  1495                     i1l512:	
  8384  1495  3000               	movlw	0
  8385  1496  0574               	andwf	___fleq@ff2,w
  8386  1497  00F8               	movwf	??___fleq
  8387  1498  3000               	movlw	0
  8388  1499  0575               	andwf	___fleq@ff2+1,w
  8389  149A  00F9               	movwf	??___fleq+1
  8390  149B  3080               	movlw	128
  8391  149C  0576               	andwf	___fleq@ff2+2,w
  8392  149D  00FA               	movwf	??___fleq+2
  8393  149E  307F               	movlw	127
  8394  149F  0577               	andwf	___fleq@ff2+3,w
  8395  14A0  00FB               	movwf	??___fleq+3
  8396  14A1  087B               	movf	??___fleq+3,w
  8397  14A2  047A               	iorwf	??___fleq+2,w
  8398  14A3  0479               	iorwf	??___fleq+1,w
  8399  14A4  0478               	iorwf	??___fleq,w
  8400  14A5  1D03               	skipz
  8401  14A6  2CAF               	goto	i1l513
  8402  14A7  3000               	movlw	0
  8403  14A8  00F7               	movwf	___fleq@ff2+3
  8404  14A9  3000               	movlw	0
  8405  14AA  00F6               	movwf	___fleq@ff2+2
  8406  14AB  3000               	movlw	0
  8407  14AC  00F5               	movwf	___fleq@ff2+1
  8408  14AD  3000               	movlw	0
  8409  14AE  00F4               	movwf	___fleq@ff2
  8410  14AF                     i1l513:	
  8411  14AF  0877               	movf	___fleq@ff2+3,w
  8412  14B0  0673               	xorwf	___fleq@ff1+3,w
  8413  14B1  1D03               	skipz
  8414  14B2  2CBD               	goto	u382_25
  8415  14B3  0876               	movf	___fleq@ff2+2,w
  8416  14B4  0672               	xorwf	___fleq@ff1+2,w
  8417  14B5  1D03               	skipz
  8418  14B6  2CBD               	goto	u382_25
  8419  14B7  0875               	movf	___fleq@ff2+1,w
  8420  14B8  0671               	xorwf	___fleq@ff1+1,w
  8421  14B9  1D03               	skipz
  8422  14BA  2CBD               	goto	u382_25
  8423  14BB  0874               	movf	___fleq@ff2,w
  8424  14BC  0670               	xorwf	___fleq@ff1,w
  8425  14BD                     u382_25:	
  8426  14BD  1903               	skipnz
  8427  14BE  2CC1               	goto	i1l2706
  8428  14BF  1003               	clrc
  8429  14C0  0008               	return
  8430  14C1                     i1l2706:	
  8431  14C1  1403               	setc
  8432  14C2  0008               	return
  8433  14C3                     __end_of___fleq:	
  8434                           
  8435                           	psect	text28
  8436  08D8                     __ptext28:	
  8437 ;; *************** function ___fldiv *****************
  8438 ;; Defined at:
  8439 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  a               4    0[COMMON] unsigned int 
  8442 ;;  b               4    4[COMMON] unsigned int 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;  grs             4    7[BANK0 ] unsigned long 
  8445 ;;  rem             4    0[BANK0 ] unsigned long 
  8446 ;;  new_exp         2    5[BANK0 ] int 
  8447 ;;  aexp            1   12[BANK0 ] unsigned char 
  8448 ;;  bexp            1   11[BANK0 ] unsigned char 
  8449 ;;  sign            1    4[BANK0 ] unsigned char 
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  4    0[COMMON] unsigned char 
  8452 ;; Registers used:
  8453 ;;		wreg, status,2, status,0
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8459 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;Total ram usage:       26 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_efgtoa
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           
  8473                           ;psect for function ___fldiv
  8474  08D8                     ___fldiv:	
  8475                           
  8476                           ;incstack = 0
  8477                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8478  08D8  0877               	movf	___fldiv@b+3,w
  8479  08D9  3980               	andlw	128
  8480  08DA  00F8               	movwf	??___fldiv
  8481  08DB  0878               	movf	??___fldiv,w
  8482  08DC  0140               	movlb	0	; select bank0
  8483  08DD  00A4               	movwf	___fldiv@sign
  8484  08DE  3577               	lslf	___fldiv@b+3,w
  8485  08DF  00F8               	movwf	??___fldiv
  8486  08E0  0878               	movf	??___fldiv,w
  8487  08E1  00AB               	movwf	___fldiv@bexp
  8488  08E2  1BF6               	btfsc	___fldiv@b+2,7
  8489  08E3  142B               	bsf	___fldiv@bexp,0
  8490  08E4  082B               	movf	___fldiv@bexp,w
  8491  08E5  1903               	btfsc	3,2
  8492  08E6  28F5               	goto	i1l2798
  8493  08E7  0A2B               	incf	___fldiv@bexp,w
  8494  08E8  1D03               	btfss	3,2
  8495  08E9  28F2               	goto	i1l2794
  8496  08EA  3000               	movlw	0
  8497  08EB  00F7               	movwf	___fldiv@b+3
  8498  08EC  3000               	movlw	0
  8499  08ED  00F6               	movwf	___fldiv@b+2
  8500  08EE  3000               	movlw	0
  8501  08EF  00F5               	movwf	___fldiv@b+1
  8502  08F0  3000               	movlw	0
  8503  08F1  00F4               	movwf	___fldiv@b
  8504  08F2                     i1l2794:	
  8505  08F2  17F6               	bsf	___fldiv@b+2,7
  8506  08F3  01F7               	clrf	___fldiv@b+3
  8507  08F4  28FD               	goto	i1l2800
  8508  08F5                     i1l2798:	
  8509  08F5  3000               	movlw	0
  8510  08F6  00F7               	movwf	___fldiv@b+3
  8511  08F7  3000               	movlw	0
  8512  08F8  00F6               	movwf	___fldiv@b+2
  8513  08F9  3000               	movlw	0
  8514  08FA  00F5               	movwf	___fldiv@b+1
  8515  08FB  3000               	movlw	0
  8516  08FC  00F4               	movwf	___fldiv@b
  8517  08FD                     i1l2800:	
  8518  08FD  0873               	movf	___fldiv@a+3,w
  8519  08FE  3980               	andlw	128
  8520  08FF  00F8               	movwf	??___fldiv
  8521  0900  0878               	movf	??___fldiv,w
  8522  0901  06A4               	xorwf	___fldiv@sign,f
  8523  0902  3573               	lslf	___fldiv@a+3,w
  8524  0903  00F8               	movwf	??___fldiv
  8525  0904  0878               	movf	??___fldiv,w
  8526  0905  00AC               	movwf	___fldiv@aexp
  8527  0906  1BF2               	btfsc	___fldiv@a+2,7
  8528  0907  142C               	bsf	___fldiv@aexp,0
  8529  0908  082C               	movf	___fldiv@aexp,w
  8530  0909  1903               	btfsc	3,2
  8531  090A  2919               	goto	i1l2818
  8532  090B  0A2C               	incf	___fldiv@aexp,w
  8533  090C  1D03               	btfss	3,2
  8534  090D  2916               	goto	i1l2814
  8535  090E  3000               	movlw	0
  8536  090F  00F3               	movwf	___fldiv@a+3
  8537  0910  3000               	movlw	0
  8538  0911  00F2               	movwf	___fldiv@a+2
  8539  0912  3000               	movlw	0
  8540  0913  00F1               	movwf	___fldiv@a+1
  8541  0914  3000               	movlw	0
  8542  0915  00F0               	movwf	___fldiv@a
  8543  0916                     i1l2814:	
  8544  0916  17F2               	bsf	___fldiv@a+2,7
  8545  0917  01F3               	clrf	___fldiv@a+3
  8546  0918  2921               	goto	i1l700
  8547  0919                     i1l2818:	
  8548  0919  3000               	movlw	0
  8549  091A  00F3               	movwf	___fldiv@a+3
  8550  091B  3000               	movlw	0
  8551  091C  00F2               	movwf	___fldiv@a+2
  8552  091D  3000               	movlw	0
  8553  091E  00F1               	movwf	___fldiv@a+1
  8554  091F  3000               	movlw	0
  8555  0920  00F0               	movwf	___fldiv@a
  8556  0921                     i1l700:	
  8557  0921  0873               	movf	___fldiv@a+3,w
  8558  0922  0472               	iorwf	___fldiv@a+2,w
  8559  0923  0471               	iorwf	___fldiv@a+1,w
  8560  0924  0470               	iorwf	___fldiv@a,w
  8561  0925  1D03               	skipz
  8562  0926  2940               	goto	i1l2828
  8563  0927  3000               	movlw	0
  8564  0928  00F7               	movwf	___fldiv@b+3
  8565  0929  3000               	movlw	0
  8566  092A  00F6               	movwf	___fldiv@b+2
  8567  092B  3000               	movlw	0
  8568  092C  00F5               	movwf	___fldiv@b+1
  8569  092D  3000               	movlw	0
  8570  092E  00F4               	movwf	___fldiv@b
  8571  092F  3080               	movlw	128
  8572  0930  04F6               	iorwf	___fldiv@b+2,f
  8573  0931  307F               	movlw	127
  8574  0932  04F7               	iorwf	___fldiv@b+3,f
  8575  0933                     L12:	
  8576  0933  0824               	movf	___fldiv@sign,w
  8577  0934  00F8               	movwf	??___fldiv
  8578  0935  0878               	movf	??___fldiv,w
  8579  0936  04F7               	iorwf	___fldiv@b+3,f
  8580  0937  0877               	movf	___fldiv@b+3,w
  8581  0938  00F3               	movwf	?___fldiv+3
  8582  0939  0876               	movf	___fldiv@b+2,w
  8583  093A  00F2               	movwf	?___fldiv+2
  8584  093B  0875               	movf	___fldiv@b+1,w
  8585  093C  00F1               	movwf	?___fldiv+1
  8586  093D  0874               	movf	___fldiv@b,w
  8587  093E  00F0               	movwf	?___fldiv
  8588  093F  0008               	return
  8589  0940                     i1l2828:	
  8590  0940  082B               	movf	___fldiv@bexp,w
  8591  0941  1D03               	btfss	3,2
  8592  0942  294C               	goto	i1l2834
  8593  0943  3000               	movlw	0
  8594  0944  00F3               	movwf	?___fldiv+3
  8595  0945  3000               	movlw	0
  8596  0946  00F2               	movwf	?___fldiv+2
  8597  0947  3000               	movlw	0
  8598  0948  00F1               	movwf	?___fldiv+1
  8599  0949  3000               	movlw	0
  8600  094A  00F0               	movwf	?___fldiv
  8601  094B  0008               	return
  8602  094C                     i1l2834:	
  8603  094C  082B               	movf	___fldiv@bexp,w
  8604  094D  00F8               	movwf	??___fldiv
  8605  094E  01F9               	clrf	??___fldiv+1
  8606  094F  0879               	movf	??___fldiv+1,w
  8607  0950  00FB               	movwf	??___fldiv+3
  8608  0951  082C               	movf	___fldiv@aexp,w
  8609  0952  0278               	subwf	??___fldiv,w
  8610  0953  00FA               	movwf	??___fldiv+2
  8611  0954  1C03               	skipc
  8612  0955  03FB               	decf	??___fldiv+3,f
  8613  0956  087A               	movf	??___fldiv+2,w
  8614  0957  3E7F               	addlw	127
  8615  0958  00A5               	movwf	___fldiv@new_exp
  8616  0959  3000               	movlw	0
  8617  095A  3D7B               	addwfc	??___fldiv+3,w
  8618  095B  00A6               	movwf	___fldiv@new_exp+1
  8619  095C  0877               	movf	___fldiv@b+3,w
  8620  095D  00A3               	movwf	___fldiv@rem+3
  8621  095E  0876               	movf	___fldiv@b+2,w
  8622  095F  00A2               	movwf	___fldiv@rem+2
  8623  0960  0875               	movf	___fldiv@b+1,w
  8624  0961  00A1               	movwf	___fldiv@rem+1
  8625  0962  0874               	movf	___fldiv@b,w
  8626  0963  00A0               	movwf	___fldiv@rem
  8627  0964  3000               	movlw	0
  8628  0965  00F7               	movwf	___fldiv@b+3
  8629  0966  3000               	movlw	0
  8630  0967  00F6               	movwf	___fldiv@b+2
  8631  0968  3000               	movlw	0
  8632  0969  00F5               	movwf	___fldiv@b+1
  8633  096A  3000               	movlw	0
  8634  096B  00F4               	movwf	___fldiv@b
  8635  096C  3000               	movlw	0
  8636  096D  00AA               	movwf	___fldiv@grs+3
  8637  096E  3000               	movlw	0
  8638  096F  00A9               	movwf	___fldiv@grs+2
  8639  0970  3000               	movlw	0
  8640  0971  00A8               	movwf	___fldiv@grs+1
  8641  0972  3000               	movlw	0
  8642  0973  00A7               	movwf	___fldiv@grs
  8643  0974  01AC               	clrf	___fldiv@aexp
  8644  0975                     i1l2862:	
  8645  0975  301A               	movlw	26
  8646  0976  022C               	subwf	___fldiv@aexp,w
  8647  0977  1803               	btfsc	3,0
  8648  0978  29B1               	goto	i1l2864
  8649  0979  082C               	movf	___fldiv@aexp,w
  8650  097A  1903               	btfsc	3,2
  8651  097B  2993               	goto	i1l2854
  8652  097C  3001               	movlw	1
  8653  097D                     u408_25:	
  8654  097D  35A0               	lslf	___fldiv@rem,f
  8655  097E  0DA1               	rlf	___fldiv@rem+1,f
  8656  097F  0DA2               	rlf	___fldiv@rem+2,f
  8657  0980  0DA3               	rlf	___fldiv@rem+3,f
  8658  0981  0B89               	decfsz	9,f
  8659  0982  297D               	goto	u408_25
  8660  0983  3001               	movlw	1
  8661  0984                     u409_25:	
  8662  0984  35F4               	lslf	___fldiv@b,f
  8663  0985  0DF5               	rlf	___fldiv@b+1,f
  8664  0986  0DF6               	rlf	___fldiv@b+2,f
  8665  0987  0DF7               	rlf	___fldiv@b+3,f
  8666  0988  0B89               	decfsz	9,f
  8667  0989  2984               	goto	u409_25
  8668  098A  1BAA               	btfsc	___fldiv@grs+3,7
  8669  098B  1474               	bsf	___fldiv@b,0
  8670  098C  3001               	movlw	1
  8671  098D                     u411_25:	
  8672  098D  35A7               	lslf	___fldiv@grs,f
  8673  098E  0DA8               	rlf	___fldiv@grs+1,f
  8674  098F  0DA9               	rlf	___fldiv@grs+2,f
  8675  0990  0DAA               	rlf	___fldiv@grs+3,f
  8676  0991  0B89               	decfsz	9,f
  8677  0992  298D               	goto	u411_25
  8678  0993                     i1l2854:	
  8679  0993  0873               	movf	___fldiv@a+3,w
  8680  0994  0223               	subwf	___fldiv@rem+3,w
  8681  0995  1D03               	skipz
  8682  0996  29A1               	goto	u412_25
  8683  0997  0872               	movf	___fldiv@a+2,w
  8684  0998  0222               	subwf	___fldiv@rem+2,w
  8685  0999  1D03               	skipz
  8686  099A  29A1               	goto	u412_25
  8687  099B  0871               	movf	___fldiv@a+1,w
  8688  099C  0221               	subwf	___fldiv@rem+1,w
  8689  099D  1D03               	skipz
  8690  099E  29A1               	goto	u412_25
  8691  099F  0870               	movf	___fldiv@a,w
  8692  09A0  0220               	subwf	___fldiv@rem,w
  8693  09A1                     u412_25:	
  8694  09A1  1C03               	skipc
  8695  09A2  29AC               	goto	i1l2860
  8696  09A3  172A               	bsf	___fldiv@grs+3,6
  8697  09A4  0870               	movf	___fldiv@a,w
  8698  09A5  02A0               	subwf	___fldiv@rem,f
  8699  09A6  0871               	movf	___fldiv@a+1,w
  8700  09A7  3BA1               	subwfb	___fldiv@rem+1,f
  8701  09A8  0872               	movf	___fldiv@a+2,w
  8702  09A9  3BA2               	subwfb	___fldiv@rem+2,f
  8703  09AA  0873               	movf	___fldiv@a+3,w
  8704  09AB  3BA3               	subwfb	___fldiv@rem+3,f
  8705  09AC                     i1l2860:	
  8706  09AC  3001               	movlw	1
  8707  09AD  00F8               	movwf	??___fldiv
  8708  09AE  0878               	movf	??___fldiv,w
  8709  09AF  07AC               	addwf	___fldiv@aexp,f
  8710  09B0  2975               	goto	i1l2862
  8711  09B1                     i1l2864:	
  8712  09B1  0823               	movf	___fldiv@rem+3,w
  8713  09B2  0422               	iorwf	___fldiv@rem+2,w
  8714  09B3  0421               	iorwf	___fldiv@rem+1,w
  8715  09B4  0420               	iorwf	___fldiv@rem,w
  8716  09B5  1D03               	btfss	3,2
  8717  09B6  1427               	bsf	___fldiv@grs,0
  8718  09B7                     i1l2878:	
  8719  09B7  1BF6               	btfsc	___fldiv@b+2,7
  8720  09B8  29CE               	goto	i1l2880
  8721  09B9  3001               	movlw	1
  8722  09BA                     u415_25:	
  8723  09BA  35F4               	lslf	___fldiv@b,f
  8724  09BB  0DF5               	rlf	___fldiv@b+1,f
  8725  09BC  0DF6               	rlf	___fldiv@b+2,f
  8726  09BD  0DF7               	rlf	___fldiv@b+3,f
  8727  09BE  0B89               	decfsz	9,f
  8728  09BF  29BA               	goto	u415_25
  8729  09C0  1BAA               	btfsc	___fldiv@grs+3,7
  8730  09C1  1474               	bsf	___fldiv@b,0
  8731  09C2  3001               	movlw	1
  8732  09C3                     u417_25:	
  8733  09C3  35A7               	lslf	___fldiv@grs,f
  8734  09C4  0DA8               	rlf	___fldiv@grs+1,f
  8735  09C5  0DA9               	rlf	___fldiv@grs+2,f
  8736  09C6  0DAA               	rlf	___fldiv@grs+3,f
  8737  09C7  0B89               	decfsz	9,f
  8738  09C8  29C3               	goto	u417_25
  8739  09C9  30FF               	movlw	255
  8740  09CA  07A5               	addwf	___fldiv@new_exp,f
  8741  09CB  30FF               	movlw	255
  8742  09CC  3DA6               	addwfc	___fldiv@new_exp+1,f
  8743  09CD  29B7               	goto	i1l2878
  8744  09CE                     i1l2880:	
  8745  09CE  01AC               	clrf	___fldiv@aexp
  8746  09CF  1FAA               	btfss	___fldiv@grs+3,7
  8747  09D0  29E7               	goto	i1l2890
  8748  09D1  30FF               	movlw	255
  8749  09D2  0527               	andwf	___fldiv@grs,w
  8750  09D3  00F8               	movwf	??___fldiv
  8751  09D4  30FF               	movlw	255
  8752  09D5  0528               	andwf	___fldiv@grs+1,w
  8753  09D6  00F9               	movwf	??___fldiv+1
  8754  09D7  30FF               	movlw	255
  8755  09D8  0529               	andwf	___fldiv@grs+2,w
  8756  09D9  00FA               	movwf	??___fldiv+2
  8757  09DA  307F               	movlw	127
  8758  09DB  052A               	andwf	___fldiv@grs+3,w
  8759  09DC  00FB               	movwf	??___fldiv+3
  8760  09DD  087B               	movf	??___fldiv+3,w
  8761  09DE  047A               	iorwf	??___fldiv+2,w
  8762  09DF  0479               	iorwf	??___fldiv+1,w
  8763  09E0  0478               	iorwf	??___fldiv,w
  8764  09E1  1903               	skipnz
  8765  09E2  1874               	btfsc	___fldiv@b,0
  8766  09E3  29E5               	goto	i1l2886
  8767  09E4  29E7               	goto	i1l2890
  8768  09E5                     i1l2886:	
  8769  09E5  01AC               	clrf	___fldiv@aexp
  8770  09E6  0AAC               	incf	___fldiv@aexp,f
  8771  09E7                     i1l2890:	
  8772  09E7  082C               	movf	___fldiv@aexp,w
  8773  09E8  1903               	btfsc	3,2
  8774  09E9  2A10               	goto	i1l2900
  8775  09EA  3001               	movlw	1
  8776  09EB  07F4               	addwf	___fldiv@b,f
  8777  09EC  3000               	movlw	0
  8778  09ED  3DF5               	addwfc	___fldiv@b+1,f
  8779  09EE  3000               	movlw	0
  8780  09EF  3DF6               	addwfc	___fldiv@b+2,f
  8781  09F0  3000               	movlw	0
  8782  09F1  3DF7               	addwfc	___fldiv@b+3,f
  8783  09F2  1C77               	btfss	___fldiv@b+3,0
  8784  09F3  2A10               	goto	i1l2900
  8785  09F4  0874               	movf	___fldiv@b,w
  8786  09F5  00F8               	movwf	??___fldiv
  8787  09F6  0875               	movf	___fldiv@b+1,w
  8788  09F7  00F9               	movwf	??___fldiv+1
  8789  09F8  0876               	movf	___fldiv@b+2,w
  8790  09F9  00FA               	movwf	??___fldiv+2
  8791  09FA  0877               	movf	___fldiv@b+3,w
  8792  09FB  00FB               	movwf	??___fldiv+3
  8793  09FC  3001               	movlw	1
  8794  09FD  00FC               	movwf	??___fldiv+4
  8795  09FE                     u424_25:	
  8796  09FE  37FB               	asrf	??___fldiv+3,f
  8797  09FF  0CFA               	rrf	??___fldiv+2,f
  8798  0A00  0CF9               	rrf	??___fldiv+1,f
  8799  0A01  0CF8               	rrf	??___fldiv,f
  8800  0A02  0BFC               	decfsz	??___fldiv+4,f
  8801  0A03  29FE               	goto	u424_25
  8802  0A04  087B               	movf	??___fldiv+3,w
  8803  0A05  00F7               	movwf	___fldiv@b+3
  8804  0A06  087A               	movf	??___fldiv+2,w
  8805  0A07  00F6               	movwf	___fldiv@b+2
  8806  0A08  0879               	movf	??___fldiv+1,w
  8807  0A09  00F5               	movwf	___fldiv@b+1
  8808  0A0A  0878               	movf	??___fldiv,w
  8809  0A0B  00F4               	movwf	___fldiv@b
  8810  0A0C  3001               	movlw	1
  8811  0A0D  07A5               	addwf	___fldiv@new_exp,f
  8812  0A0E  3000               	movlw	0
  8813  0A0F  3DA6               	addwfc	___fldiv@new_exp+1,f
  8814  0A10                     i1l2900:	
  8815  0A10  0826               	movf	___fldiv@new_exp+1,w
  8816  0A11  3A80               	xorlw	128
  8817  0A12  00F8               	movwf	??___fldiv
  8818  0A13  3080               	movlw	128
  8819  0A14  0278               	subwf	??___fldiv,w
  8820  0A15  1D03               	skipz
  8821  0A16  2A19               	goto	u425_25
  8822  0A17  30FF               	movlw	255
  8823  0A18  0225               	subwf	___fldiv@new_exp,w
  8824  0A19                     u425_25:	
  8825  0A19  1C03               	skipc
  8826  0A1A  2A28               	goto	i1l721
  8827  0A1B  30FF               	movlw	255
  8828  0A1C  0140               	movlb	0	; select bank0
  8829  0A1D  00A5               	movwf	___fldiv@new_exp
  8830  0A1E  3000               	movlw	0
  8831  0A1F  00A6               	movwf	___fldiv@new_exp+1
  8832  0A20  3000               	movlw	0
  8833  0A21  00F7               	movwf	___fldiv@b+3
  8834  0A22  3000               	movlw	0
  8835  0A23  00F6               	movwf	___fldiv@b+2
  8836  0A24  3000               	movlw	0
  8837  0A25  00F5               	movwf	___fldiv@b+1
  8838  0A26  3000               	movlw	0
  8839  0A27  00F4               	movwf	___fldiv@b
  8840  0A28                     i1l721:	
  8841  0A28  0140               	movlb	0	; select bank0
  8842  0A29  0826               	movf	___fldiv@new_exp+1,w
  8843  0A2A  3A80               	xorlw	128
  8844  0A2B  00F8               	movwf	??___fldiv
  8845  0A2C  3080               	movlw	128
  8846  0A2D  0278               	subwf	??___fldiv,w
  8847  0A2E  1D03               	skipz
  8848  0A2F  2A32               	goto	u426_25
  8849  0A30  3001               	movlw	1
  8850  0A31  0225               	subwf	___fldiv@new_exp,w
  8851  0A32                     u426_25:	
  8852  0A32  1803               	skipnc
  8853  0A33  2A40               	goto	i1l722
  8854  0A34  0140               	movlb	0	; select bank0
  8855  0A35  01A5               	clrf	___fldiv@new_exp
  8856  0A36  01A6               	clrf	___fldiv@new_exp+1
  8857  0A37  3000               	movlw	0
  8858  0A38  00F7               	movwf	___fldiv@b+3
  8859  0A39  3000               	movlw	0
  8860  0A3A  00F6               	movwf	___fldiv@b+2
  8861  0A3B  3000               	movlw	0
  8862  0A3C  00F5               	movwf	___fldiv@b+1
  8863  0A3D  3000               	movlw	0
  8864  0A3E  00F4               	movwf	___fldiv@b
  8865  0A3F  01A4               	clrf	___fldiv@sign
  8866  0A40                     i1l722:	
  8867  0A40  0140               	movlb	0	; select bank0
  8868  0A41  0825               	movf	___fldiv@new_exp,w
  8869  0A42  00F8               	movwf	??___fldiv
  8870  0A43  0878               	movf	??___fldiv,w
  8871  0A44  00AB               	movwf	___fldiv@bexp
  8872  0A45  1C2B               	btfss	___fldiv@bexp,0
  8873  0A46  2A49               	goto	i1l2914
  8874  0A47  17F6               	bsf	___fldiv@b+2,7
  8875  0A48  2A4D               	goto	i1l724
  8876  0A49                     i1l2914:	
  8877  0A49  307F               	movlw	127
  8878  0A4A  00F8               	movwf	??___fldiv
  8879  0A4B  0878               	movf	??___fldiv,w
  8880  0A4C  05F6               	andwf	___fldiv@b+2,f
  8881  0A4D                     i1l724:	
  8882  0A4D  362B               	lsrf	___fldiv@bexp,w
  8883  0A4E  00F8               	movwf	??___fldiv
  8884  0A4F  0878               	movf	??___fldiv,w
  8885  0A50  00F7               	movwf	___fldiv@b+3
  8886  0A51  2933               	goto	L12
  8887  0A52                     __end_of___fldiv:	
  8888                           
  8889                           	psect	text29
  8890  1436                     __ptext29:	
  8891 ;; *************** function ___awmod *****************
  8892 ;; Defined at:
  8893 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;  divisor         2    0[COMMON] int 
  8896 ;;  dividend        2    2[COMMON] int 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;  sign            1    6[COMMON] unsigned char 
  8899 ;;  counter         1    5[COMMON] unsigned char 
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  2    0[COMMON] int 
  8902 ;; Registers used:
  8903 ;;		wreg, status,2, status,0
  8904 ;; Tracked objects:
  8905 ;;		On entry : 0/0
  8906 ;;		On exit  : 0/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8912 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8913 ;;Total ram usage:        7 bytes
  8914 ;; Hardware stack levels used:    1
  8915 ;; This function calls:
  8916 ;;		Nothing
  8917 ;; This function is called by:
  8918 ;;		_efgtoa
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           
  8923                           ;psect for function ___awmod
  8924  1436                     ___awmod:	
  8925                           
  8926                           ;incstack = 0
  8927                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8928  1436  01F6               	clrf	___awmod@sign
  8929  1437  1FF3               	btfss	___awmod@dividend+1,7
  8930  1438  2C40               	goto	i1l2668
  8931  1439  09F2               	comf	___awmod@dividend,f
  8932  143A  09F3               	comf	___awmod@dividend+1,f
  8933  143B  0AF2               	incf	___awmod@dividend,f
  8934  143C  1903               	skipnz
  8935  143D  0AF3               	incf	___awmod@dividend+1,f
  8936  143E  01F6               	clrf	___awmod@sign
  8937  143F  0AF6               	incf	___awmod@sign,f
  8938  1440                     i1l2668:	
  8939  1440  1FF1               	btfss	___awmod@divisor+1,7
  8940  1441  2C47               	goto	i1l2672
  8941  1442  09F0               	comf	___awmod@divisor,f
  8942  1443  09F1               	comf	___awmod@divisor+1,f
  8943  1444  0AF0               	incf	___awmod@divisor,f
  8944  1445  1903               	skipnz
  8945  1446  0AF1               	incf	___awmod@divisor+1,f
  8946  1447                     i1l2672:	
  8947  1447  0870               	movf	___awmod@divisor,w
  8948  1448  0471               	iorwf	___awmod@divisor+1,w
  8949  1449  1903               	btfsc	3,2
  8950  144A  2C6E               	goto	i1l2690
  8951  144B  01F5               	clrf	___awmod@counter
  8952  144C  0AF5               	incf	___awmod@counter,f
  8953  144D                     i1l2680:	
  8954  144D  1BF1               	btfsc	___awmod@divisor+1,7
  8955  144E  2C59               	goto	i1l2682
  8956  144F  3001               	movlw	1
  8957  1450                     u374_25:	
  8958  1450  35F0               	lslf	___awmod@divisor,f
  8959  1451  0DF1               	rlf	___awmod@divisor+1,f
  8960  1452  0B89               	decfsz	9,f
  8961  1453  2C50               	goto	u374_25
  8962  1454  3001               	movlw	1
  8963  1455  00F4               	movwf	??___awmod
  8964  1456  0874               	movf	??___awmod,w
  8965  1457  07F5               	addwf	___awmod@counter,f
  8966  1458  2C4D               	goto	i1l2680
  8967  1459                     i1l2682:	
  8968  1459  0871               	movf	___awmod@divisor+1,w
  8969  145A  0273               	subwf	___awmod@dividend+1,w
  8970  145B  1D03               	skipz
  8971  145C  2C5F               	goto	u376_25
  8972  145D  0870               	movf	___awmod@divisor,w
  8973  145E  0272               	subwf	___awmod@dividend,w
  8974  145F                     u376_25:	
  8975  145F  1C03               	skipc
  8976  1460  2C65               	goto	i1l2686
  8977  1461  0870               	movf	___awmod@divisor,w
  8978  1462  02F2               	subwf	___awmod@dividend,f
  8979  1463  0871               	movf	___awmod@divisor+1,w
  8980  1464  3BF3               	subwfb	___awmod@dividend+1,f
  8981  1465                     i1l2686:	
  8982  1465  3001               	movlw	1
  8983  1466                     u377_25:	
  8984  1466  36F1               	lsrf	___awmod@divisor+1,f
  8985  1467  0CF0               	rrf	___awmod@divisor,f
  8986  1468  0B89               	decfsz	9,f
  8987  1469  2C66               	goto	u377_25
  8988  146A  3001               	movlw	1
  8989  146B  02F5               	subwf	___awmod@counter,f
  8990  146C  1D03               	btfss	3,2
  8991  146D  2C59               	goto	i1l2682
  8992  146E                     i1l2690:	
  8993  146E  0876               	movf	___awmod@sign,w
  8994  146F  1903               	btfsc	3,2
  8995  1470  2C76               	goto	i1l2694
  8996  1471  09F2               	comf	___awmod@dividend,f
  8997  1472  09F3               	comf	___awmod@dividend+1,f
  8998  1473  0AF2               	incf	___awmod@dividend,f
  8999  1474  1903               	skipnz
  9000  1475  0AF3               	incf	___awmod@dividend+1,f
  9001  1476                     i1l2694:	
  9002  1476  0873               	movf	___awmod@dividend+1,w
  9003  1477  00F1               	movwf	?___awmod+1
  9004  1478  0872               	movf	___awmod@dividend,w
  9005  1479  00F0               	movwf	?___awmod
  9006  147A  0008               	return
  9007  147B                     __end_of___awmod:	
  9008                           
  9009                           	psect	text30
  9010  1561                     __ptext30:	
  9011 ;; *************** function ___awdiv *****************
  9012 ;; Defined at:
  9013 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;  divisor         2    0[COMMON] int 
  9016 ;;  dividend        2    2[COMMON] int 
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;  quotient        2    7[COMMON] int 
  9019 ;;  sign            1    6[COMMON] unsigned char 
  9020 ;;  counter         1    5[COMMON] unsigned char 
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  2    0[COMMON] int 
  9023 ;; Registers used:
  9024 ;;		wreg, status,2, status,0
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9031 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;Total ram usage:        9 bytes
  9035 ;; Hardware stack levels used:    1
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_efgtoa
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           
  9044                           ;psect for function ___awdiv
  9045  1561                     ___awdiv:	
  9046                           
  9047                           ;incstack = 0
  9048                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9049  1561  01F6               	clrf	___awdiv@sign
  9050  1562  1FF1               	btfss	___awdiv@divisor+1,7
  9051  1563  2D6B               	goto	i1l2624
  9052  1564  09F0               	comf	___awdiv@divisor,f
  9053  1565  09F1               	comf	___awdiv@divisor+1,f
  9054  1566  0AF0               	incf	___awdiv@divisor,f
  9055  1567  1903               	skipnz
  9056  1568  0AF1               	incf	___awdiv@divisor+1,f
  9057  1569  01F6               	clrf	___awdiv@sign
  9058  156A  0AF6               	incf	___awdiv@sign,f
  9059  156B                     i1l2624:	
  9060  156B  1FF3               	btfss	___awdiv@dividend+1,7
  9061  156C  2D76               	goto	i1l2630
  9062  156D  09F2               	comf	___awdiv@dividend,f
  9063  156E  09F3               	comf	___awdiv@dividend+1,f
  9064  156F  0AF2               	incf	___awdiv@dividend,f
  9065  1570  1903               	skipnz
  9066  1571  0AF3               	incf	___awdiv@dividend+1,f
  9067  1572  3001               	movlw	1
  9068  1573  00F4               	movwf	??___awdiv
  9069  1574  0874               	movf	??___awdiv,w
  9070  1575  06F6               	xorwf	___awdiv@sign,f
  9071  1576                     i1l2630:	
  9072  1576  01F7               	clrf	___awdiv@quotient
  9073  1577  01F8               	clrf	___awdiv@quotient+1
  9074  1578  0870               	movf	___awdiv@divisor,w
  9075  1579  0471               	iorwf	___awdiv@divisor+1,w
  9076  157A  1903               	btfsc	3,2
  9077  157B  2DA5               	goto	i1l2652
  9078  157C  01F5               	clrf	___awdiv@counter
  9079  157D  0AF5               	incf	___awdiv@counter,f
  9080  157E                     i1l2640:	
  9081  157E  1BF1               	btfsc	___awdiv@divisor+1,7
  9082  157F  2D8A               	goto	i1l2642
  9083  1580  3001               	movlw	1
  9084  1581                     u364_25:	
  9085  1581  35F0               	lslf	___awdiv@divisor,f
  9086  1582  0DF1               	rlf	___awdiv@divisor+1,f
  9087  1583  0B89               	decfsz	9,f
  9088  1584  2D81               	goto	u364_25
  9089  1585  3001               	movlw	1
  9090  1586  00F4               	movwf	??___awdiv
  9091  1587  0874               	movf	??___awdiv,w
  9092  1588  07F5               	addwf	___awdiv@counter,f
  9093  1589  2D7E               	goto	i1l2640
  9094  158A                     i1l2642:	
  9095  158A  3001               	movlw	1
  9096  158B                     u366_25:	
  9097  158B  35F7               	lslf	___awdiv@quotient,f
  9098  158C  0DF8               	rlf	___awdiv@quotient+1,f
  9099  158D  0B89               	decfsz	9,f
  9100  158E  2D8B               	goto	u366_25
  9101  158F  0871               	movf	___awdiv@divisor+1,w
  9102  1590  0273               	subwf	___awdiv@dividend+1,w
  9103  1591  1D03               	skipz
  9104  1592  2D95               	goto	u367_25
  9105  1593  0870               	movf	___awdiv@divisor,w
  9106  1594  0272               	subwf	___awdiv@dividend,w
  9107  1595                     u367_25:	
  9108  1595  1C03               	skipc
  9109  1596  2D9C               	goto	i1l2648
  9110  1597  0870               	movf	___awdiv@divisor,w
  9111  1598  02F2               	subwf	___awdiv@dividend,f
  9112  1599  0871               	movf	___awdiv@divisor+1,w
  9113  159A  3BF3               	subwfb	___awdiv@dividend+1,f
  9114  159B  1477               	bsf	___awdiv@quotient,0
  9115  159C                     i1l2648:	
  9116  159C  3001               	movlw	1
  9117  159D                     u368_25:	
  9118  159D  36F1               	lsrf	___awdiv@divisor+1,f
  9119  159E  0CF0               	rrf	___awdiv@divisor,f
  9120  159F  0B89               	decfsz	9,f
  9121  15A0  2D9D               	goto	u368_25
  9122  15A1  3001               	movlw	1
  9123  15A2  02F5               	subwf	___awdiv@counter,f
  9124  15A3  1D03               	btfss	3,2
  9125  15A4  2D8A               	goto	i1l2642
  9126  15A5                     i1l2652:	
  9127  15A5  0876               	movf	___awdiv@sign,w
  9128  15A6  1903               	btfsc	3,2
  9129  15A7  2DAD               	goto	i1l2656
  9130  15A8  09F7               	comf	___awdiv@quotient,f
  9131  15A9  09F8               	comf	___awdiv@quotient+1,f
  9132  15AA  0AF7               	incf	___awdiv@quotient,f
  9133  15AB  1903               	skipnz
  9134  15AC  0AF8               	incf	___awdiv@quotient+1,f
  9135  15AD                     i1l2656:	
  9136  15AD  0878               	movf	___awdiv@quotient+1,w
  9137  15AE  00F1               	movwf	?___awdiv+1
  9138  15AF  0877               	movf	___awdiv@quotient,w
  9139  15B0  00F0               	movwf	?___awdiv
  9140  15B1  0008               	return
  9141  15B2                     __end_of___awdiv:	
  9142                           
  9143                           	psect	text31
  9144  176B                     __ptext31:	
  9145 ;; *************** function ___xxtofl *****************
  9146 ;; Defined at:
  9147 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  sign            1    wreg     unsigned char 
  9150 ;;  val             4    0[COMMON] long 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;  sign            1    8[COMMON] unsigned char 
  9153 ;;  arg             4   10[COMMON] unsigned long 
  9154 ;;  exp             1    9[COMMON] unsigned char 
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  4    0[COMMON] unsigned char 
  9157 ;; Registers used:
  9158 ;;		wreg, status,2, status,0
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9164 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9167 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9168 ;;Total ram usage:       14 bytes
  9169 ;; Hardware stack levels used:    1
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_UART_Recieve
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function ___xxtofl
  9179  176B                     ___xxtofl:	
  9180                           
  9181                           ;incstack = 0
  9182                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9183                           ;___xxtofl@sign stored from wreg
  9184  176B  00F8               	movwf	___xxtofl@sign
  9185  176C  0878               	movf	___xxtofl@sign,w
  9186  176D  1D03               	btfss	3,2
  9187  176E  1FF3               	btfss	___xxtofl@val+3,7
  9188  176F  2F80               	goto	i1l3586
  9189  1770  0970               	comf	___xxtofl@val,w
  9190  1771  00FA               	movwf	___xxtofl@arg
  9191  1772  0971               	comf	___xxtofl@val+1,w
  9192  1773  00FB               	movwf	___xxtofl@arg+1
  9193  1774  0972               	comf	___xxtofl@val+2,w
  9194  1775  00FC               	movwf	___xxtofl@arg+2
  9195  1776  0973               	comf	___xxtofl@val+3,w
  9196  1777  00FD               	movwf	___xxtofl@arg+3
  9197  1778  0AFA               	incf	___xxtofl@arg,f
  9198  1779  1903               	skipnz
  9199  177A  0AFB               	incf	___xxtofl@arg+1,f
  9200  177B  1903               	skipnz
  9201  177C  0AFC               	incf	___xxtofl@arg+2,f
  9202  177D  1903               	skipnz
  9203  177E  0AFD               	incf	___xxtofl@arg+3,f
  9204  177F  2F88               	goto	i1l778
  9205  1780                     i1l3586:	
  9206  1780  0873               	movf	___xxtofl@val+3,w
  9207  1781  00FD               	movwf	___xxtofl@arg+3
  9208  1782  0872               	movf	___xxtofl@val+2,w
  9209  1783  00FC               	movwf	___xxtofl@arg+2
  9210  1784  0871               	movf	___xxtofl@val+1,w
  9211  1785  00FB               	movwf	___xxtofl@arg+1
  9212  1786  0870               	movf	___xxtofl@val,w
  9213  1787  00FA               	movwf	___xxtofl@arg
  9214  1788                     i1l778:	
  9215  1788  0873               	movf	___xxtofl@val+3,w
  9216  1789  0472               	iorwf	___xxtofl@val+2,w
  9217  178A  0471               	iorwf	___xxtofl@val+1,w
  9218  178B  0470               	iorwf	___xxtofl@val,w
  9219  178C  1D03               	skipz
  9220  178D  2F97               	goto	i1l3592
  9221  178E  3000               	movlw	0
  9222  178F  00F3               	movwf	?___xxtofl+3
  9223  1790  3000               	movlw	0
  9224  1791  00F2               	movwf	?___xxtofl+2
  9225  1792  3000               	movlw	0
  9226  1793  00F1               	movwf	?___xxtofl+1
  9227  1794  3000               	movlw	0
  9228  1795  00F0               	movwf	?___xxtofl
  9229  1796  0008               	return
  9230  1797                     i1l3592:	
  9231  1797  3096               	movlw	150
  9232  1798  00F4               	movwf	??___xxtofl
  9233  1799  0874               	movf	??___xxtofl,w
  9234  179A  00F9               	movwf	___xxtofl@exp
  9235  179B                     i1l3596:	
  9236  179B  30FE               	movlw	254
  9237  179C  057D               	andwf	___xxtofl@arg+3,w
  9238  179D  1903               	btfsc	3,2
  9239  179E  2FBE               	goto	i1l784
  9240  179F  3001               	movlw	1
  9241  17A0  00F4               	movwf	??___xxtofl
  9242  17A1  0874               	movf	??___xxtofl,w
  9243  17A2  07F9               	addwf	___xxtofl@exp,f
  9244  17A3  3001               	movlw	1
  9245  17A4                     u544_25:	
  9246  17A4  36FD               	lsrf	___xxtofl@arg+3,f
  9247  17A5  0CFC               	rrf	___xxtofl@arg+2,f
  9248  17A6  0CFB               	rrf	___xxtofl@arg+1,f
  9249  17A7  0CFA               	rrf	___xxtofl@arg,f
  9250  17A8  0B89               	decfsz	9,f
  9251  17A9  2FA4               	goto	u544_25
  9252  17AA  2F9B               	goto	i1l3596
  9253  17AB                     i1l3598:	
  9254  17AB  3001               	movlw	1
  9255  17AC  00F4               	movwf	??___xxtofl
  9256  17AD  0874               	movf	??___xxtofl,w
  9257  17AE  07F9               	addwf	___xxtofl@exp,f
  9258  17AF  3001               	movlw	1
  9259  17B0  07FA               	addwf	___xxtofl@arg,f
  9260  17B1  3000               	movlw	0
  9261  17B2  3DFB               	addwfc	___xxtofl@arg+1,f
  9262  17B3  3000               	movlw	0
  9263  17B4  3DFC               	addwfc	___xxtofl@arg+2,f
  9264  17B5  3000               	movlw	0
  9265  17B6  3DFD               	addwfc	___xxtofl@arg+3,f
  9266  17B7  3001               	movlw	1
  9267  17B8                     u546_25:	
  9268  17B8  36FD               	lsrf	___xxtofl@arg+3,f
  9269  17B9  0CFC               	rrf	___xxtofl@arg+2,f
  9270  17BA  0CFB               	rrf	___xxtofl@arg+1,f
  9271  17BB  0CFA               	rrf	___xxtofl@arg,f
  9272  17BC  0B89               	decfsz	9,f
  9273  17BD  2FB8               	goto	u546_25
  9274  17BE                     i1l784:	
  9275  17BE  30FF               	movlw	255
  9276  17BF  057D               	andwf	___xxtofl@arg+3,w
  9277  17C0  1903               	btfsc	3,2
  9278  17C1  2FD0               	goto	i1l3606
  9279  17C2  2FAB               	goto	i1l3598
  9280  17C3                     i1l3608:	
  9281  17C3  3002               	movlw	2
  9282  17C4  0279               	subwf	___xxtofl@exp,w
  9283  17C5  1C03               	btfss	3,0
  9284  17C6  2FD2               	goto	i1l791
  9285  17C7  3001               	movlw	1
  9286  17C8  02F9               	subwf	___xxtofl@exp,f
  9287  17C9  3001               	movlw	1
  9288  17CA                     u548_25:	
  9289  17CA  35FA               	lslf	___xxtofl@arg,f
  9290  17CB  0DFB               	rlf	___xxtofl@arg+1,f
  9291  17CC  0DFC               	rlf	___xxtofl@arg+2,f
  9292  17CD  0DFD               	rlf	___xxtofl@arg+3,f
  9293  17CE  0B89               	decfsz	9,f
  9294  17CF  2FCA               	goto	u548_25
  9295  17D0                     i1l3606:	
  9296  17D0  1FFC               	btfss	___xxtofl@arg+2,7
  9297  17D1  2FC3               	goto	i1l3608
  9298  17D2                     i1l791:	
  9299  17D2  1879               	btfsc	___xxtofl@exp,0
  9300  17D3  2FDC               	goto	i1l792
  9301  17D4  30FF               	movlw	255
  9302  17D5  05FA               	andwf	___xxtofl@arg,f
  9303  17D6  30FF               	movlw	255
  9304  17D7  05FB               	andwf	___xxtofl@arg+1,f
  9305  17D8  307F               	movlw	127
  9306  17D9  05FC               	andwf	___xxtofl@arg+2,f
  9307  17DA  30FF               	movlw	255
  9308  17DB  05FD               	andwf	___xxtofl@arg+3,f
  9309  17DC                     i1l792:	
  9310  17DC  1003               	clrc
  9311  17DD  0CF9               	rrf	___xxtofl@exp,f
  9312  17DE  0879               	movf	___xxtofl@exp,w
  9313  17DF  00F4               	movwf	??___xxtofl
  9314  17E0  01F5               	clrf	??___xxtofl+1
  9315  17E1  01F6               	clrf	??___xxtofl+2
  9316  17E2  01F7               	clrf	??___xxtofl+3
  9317  17E3  3018               	movlw	24
  9318  17E4                     u552_25:	
  9319  17E4  35F4               	lslf	??___xxtofl,f
  9320  17E5  0DF5               	rlf	??___xxtofl+1,f
  9321  17E6  0DF6               	rlf	??___xxtofl+2,f
  9322  17E7  0DF7               	rlf	??___xxtofl+3,f
  9323  17E8  0B89               	decfsz	9,f
  9324  17E9  2FE4               	goto	u552_25
  9325  17EA  0874               	movf	??___xxtofl,w
  9326  17EB  04FA               	iorwf	___xxtofl@arg,f
  9327  17EC  0875               	movf	??___xxtofl+1,w
  9328  17ED  04FB               	iorwf	___xxtofl@arg+1,f
  9329  17EE  0876               	movf	??___xxtofl+2,w
  9330  17EF  04FC               	iorwf	___xxtofl@arg+2,f
  9331  17F0  0877               	movf	??___xxtofl+3,w
  9332  17F1  04FD               	iorwf	___xxtofl@arg+3,f
  9333  17F2  0878               	movf	___xxtofl@sign,w
  9334  17F3  1D03               	btfss	3,2
  9335  17F4  1FF3               	btfss	___xxtofl@val+3,7
  9336  17F5  2FF7               	goto	i1l3620
  9337  17F6  17FD               	bsf	___xxtofl@arg+3,7
  9338  17F7                     i1l3620:	
  9339  17F7  087D               	movf	___xxtofl@arg+3,w
  9340  17F8  00F3               	movwf	?___xxtofl+3
  9341  17F9  087C               	movf	___xxtofl@arg+2,w
  9342  17FA  00F2               	movwf	?___xxtofl+2
  9343  17FB  087B               	movf	___xxtofl@arg+1,w
  9344  17FC  00F1               	movwf	?___xxtofl+1
  9345  17FD  087A               	movf	___xxtofl@arg,w
  9346  17FE  00F0               	movwf	?___xxtofl
  9347  17FF  0008               	return
  9348  1800                     __end_of___xxtofl:	
  9349                           
  9350                           	psect	text32
  9351  12EB                     __ptext32:	
  9352 ;; *************** function _ADC_read *****************
  9353 ;; Defined at:
  9354 ;;		line 47 in file "ADC_funcs.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;		None
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;		None
  9359 ;; Return value:  Size  Location     Type
  9360 ;;                  2    0[COMMON] unsigned int 
  9361 ;; Registers used:
  9362 ;;		wreg
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;Total ram usage:        2 bytes
  9373 ;; Hardware stack levels used:    1
  9374 ;; This function calls:
  9375 ;;		Nothing
  9376 ;; This function is called by:
  9377 ;;		_UART_Recieve
  9378 ;; This function uses a non-reentrant model
  9379 ;;
  9380                           
  9381                           
  9382                           ;psect for function _ADC_read
  9383  12EB                     _ADC_read:	
  9384  12EB                     i1l71:	
  9385                           ;ADC_funcs.c: 49:   while(ADCON0bits.GOnDONE == 1);
  9386                           
  9387                           ;incstack = 0
  9388                           ; Regs used in _ADC_read: [wreg]
  9389                           
  9390  12EB  0141               	movlb	1	; select bank1
  9391  12EC  189D               	btfsc	29,1	;volatile
  9392  12ED  2AEB               	goto	i1l71
  9393                           
  9394                           ;ADC_funcs.c: 50:   return ( (ADRESH<<8) + ADRESL);
  9395  12EE  081C               	movf	28,w	;volatile
  9396  12EF  00F1               	movwf	?_ADC_read+1
  9397  12F0  081B               	movf	27,w	;volatile
  9398  12F1  00F0               	movwf	?_ADC_read
  9399  12F2  0008               	return
  9400  12F3                     __end_of_ADC_read:	
  9401  007E                     btemp	set	126	;btemp
  9402  007E                     int$flags	set	126
  9403  007E                     wtemp0	set	126


Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         96
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     67      79
    BANK2            80     37      41
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S736_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    ADC_init@pin	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _UART_Recieve in COMMON

    _UART_Recieve->___xxtofl
    _vfpfcnvrt->_tolower
    _efgtoa->_pad
    _efgtoa->_tolower
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _floorf->___fldiv
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_Recieve in BANK0

    _UART_Recieve->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_Recieve in BANK1

    _UART_Recieve->_printf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_init_UART
    _init_UART->___aldiv

Critical Paths under _UART_Recieve in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_Recieve in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_Recieve in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_Recieve in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_Recieve in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_Recieve in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_Recieve in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_Recieve in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_Recieve in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_Recieve in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_Recieve in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     985
                           _ADC_init
                          _init_UART
 ---------------------------------------------------------------------------------
 (1) _init_UART                                           22    18      4     618
                                             15 BANK2     22    18      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 BANK2     15     7      8
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             8     6      2     367
                                              0 BANK2      8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _UART_Recieve                                         6     6      0   28865
                                             61 BANK1      6     6      0
                           _ADC_read
                            ___flmul
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              10     4      6   25244
                                             74 BANK0      6     0      6
                                             57 BANK1      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     5      3   25110
                                             66 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           43    41      2   24775
                                             47 BANK0     19    17      2
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              66    61      5   21200
                                             38 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2     944
                                              6 COMMON     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (8) _pad                                                  9     6      3    2870
                                             13 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                8     7      1    1105
                                              9 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     790
                                              1 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2637
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    3177
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     790
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             26    18      8    1881
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (4) _ADC_read                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _init_UART
     ___aldiv

 _UART_Recieve (ROOT)
   _ADC_read
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___xxtofl
   _printf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     126       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     43      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     25      29      10       51.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     126      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jun 16 06:39:17 2019

           ___fldiv@aexp 002C             ___fldiv@bexp 002B   UART_Recieve@decimalADC 00DD  
           ___fldiv@sign 0024              __CFG_CP$OFF 0000                       l25 1362  
           ___awdiv@sign 0076      __Umul8_16@word_mpld 0076              __CFG_LVP$ON 0000  
                    l408 16FA                      _pad 1511             ___awmod@sign 0076  
           __CFG_BORV$LO 0000                      wreg 0009             ___flmul@aexp 0032  
           ___flmul@bexp 0033              _tolower$797 007C             ___flmul@sign 002D  
           ___flmul@temp 0038             ___flmul@prod 0034            __CFG_BBEN$OFF 0000  
           __CFG_ZCD$OFF 0000             ___fltol@exp1 007A                     l3552 0873  
                   l3480 171B                     l3472 170B                     l3490 1749  
                   l3482 1729                     l3548 085A                     l3564 08AE  
                   l3662 08B7                     l3566 08C2                     l3558 088D  
                   l3494 1754                     ?_pad 0024                     l3498 1762  
                   STR_1 1800                     STR_2 181A                     STR_3 1807  
                   STR_4 180F                     STR_7 180B                     STR_8 1813  
                   _PEIE 005E                     i1l20 005A                     u5405 08C5  
                   u5245 171E                     u5325 15C4                     u5335 15DB  
                   u5344 085F                     u5345 085E                     u5265 172A  
                   u5354 086C                     u5355 086B                     u5275 173E  
                   u5364 0879                     u5365 0878                     u5285 174A  
                   u5374 0886                     i1l71 12EB                     u5375 0885  
                   u5384 0893                     u5385 0892                     u5394 08A0  
                   u5395 089F                     u5567 08D2            __CFG_FCMEN$ON 0000  
                   _dbuf 01A0                     _main 134A                     _prec 00EB  
                   _nout 00E7                     pad@i 0027                     pad@p 0025  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   pad@w 0029                     btemp 007E            __CFG_BOREN$ON 0000  
          ___fpclassifyf 1671                     start 005C         __end_of_ADC_init 08D8  
       __end_of_ADC_read 12F3          ___fldiv@new_exp 0025            __CFG_CSWEN$ON 0000  
          __CFG_MCLRE$ON 0000            ADC_init@block 0124                    ??_pad 007D  
          ___fltol@sign1 0079          __end_of___aldiv 176B          __end_of___fladd 0DD4  
                  ?_main 0070          __end_of___fldiv 0A52          __end_of___awdiv 15B2  
        __end_of___flneg 12FC                    STR_11 1817                    STR_13 1817  
        __end_of___awmod 147B          __end_of___flmul 1000          __end_of___flsub 13A1  
        __end_of___fltol 1671          ___awdiv@divisor 0070                    _RC1IE 38CD  
                  _RC1IF 387D                    i1l112 1303                    i1l222 1529  
                  i1l225 1549                    i1l226 1555                    i1l260 029B  
                  i1l261 0288                    i1l271 02D5                    i1l512 1495  
                  i1l513 14AF                    i1l521 079E                    i1l700 0921  
                  i1l524 07EC                    i1l544 1655                    i1l721 0A28  
                  i1l289 0473                    i1l722 0A40                    i1l650 0CAE  
                  i1l724 0A4D                    i1l644 0C38                    i1l814 077A  
                  i1l752 0FF3                    i1l648 0CCC                    i1l665 0D52  
                  i1l686 0DCB                    i1l678 0DB2                    i1l791 17D2  
                  i1l792 17DC                    i1l784 17BE                    i1l778 1788  
                  i1l888 1373          ___awdiv@counter 0075             vfpfcnvrt@fmt 004F  
                  _SPBRG 011B                    _TRISA 0012                    _TRISB 0013  
                  _TRISC 0014                    _TXREG 011A                    _TXSTA 011E  
          __CFG_WRTB$OFF 0000            __CFG_WRTC$OFF 0000                    _flags 00ED  
                  _fputc 0804                    _fputs 13E1                    pad@fp 002B  
                  _width 00E9                    _putch 12FC          __end_of_isupper 1332  
                  status 0003                    wtemp0 007E           ?___fpclassifyf 0070  
        __end_of_tolower 13E1      UART_Recieve@adc_out 00E1          __end_of_strncmp 1511  
        __initialization 005E             __end_of_main 1363           __CFG_SAFEN$OFF 0000  
         ADC_init@pinNum 0126                   ??_main 0145                   _ADCON0 009D  
                 _ADCON1 009E                   ?_fputc 0071                   ?_fputs 0079  
                 _ADRESH 009C                   _ADRESL 009B       init_UART@baud_rate 012F  
       ___awdiv@dividend 0072                   _ANSELA 1F38                   ?_putch 0070  
                 _ANSELB 1F43                   _ANSELC 1F4E                   _RC1REG 0119  
                 _RC1STA 011D                   _RC5PPS 1F25                   i1l3100 0117  
                 i1l2310 1337                   i1l3024 0F89                   i1l3016 0F5B  
                 i1l2304 13E5                   i1l2312 1343                   i1l3042 0FC9  
                 i1l3018 0F72                   i1l3210 0422                   i1l3028 0F8B  
                 i1l2340 0C10                   i1l3204 0310                   i1l3140 021F  
                 i1l3108 013C                   i1l3038 0FB4                   i1l2406 0CB7  
                 i1l2334 0C05                   i1l3302 05E4                   i1l3206 03CF  
                 i1l3134 01B5                   i1l3118 016F                   i1l3126 0194  
                 i1l3070 00BF                   i1l3048 0FE0                   i1l2504 0DC2  
                 i1l2432 0CED                   i1l2424 0CDA                   i1l2408 0CB9  
                 i1l2416 0CC8                   i1l3304 05EC                   i1l3224 0471  
                 i1l3216 0443                   i1l3144 0240                   i1l2434 0CEF  
                 i1l2442 0CFF                   i1l2362 0C30                   i1l2338 0C08  
                 i1l2610 075D                   i1l2290 080D                   i1l3314 05E8  
                 i1l3226 047A                   i1l3138 01E5                   i1l3146 0265  
                 i1l3082 00D2                   i1l3090 00E5                   i1l2508 0DC6  
                 i1l2460 0D64                   i1l2452 0D4A                   i1l2604 0733  
                 i1l2532 151F                   i1l3340 0675                   i1l3324 063B  
                 i1l3316 0623                   i1l3260 0506                   i1l3180 02E2  
                 i1l3172 02CF                   i1l3164 02A2                   i1l3156 0295  
                 i1l2630 1576                   i1l2518 136D                   i1l2358 0C2D  
                 i1l2606 0744                   i1l2294 0830                   i1l2542 152B  
                 i1l3238 04CA                   i1l3190 02F6                   i1l3182 02E6  
                 i1l3158 029D                   i1l3078 00CC                   i1l2640 157E  
                 i1l2624 156B                   i1l2800 08FD                   i1l2720 07D2  
                 i1l2368 0C42                   i1l2536 1527                   i1l3432 0BB7  
                 i1l3408 0B0F                   i1l2642 158A                   i1l2706 14C1  
                 i1l2482 0D83                   i1l2474 0D78                   i1l2562 16C1  
                 i1l3258 04E8                   i1l3266 051C                   i1l3274 058E  
                 i1l3194 02FE                   i1l3418 0B68                   i1l3426 0B95  
                 i1l3442 0BC8                   i1l3620 17F7                   i1l2652 15A5  
                 i1l2900 0A10                   i1l2716 07B8                   i1l2468 0D71  
                 i1l2476 0D7A                   i1l2740 1615                   i1l3348 0694  
                 i1l3436 0BBD                   i1l3606 17D0                   i1l2814 0916  
                 i1l2486 0D85                   i1l2398 0C7E                   i1l2558 16BC  
                 i1l2574 13AA                   i1l3286 05C3                   i1l3278 05AC  
                 i1l3374 1503                   i1l3366 14FD                   i1l3608 17C3  
                 i1l2656 15AD                   i1l2648 159C                   i1l2680 144D  
                 i1l2672 1447                   i1l2760 1643                   i1l2744 161E  
                 i1l2568 16E4                   i1l3368 14D9                   i1l3456 1410  
                 i1l2682 1459                   i1l2690 146E                   i1l2914 0A49  
                 i1l2834 094C                   i1l2818 0919                   i1l2770 1662  
                 i1l2762 1651                   i1l3458 142D                   i1l2668 1440  
                 i1l2860 09AC                   i1l2828 0940                   i1l3396 0ACF  
                 i1l2694 1476                   i1l2686 1465                   i1l2854 0993  
                 i1l2862 0975                   i1l2934 0DEE                   i1l3592 1797  
                 i1l2880 09CE                   i1l2864 09B1                   i1l2952 0E11  
                 i1l2936 0DF0           __CFG_WDTCCS$SC 0000                   i1l3586 1780  
                 i1l2890 09E7                   i1l2794 08F2                   i1l2954 0E13  
                 i1l2938 0DF8                   i1l3596 179B                   i1l2964 0E29  
                 i1l2956 0E1B                   i1l3598 17AB                   i1l2886 09E5  
                 i1l2878 09B7                   i1l2798 08F5                   u310_23 0D12  
                 u302_25 0CBE                   u314_25 0D65                   u411_25 098D  
                 u412_25 09A1                   u332_25 1374                   u324_25 0D9D  
                 u340_25 16AB                   u309_25 0CF4                   u501_25 062E  
                 u350_25 06CC                   u503_20 0665                   u415_25 09BA  
                 u343_25 16CE                   u351_25 06E7                   u344_20 16DC  
                 u504_20 0666                   u424_25 09FE                   u408_25 097D  
                 u440_25 0F4A                   u336_25 1535                   u345_20 16DD  
                 u353_20 06FA                   u425_25 0A19                   u417_25 09C3  
                 u409_25 0984                   u441_25 0F5E                   u353_25 06F6  
                 u426_25 0A32                   u450_25 0FA2                   u338_25 1692  
                 u347_20 13CF                   u451_25 0FBD                   u443_25 0F67  
                 u355_25 071F                   u283_25 082E                   u348_20 13D0  
                 u460_20 0106                   u516_20 0B4D                   u364_25 1581  
                 u452_25 0FD3                   u436_25 0E9F                   u517_20 0B4E  
                 u437_25 0ECE                   u357_25 074D                   u286_20 132A  
                 u366_25 158B                   u374_25 1450                   u382_25 14BD  
                 u438_25 0F24                   u390_25 1627                   u287_20 132B  
                 u463_20 015D                   u367_25 1595                   u439_25 0F3B  
                 u359_25 0766                   u471_25 0293                   u464_20 015E  
                 u552_25 17E4                   u544_25 17A4                   u368_25 159D  
                 u376_25 145F                   u377_25 1466                   u297_25 0C92  
                 u393_25 1644                   u298_20 0C9C                   u546_25 17B8  
                 u482_25 031E                   u474_25 02B1                   u299_20 0C9D  
                 u459_20 0105                   u475_25 02CB                   u548_25 17CA  
                 u396_25 1659                   u494_25 059C                   u495_25 05AA  
                 _TX1STA 011E         __end_of___xxtofl 1800           __CFG_PWRTE$OFF 0000  
           vfprintf@cfmt 0068                   ___flge 0783                   ___fleq 147B  
              ??___aldiv 0128                ??___fladd 0020                ??___fldiv 0078  
              ??___awdiv 0074                ??___flneg 0074           __CFG_STVREN$ON 0000  
              ??___awmod 0074                ??___flmul 0028                ??___flsub 007E  
              ??___fltol 0074                   _efgtoa 0076                   _floorf 06AB  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
                 _printf 1307                   pad@buf 0024                   _strcpy 13A1  
                 _strlen 1332                   fputc@c 0071                   fputs@c 0020  
                 fputs@i 0021                   fputs@s 0023       __size_of__Umul8_16 001F  
        ___fpclassifyf@e 0020          ___fpclassifyf@u 0022          ___fpclassifyf@x 0070  
              ??_isupper 0072                ?_ADC_init 0120                ?_ADC_read 0070  
       __end_of_vfprintf 1436                ??_tolower 0078                ??_strncmp 0074  
             ___flge@ff1 003A               ___flge@ff2 003E          ??___fpclassifyf 0074  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
             ___fleq@ff1 0070               ___fleq@ff2 0074  __end_of__initialization 0072  
             ___flneg@f1 0070               ___fltol@f1 0070           __pcstackCOMMON 0070  
          __end_of_fputc 0839            __end_of_fputs 1407            __end_of_putch 1307  
             ??_ADC_init 0122               ??_ADC_read 0072                  ??_fputc 0074  
                ??_fputs 007A                  ??_putch 0070               __pbssBANK1 00E3  
             __pbssBANK2 0145               __pbssBANK3 01A0       __size_of_init_UART 005A  
      __end_of__Umul8_16 1382               _efgtoa$392 00A8               _efgtoa$386 00A4  
             _efgtoa$387 00A6               _efgtoa$396 00AA               _efgtoa$397 00AC  
             _efgtoa$398 00AE               __pmaintext 134A                  ?___flge 003A  
                ?___fleq 0070          __CFG_PPS1WAY$ON 0000               __pintentry 0004  
                ?_efgtoa 0046                  ?_floorf 002D                  ?_printf 006A  
    __CFG_RSTOSC$HFINT32 0000                  ?_strcpy 0070                  ?_strlen 0070  
              ?___xxtofl 0070       __size_of_vfpfcnvrt 0199            ?_UART_Recieve 0070  
                ___aldiv 16E9          __size_of___flge 007C          __size_of___fleq 0048  
                ___fladd 0BEB                  ___fldiv 08D8                  ___awdiv 1561  
                ___flneg 12F3                  ___awmod 1436                  ___flmul 0DD4  
                ___flsub 1382                  ___fltol 160C                ?_vfprintf 0062  
        __size_of_efgtoa 0635          __size_of_floorf 00D8                  __ptext1 15B2  
                __ptext2 16E9                  __ptext3 0839                  __ptext5 1307  
                __ptext6 1407                  __ptext7 0A52                  __ptext8 14C3  
                __ptext9 0076          __size_of_printf 0014        __end_of_init_UART 160C  
        __CFG_WRTAPP$OFF 0000          __size_of_strcpy 001F          __size_of_strlen 0018  
           __size_of_pad 0050               ??___xxtofl 0074         ___awmod@dividend 0072  
       ___aldiv@dividend 0124          __CFG_WRTSAF$OFF 0000                  _isupper 131B  
                efgtoa@c 004A                  efgtoa@d 00B8                  efgtoa@e 00D1  
                efgtoa@f 0046                  efgtoa@g 00CD                  efgtoa@h 00C3  
                efgtoa@i 00CB                  efgtoa@l 00C7                  efgtoa@m 00B4  
                efgtoa@n 00D3                  efgtoa@p 00BC                  efgtoa@t 00B0  
                efgtoa@u 00D5                  efgtoa@w 00C0                  _tolower 13C0  
                clrloop0 12E6                  _strncmp 14C3     end_of_initialization 0072  
                floorf@e 003B                  floorf@m 0037                  floorf@u 003D  
                floorf@x 002D           ??_UART_Recieve 007E                  fputc@fp 0073  
                fputs@fp 0079        __end_of_vfpfcnvrt 0BEB               efgtoa@mode 00C2  
             efgtoa@sign 00BA                _RCSTAbits 011D         ___aldiv@quotient 012B  
             ??_vfprintf 0065    __CFG_WDTCPS$WDTCPS_31 0000                  strcpy@d 0076  
                strlen@a 0073                  strcpy@s 0074                  strlen@s 0074  
            ___fladd@grs 007B            ___xxtofl@sign 0078              ___fldiv@grs 0027  
            ___fldiv@rem 0020         __CFG_FEXTOSC$OFF 0000        __size_of_ADC_init 009F  
      __size_of_ADC_read 0008              ___flmul@grs 002E             ADC_init@chan 0125  
         __end_of___flge 07FF           __end_of___fleq 14C3              vfpfcnvrt@ap 0050  
            vfpfcnvrt@ct 005D              vfpfcnvrt@fp 0061           __end_of_efgtoa 06AB  
         __end_of_floorf 0783               floorf@F524 0145           __end_of_printf 131B  
         __end_of_strcpy 13C0           __end_of_strlen 134A      start_initialization 005E  
            __end_of_pad 1561    __end_of___fpclassifyf 16E9         __CFG_LPBOREN$OFF 0000  
            vfprintf@fmt 0062                 ??___flge 0042                 ??___fleq 0078  
               ??_efgtoa 004B                __Umul8_16 1363                 ??_floorf 0031  
               ??_printf 00D9     __end_of_UART_Recieve 005C                 ??_strcpy 0072  
               ??_strlen 0072                ___fladd@a 0074                ___fladd@b 0070  
              ___fldiv@a 0070                ___fldiv@b 0074                ___flmul@a 0024  
              ___flmul@b 0020                ___flsub@a 003A                ___flsub@b 003E  
              ___latbits 0002        init_UART@spbrgVal 0143            __pcstackBANK0 0020  
          __pcstackBANK1 00A0            __pcstackBANK2 0120        __size_of___xxtofl 0095  
               ?___aldiv 0120                 ?___fladd 0070                 ?___fldiv 0070  
               ?___awdiv 0070                 ?___flneg 0070                 ?___awmod 0070  
               ?___flmul 0020                 ?___flsub 003A                 ?___fltol 0070  
             ?__Umul8_16 0070        __size_of_vfprintf 002F                 _BAUD1CON 011F  
               ?_isupper 0070         __CFG_WDTE$NSLEEP 0000                _init_UART 15B2  
               _ADC_init 0839                 _ADC_read 12EB                 ?_tolower 0076  
         __size_of_fputc 0035           __size_of_fputs 0026                 ?_strncmp 0070  
         __size_of_putch 000B          ___aldiv@divisor 0120          ___aldiv@counter 0129  
              clear_ram0 12E5                 _PIE1bits 0717                 _PIR1bits 070D  
               _RX1DTPPS 1ECB        __CFG_BBSIZE$BB512 0000                _vfpfcnvrt 0A52  
             _ADCON0bits 009D               ?_init_UART 012F              ADC_init@pin 0120  
             vfpfcnvrt@c 0060               vfpfcnvrt@f 0059               vfprintf@ap 0064  
             vfprintf@fp 0067    __size_of_UART_Recieve 0058              ??__Umul8_16 0072  
       __size_of___aldiv 0082         __size_of___fladd 01E9         __size_of___fldiv 017A  
       __size_of___awdiv 0051         __size_of___flneg 0009         __size_of___awmod 0045  
       __size_of___flmul 022C         __size_of___flsub 001F         __size_of___fltol 0065  
             ?_vfpfcnvrt 004F       ___fpclassifyf@F463 00E3                 ___xxtofl 176B  
               __ptext10 13C0                 __ptext11 131B                 __ptext20 160C  
               __ptext12 13A1                 __ptext21 1382                 __ptext13 1511  
               __ptext30 1561                 __ptext22 0BEB                 __ptext14 1332  
               __ptext31 176B                 __ptext23 12F3                 __ptext15 13E1  
               __ptext32 12EB                 __ptext24 0DD4                 __ptext16 0804  
               __ptext25 1363                 __ptext17 12FC                 __ptext26 0783  
               __ptext18 06AB                 __ptext27 147B                 __ptext19 1671  
               __ptext28 08D8                 __ptext29 1436         __size_of_isupper 0017  
       __size_of_tolower 0021               strcpy@dest 0077         __size_of_strncmp 004E  
          __size_of_main 0019             _UART_Recieve 0004     __CFG_WDTCWS$WDTCWS_7 0000  
               efgtoa@fp 00BE                 efgtoa@ne 00B6                 efgtoa@pp 00B2  
               efgtoa@ou 00A0                 int$flags 007E                 _vfprintf 1407  
              printf@fmt 006A                putch@byte 0070               _INTCONbits 000B  
            ??_init_UART 0133                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
              strcpy@src 0070                 isupper@c 0070                strncmp@_l 0075  
              strncmp@_r 0070              efgtoa@nmode 00BF                 printf@ap 00DC  
            ??_vfpfcnvrt 0051            _vfpfcnvrt$415 0057            __pstringtext1 1800  
          __pstringtext2 1807            __pstringtext3 180B            __pstringtext4 180F  
          __pstringtext5 1813            __pstringtext6 1817            __pstringtext7 181A  
          __pstringtext8 0000   __Umul8_16@multiplicand 0070                 tolower@c 0076  
 __size_of___fpclassifyf 0078                 strncmp@l 0078                 strncmp@n 0072  
               strncmp@r 0076             ___aldiv@sign 012A               _TX1STAbits 011E  
          ___fladd@signs 0078             ___fladd@aexp 0079             ___fladd@bexp 007A  
   __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
